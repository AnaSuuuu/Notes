{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"what can i say","text":"<p>but sorry, it is life itself ...</p> <p></p>"},{"location":"Math/","title":"Math","text":"<p>Hint</p> <p>\u6807\u9898\u4f1a\u81ea\u52a8\u5927\u5199\u3002</p>"},{"location":"Math/#_1","title":"\u7b2c\u4e00\u7ae0 \u77e9\u9635\u7684\u8fd0\u7b97\u4e0e\u521d\u7b49\u53d8\u6362","text":""},{"location":"Math/#s-11","title":"\\(\\S 1.1\\) \u77e9\u9635\u548c\u5411\u91cf\u7684\u6982\u5ff5","text":"<ul> <li>\u77e9\u9635</li> </ul> <p>\\(m \\times n\\) \u7684\u6570\u8868\u6784\u6210 \\(m\\) \u884c \\(n\\) \u5217\u77e9\u9635\uff0c\u8fd9 \\(m \\times n\\) \u4e2a\u6570\u662f \\(A\\) \u7684\u5143\u7d20\uff0c\u7b80\u79f0\u5143</p> <p>\u5b9e\u77e9\u9635\u5c31\u662f\u5168\u662f\u5b9e\u6570\u5143\u7d20\u7684\u77e9\u9635</p> <p>\u590d\u77e9\u9635\u5c31\u662f\u5168\u662f\u590d\u6570\u5143\u7d20\u7684\u77e9\u9635</p> <ul> <li> <p>\u7279\u6b8a\u77e9\u9635</p> <p>\u540c\u578b\u77e9\u9635\uff1a\u884c\u6570\u548c\u5217\u6570\u90fd\u5206\u522b\u76f8\u7b49\u7684\u77e9\u9635\uff08\u6307\u7684\u662f\u4e24\u4e2a\u77e9\u9635\u4e4b\u95f4\u7684\u5173\u7cfb\uff09</p> <p>\u76f8\u7b49\u77e9\u9635\uff1a\u540c\u578b\u77e9\u9635\u3001\u5bf9\u5e94\u5143\u7d20\u76f8\u7b49 \u65b9\u9635\uff1a\u884c\u6570\u5217\u6570\u76f8\u7b49\uff08\u5c31\u5355\u4e2a\u77e9\u9635\u800c\u8a00\uff09</p> <p>\u4e0a\uff08\u4e0b\uff09\u4e09\u89d2\u77e9\u9635\uff1a\u4e3b\u5bf9\u89d2\u7ebf\u4e0b\uff08\u4e0a\uff09\u5143\u7d20\u5168\u4e3a \\(0\\) \u7684\u77e9\u9635</p> <p>\u5bf9\u89d2\u77e9\u9635\uff1a\u53ea\u6709\u5bf9\u89d2\u7ebf\u4e0a\u5143\u7d20\u4e0d\u4e3a \\(0\\)</p> <p>\u5217\u77e9\u9635\uff0c\u884c\u77e9\u9635\uff1a\\(1 \\times n\\)\uff0c\\(n \\times 1\\) \u7684\u77e9\u9635</p> <p>\u5355\u4f4d\u77e9\u9635\uff1a\u7279\u6b8a\u7684\u5bf9\u89d2\u9635\uff0c\u5bf9\u89d2\u7ebf\u4e0a\u5168\u4e3a \\(1\\)</p> <p>\u96f6\u77e9\u9635\uff1a\u5168\u4e3a \\(0\\)</p> <p>\u8d1f\u77e9\u9635\uff1a\\(-A\\) \u662f \\(A\\) \u7684\u8d1f\u77e9\u9635</p> <p>\u5bf9\u79f0\u77e9\u9635\uff1a\u5143\u7d20\u5173\u4e8e\u5bf9\u89d2\u7ebf\u5bf9\u79f0</p> <p>\u53cd\u5bf9\u79f0\u77e9\u9635\uff1a\u5143\u7d20\u5173\u4e8e\u5bf9\u89d2\u7ebf\u79f0\u76f8\u53cd\u6570\u4e14\u5bf9\u89d2\u7ebf\u4e0a\u5143\u7d20\u5168\u4e3a \\(0\\)</p> </li> </ul>"},{"location":"acm/","title":"ACM","text":"<p>Abstract</p> <p>\u603b\u7ed3\u4e00\u4e9b\u7b97\u6cd5\u7ade\u8d5b\u4e2d\u5b66\u5230\u7684\u77e5\u8bc6\u70b9\u4ee5\u53ca\u8bb0\u5f55\u4e00\u4e0b\u505a\u8fc7\u7684\u6bd4\u8d5b\u3002</p> <p>\u8d8a\u5b66\u8d8a\u83dc\uff0c\u600e\u4e48\u4f1a\u662f\u5462\uff08\uff08</p> <p></p>"},{"location":"acm/algorithm/","title":"\u5de5\u5177\u7bb1","text":"<p>\u8bb0\u5f55\u6211\u505a\u9898\u662f\u5bf9\u4e8e\u4e00\u7cfb\u5217\u601d\u8003\u7684\u603b\u7ed3\u3002</p> <p>\u591a\u603b\u7ed3\u591a\u601d\u8003\u3002</p> <p>\u52aa\u529b\u63d0\u9ad8\u5bf9\u4e8e\u4e0d\u540c\u95ee\u9898\u7684\u6cdb\u5316\u80fd\u529b\u3002</p>"},{"location":"acm/algorithm/mind/","title":"\u5c0f\u6e05\u65b0\u601d\u7ef4 &amp;&amp; \u6784\u9020","text":""},{"location":"acm/algorithm/mind/#_2","title":"\u4e60\u9898","text":"<p>CF802H Fake News (medium)</p> <p>\u7ed9\u5b9a \\(n\\)\uff0c\u6784\u9020\u51fa\u5b50\u4e32 \\(p\\) \u548c \\(s\\)\uff0c\u4f7f\u5f97 \\(p\\) \u6070\u5728 \\(s\\) \u4e2d\u51fa\u73b0 \\(n\\) \u6b21\u3002\u5176\u4e2d \\(p\\) \u548c \\(s\\) \u7684\u957f\u5ea6\u5747\u4e0d\u8d85\u8fc7 \\(200\\)\u3002</p> <p>Solution</p> <p>\u5de7\u5999\u6784\u9020\u9898\u3002</p> <p>\u65b9\u6cd5\u4e00\uff1a</p> <p>\u7531\u4e8e\u8fd9\u4e2a\u957f\u5ea6\u6709\u9650\u5236\uff0c\u6700\u540e\u591a\u534a\u6309\u7167\u5f62\u5982\u8fdb\u5236\u62c6\u5206\u7684\u5f62\u5f0f\u53bb\u6784\u9020\u3002</p> <p>\u4e14\u6700\u540e\u662f\u9009\u62e9\u5b50\u4e32\uff0c\u6211\u4eec\u60f3\u5230\u548c\u7ec4\u5408\u6570\u76f8\u5173\u3002\u4e00\u5f00\u59cb\u60f3\u9009\u62e9\u7684 \\(p\\) \u662f <code>ab</code>\uff0c\u4f46\u662f\u8fd9\u6837\u5f88\u96be\u80fd\u8fbe\u5230 \\(n\\) \u4e2a\u6570\u3002</p> <p>\u6545\u9009\u62e9 \\(p\\) \u53ef\u4ee5\u662f\u8fde\u7eed\u82e5\u5e72 \\(a\\) \u52a0\u4e0a\u4e00\u4e2a \\(b\\)\u3002\u5047\u5b9a \\(p\\) \u662f <code>aaaaab</code>\uff0c\u90a3\u4e48\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f\u5f62\u5982 </p> \\[ \\sum_{i = 1} a_i \\times \\binom{n}{5}\u3002 \\] <p>\u8fd9\u4e2a\u5f0f\u5b50\u5c31\u548c\u8fdb\u5236\u62c6\u5206\u6709\u70b9\u7c7b\u4f3c\u4e86\uff0c\u5e76\u4e14\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a \\(a_i\\) \u548c \\(n\\) \u90fd\u4e0d\u53ef\u80fd\u592a\u5927\uff0c\u6240\u4ee5\u6309\u8fd9\u79cd\u65b9\u6cd5\u6784\u9020\u5373\u53ef\u3002</p> <pre><code>void solve() {\n    int n;\n    std::cin &gt;&gt; n;\n    std::string s = \"\", p = \"\"; \n    auto calc = [](i64 x) -&gt; i64 {\n        if (x &lt;= 4) return 0;\n        return x * (x - 1) * (x - 2) * (x - 3) * (x - 4) / (1 * 2 * 3 * 4 * 5);\n    };\n    std::vector&lt;int&gt; cnt(105, 0);\n    for (int i = 100; i &gt;= 1; ) {\n        while (calc(i) &gt; n) {\n            i--;\n        }\n        n -= calc(i);\n        cnt[i]++;\n        if (n == 0) break;\n    }\n    for (int i = 1; i &lt;= 100; i++) {\n        std::cout &lt;&lt; \"a\";\n        while (cnt[i]--) std::cout &lt;&lt; \"b\";\n    }   \n    std::cout &lt;&lt; \" aaaaab\\n\";\n}\n</code></pre> <p>\u65b9\u6cd5\u4e8c\uff1a\uff08\u5b98\u65b9\u505a\u6cd5\uff09</p> <p>\u6211\u4eec\u5047\u8bbe\u73b0\u5728\u5df2\u7ecf\u6784\u9020\u51fa \\(p\\) \u6070\u597d\u5728 \\(s\\) \u4e2d\u51fa\u73b0\u4e86 \\(k\\) \u6b21\u3002</p> <p>\u90a3\u4e48\u7531\u4e8e\u6211\u4eec\u8981\u5728\u957f\u5ea6\u4e0d\u592a\u957f\u7684\u60c5\u51b5\u4e0b\u80fd\u591f\u9020\u51fa \u4efb\u610f\u4e14\u8db3\u591f\u5927 \u7684\u6570\u3002</p> <p>\u6211\u4eec\u4e0d\u96be\u60f3\u5230\u8981\u53ef\u4ee5\u4ece \\(k \\to k + 1\\) \u4ee5\u53ca \\(k \\to 2k\\)\u3002</p> <ul> <li>\u5bf9\u4e8e \\(k \\to 2k\\) \u6bd4\u8f83\u7b80\u5355\uff0c\u8bbe\u73b0\u5728\u662f \\(p\\) \u548c \\(s\\)\uff0c\u90a3\u4e48 \\(p' = px\\)\uff0c\\(s' = sxx\\)\uff08\\(x\\) \u662f\u4e4b\u524d\u6ca1\u51fa\u73b0\u7684\u5b57\u6bcd\uff09\u3002</li> <li>\u5bf9\u4e8e \\(k \\to k + 1\\) \u6bd4\u8f83\u590d\u6742\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u51fa \\(k \\to 2k + 1\\)\u3002\u8bbe\u73b0\u5728\u662f \\(p\\) \u548c \\(s = pu\\)\uff0c\u90a3\u4e48 \\(p' = px\\)\uff0c\\(s' = pxuxx\\)\uff08\\(x\\) \u662f\u4e4b\u524d\u6ca1\u51fa\u73b0\u7684\u5b57\u6bcd\uff09\u3002\u6ce8\u610f\u8fd9\u91cc \\(s\\) \u5e76\u4e0d\u7528\u4e25\u683c\u7b49\u4e8e \\(pu\\)\uff0c\u8fd9\u91cc\u524d\u9762\u7684 \\(p\\) \u5373\u8868\u793a \\(s\\) \u4e2d \\(p\\) \u9996\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002</li> </ul> <p>\u8fd9\u91cc\u7b2c\u4e8c\u4e2a\u6784\u9020\u5f88\u5de7\u5999\u3002\u53ef\u4ee5\u8fd9\u6837\u60f3\uff0c\u7b2c\u4e00\u4e2a \\(x\\) \u53ea\u80fd\u548c\u524d\u9762\u7684 \\(p\\) \u914d\u5bf9\uff0c\u8d21\u732e\u4e3a \\(1\\)\uff0c\u540e\u9762\u7684\u4e24\u4e2a \\(x\\) \u5747\u548c \\(pxu\\) \u914d\u5bf9\uff0c\u8d21\u732e\u90fd\u662f \\(k\\)\uff0c\u6545 \\(k \\to 2k + 1\\)\u3002</p> <p>\u6709\u8fd9\u6837\u7684\u64cd\u4f5c\u4e4b\u540e\u5c31\u53ef\u4ee5\u628a \\(n\\) \u6309\u4e8c\u8fdb\u5236\u5212\u5206\uff0c\u7136\u540e\u9010\u4f4d\u6784\u9020\u3002</p>"},{"location":"acm/algorithm/regular/","title":"\u5e38\u89c4\u5957\u8def","text":""},{"location":"acm/algorithm/regular/#_2","title":"\u4e60\u9898","text":"<p>CF1843F2 Omsk Metro (hard version)</p> <p>\u7b80\u5355\u8bf4\u4e0b\u9898\u610f\uff1a</p> <p>\u7ed9\u5b9a\u4e00\u9897\u5e26\u70b9\u6743\u4e14\u53ea\u53ef\u80fd\u4e3a \\(1\\) \u6216 \\(\u22121\\) \u7684\u6811\uff0c\u82e5\u5e72\u6b21\u8be2\u95ee\u9876\u70b9 \\(x\\) \u548c\u9876\u70b9 \\(y\\) \u4e4b\u95f4\u662f\u5426\u5b58\u5728\u70b9\u6743\u548c\u4e3a \\(k\\) \u7684\u5b50\u8def\u5f84\u3002</p> <p>Solution</p> <p>\u7b97\u662f\u7ecf\u5178\u5957\u8def\u4e86\u3002</p> <p>\u7531\u4e8e\u5168\u662f \\(1\\) \u548c \\(-1\\)\uff0c\u5982\u679c\u4e00\u4e2a\u533a\u95f4\u80fd\u6784\u6210\u7684\u6700\u5927\u503c\u5927\u4e8e\u7b49\u4e8e \\(k\\)\uff0c\u6700\u5c0f\u503c\u5c0f\u4e8e\u7b49\u4e8e \\(k\\)\uff0c\u5219\u4e00\u5b9a\u53ef\u4ee5\u6784\u6210\u3002</p> <p>\u6211\u4eec\u5219\u53ea\u9700\u7ef4\u62a4\u4e00\u4e2a\u70b9\u5230\u5b83\u7236\u4eb2\u7684\u6700\u5927\u524d\u9a71\uff0c\u6700\u5c0f\u524d\u9a71\uff0c\u6700\u5927\u540e\u9a71\uff0c\u6700\u5c0f\u540e\u9a71\uff0c\u6700\u5927\u503c\uff0c\u6700\u5c0f\u503c\uff0c\u603b\u548c\u5373\u53ef\u3002</p> <p>\u8fd9\u91cc\u7528\u500d\u589e\u7ef4\u62a4\uff0c\u5199\u7684\u65f6\u5019\u4e00\u4e2a\u5c0f\u7ec6\u8282\u662f\uff0c\u53ef\u4ee5\u91cd\u8f7d\u7ed3\u6784\u4f53\u7684\u52a0\u6cd5\uff0c\u8ba9\u5199\u6cd5\u66f4\u52a0\u7b80\u4fbf\u3002</p> <p>Leetcode 3388</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u5206\u6210\u4e09\u6bb5\uff0c\u8981\u6c42\u7b2c\u4e00\u6bb5\u662f\u7b2c\u4e8c\u6bb5\u7684\u524d\u7f00\u6216\u7b2c\u4e8c\u6bb5\u662f\u7b2c\u4e09\u6bb5\u7684\u524d\u7f00\u3002</p> <p>Solution</p> <p>\u4ee4 <code>lcs[i][j]</code> \u8868\u793a\u4ee5 \\(i\\) \u548c \\(j\\) \u5f00\u5934\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u957f\u5ea6\uff0c\u6c42\u7684\u65f6\u5019\u4ece\u540e\u5f80\u524d\u6c42\uff0c\u82e5 <code>a[i] == a[j]</code> \u5219 <code>lcs[i][j] = lcs[i + 1][j + 1] + 1</code>\uff0c\u5426\u5219 <code>lcs[i][j] = 0</code>\u3002</p> <p>\u7136\u540e\u679a\u4e3e\u4e24\u4e2a\u4e2d\u95f4\u8282\u70b9\uff0c\u5224\u65ad\u662f\u5426\u524d\u4e00\u6bb5\u662f\u540e\u4e00\u6bb5\u7684\u524d\u7f00\u5373\u53ef\u3002</p> <p>CF2021C2 Adjust The Presentation (Hard Version)</p> <p>Solution</p>"},{"location":"acm/algorithm/dp/topic1/","title":"\u5e38\u89c4 DP","text":""},{"location":"acm/algorithm/dp/topic1/#_1","title":"\u4e60\u9898","text":"<p>CF1216F Wi-Fi</p> <p>Solution</p> <p>\u8bbe <code>f[i]</code> \u8868\u793a\u8fde\u901a \\(1 \\sim i\\) \u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\u56e0\u4e3a\u64cd\u4f5c\u7684\u65f6\u5019\u53ef\u80fd\u524d\u9762\u4e0d\u8fde\uff0c\u7136\u540e\u901a\u8fc7 router \u4ece\u540e\u9762\u628a\u524d\u9762\u4e00\u8d77\u8fde\u4e0a\u3002\u6240\u4ee5\u8fd9\u91cc\u8f6c\u79fb\u7684\u65f6\u5019\uff0c\u627e \\([i - k, i + k]\\) \u8303\u56f4\u5185\u6700\u9760\u524d\u7684 router \u4f4d\u7f6e\uff0c\u82e5\u5b58\u5728\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u90a3\u4e2a router \u8f6c\u79fb\uff0c\u5426\u5219\u5c31\u53ea\u80fd\u76f4\u8fde\u3002</p> <p>CF2025D Attribute Checks</p> <p>Solution</p> <p>\u5176\u5b9e\u662f\u4e2a\u7a0d\u5fae\u6709\u70b9\u8f6c\u5316\u7684 dp\uff0c\u4f46\u662f\u6ca1\u60f3\u8d77\u6765TAT\u3002\u3002</p> <p>\u4e0d\u96be\u60f3\u5230\u8bbe <code>f[i][j]</code> \u8868\u793a \\(i\\) \u4e2a\u52a0\u5230 \\(|S|\\) \u4e0a\uff0c\\(j\\) \u4e2a\u52a0\u5230 \\(|I|\\) \u4e0a\u3002</p> <p>\u76f4\u63a5\u8fd9\u6837\u8f6c\u79fb\u7684\u8bdd\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(nm)\\) \u7684\uff0c\u65e0\u6cd5\u63a5\u53d7\u3002</p> <p>\u7a0d\u4f5c\u8f6c\u5316\uff0c\u6211\u4eec\u8bbe <code>f[i]</code> \u8868\u793a\u5230\u5f53\u524d\u4f4d\u7f6e\u4e3a\u6b62\u7ed9 \\(|S|\\) \u7528\u4e86 \\(i\\) \u4e2a\u7684\u6700\u5927\u6536\u76ca\u3002</p> <p>\u6211\u4eec\u8bbe\u8d70\u5230\u5f53\u524d\u4f4d\u7f6e\u4e00\u5171\u53ef\u4ee5\u6539\u53d8 \\(cnt\\) \u6b21\u3002\u90a3\u4e48\u5982\u679c\u51fa\u73b0\u4e00\u4e2a\u6b63\u6570 \\(x\\)\uff0c\u5bf9 <code>f</code> \u6570\u7ec4\u8d21\u732e\u7684\u533a\u95f4\u662f \\(f_x \\sim f_{cnt}\\)\uff0c\u5982\u679c\u51fa\u73b0\u4e00\u4e2a\u8d1f\u6570 \\(x\\)\uff0c\u5bf9 <code>f</code> \u6570\u7ec4\u8d21\u732e\u7684\u533a\u95f4\u662f \\(f_0 \\sim f_{x + cnt + 1}\\)\u3002</p> <p>\u533a\u95f4\u4fee\u6539\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\uff0c\u4f46\u662f\u6ca1\u5fc5\u8981\u3002\u8fd9\u91cc\u7528\u5dee\u5206\u6570\u7ec4\u5373\u53ef\u3002</p> <p>\u5bf9\u4e8e\u51fa\u73b0\u4e00\u4e2a \\(0\\) \u65f6\uff0c\u8f6c\u79fb\u65b9\u7a0b\u4e3a \\(f_i = \\max\\{f_i, f_{i - 1}\\}\\)\u3002\u6240\u4ee5\u6211\u4eec\u5148\u6062\u590d\u6210\u539f\u6570\u7ec4\uff0c\u518d\u8f6c\u79fb\uff0c\u518d\u53d8\u6210\u5dee\u5206\u6570\u7ec4\u3002\u64cd\u4f5c\u4e00\u6b21\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(m)\\)\uff0c\u4e00\u5171 \\(m\\) \u4e2a \\(0\\)\uff0c\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n + m^2)\\)\u3002</p> <p>Leetcode 3389</p> <p>\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32\u00a0\\(s\\)\u3002\u5982\u679c\u5b57\u7b26\u4e32 \\(t\\)\u00a0\u4e2d\u7684\u5b57\u7b26\u51fa\u73b0\u6b21\u6570\u76f8\u7b49\uff0c\u90a3\u4e48\u6211\u4eec\u79f0\u00a0\\(t\\)\u00a0\u4e3a \u597d\u7684\u3002</p> <p>\u4f60\u53ef\u4ee5\u5bf9 \\(s\\) \u8fdb\u884c\u589e\u6dfb\uff0c\u5220\u51cf\u4efb\u610f\u4e2a\u5b57\u7b26\u6216\u8ba9\u5b57\u6bcd\u53d8\u6210\u5b57\u6bcd\u8868\u4e0b\u4e00\u4e2a\u5b57\u6bcd\uff0c\u4f46\u662f\u4e0d\u80fd\u5c06 'z' \u53d8\u4e3a 'a'\u3002</p> <p>\u8bf7\u4f60\u8fd4\u56de\u5c06 \\(s\\)\u00a0\u53d8 \u597d\u7684 \u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u3002</p> <p>Solution</p> <p>\u5206\u60c5\u51b5\u8ba8\u8bba\u7684 DP\u3002</p> <p>\u6211\u4eec\u9996\u5148\u679a\u4e3e\u6700\u7ec8\u5b57\u7b26\u51fa\u73b0\u6b21\u6570\uff0c\u90a3\u4e48\u6bcf\u79cd\u5b57\u7b26\u8981\u4e48\u51fa\u73b0 \\(num\\) \u6b21\uff0c\u8981\u4e48 \\(0\\) \u6b21\u3002</p> <p>\u6211\u4eec\u5206\u522b\u4ee4 <code>f[i][0]</code> \u548c <code>f[i][1]</code> \u4e3a\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\u7684\u6700\u4f73\u7b54\u6848\u3002</p> <p>\u5206\u60c5\u51b5\u8ba8\u8bba\uff0c\u5176\u5b9e\u53ea\u6709\u524d\u4e00\u4e2a\u5b57\u7b26\u6b21\u6570\u591a\u4e8e \\(num\\) \u4e14\u5f53\u524d\u5b57\u7b26\u5c11\u4e8e \\(num\\) \u4e14\u6700\u7ec8\u8981\u53d8\u4e3a \\(num\\)</p> <p>\u6216 \u524d\u4e00\u4e2a\u5b57\u7b26\u6b21\u6570\u6700\u7ec8\u8981\u53d8\u4e3a \\(0\\) \u4e14\u5f53\u524d\u5b57\u7b26\u5c11\u4e8e \\(num\\) \u4e14\u6700\u7ec8\u8981\u53d8\u4e3a \\(num\\) \u65f6\u624d\u4f1a\u51fa\u73b0\u5411\u540e\u79fb\u3002</p> <p>\u5176\u4ed6\u90fd\u662f\u6b63\u5e38\u589e\u5220\u5373\u53ef\u3002\u5373\u8ba8\u8bba\u76f8\u90bb <code>00</code>\uff0c<code>01</code>\uff0c<code>11</code>\uff0c<code>10</code> \u7684\u60c5\u51b5\u5373\u53ef\u3002</p>"},{"location":"acm/algorithm/dp/topic2/","title":"DP \u4f18\u5316\u6280\u5de7","text":""},{"location":"acm/algorithm/dp/topic2/#_1","title":"\u4e60\u9898","text":"<p>CF2021D Boss, Thirsty</p> <p>Solution</p> <p>\u672c\u9898\u8fd8\u662f\u504f\u5957\u8def\u3002</p> <p>\u6211\u4eec\u76f4\u63a5\u8bbe <code>f[i][l][r]</code> \u8868\u793a\u9009 \\(i\\) \u884c\u7684 \\([l, r]\\) \u533a\u95f4\u7684\u6700\u5927\u4ef7\u503c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u80af\u5b9a\u662f\u8981\u7206\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u5de6\u53f3\u7aef\u70b9\u62c6\u5f00\u3002 </p> <p>\u8bbe <code>f[i][l]</code> \u8868\u793a\u9009\u5230\u7b2c \\(i\\) \u884c\u4ee5 \\(l\\) \u4e3a\u5de6\u7aef\u70b9\u7684\u6700\u5927\u4ef7\u503c\uff0c<code>g[i][r]</code> \u8868\u793a\u9009\u5230\u7b2c \\(i\\) \u884c\u4ee5 \\(r\\) \u4e3a\u53f3\u7aef\u70b9\u7684\u6700\u5927\u4ef7\u503c\u3002</p> <p>\u6211\u4eec\u53d1\u73b0\u76f8\u90bb\u4e24\u884c\uff0c\u82e5\u4e0a\u4e00\u884c\u9009\u4e86 \\([u, v]\\)\uff0c\u8fd9\u4e00\u884c\u9009\u4e86 \\([l, r]\\)\uff0c\u90a3\u4e48\u6ee1\u8db3\u7684\u5145\u8981\u6761\u4ef6\u662f \\((l &lt; u \\le r) \\vee (l \\le v &lt; r)\\)\u3002\u6240\u4ee5\u6211\u4eec\u6709\u56db\u7ec4\u8f6c\u79fb\u65b9\u7a0b\uff0c\u5206\u522b\u662f \\(f_{i - 1} \\to g_i, f_{i - 1} \\to f_i, g_{i - 1} \\to g_i, g_{i - 1} \\to f_i\\)\u3002</p> <p>\u5177\u4f53\u4ee5 \\(f_{i - 1} \\to f_i\\) \u4e3a\u4f8b\u8bf4\u660e\u4e00\u4e0b\u3002</p> \\[ f_{i, l} = \\max_{u = l + 1}^n\\{f_{i - 1, u} + \\max_{r = u}^n\\{sum_r\\}\\} - sum_{j - 1} \\] <p>\u8fd9\u91cc\u7684 \\(\\max_{r = u}^n\\{sum_r\\}\\) \u5012\u63a8\u7ef4\u62a4\uff0c\u7b97\u662f\u4e00\u4e2a\u5c0f trick\uff0c\u6bcf\u6b21 \\(f_{i, l}\\) \u53ea\u548c\u65b0\u589e\u7684 \\(f_{i - 1, l + 1}\\) \u8fdb\u884c\u8f6c\u79fb\uff0c\u5e76\u4e14\u8fd9\u4e2a\u8f6c\u79fb\u65b9\u7a0b\u8f6c\u79fb\u7684\u65f6\u5019\u8fd8\u8981\u7528\u540e\u7f00\u6700\u5927\u503c\u6765\u66f4\u65b0\u5f53\u524d\u7684 \\(f_{i, l}\\)\u3002\u8fd9\u6837\u6bcf\u4e00\u5c42\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f \\(O(n)\\)\uff0c\u8fd9\u4e2a\u4f18\u5316\u6709\u70b9\u5de7\u5999\u7684\u3002</p>"},{"location":"acm/algorithm/ds/topic1/","title":"\u57fa\u7840\u6570\u636e\u7ed3\u6784","text":""},{"location":"acm/algorithm/ds/topic1/#_2","title":"\u5e76\u67e5\u96c6","text":"<p>\u6700\u6734\u7d20\u7684\u5e76\u67e5\u96c6\uff0c\u67e5\u627e\u6839\u8282\u70b9\uff0c\u5408\u5e76\uff0c\u67e5\u8be2\u90fd\u662f \\(O(n)\\)\u3002</p> <p>\u6211\u4eec\u5206\u522b\u6709\u8def\u5f84\u538b\u7f29\uff0c\u542f\u53d1\u5f0f\u5408\u5e76 / \u6309\u79e9\u5408\u5e76\u6765\u4f18\u5316\u3002</p> <p>\u542f\u53d1\u5f0f\u5408\u5e76\uff1a\u6309\u7167\u8282\u70b9\u6570\u5c0f\u7684\u8fde\u5411\u8282\u70b9\u6570\u5927\u7684\u3002</p> <p>\u6309\u79e9\u5408\u5e76\uff1a\u6309\u7167\u6700\u5927\u6df1\u5ea6\u5c0f\u7684\u8fde\u5411\u6700\u5927\u6df1\u5ea6\u5927\u7684\u3002</p> <p>\u4e00\u822c\u542f\u53d1\u5f0f\u5408\u5e76\u6bd4\u6309\u79e9\u5408\u5e76\u597d\u5199\uff0c\u5f80\u5f80\u53ef\u4ee5\u7528\u542f\u53d1\u5f0f\u5408\u5e76\u6765\u4ee3\u66ff\u6309\u79e9\u5408\u5e76\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790</p> <p>\u540c\u65f6\u4f7f\u7528\u542f\u53d1\u5f0f\u5408\u5e76\u548c\u8def\u5f84\u538b\u7f29\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(m\\alpha (m, n))\\)\u3002</p> <p>\u4e0d\u4f7f\u7528\u542f\u53d1\u5f0f\u5408\u5e76\u3001\u53ea\u4f7f\u7528\u8def\u5f84\u538b\u7f29\u7684\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(m\\log n)\\)\uff0c\u5728\u5e73\u5747\u60c5\u51b5\u4e0b\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4f9d\u7136\u662f \\(O(m\\alpha (m, n))\\)\u3002</p> <p>\u5982\u679c\u53ea\u4f7f\u7528\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u800c\u4e0d\u4f7f\u7528\u8def\u5f84\u538b\u7f29\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(m\\log n)\\)\u3002\u7531\u4e8e\u8def\u5f84\u538b\u7f29\u5355\u6b21\u5408\u5e76\u53ef\u80fd\u9020\u6210\u5927\u91cf\u4fee\u6539\uff0c\u6709\u65f6\u8def\u5f84\u538b\u7f29\u5e76\u4e0d\u9002\u5408\u4f7f\u7528\u3002\u4f8b\u5982\uff0c\u5728\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u3001\u7ebf\u6bb5\u6811\u5206\u6cbb + \u5e76\u67e5\u96c6\u4e2d\uff0c\u4e00\u822c\u4f7f\u7528\u53ea\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u5e76\u67e5\u96c6\u3002</p>"},{"location":"acm/algorithm/ds/topic1/#_3","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<ul> <li>\u542f\u53d1\u5f0f\u5408\u5e76</li> </ul> <pre><code>struct DSU {\n    std::vector&lt;int&gt; fa, size;\n\n    int find(int x) { return fa[x] == x ? x : find(fa[x]); }\n\n    explicit DSU(int size_) : fa(size_), size(size_, 1) {\n        std::iota(fa.begin(), fa.end(), 0);\n    }\n\n    bool query(int x, int y) {\n        return (find(x) == find(y));\n    }\n\n    void merge(int x, int y) {\n        x = find(x), y = find(y);\n        if (x == y) return;\n        if (size[x] &lt; size[y]) std::swap(x, y);\n        fa[y] = x;\n        size[x] += size[y];\n    }\n\n    void move(int x, int y) {\n        auto fx = find(x), fy = find(y);\n        if (fx == fy) return;\n        fa[x] = fy;\n        --size[fx], ++size[fy];\n    }\n};\n</code></pre> <ul> <li>\u6309\u79e9\u5408\u5e76</li> </ul> <pre><code>struct DSU {\n    std::vector&lt;int&gt; fa, rk;\n\n    int find(int x) { return fa[x] == x ? x : find(fa[x]); }\n\n    explicit DSU(int size_) : fa(size_), rk(size_, 1) {\n        std::iota(fa.begin(), fa.end(), 0);\n    }\n\n    bool query(int x, int y) {\n        return (find(x) == find(y));\n    }\n\n    void merge(int x, int y) {\n        x = find(x), y = find(y);\n        if (rk[x] &lt;= rk[y])\n            fa[x] = y;\n        else\n            fa[y] = x;\n        if (rk[x] == rk[y] &amp;&amp; x != y)\n            rk[y]++;\n    }\n};\n</code></pre> <ul> <li>\u53ef\u64a4\u56de\u5e76\u67e5\u96c6</li> </ul> <p>\u8fd9\u91cc\u4f7f\u7528\u7684\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u6ce8\u610f\u8fd9\u91cc\u4e0d\u53ef\u4ee5\u8def\u5f84\u538b\u7f29\u3002</p> <pre><code>struct DSU {\n    std::vector&lt;int&gt; siz;\n    std::vector&lt;int&gt; f;\n    std::vector&lt;std::array&lt;int, 2&gt;&gt; his;\n\n    DSU(int n) : siz(n + 1, 1), f(n + 1) {\n        std::iota(f.begin(), f.end(), 0);\n    }\n\n    int find(int x) {\n        while (f[x] != x) {\n            x = f[x];\n        }\n        return x;\n    }\n\n    bool query(int x, int y) {\n        return find(x) == find(y);\n    }\n\n    bool merge(int x, int y) {\n        x = find(x);\n        y = find(y);\n        if (x == y) {\n            return false;\n        }\n        if (siz[x] &lt; siz[y]) {\n            std::swap(x, y);\n        }\n        his.push_back({x, y});\n        siz[x] += siz[y];\n        f[y] = x;\n        return true;\n    }\n\n    int time() {\n        return his.size();\n    }\n\n    void revert(int tm) {\n        while (his.size() &gt; tm) {\n            auto [x, y] = his.back();\n            his.pop_back();\n            f[y] = y;\n            siz[x] -= siz[y];\n        }\n    }\n};\n</code></pre>"},{"location":"acm/algorithm/ds/topic1/#_4","title":"\u6269\u5c55\u57df\u5e76\u67e5\u96c6","text":"<p>\u53c8\u79f0\u4e3a\u79cd\u7c7b\u5e76\u67e5\u96c6\u3002</p> <p>\u672c\u8d28\u4e0a\u662f\u62c6\u70b9\u627e\u5173\u7cfb\uff0c\u4e00\u822c\u7684\u5e76\u67e5\u96c6\u90fd\u662f\u627e\u670b\u53cb\u7684\u670b\u53cb\u4e5f\u662f\u670b\u53cb\u8fd9\u5c42\u5173\u7cfb\uff0c\u4f46\u662f\u5e26\u6743\u5e76\u67e5\u96c6\u662f\u627e\u654c\u4eba\u7684\u654c\u4eba\u5c31\u662f\u670b\u53cb\u8fd9\u5c42\u5173\u7cfb\u3002\u6211\u4eec\u628a \\(1 \\sim n\\) \u6269\u5c55\u4e3a \\(1 \\sim 2n\\)\uff0c\u5176\u4e2d \\(1\\) \u88ab\u62c6\u4e3a\u4e86 \\(1\\) \u548c \\(1 + n\\)\u3002\u548c \\(1\\) \u5728\u4e00\u4e2a\u8fde\u901a\u5757\u8868\u793a\u548c\u4ed6\u5173\u7cfb\u597d\uff0c\u548c \\(n + 1\\) \u5728\u4e00\u4e2a\u8fde\u901a\u5757\u8868\u793a\u548c\u4ed6\u5173\u7cfb\u4e0d\u597d\u3002</p> <ul> <li>\u4f8b\u9898</li> </ul> <p>P2024 [NOI2001] \u98df\u7269\u94fe</p> <p>Solution</p> <p>\u7ecf\u5178\u6269\u5c55\u5e76\u67e5\u96c6\u7684\u9898\u76ee\u4e86\u3002</p> <p>\u6211\u4eec\u5f00\u4e09\u500d\u7a7a\u95f4\uff0c\\(\\{i + n\\}\\) \u8868\u793a \\(\\{i\\}\\) \u7684\u6355\u98df\u8005\uff0c\\(\\{i + 2n\\}\\) \u8868\u793a \\(\\{i + n\\}\\) \u7684\u6355\u98df\u8005\uff0c\\(\\{i\\}\\) \u8868\u793a \\(\\{i + 2n\\}\\) \u7684\u6355\u98df\u8005\u3002\u7136\u540e\u5206\u522b\u5efa\u7acb\u8fde\u63a5\u5173\u7cfb\u5373\u53ef\u3002</p> <pre><code>struct DSU {\n    std::vector&lt;size_t&gt; fa, size;\n\n    size_t find(size_t x) { return fa[x] == x ? x : find(fa[x]); }\n\n    explicit DSU(size_t size_) : fa(size_), size(size_, 1) {\n        std::iota(fa.begin(), fa.end(), 0);\n    }\n\n    bool query(size_t x, size_t y) {\n        return (find(x) == find(y));\n    }\n\n    void merge(size_t x, size_t y) {\n        x = find(x), y = find(y);\n        if (x == y) return;\n        if (size[x] &lt; size[y]) std::swap(x, y);\n        fa[y] = x;\n        size[x] += size[y];\n    }\n};\n\n\nvoid solve() {\n    int n, k;\n    std::cin &gt;&gt; n &gt;&gt; k;\n    DSU dsu(3 * n + 10);\n    int ans = 0;\n    while (k--) {\n        int op, x, y;\n        std::cin &gt;&gt; op &gt;&gt; x &gt;&gt; y;\n        if (x &gt; n || y &gt; n) {\n            ans++;\n            continue;\n        }\n        if (op == 1) {\n            if (dsu.query(x + 2 * n, y + n) || dsu.query(x + n, y + 2 * n)) {\n                ans++;\n            }\n            else {\n                dsu.merge(x, y);\n                dsu.merge(x + n, y + n);\n                dsu.merge(x + 2 * n, y + 2 * n);\n            }\n        }\n        else {\n            if (dsu.query(x + n, y + n) || dsu.query(x + n, y + 2 * n)) {\n                ans++;\n            }\n            else {\n                dsu.merge(x + 2 * n, y + n);\n                dsu.merge(x + n, y);\n                dsu.merge(x, y + 2 * n);\n            }\n        }\n    }\n    std::cout &lt;&lt; ans &lt;&lt; '\\n';\n}\n</code></pre> <p>\u672c\u9898\u4e5f\u53ef\u4ee5\u7528\u5e26\u6743\u5e76\u67e5\u96c6\u53bb\u505a\u3002</p> <p>\u6211\u4eec\u8bb0\u70b9\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u4e3a \\(d_i\\)\uff0c\u6211\u4eec\u5728\u4e00\u4e2a\u6a21 \\(3\\) \u7684\u57df\u4e0b\u770b\u70b9\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</p> <p>\u82e5 \\(d_x - d_y \\equiv 0(\\mod 3)\\) \u5219\u8bf4\u660e \\(x\\) \u548c \\(y\\) \u662f\u540c\u7c7b\u3002</p> <p>\u82e5 \\(d_x - d_y \\equiv 1(\\mod 3)\\) \u5219\u8bf4\u660e \\(x\\) \u662f \\(y\\) \u7684\u5929\u654c\u3002</p> <p>\u82e5 \\(d_x - d_y \\equiv 2(\\mod 3)\\) \u5219\u8bf4\u660e \\(x\\) \u662f \\(y\\) \u7684\u730e\u7269\u3002</p>"},{"location":"acm/algorithm/ds/topic1/#_5","title":"\u5e26\u6743\u5e76\u67e5\u96c6","text":"<ul> <li>\u4f8b\u9898</li> </ul> <p>\u5e26\u6743\u5e76\u67e5\u96c6\uff0c\u987e\u540d\u601d\u4e49\uff0c\u8fde\u8fb9\u7684\u65f6\u5019\u662f\u5e26\u6709\u6743\u503c\u7684\uff0c\u5f80\u5f80\u662f\u8981\u7ef4\u62a4\u6bcf\u4e2a\u5143\u7d20\u5230\u6839\u8282\u70b9\u7684\u67d0\u4e00\u5c5e\u6027\u503c\u3002\u9700\u8981\u6539\u53d8 <code>find</code> \u51fd\u6570\u3002</p> <p>P1196 [NOI2002] \u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4</p> <p>Solution</p> <p>\u6211\u4eec\u8981\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\uff0c\u6b64\u5916\u4e24\u4e2a\u961f\u5934\u5408\u5e76\u7684\u65f6\u5019\u8fd8\u8981\u8bb0\u5f55\u6bcf\u4e2a\u961f\u4f0d\u7684\u957f\u5ea6\uff0c\u6240\u4ee5\u7528 <code>dis</code> \u548c <code>num</code> \u8bb0\u5f55\u3002</p> <p>\u4f7f\u7528\u5e26\u6743\u5e76\u67e5\u96c6\u7ef4\u62a4\u5373\u53ef\u3002</p> <pre><code>struct DSU {\n    std::vector&lt;size_t&gt; fa;\n    std::vector&lt;int&gt; dis, num;\n\n    size_t find(size_t x) { \n        if (fa[x] == x) return x;\n        int fx = find(fa[x]);\n        dis[x] += dis[fa[x]];\n        return fa[x] = fx;\n    }\n\n    explicit DSU(size_t size_) : fa(size_), dis(size_, 0), num(size_, 1) {\n        std::iota(fa.begin(), fa.end(), 0);\n    }\n\n    bool query(size_t x, size_t y) {\n        return (find(x) == find(y));\n    }\n\n    void merge(size_t x, size_t y) {\n        x = find(x), y = find(y);\n        if (x == y) return;\n        fa[x] = y;\n        dis[x] = num[y];\n        num[y] += num[x];\n    }\n};\n\nvoid solve() {\n    DSU dsu(30010);\n    int t;\n    std::cin &gt;&gt; t;\n    int n = 4;\n    while (t--) {\n        char op;\n        int x, y;\n        std::cin &gt;&gt; op &gt;&gt; x &gt;&gt; y;\n        if (op == 'M') {\n            dsu.merge(x, y);\n        }\n        else {\n            if (dsu.query(x, y)) {\n                std::cout &lt;&lt; std::abs(dsu.dis[x] - dsu.dis[y]) - 1 &lt;&lt; '\\n';\n            }\n            else {\n                std::cout &lt;&lt; \"-1\\n\";\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"acm/algorithm/ds/topic1/#_6","title":"\u6811\u72b6\u6570\u7ec4","text":""},{"location":"acm/algorithm/ds/topic1/#_7","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<pre><code>template&lt;typename T&gt;\nstruct Fenwick{\n    int n;\n    vector&lt;T&gt; tr;\n\n    Fenwick(int n) : n(n), tr(n + 1, 0){}\n\n    int lowbit(int x) {\n        return x &amp; -x;\n    }\n\n    void modify(int x, T c) {\n        for(int i = x; i &lt;= n; i += lowbit(i)) tr[i] += c;\n    }\n\n    void modify(int l, int r, T c) {\n        modify(l, c);\n        if (r + 1 &lt;= n) modify(r + 1, -c);\n    }\n\n    T query(int x) {\n        T res = T();\n        for(int i = x; i; i -= lowbit(i)) res += tr[i];\n        return res;\n    }\n\n    T query(int l, int r) { \n        return query(r) - query(l - 1);\n    }\n\n    int find_first(T sum) {\n        int ans = 0; T val = 0;\n        for(int i = __lg(n); i &gt;= 0; i--) {\n            if ((ans | (1 &lt;&lt; i)) &lt;= n &amp;&amp; val + tr[ans | (1 &lt;&lt; i)] &lt; sum){\n                ans |= 1 &lt;&lt; i;\n                val += tr[ans];\n            }\n        }\n        return ans + 1;\n    }\n\n    int find_last(T sum) {\n        int ans = 0; T val = 0;\n        for(int i = __lg(n); i &gt;= 0; i--) {\n            if ((ans | (1 &lt;&lt; i)) &lt;= n &amp;&amp; val + tr[ans | (1 &lt;&lt; i)] &lt;= sum){\n                ans |= 1 &lt;&lt; i;\n                val += tr[ans];\n            }\n        }\n        return ans;\n    }\n\n};\nusing BIT = Fenwick&lt;int&gt;;\n</code></pre>"},{"location":"acm/algorithm/ds/topic1/#_8","title":"\u4e60\u9898","text":"<p>CF2018D Max Plus Min Plus Size</p> <p>\u7ed9\u5b9a\u957f\u5ea6 \\(n\\) \u6570\u7ec4\uff0c\u4e0d\u80fd\u9009\u62e9\u76f8\u90bb\u7684\u5143\u7d20\uff0c\u8981\u6c42\u9009\u62e9\u7684\u6700\u5927\u5143\u7d20\uff0c\u6700\u5c0f\u5143\u7d20\uff0c\u9009\u62e9\u4e2a\u6570\u4e4b\u548c\u6700\u5927\u3002 </p> <p>Solution</p> <p>\u633a\u5de7\u5999\u7684\u9898\uff0c\u5e76\u67e5\u96c6\u505a\u6cd5\u3002\u7565\u5fae\u6709\u70b9\u7ec6\u8282\u3002</p> <p>\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u6700\u7ec8\u9009\u62e9\u7684\u5143\u7d20\u6ca1\u6709\u6574\u4e2a\u6570\u7ec4\u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u6362\u4e00\u4e0b\u9009\u62e9\u7684\u5947\u5076\u9009\u62e9\u6700\u5927\u503c\uff0c\u8fd9\u6837\u7b54\u6848\u662f\u4e0d\u51cf\u7684\u3002</p> <p>\u6240\u4ee5\u6700\u5927\u503c\u4e00\u5b9a\u4f1a\u9009\u4e0a\u3002\u8fd9\u4e0b\u6211\u4eec\u53ef\u4ee5\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u6700\u5c0f\u503c\uff0c\u8fd9\u662f\u76f8\u5f53\u4e8e\u6bcf\u6b21\u52a0\u5165\u82e5\u5e72\u65b0\u7684\u6570\uff0c\u5c06\u6574\u4e2a\u6570\u7ec4\u5206\u6210\u82e5\u5e72\u6bb5\u3002\u7528\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\u7edf\u8ba1\u4e2a\u6570\u3002</p> <p>\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u8fd8\u8981\u8bb0\u5f55\u6bcf\u6bb5\u53d6\u6700\u5927\u60c5\u51b5\u7684\u65f6\u5019\u662f\u5426\u80fd\u53d6\u5230\u6700\u5927\u503c\u3002\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\uff0c\u6211\u4eec\u53ef\u80fd\u5c3d\u91cf\u53d6 \\(\\left \\lceil \\dfrac{len}{2} \\right \\rceil\\)\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u6bcf\u4e00\u6bb5\u90fd\u8fd9\u6837\u53d6\u7684\u8bdd\u53ef\u80fd\u4f1a\u51fa\u73b0\u6ca1\u53d6\u6700\u5927\u503c\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u8981\u5224\u65ad\u4e00\u4e0b\u6bcf\u6bb5\u5947\u6570\u4f4d\u548c\u5076\u6570\u4f4d\u80fd\u4e0d\u80fd\u53d6\u5230\u6700\u5927\u503c\u3002\u5982\u679c\u5168\u90fd\u6ca1\u53d6\u5230\u6700\u540e\u7b54\u6848\u8981\u51cf\u4e00\uff08\u5c11\u53d6\u4e00\u4e2a\u6570\u6765\u53d6\u6700\u5927\u503c\uff09\u3002</p> <p>\u4ee5\u53ca\uff0c\u6211\u4eec\u4e0d\u7528\u8003\u8651\u5f53\u524d\u679a\u4e3e\u7684\u6700\u5c0f\u503c\u662f\u5426\u771f\u7684\u4f1a\u88ab\u53d6\u5230\u3002\u5047\u8bbe\u6ca1\u88ab\u53d6\u5230\uff0c\u90a3\u4e48\u4e00\u5b9a\u6ca1\u6709\u4e4b\u524d\u7684\u4f18\uff0c\u6240\u4ee5\u4e0d\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u5f71\u54cd\u3002</p>"},{"location":"acm/algorithm/ds/topic1/#_9","title":"\u53c2\u8003\u8d44\u6599","text":"<p>OI-Wiki \u5e76\u67e5\u96c6</p> <p>\u7b97\u6cd5\u5b66\u4e60\u7b14\u8bb0(7)\uff1a\u79cd\u7c7b\u5e76\u67e5\u96c6</p>"},{"location":"acm/algorithm/ds/topic2/","title":"\u8fdb\u9636\u6570\u636e\u7ed3\u6784","text":""},{"location":"acm/algorithm/ds/topic2/#_2","title":"\u7ebf\u6bb5\u6811","text":""},{"location":"acm/algorithm/ds/topic2/#_3","title":"\u666e\u901a\u7ebf\u6bb5\u6811","text":"<p>\u7ebf\u6bb5\u6811\u662f\u4e00\u7c7b\u4ee5\u5206\u5757\u601d\u60f3\u4e3a\u6838\u5fc3\u7684\u57fa\u7840\u4e14\u5f3a\u5927\u7684\u6570\u636e\u7ed3\u6784\u3002</p> <p>\u533a\u95f4\u4fee\u6539 + \u533a\u95f4\u6c42\u548c\u3002</p> <pre><code>using i64 = long long;\nstruct Info {\n    i64 sum = 0;\n};\n\nInfo operator+(const Info &amp;a, const Info &amp;b) {\n    return {a.sum + b.sum};\n}\n\nstruct SegmentTree {\n    int n;\n    std::vector&lt;int&gt; tag;\n    std::vector&lt;Info&gt; info;\n    SegmentTree(int n_) : n(n_), tag(4 * n), info(4 * n) {}\n\n    void pull(int p) {\n        info[p] = info[2 * p] + info[2 * p + 1];\n    }\n\n    void add(int p, int v, int l, int r) {\n        tag[p] += v;\n        info[p].sum += (i64) v * (r - l + 1);\n    }\n\n    void push(int p, int l, int r) {\n        int mid = (l + r) &gt;&gt; 1;\n        add(2 * p, tag[p], l, mid);\n        add(2 * p + 1, tag[p], mid + 1, r);\n        tag[p] = 0;\n    }\n\n    Info query(int p, int l, int r, int nl, int nr) {\n        if (l &gt; nr || r &lt; nl) {\n            return {};\n        }\n        if (l &gt;= nl &amp;&amp; r &lt;= nr) {\n            return info[p];\n        }\n        int m = (l + r) / 2;\n        push(p, l, r);\n        return query(2 * p, l, m, nl, nr) + query(2 * p + 1, m + 1, r, nl, nr);\n    }\n\n    Info query(int x, int y) {\n        return query(1, 1, n, x, y);\n    }\n\n    void rangeAdd(int p, int l, int r, int nl, int nr, int v) {\n        if (l &gt; nr || r &lt; nl) {\n            return;\n        }\n        if (l &gt;= nl &amp;&amp; r &lt;= nr) {\n            return add(p, v, l, r);\n        }\n        int m = (l + r) / 2;\n        push(p, l, r);\n        rangeAdd(2 * p, l, m, nl, nr, v);\n        rangeAdd(2 * p + 1, m + 1, r, nl, nr, v);\n        pull(p);\n    }\n\n    void rangeAdd(int x, int y, int v) {\n        rangeAdd(1, 1, n, x, y, v);\n    }\n\n    void modify(int p, int l, int r, int x, const Info &amp;v) {\n        if (r == l) {\n            info[p] = v;\n            return;\n        }\n        int m = (l + r) / 2;\n        push(p, l, r);\n        if (x &lt;= m) {\n            modify(2 * p, l, m, x, v);\n        } else {\n            modify(2 * p + 1, m + 1, r, x, v);\n        }\n        pull(p);\n    }\n\n    void modify(int x, const Info &amp;v) {\n        modify(1, 1, n, x, v);\n    }\n};\n\nvoid solve() {\n    int n, m;\n    std::cin &gt;&gt; n &gt;&gt; m;\n    std::vector&lt;int&gt; a(n + 1);\n\n    SegmentTree seg(n);\n\n    for (int i = 1; i &lt;= n; i++) {\n        std::cin &gt;&gt; a[i];\n        seg.modify(i, {a[i]});\n    }\n    while (m--) {\n        int op;\n        std::cin &gt;&gt; op;\n        if (op == 1) {\n            int x, y, k;\n            std::cin &gt;&gt; x &gt;&gt; y &gt;&gt; k;\n            seg.rangeAdd(x, y, k);\n        }\n        else {\n            int x, y;\n            std::cin &gt;&gt; x &gt;&gt; y;\n            std::cout &lt;&lt; seg.query(x, y).sum &lt;&lt; '\\n';\n        }\n    }\n}\n</code></pre>"},{"location":"acm/algorithm/ds/topic2/#_4","title":"\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811","text":"<ul> <li>\u4f8b\u9898</li> </ul> <p>P3919 \u3010\u6a21\u677f\u3011\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811 1\uff08\u53ef\u6301\u4e45\u5316\u6570\u7ec4\uff09</p> <p>\u67e5\u8be2\u6570\u7ec4\u7248\u672c\u5386\u53f2\u503c\u3002</p> <p>Solution</p> <pre><code>const int N = 1e6 + 5;\n\nstruct Info {\n    int l = 0, r = 0;\n    int val = 0;\n};\n\nstd::vector&lt;int&gt; a(N);\n\nstruct PST {\n    int n, cnt;\n    std::vector&lt;int&gt; rt;\n    std::vector&lt;Info&gt; tr;\n\n    PST(int n_): n(n_), cnt(0), rt(N &lt;&lt; 5), tr(N &lt;&lt; 5) {}\n\n    void build(int &amp;root, int l, int r) {\n        root = ++cnt;\n        if(l == r) {\n            tr[root].val = a[l];\n            return ;\n        }\n        int mid = (l + r) &gt;&gt; 1;\n        build(tr[root].l, l, mid);\n        build(tr[root].r, mid + 1, r);\n        return ;\n    }\n\n    void modify(int &amp;root, int last, int l, int r, int x, int v) {\n        root = ++cnt;\n        tr[root] = tr[last];\n        if(l == r) {\n            tr[root].val = v;\n            return ;\n        }\n        int mid = (l + r) &gt;&gt; 1;\n        if(x &lt;= mid) modify(tr[root].l, tr[last].l, l, mid, x, v);\n        else modify(tr[root].r, tr[last].r, mid + 1, r, x, v);\n        return ;\n    }\n\n    void modify(int a, int b, int x, int v) {\n        modify(rt[a], rt[b], 1, n, x, v);\n        return ;\n    }\n\n    int query(int root, int l, int r, int pos) {\n        if(l == r) return tr[root].val;\n        int mid = (l + r) &gt;&gt; 1;\n        if(pos &lt;= mid) return query(tr[root].l, l, mid, pos);\n        else return query(tr[root].r, mid + 1, r, pos);\n    }\n\n    int query(int x, int pos) {\n        return query(rt[x], 1, n, pos);\n    }\n};\n\nvoid solve() {\n    int n, m;\n    std::cin &gt;&gt; n &gt;&gt; m;\n    for (int i = 1; i &lt;= n; i++) std::cin &gt;&gt; a[i];\n    PST pst(n);\n    pst.build(pst.rt[0], 1, n);\n\n    for (int i = 1; i &lt;= m; i++) {\n        int v, op, pos, num;\n        std::cin &gt;&gt; v &gt;&gt; op &gt;&gt; pos;\n        if (op == 1) {\n            std::cin &gt;&gt; num;\n            pst.modify(i, v, pos, num);\n        }\n        else {\n            std::cout &lt;&lt; pst.query(v, pos) &lt;&lt; '\\n';\n            pst.rt[i] = pst.rt[v];\n        }\n    }\n}\n</code></pre> <p>P3834 \u3010\u6a21\u677f\u3011\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811 2</p> <p>\u6c42\u9759\u6001\u533a\u95f4\u7b2c \\(k\\) \u5927\u503c\u3002</p> <p>Solution</p> <p>Warning</p> <p>\u6ce8\u610f\u521d\u59cb\u7684\u65f6\u5019 <code>PST</code> \u91cc <code>rt</code> \u548c <code>tr</code> \u6570\u7ec4\u5f00\u7684\u5927\u5c0f\uff0c\u662f <code>N</code> \u4e0d\u662f <code>n_</code>\u3002</p> <p>\u4e3b\u5e2d\u6811\u7684\u5168\u79f0\u662f\u53ef\u6301\u4e45\u5316\u6743\u503c\u7ebf\u6bb5\u6811\u3002</p> <p>\u4e3b\u5e2d\u6811\u601d\u60f3\u662f\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u7ef4\u62a4\u4e00\u4e2a\u7ebf\u6bb5\u6811\uff0c\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u662f\u503c\u7684\u8303\u56f4\uff0c\u7136\u540e\u7b2c \\(i\\) \u4e2a\u7ebf\u6bb5\u6811\u4e2d\u67d0\u4e2a\u533a\u95f4 \\([x, y]\\) \u7ef4\u62a4\u7684\u662f\uff0c\\(1 \\sim i\\) \u4e2d\u6570\u5b57\u5728 \\([x, y]\\) \u8303\u56f4\u5185\u7684\u4e2a\u6570\u3002\u8fd9\u91cc\u5229\u7528\u5230\u4e86\u524d\u7f00\u548c\u7684\u601d\u60f3\u3002</p> <pre><code>const int N = 2e5 + 5;\n\nstruct Info {\n    int l = 0, r = 0;\n    int sum = 0;\n};\n\nstruct PST {\n    int n, cnt;\n    std::vector&lt;int&gt; rt;\n    std::vector&lt;Info&gt; tr;\n\n    PST(int n_): n(n_), cnt(0), rt(N &lt;&lt; 5), tr(N &lt;&lt; 5) {}\n\n    void modify(int &amp;root, int last, int l, int r, int x, int v) {\n        root = ++cnt;\n        tr[root] = tr[last], tr[root].sum += v;\n        if (l == r) return;\n        int mid = l + r &gt;&gt; 1;\n        if (x &lt;= mid) modify(tr[root].l, tr[last].l, l, mid, x, v);\n        else modify(tr[root].r, tr[last].r, mid + 1, r, x, v);\n        return ;\n    }\n\n    void modify(int a, int b, int x, int v) {\n        modify(rt[a], rt[b], 1, n, x, v);\n        return ;\n    }\n\n    int query(int rt_1, int rt_2, int l, int r, int num) {\n        if (l &gt;= r) return l;\n        int x = tr[tr[rt_2].l].sum - tr[tr[rt_1].l].sum;\n        int mid = (l + r) &gt;&gt; 1;\n        if (x &gt;= num) return query(tr[rt_1].l, tr[rt_2].l, l, mid, num);\n        else return query(tr[rt_1].r, tr[rt_2].r, mid + 1, r, num - x);\n    }\n\n    int query(int l, int r, int num) {\n        return query(rt[l - 1], rt[r], 1, n, num);\n    }\n};\n\n\nvoid solve() {\n    int n, m;\n    std::cin &gt;&gt; n &gt;&gt; m;\n    std::vector&lt;int&gt; a(n + 1), b;\n    for(int i = 1; i &lt;= n; i++) std::cin &gt;&gt; a[i], b.push_back(a[i]);\n    std::sort(b.begin(), b.end());\n    b.erase(std::unique(b.begin(), b.end()), b.end());\n    int n0 = b.size();\n    PST pst(n0);\n    for(int i = 1; i &lt;= n; i++) {\n        int pos = std::lower_bound(b.begin(), b.end(), a[i]) - b.begin() + 1;   \n        pst.modify(i, i - 1, pos, 1);\n    }\n\n    while(m--) {\n        int l, r, k;\n        std::cin &gt;&gt; l &gt;&gt; r &gt;&gt; k;\n        int pos = pst.query(l, r, k) - 1;\n        std::cout &lt;&lt; b[pos] &lt;&lt; '\\n'; \n    }\n    return ;\n}\n</code></pre>"},{"location":"acm/algorithm/ds/topic2/#_5","title":"\u7ebf\u6bb5\u6811\u5206\u6cbb","text":"<p>\u4ee5\u4e0b3\u6458\u81ea xht37\u2018s blog</p> <p>\u6838\u5fc3\u601d\u60f3</p> <p>\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a</p> <ul> <li>\u6709\u4e00\u4e9b\u64cd\u4f5c\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u53ea\u5728 \\(l \\sim r\\) \u7684\u65f6\u95f4\u6bb5\u5185\u6709\u6548\u3002</li> <li>\u6709\u4e00\u4e9b\u8be2\u95ee\uff0c\u6bcf\u4e2a\u8be2\u95ee\u67d0\u4e00\u4e2a\u65f6\u95f4\u70b9\u6240\u6709\u64cd\u4f5c\u7684\u8d21\u732e\u3002</li> </ul> <p>\u5bf9\u4e8e\u8fd9\u6837\u7684\u8be2\u95ee\uff0c\u6211\u4eec\u53ef\u4ee5\u79bb\u7ebf\u540e\u5728\u65f6\u95f4\u8f74\u4e0a\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u8fd9\u6837\u5bf9\u4e8e\u6bcf\u4e2a\u64cd\u4f5c\uff0c\u76f8\u5f53\u4e8e\u5728\u7ebf\u6bb5\u6811\u4e0a\u8fdb\u884c\u533a\u95f4\u64cd\u4f5c\u3002</p> <p>\u904d\u5386\u6574\u9897\u7ebf\u6bb5\u6811\uff0c\u5230\u8fbe\u6bcf\u4e2a\u8282\u70b9\u65f6\u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\uff0c\u7136\u540e\u7ee7\u7eed\u5411\u4e0b\u9012\u5f52\uff0c\u5230\u8fbe\u53f6\u5b50\u8282\u70b9\u65f6\u7edf\u8ba1\u8d21\u732e\uff0c\u56de\u6eaf\u65f6\u64a4\u9500\u64cd\u4f5c\u5373\u53ef\u3002</p> <p>\u8fd9\u6837\u7684\u601d\u60f3\u88ab\u79f0\u4e3a\u7ebf\u6bb5\u6811\u5206\u6cbb\uff0c\u53ef\u4ee5\u5728\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u89e3\u51b3\u4e00\u7c7b\u5728\u7ebf\u7b97\u6cd5\u5e76\u4e0d\u4f18\u79c0\u7684\u95ee\u9898\u3002</p> <ul> <li>\u4f8b\u9898</li> </ul> <p>P5787 \u4e8c\u5206\u56fe /\u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5206\u6cbb</p> <p>Solution</p> <p>\u5bf9\u4e8e\u4e8c\u5206\u56fe\uff0c\u6211\u4eec\u7528\u6269\u5c55\u57df\u5e76\u67e5\u96c6\u8fdb\u884c\u5224\u65ad\u3002</p> <p>\u5bf9\u4e8e\u4e00\u6761\u8fb9\u7684\u4fe1\u606f\uff0c\u5728 \\([l, r]\\) \u7684\u65f6\u95f4\u70b9\u51fa\u73b0\u8fc7\uff0c\u6211\u4eec\u5728\u65f6\u95f4\u8f74\u4e0a\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u5bf9\u4e8e\u6bcf\u6761\u8fb9\uff0c\u6700\u591a\u88ab\u5206\u4e3a \\(O(\\log k)\\) \u6bb5\u3002\u6211\u4eec\u904d\u5386\u7ebf\u6bb5\u6811\uff0c\u6bcf\u5230\u4e00\u4e2a\u8282\u70b9\uff0c\u5c31\u628a\u5b83\u4e0a\u9762\u7684\u6bcf\u4e2a\u8fb9\u90fd\u8fde\u4e0a\u3002</p> <p>\u56de\u6eaf\u7684\u65f6\u5019\u7531\u4e8e\u5e76\u67e5\u96c6\u4e0d\u652f\u6301\u5220\u8fb9\uff0c\u6211\u4eec\u4f7f\u7528\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\uff08\u6ca1\u6709\u8def\u5f84\u538b\u7f29\uff0c\u6709\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(m\\log n)\\)\uff09\u6765\u8fdb\u884c\u64cd\u4f5c\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(m\\log n\\log k)\\)\u3002</p> <pre><code>const int N = 2e5 + 5;\n\nusing P = std::pair&lt;int, int&gt;;\nint n, m, k;\nstd::vector&lt;int&gt; E[N &lt;&lt; 2];\nstd::vector&lt;P&gt; e;\n\nstruct DSU {\n    std::vector&lt;int&gt; siz;\n    std::vector&lt;int&gt; f;\n    std::vector&lt;std::array&lt;int, 2&gt;&gt; his;\n\n    DSU(int n) : siz(n + 1, 1), f(n + 1) {\n        std::iota(f.begin(), f.end(), 0);\n    }\n\n    int find(int x) {\n        while (f[x] != x) {\n            x = f[x];\n        }\n        return x;\n    }\n\n    bool query(int x, int y) {\n        return find(x) == find(y);\n    }\n\n    bool merge(int x, int y) {\n        x = find(x);\n        y = find(y);\n        if (x == y) {\n            return false;\n        }\n        if (siz[x] &lt; siz[y]) {\n            std::swap(x, y);\n        }\n        his.push_back({x, y});\n        siz[x] += siz[y];\n        f[y] = x;\n        return true;\n    }\n\n    int time() {\n        return his.size();\n    }\n\n    void revert(int tm) {\n        while (his.size() &gt; tm) {\n            auto tmp = his.back();\n            int x = tmp[0], y = tmp[1];\n            his.pop_back();\n            f[y] = y;\n            siz[x] -= siz[y];\n        }\n    }\n} dsu(N);\n\n\nvoid update(int root, int l, int r, int nl, int nr, int id) {\n    if (l &gt;= nl &amp;&amp; r &lt;= nr) {\n        E[root].push_back(id);\n        return ;\n    }\n    int mid = (l + r) &gt;&gt; 1;\n    if (mid + 1 &lt;= nr) update(root &lt;&lt; 1 | 1, mid + 1, r, nl, nr, id);\n    if (mid &gt;= nl) update(root &lt;&lt; 1, l, mid, nl, nr, id);\n}\n\n\nvoid dfs(int rt, int l, int r) {\n    int tt = dsu.time(), ok = 1;\n    for (auto i: E[rt]) { \n        int u = e[i].first, v = e[i].second;\n        if (dsu.query(u, v)) {\n            for (int i = l; i &lt;= r; i++) std::cout &lt;&lt; \"No\\n\";\n            ok = 0;\n            break;\n        }\n        dsu.merge(u, v + n);\n        dsu.merge(v, u + n);\n    }\n    if (ok) {\n        if (l == r) std::cout &lt;&lt; \"Yes\\n\";\n        else {\n            int mid = (l + r) &gt;&gt; 1;\n            dfs(rt &lt;&lt; 1, l, mid);\n            dfs(rt &lt;&lt; 1 | 1, mid + 1, r);\n        }\n    } \n    dsu.revert(tt);\n}\n\nvoid solve() {\n    std::cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;\n    for (int i = 1; i &lt;= m; i++) {\n        int x, y, l, r;\n        std::cin &gt;&gt; x &gt;&gt; y &gt;&gt; l &gt;&gt; r;\n        e.push_back({x, y});\n        update(1, 1, k, l, r, i - 1);\n    }\n    dfs(1, 1, k);\n}\n</code></pre>"},{"location":"acm/algorithm/ds/topic2/#_6","title":"\u7ebf\u6bb5\u6811\u5408\u5e76","text":""},{"location":"acm/algorithm/ds/topic2/#_7","title":"\u5e73\u8861\u6811","text":""},{"location":"acm/algorithm/ds/topic2/#_8","title":"\u4e60\u9898","text":"<p>CF19E Boss, Thirsty</p> <p>\u7ed9\u5b9a\u4e00\u5f20\u56fe\uff0c\u53ea\u80fd\u5220\u4e00\u6761\u8fb9\uff0c\u6709\u591a\u5c11\u79cd\u65b9\u6cd5\u80fd\u53d8\u6210\u4e8c\u5206\u56fe\u3002</p> <p>Solution</p> <p>\u4ed4\u7ec6\u60f3\u6765\uff0c\u5bf9\u4e8e\u7b2c \\(i\\) \u6761\u8fb9\uff0c\u6211\u4eec\u5728\u7b2c \\(i\\) \u4e2a\u65f6\u523b\u5220\u6389\u5b83\uff0c\u76f8\u5f53\u4e8e\u5b83\u5728 \\([1, i - 1]\\) \u548c \\([i + 1, m]\\) \u65f6\u95f4\u6bb5\u51fa\u73b0\u3002</p> <p>\u8fd9\u6837\u7b2c \\(i\\) \u4e2a\u65f6\u523b\u5c31\u662f\u53ea\u6709 \\(i\\) \u8fb9\u4e0d\u5728\uff0c\u5176\u4ed6\u90fd\u5728\u7684\u60c5\u51b5\u3002\u548c\u7ebf\u6bb5\u6811\u5206\u6cbb\u7684\u4f8b\u9898\u4e00\u6a21\u4e00\u6837\uff0c\u7528\u7ebf\u6bb5\u6811\u5206\u6cbb\u5373\u53ef\u3002</p> <p>CF1814F Communication Towers</p> <p>\u6bcf\u4e2a\u70b9\u53ea\u5728 \\(l_i\\) \u5230 \\(r_i\\) \u65f6\u95f4\u6bb5\u51fa\u73b0\u8fc7\uff0c\u95ee\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u662f\u5426\u5b58\u5728\u4e00\u65f6\u523b\u548c \\(1\\) \u8054\u901a\u3002</p> <p>Solution</p> <p>\u7ebf\u6bb5\u6811\u5206\u6cbb + \u4e00\u4e2a\u5f88\u5de7\u5999\u7684 trick\u3002</p> <p>\u53c8\u662f\u5728\u65f6\u95f4\u8f74\u4e0a\u5904\u7406\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u7ebf\u6bb5\u6811\u5206\u6cbb\uff0c\u70b9\u7684\u51fa\u73b0\u65f6\u95f4\u6bb5\u8f6c\u5316\u4e3a\u8fb9\u7684\u51fa\u73b0\u65f6\u95f4\u6bb5\u3002\u7ef4\u62a4\u8fde\u901a\u5757\u4e5f\u5f88\u81ea\u7136\u60f3\u5230\u5e76\u67e5\u96c6\u3002</p> <p>\u4f46\u662f\u5982\u4f55\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u662f\u5426\u548c \\(1\\) \u8054\u901a\u5462\uff1f</p> <p>\u8fd9\u91cc\u6709\u4e00\u4e2a\u5f88\u5de7\u5999\u7684\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u8bb0\u5f55\u5e76\u67e5\u96c6\u7684\u6839\u662f\u5426\u548c \\(1\\) \u76f8\u8fde\uff0c\u7528 <code>tag</code> \u6570\u7ec4\u8bb0\u5f55\u72b6\u6001\uff0c\u82e5\u5927\u4e8e \\(1\\) \u5219\u662f\u76f8\u8fde\u7684\u3002</p> <p>\u56de\u6eaf\u7684\u65f6\u5019\u4f1a\u9000\u56de\u5230\u6839\u8282\u70b9\u548c\u4e4b\u524d\u67d0\u4e2a\u6839\u5408\u5e76\u7684\u72b6\u6001\uff0c\u8fd9\u91cc\u76f8\u5f53\u4e8e\u5bf9\u5b83\u8fdb\u884c\u6811\u4e0a\u5dee\u5206\uff0c\u5dee\u5206\u7684\u7ed3\u679c <code>tag</code> \u6570\u7ec4\u5c31\u8868\u793a\u8fd9\u4e2a\u5408\u5e76\u524d\u7684\u6839\u5728\u5408\u5e76\u4e4b\u540e\u662f\u5426\u4e5f\u6ee1\u8db3 <code>tag</code> \u5927\u4e8e \\(0\\)\uff0c\u5373\u662f\u5426\u4e5f\u6ee1\u8db3\u548c \\(1\\) \u8054\u901a\u3002</p> <p>\u4f46\u8fd9\u91cc\u6ce8\u610f\u4e00\u4e0b\uff0c\u7531\u4e8e\u5e76\u67e5\u96c6\u5408\u5e76\u4e0a\u7684\u8fb9\u6743\u662f\u5dee\u5206\u503c\uff0c\u6240\u4ee5\u5728\u5408\u5e76\u7684\u65f6\u5019\uff0c\u88ab\u5408\u5e76\u4e3a\u522b\u4eba\u513f\u5b50\u7684\u90a3\u4e2a\u6839\u7684 <code>tag</code> \u8981\u51cf\u53bb\u65b0\u6839\u7684 <code>tag</code>\uff0c\u56e0\u4e3a\u56de\u6eaf\u7684\u65f6\u5019\u8981\u52a0\u56de\u6765\uff0c\u6240\u4ee5\u90a3\u6837\u624d\u662f\u5b83\u771f\u6b63\u7684 <code>tag</code>\u3002</p> <p>CF1681F Unique Occurrences</p> <p>\u4e00\u68f5 \\(n\\) \u4e2a\u70b9\u7684\u6811\uff0c\u6bcf\u6761\u8fb9\u90fd\u6709\u989c\u8272\u3002\u6c42 \\(\\sum_{u = 1}^n \\sum_{v = u + 1}^n f(u, v)\\)\u3002</p> <p>\u5176\u4e2d \\(f(u, v)\\) \u8868\u793a \\(u\\) \u5230 \\(v\\) \u7684\u7b80\u5355\u8def\u5f84\u4e2d\u6070\u597d\u51fa\u73b0\u4e86\u4e00\u6b21\u7684\u989c\u8272\u6570\u91cf\u3002</p> <p>Solution</p> <p>\u76f4\u63a5\u627e\u8def\u5f84\u80af\u5b9a\u4e0d\u53ef\u4ee5\uff0c\u6211\u4eec\u8ba1\u7b97\u6bcf\u6761\u8fb9\u53ef\u4ee5\u5bf9\u54ea\u4e9b\u8def\u5f84\u4ea7\u751f\u8d21\u732e\u3002</p> <p>\u5bf9\u4e8e\u989c\u8272 \\(i\\) \u7684\u8d21\u732e\uff0c\u663e\u7136\u5c31\u662f\u65ad\u6389\u6240\u6709\u989c\u8272\u4e3a \\(i\\) \u7684\u8fb9\uff0c\u7136\u540e\u7b97\u6bcf\u6761\u989c\u8272\u4e3a \\(i\\) \u7684\u4e24\u7aef\u5bf9\u5e94\u7684\u70b9\u6240\u5728\u8fde\u901a\u5757\u5927\u5c0f\u7684\u4e58\u79ef\u3002\u7d2f\u52a0\u6c42\u548c\u5373\u53ef\u3002</p> <p>\u5bf9\u4e8e\u8fd9\u79cd\u65ad\u8fb9\u518d\u8fde\u8fb9\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u7ebf\u6bb5\u6811\u5206\u6cbb\u53bb\u505a\u3002\u8bbe\u7b2c \\(i\\) \u4e2a\u65f6\u523b\u6240\u6709\u989c\u8272\u4e3a \\(i\\) \u7684\u8fb9\u90fd\u65ad\u5f00\uff0c\u5176\u4f59\u65f6\u523b\u8fde\u4e0a\uff0c\u7136\u540e\u7b97\u8fd9\u4e2a\u65f6\u523b\u8fde\u901a\u5757\u5927\u5c0f\u4e58\u79ef\uff0c\u7528\u53ef\u64a4\u56de\u5e76\u67e5\u96c6\u5f88\u597d\u7ef4\u62a4\u3002</p> <p>P5227 [AHOI2013] \u8fde\u901a\u56fe</p> <p>\u7ed9\u5b9a\u4e00\u5f20 \\(n\\) \u4e2a\u70b9 \\(m\\) \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u6709 \\(k\\) \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u95ee\u5220\u5b8c \\(c_i\\) \u6761\u8fb9\u4e4b\u540e\u6574\u4e2a\u56fe\u8fd8\u662f\u5426\u80fd\u8054\u901a\u3002</p> <p>Solution</p> <p>\u6570\u636e\u8303\u56f4\u4e3a \\(2\\times 10^5\\)\uff0c\u8003\u8651 \\(O(n\\log n\\log n)\\) \u7684\u7ebf\u6bb5\u6811\u5206\u6cbb\uff0c\u8bbe\u7b2c \\(i\\) \u4e2a\u65f6\u95f4\u70b9\uff0c\u6211\u4eec\u628a\u7b2c \\(i\\) \u6b21\u8be2\u95ee\u7684\u8fb9\u96c6\u90fd\u5220\u9664\u4e86\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9\uff0c\u6211\u4eec\u8bb0\u5f55\u5b83\u88ab\u5220\u6389\u7684\u65f6\u95f4\u70b9\uff0c\u7136\u540e\u53ea\u5728\u5b83\u5b58\u5728\u7684\u65f6\u95f4\u70b9\u8fde\u8fb9\uff0c\u8dd1\u7ebf\u6bb5\u6811\u5206\u6cbb\u5373\u53ef\u3002</p> <p>\u548c P10075 [GDKOI2024 \u666e\u53ca\u7ec4] \u5207\u5272 \u539f\u4e86\uff0c\u4f46\u662f\u540e\u8005\u6570\u636e\u66f4\u5f3a\uff0c\u53ea\u80fd\u54c8\u5e0c\u8fc7\uff0c\u505a\u6cd5\u89c1  \u3002</p> <p>P5631 \u6700\u5c0fmex\u751f\u6210\u6811</p> <p>\u7ed9\u5b9a\u4e00\u5f20 \\(n\\) \u4e2a\u70b9 \\(m\\) \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u8fb9\u6709\u6743\u503c\u3002\u6c42\u8fd9\u68f5\u6811\u7684\u751f\u6210\u6811\u8981\u6c42\u5176\u8fb9\u6743\u96c6\u5408\u7684 \\(\\text{mex}\\) \u6700\u5c0f\u3002</p> <p>Solution</p> <p>\u6211\u4eec\u6309\u6743\u503c\u7684\u503c\u57df\u6765\u5efa\u7ebf\u6bb5\u6811\uff0c\u8bbe\u7b2c \\(i\\) \u4e2a\u65f6\u523b\uff0c\u6743\u503c\u4e3a \\(i\\) \u7684\u8fb9\u662f\u4e0d\u5b58\u5728\u7684\uff0c\u82e5\u7b2c \\(i\\) \u65f6\u523b\u6ee1\u8db3\u6240\u6709\u70b9\u8054\u901a\uff0c\u5219 \\(\\text{mex}\\) \u5c31\u662f \\(i\\)\uff0c\u6545\u5728 \\([1, w_i - 1]\\) \u548c \\([w_i + 1, maxn]\\) \u65f6\u95f4\u6bb5\u8fde\u8fb9\u5373\u53ef\u3002</p> <p>P4219 [BJOI2014] \u5927\u878d\u5408</p> <p>\u7ef4\u62a4\u4e00\u4e2a \\(n\\) \u4e2a\u70b9\u7684\u68ee\u6797\uff0c\u521d\u59cb\u5168\u662f\u6563\u70b9\u3002\u6709 \\(q\\) \u4e2a\u64cd\u4f5c\uff0c\u652f\u6301\u52a0\u8fb9\uff08\u4fdd\u8bc1\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u524d\u4e0d\u8fde\u8fb9\uff09\uff1b\u8f93\u51fa\u7ecf\u8fc7\u67d0\u4e00\u8fb9\u7684\u7b80\u5355\u8def\u5f84\u6570\u3002\u5141\u8bb8\u79bb\u7ebf\u3002</p> <p>Solution</p> <p>\u8f93\u51fa\u7684\u65f6\u5019\u8ba9\u8fd9\u6761\u8fb9\u6d88\u5931\uff0c\u7b54\u6848\u5373\u4e3a\u8fb9\u6240\u5728\u4e24\u70b9\u7684\u8fde\u901a\u5757\u4e58\u79ef\u3002\u4e00\u6761\u8fb9\u53ea\u5728\u7b2c \\(i\\) \u65f6\u523b\u4e4b\u540e\u51fa\u73b0\uff0c\u4e14\u6bcf\u6b21\u8bbf\u95ee\u8fd9\u6761\u8fb9\u7684\u65f6\u5019\u90fd\u4f1a\u6d88\u5931\uff0c\u8dd1\u7ebf\u6bb5\u6811\u5206\u6cbb\u5373\u53ef\u3002</p> <p>P2056 [ZJOI2007] \u6349\u8ff7\u85cf</p> <p>\u4e00\u68f5\u6811\uff0c\u521d\u59cb\u6240\u6709\u70b9\u90fd\u662f\u9ed1\u70b9\uff0c\u6bcf\u6b21\u6709\u4e24\u79cd\u64cd\u4f5c\uff0c\u4e00\u79cd\u662f\u628a\u9ed1\u70b9\u53d8\u4e3a\u767d\u70b9\uff0c\u628a\u767d\u70b9\u53d8\u4e3a\u9ed1\u70b9\uff1b\u53e6\u4e00\u79cd\u662f\u67e5\u8be2\u6700\u8fdc\u7684\u4e24\u4e2a\u9ed1\u70b9\u8ddd\u79bb\u3002</p> <p>Solution</p> <p>CF601E A Museum Robbery</p> <p>Solution</p> <p>P4585 [FJOI2015] \u706b\u661f\u5546\u5e97\u95ee\u9898</p> <p>Solution</p>"},{"location":"acm/algorithm/ds/topic2/#_9","title":"\u53c2\u8003\u8d44\u6599","text":"<p>\u7ebf\u6bb5\u6811\u5206\u6cbb \u5b66\u4e60\u7b14\u8bb0</p> <p>\u8463\u6653\u7b97\u6cd5</p>"},{"location":"acm/algorithm/geometry/topic1/","title":"\u4e8c\u7ef4\u8ba1\u7b97\u51e0\u4f55","text":""},{"location":"acm/algorithm/geometry/topic1/#_2","title":"\u4e8c\u7ef4\u51e0\u4f55\u57fa\u7840","text":""},{"location":"acm/algorithm/geometry/topic1/#_3","title":"\u8ddd\u79bb","text":"<ul> <li> <p>\u6b27\u6c0f\u8ddd\u79bb</p> <p>\u4e00\u822c\u4e5f\u79f0\u4f5c\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u3002\u5728\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u4e2d\uff0c\u8bbe\u70b9 \\(A,B\\) \u7684\u5750\u6807\u5206\u522b\u4e3a \\(A(x_1,y_1),B(x_2,y_2)\\)\uff0c\u5219\u4e24\u70b9\u95f4\u7684\u6b27\u6c0f\u8ddd\u79bb\u4e3a\uff1a</p> \\[ \\left | AB \\right | = \\sqrt{\\left ( x_2 - x_1 \\right )^2 + \\left ( y_2 - y_1 \\right )^2} \\] <p>\\(n\\) \u7ef4\u7a7a\u95f4\u4e2d\u6b27\u6c0f\u8ddd\u79bb\u7684\u8ddd\u79bb\u516c\u5f0f\uff1a\u5bf9\u4e8e \\(\\vec A(x_{11}, x_{12}, \\cdots,x_{1n}) ,~ \\vec B(x_{21}, x_{22}, \\cdots,x_{2n})\\)\uff0c\u6709</p> \\[   \\begin{aligned}   \\lVert\\overrightarrow{AB}\\rVert &amp;= \\sqrt{\\left ( x_{11} - x_{21} \\right )^2 + \\left ( x_{12} - x_{22} \\right )^2 + \\cdot \\cdot \\cdot +\\left ( x_{1n} - x_{2n} \\right )^2}\\\\   &amp;= \\sqrt{\\sum_{i = 1}^{n}(x_{1i} - x_{2i})^2}   \\end{aligned} \\] </li> <li> <p>\u66fc\u54c8\u987f\u8ddd\u79bb</p> <p>\u5728\u4e8c\u7ef4\u7a7a\u95f4\u5185\uff0c\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\uff08Manhattan distance\uff09\u4e3a\u5b83\u4eec\u6a2a\u5750\u6807\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u4e0e\u7eb5\u5750\u6807\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u4e4b\u548c\u3002\u8bbe\u70b9 \\(A(x_1,y_1),B(x_2,y_2)\\)\uff0c\u5219 \\(A,B\\) \u4e4b\u95f4\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u7528\u516c\u5f0f\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a</p> \\[   d(A,B) = |x_1 - x_2| + |y_1 - y_2| \\] <p>\\(n\\) \u7ef4\u7a7a\u95f4\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u516c\u5f0f\u4e3a\uff1a</p> \\[   \\begin{aligned}   d(A,B) &amp;= |x_1 - y_1| + |x_2 - y_2| + \\cdot \\cdot \\cdot + |x_n - y_n|\\\\   &amp;= \\sum_{i = 1}^{n}|x_i - y_i|   \\end{aligned} \\] </li> <li> <p>\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb</p> <p>\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\uff08Chebyshev distance\uff09\u662f\u5411\u91cf\u7a7a\u95f4\u4e2d\u7684\u4e00\u79cd\u5ea6\u91cf\uff0c\u4e8c\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u5b9a\u4e49\u4e3a\u5176\u5404\u5750\u6807\u6570\u503c\u5dee\u7684\u6700\u5927\u503c\u3002</p> <p>\u5728\u4e8c\u7ef4\u7a7a\u95f4\u5185\uff0c\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\u4e3a\u5b83\u4eec\u6a2a\u5750\u6807\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u4e0e\u7eb5\u5750\u6807\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u7684\u6700\u5927\u503c\u3002\u8bbe\u70b9 \\(A(x_1,y_1),B(x_2,y_2)\\)\uff0c\u5219 \\(A,B\\) \u4e4b\u95f4\u7684\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\u7528\u516c\u5f0f\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a</p> \\[   d(A,B) = \\max(|x_1 - x_2|, |y_1 - y_2|) \\] <p>\\(n\\) \u7ef4\u7a7a\u95f4\u4e2d\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\u7684\u8ddd\u79bb\u516c\u5f0f\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a</p> \\[   \\begin{aligned}   d(x,y) &amp;= \\max\\begin{Bmatrix} |x_1 - y_1|,|x_2 - y_2|,\\cdot \\cdot \\cdot,|x_n - y_n|\\end{Bmatrix} \\\\   &amp;= \\max\\begin{Bmatrix} |x_i - y_i|\\end{Bmatrix}(i \\in [1, n])\\end{aligned} \\] </li> </ul> <p>\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\u548c\u66fc\u54c8\u987f\u8ddd\u79bb\u4e4b\u95f4\u7684\u5173\u7cfb</p> <ul> <li>\u66fc\u54c8\u987f\u5750\u6807\u7cfb\u662f\u901a\u8fc7\u5207\u6bd4\u96ea\u592b\u5750\u6807\u7cfb\u65cb\u8f6c \\(45^\\circ\\) \u540e\uff0c\u518d\u7f29\u5c0f\u5230\u539f\u6765\u7684\u4e00\u534a\u5f97\u5230\u7684\u3002</li> <li>\u5c06\u4e00\u4e2a\u70b9 \\((x,y)\\) \u7684\u5750\u6807\u53d8\u4e3a \\((x + y, x - y)\\) \u540e\uff0c\u539f\u5750\u6807\u7cfb\u4e2d\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u7b49\u4e8e\u65b0\u5750\u6807\u7cfb\u4e2d\u7684\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\u3002</li> <li>\u5c06\u4e00\u4e2a\u70b9 \\((x,y)\\) \u7684\u5750\u6807\u53d8\u4e3a \\((\\dfrac{x + y}{2},\\dfrac{x - y}{2})\\) \u540e\uff0c\u539f\u5750\u6807\u7cfb\u4e2d\u7684\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\u7b49\u4e8e\u65b0\u5750\u6807\u7cfb\u4e2d\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u3002</li> </ul> <ul> <li> <p>\u51f8\u591a\u8fb9\u5f62</p> <p>\u51f8\u591a\u8fb9\u5f62\u662f\u6307\u6240\u6709\u5185\u89d2\u5927\u5c0f\u90fd\u5728 \\([0, \\pi]\\) \u8303\u56f4\u5185\u7684 \u7b80\u5355\u591a\u8fb9\u5f62\u3002</p> </li> <li> <p>\u51f8\u5305</p> <p>\u5728\u5e73\u9762\u4e0a\u80fd\u5305\u542b\u6240\u6709\u7ed9\u5b9a\u70b9\u7684\u6700\u5c0f\u51f8\u591a\u8fb9\u5f62\u53eb\u505a\u51f8\u5305\u3002</p> </li> <li> <p>\u5224\u65ad\u4e00\u4e2a\u70b9\u5728\u76f4\u7ebf\u7684\u54ea\u8fb9</p> <p>\u6211\u4eec\u6709\u76f4\u7ebf\u4e0a\u7684\u4e00\u70b9 \\(P\\) \u7684\u76f4\u7ebf\u7684\u65b9\u5411\u5411\u91cf \\(\\mathbf v\\)\uff0c\u60f3\u77e5\u9053\u67d0\u4e2a\u70b9 \\(Q\\) \u5728\u76f4\u7ebf\u7684\u54ea\u8fb9\u3002</p> <p>\u6211\u4eec\u5229\u7528\u5411\u91cf\u79ef\u7684\u6027\u8d28\uff0c\u7b97\u51fa \\(\\overrightarrow {PQ}\\times \\mathbf v\\)\u3002\u5982\u679c\u5411\u91cf\u79ef\u4e3a\u8d1f\uff0c\u5219 \\(Q\\) \u5728\u76f4\u7ebf\u4e0a\u65b9\uff0c\u5982\u679c\u5411\u91cf\u79ef\u4e3a \\(0\\)\uff0c\u5219 \\(Q\\) \u5728\u76f4\u7ebf\u4e0a\uff0c\u5982\u679c\u5411\u91cf\u79ef\u4e3a\u6b63\uff0c\u5219 \\(Q\\) \u5728\u76f4\u7ebf\u4e0b\u65b9\u3002</p> </li> </ul>"},{"location":"acm/algorithm/geometry/topic1/#_4","title":"\u70b9\u4e0e\u5411\u91cf","text":"<pre><code>#define y1 yy1\n#define nxt(i) ((i + 1) % s.size())\ntypedef double LD;\nconst LD PI = 3.14159265358979323846;\nconst LD eps = 1E-10;\nconst int MAX_N = 5e5 + 5;\nusing i64 = long long;\nint sgn(LD x) { return fabs(x) &lt; eps ? 0 : (x &gt; 0 ? 1 : -1); }\nstruct L;\nstruct P;\ntypedef P V;\nstruct P {\n    LD x, y;\n    explicit P(LD x = 0, LD y = 0): x(x), y(y) {}\n    explicit P(const L&amp; l);\n};\nstruct L {\n    P s, t;\n    L() {}\n    L(P s, P t): s(s), t(t) {}\n};\n\nusing S = std::vector&lt;P&gt;;\n\nP operator + (const P&amp; a, const P&amp; b) { return P(a.x + b.x, a.y + b.y); }\nP operator - (const P&amp; a, const P&amp; b) { return P(a.x - b.x, a.y - b.y); }\nP operator * (const P&amp; a, LD k) { return P(a.x * k, a.y * k); }\nP operator / (const P&amp; a, LD k) { return P(a.x / k, a.y / k); }\ninline bool operator &lt; (const P&amp; a, const P&amp; b) {\n    return sgn(a.x - b.x) &lt; 0 || (sgn(a.x - b.x) == 0 &amp;&amp; sgn(a.y - b.y) &lt; 0);\n}\nbool operator == (const P&amp; a, const P&amp; b) { return !sgn(a.x - b.x) &amp;&amp; !sgn(a.y - b.y); }\nP::P(const L&amp; l) { *this = l.t - l.s; }\nstd::ostream &amp;operator &lt;&lt; (std::ostream &amp;os, const P &amp;p) {\n    return (os &lt;&lt; \"(\" &lt;&lt; p.x &lt;&lt; \",\" &lt;&lt; p.y &lt;&lt; \")\");\n}\nstd::istream &amp;operator &gt;&gt; (std::istream &amp;is, P &amp;p) {\n    return (is &gt;&gt; p.x &gt;&gt; p.y);\n}\n\nLD dist(const P&amp; p) { return sqrt(p.x * p.x + p.y * p.y); }\nLD dot(const V&amp; a, const V&amp; b) { return a.x * b.x + a.y * b.y; } // \u70b9\u79ef\nLD det(const V&amp; a, const V&amp; b) { return a.x * b.y - a.y * b.x; } // \u53c9\u79ef\nLD cross(const P&amp; s, const P&amp; t, const P&amp; o = P()) { return det(s - o, t - o); } // \u53c9\u79ef\n// --------------------------------------------\n</code></pre>"},{"location":"acm/algorithm/geometry/topic1/#_5","title":"\u8c61\u9650","text":"<pre><code>// \u8c61\u9650\nint quad(P p) {\n    int x = sgn(p.x), y = sgn(p.y);\n    if (x &gt; 0 &amp;&amp; y &gt;= 0) return 1;\n    if (x &lt;= 0 &amp;&amp; y &gt; 0) return 2;\n    if (x &lt; 0 &amp;&amp; y &lt;= 0) return 3;\n    if (x &gt;= 0 &amp;&amp; y &lt; 0) return 4;\n    assert(0);\n}\n\n// \u4ec5\u9002\u7528\u4e8e\u53c2\u7167\u70b9\u5728\u6240\u6709\u70b9\u4e00\u4fa7\u7684\u60c5\u51b5\nstruct cmp_angle {\n    P p;\n    bool operator () (const P&amp; a, const P&amp; b) {\n//        int qa = quad(a - p), qb = quad(b - p);\n//        if (qa != qb) return qa &lt; qb;\n        int d = sgn(cross(a, b, p));\n        if (d) return d &gt; 0;\n        return dist(a - p) &lt; dist(b - p);\n    }\n};\n</code></pre>"},{"location":"acm/algorithm/geometry/topic1/#_6","title":"\u7ebf","text":"<pre><code>// \u662f\u5426\u5e73\u884c\nbool parallel(const L&amp; a, const L&amp; b) {\n    return !sgn(det(P(a), P(b)));\n}\n// \u76f4\u7ebf\u662f\u5426\u76f8\u7b49\nbool l_eq(const L&amp; a, const L&amp; b) {\n    return parallel(a, b) &amp;&amp; parallel(L(a.s, b.t), L(b.s, a.t));\n}\n// \u9006\u65f6\u9488\u65cb\u8f6c r \u5f27\u5ea6\nP rotation(const P&amp; p, const LD&amp; r) { return P(p.x * cos(r) - p.y * sin(r), p.x * sin(r) + p.y * cos(r)); }\nP RotateCCW90(const P&amp; p) { return P(-p.y, p.x); }\nP RotateCW90(const P&amp; p) { return P(p.y, -p.x); }\n// \u5355\u4f4d\u6cd5\u5411\u91cf\nV normal(const V&amp; v) { return V(-v.y, v.x) / dist(v); }\n</code></pre>"},{"location":"acm/algorithm/geometry/topic1/#_7","title":"\u70b9\u4e0e\u7ebf","text":"<pre><code>// \u70b9\u5728\u7ebf\u6bb5\u4e0a  &lt;= 0\u5305\u542b\u7aef\u70b9 &lt; 0 \u5219\u4e0d\u5305\u542b\nbool p_on_seg(const P&amp; p, const L&amp; seg) {\n    P a = seg.s, b = seg.t;\n    return !sgn(det(p - a, b - a)) &amp;&amp; sgn(dot(p - a, p - b)) &lt;= 0;\n}\n// \u70b9\u5230\u76f4\u7ebf\u8ddd\u79bb\nLD dist_to_line(const P&amp; p, const L&amp; l) {\n    return fabs(cross(l.s, l.t, p)) / dist(l);\n}\n// \u70b9\u5230\u7ebf\u6bb5\u8ddd\u79bb\nLD dist_to_seg(const P&amp; p, const L&amp; l) {\n    if (l.s == l.t) return dist(p - l);\n    V vs = p - l.s, vt = p - l.t;\n    if (sgn(dot(l, vs)) &lt; 0) return dist(vs);\n    else if (sgn(dot(l, vt)) &gt; 0) return dist(vt);\n    else return dist_to_line(p, l);\n}\n</code></pre>"},{"location":"acm/algorithm/geometry/topic1/#_8","title":"\u7ebf\u4e0e\u7ebf","text":"<pre><code>// \u6c42\u76f4\u7ebf\u4ea4 \u9700\u8981\u4e8b\u5148\u4fdd\u8bc1\u6709\u754c\nP l_intersection(const L&amp; a, const L&amp; b) {\n    LD s1 = det(P(a), b.s - a.s), s2 = det(P(a), b.t - a.s);\n    return (b.s * s2 - b.t * s1) / (s2 - s1);\n}\n// \u5411\u91cf\u5939\u89d2\u7684\u5f27\u5ea6\nLD angle(const V&amp; a, const V&amp; b) {\n    LD r = asin(fabs(det(a, b)) / dist(a) / dist(b));\n    if (sgn(dot(a, b)) &lt; 0) r = PI - r;\n    return r;\n}\n// \u7ebf\u6bb5\u548c\u76f4\u7ebf\u662f\u5426\u6709\u4ea4   1 = \u89c4\u8303\uff0c2 = \u4e0d\u89c4\u8303\nint s_l_cross(const L&amp; seg, const L&amp; line) {\n    int d1 = sgn(cross(line.s, line.t, seg.s));\n    int d2 = sgn(cross(line.s, line.t, seg.t));\n    if ((d1 ^ d2) == -2) return 1; // proper\n    if (d1 == 0 || d2 == 0) return 2;\n    return 0;\n}\n// \u7ebf\u6bb5\u7684\u4ea4   1 = \u89c4\u8303\uff0c2 = \u4e0d\u89c4\u8303\nint s_cross(const L&amp; a, const L&amp; b, P&amp; p) {\n    int d1 = sgn(cross(a.t, b.s, a.s)), d2 = sgn(cross(a.t, b.t, a.s));\n    int d3 = sgn(cross(b.t, a.s, b.s)), d4 = sgn(cross(b.t, a.t, b.s));\n    if ((d1 ^ d2) == -2 &amp;&amp; (d3 ^ d4) == -2) { p = l_intersection(a, b); return 1; }\n    if (!d1 &amp;&amp; p_on_seg(b.s, a)) { p = b.s; return 2; }\n    if (!d2 &amp;&amp; p_on_seg(b.t, a)) { p = b.t; return 2; }\n    if (!d3 &amp;&amp; p_on_seg(a.s, b)) { p = a.s; return 2; }\n    if (!d4 &amp;&amp; p_on_seg(a.t, b)) { p = a.t; return 2; }\n    return 0;\n}\n</code></pre>"},{"location":"acm/algorithm/geometry/topic1/#_9","title":"\u51f8\u5305","text":"<p>\u53ef\u4ee5\u6c42\u51fa\u5305\u542b\u70b9\u96c6\u7684\u51f8\u591a\u8fb9\u5f62\u3002</p>"},{"location":"acm/algorithm/geometry/topic1/#_10","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<p>\u524d\u7f6e\uff1a\u70b9\u4e0e\u5411\u91cf</p> <pre><code>// \u70b9\u5728\u7ebf\u6bb5\u4e0a  &lt;= 0\u5305\u542b\u7aef\u70b9 &lt; 0 \u5219\u4e0d\u5305\u542b\nbool p_on_seg(const P&amp; p, const L&amp; seg) {\n    P a = seg.s, b = seg.t;\n    return !sgn(det(p - a, b - a)) &amp;&amp; sgn(dot(p - a, p - b)) &lt;= 0;\n}\n\ntypedef std::vector&lt;P&gt; S;\n\n// \u70b9\u662f\u5426\u5728\u591a\u8fb9\u5f62\u4e2d 0 = \u5728\u5916\u90e8 1 = \u5728\u5185\u90e8 -1 = \u5728\u8fb9\u754c\u4e0a\nint inside(const S&amp; s, const P&amp; p) {\n    int cnt = 0;\n    for (int i = 0; i &lt; s.size(); i++) {\n        P a = s[i], b = s[nxt(i)];\n        if (p_on_seg(p, L(a, b))) return -1;\n        if (sgn(a.y - b.y) &lt;= 0) std::swap(a, b);\n        if (sgn(p.y - a.y) &gt; 0) continue;\n        if (sgn(p.y - b.y) &lt;= 0) continue;\n        cnt += sgn(cross(b, a, p)) &gt; 0;\n    }\n    return bool(cnt &amp; 1);\n}\n// \u591a\u8fb9\u5f62\u9762\u79ef\uff0c\u6709\u5411\u9762\u79ef\u53ef\u80fd\u4e3a\u8d1f\nLD polygon_area(const S&amp; s) {\n    LD ret = 0;\n    for (int i = 1; i &lt; (i64)s.size() - 1; i++)\n        ret += cross(s[i], s[i + 1], s[0]);\n    return ret / 2;\n}\n// \u6784\u5efa\u51f8\u5305 \u70b9\u4e0d\u53ef\u4ee5\u91cd\u590d &lt; 0 \u8fb9\u4e0a\u53ef\u4ee5\u6709\u70b9\uff0c &lt;= 0 \u5219\u4e0d\u80fd\n// \u4f1a\u6539\u53d8\u8f93\u5165\u70b9\u7684\u987a\u5e8f\nconst int MAX_N = 1000;\nS convex_hull(S&amp; s) {\n//    assert(s.size() &gt;= 3);\n    sort(s.begin(), s.end());\n    S ret(MAX_N * 2);\n    int sz = 0;\n    for (int i = 0; i &lt; s.size(); i++) {\n        while (sz &gt; 1 &amp;&amp; sgn(cross(ret[sz - 1], s[i], ret[sz - 2])) &lt;= 0) --sz;\n        ret[sz++] = s[i];\n    }\n    int k = sz;\n    for (int i = (i64)s.size() - 2; i &gt;= 0; i--) {\n        while (sz &gt; k &amp;&amp; sgn(cross(ret[sz - 1], s[i], ret[sz - 2])) &lt;= 0) --sz;\n        ret[sz++] = s[i];\n    }\n    ret.resize(sz - (s.size() &gt; 1));\n    return ret;\n}\n\nP compute_centroid(const std::vector&lt;P&gt; &amp;p) {\n    P c(0, 0);\n    LD scale = 6.0 * polygon_area(p);\n    for (unsigned i = 0; i &lt; p.size(); i++) {\n        unsigned j = (i + 1) % p.size();\n        c = c + (p[i] + p[j]) * (p[i].x * p[j].y - p[j].x * p[i].y);\n    }\n    return c / scale;\n}\n\n\nvoid solve() {\n    std::vector&lt;P&gt; v;\n    int n;\n    std::cin &gt;&gt; n;\n    for (int i = 0; i &lt; n; i++) {\n        P pp;\n        std::cin &gt;&gt; pp;\n        v.push_back(pp); \n    }\n    v = convex_hull(v);\n    LD ans = 0;\n    for (int i = 0; i &lt; v.size(); i++) {\n        ans += dist(v[(i + 1) % v.size()] - v[i]);\n    }\n    std::cout &lt;&lt; std::fixed &lt;&lt; std::setprecision(2) &lt;&lt; ans &lt;&lt; '\\n';\n}\n</code></pre>"},{"location":"acm/algorithm/geometry/topic1/#_11","title":"\u4e60\u9898","text":"<p>P3829 [SHOI2012] \u4fe1\u7528\u5361\u51f8\u5305</p> <p>Solution</p> <p>\u672c\u8d28\u662f\u51f8\u5305\u677f\u5b50\uff0c\u8f6c\u5b8c\u4e00\u5468\u540e\u4fe1\u7528\u5361\u7684\u5706\u89d2\u90e8\u5206\u957f\u5ea6\u4e00\u5b9a\u662f\u4e00\u4e2a\u5706\uff0c\u6240\u4ee5\u5c31\u662f\u51f8\u5305\u957f\u5ea6\u52a0\u4e0a\u5706\u7684\u5468\u957f\u5373\u53ef\u3002</p>"},{"location":"acm/algorithm/geometry/topic1/#_12","title":"\u65cb\u8f6c\u5361\u58f3","text":"<p>\u53ef\u4ee5\u6c42\u51fa\u51f8\u5305\u7684\u76f4\u5f84\u3002</p>"},{"location":"acm/algorithm/geometry/topic1/#_13","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<p>\u524d\u7f6e\uff1a\u70b9\u4e0e\u5411\u91cf</p> <pre><code>typedef std::vector&lt;P&gt; S;\n\nS convex_hull(S&amp; s) {\n    sort(s.begin(), s.end());\n    S ret(MAX_N * 2);\n    int sz = 0;\n    for (int i = 0; i &lt; s.size(); i++) {\n        while (sz &gt; 1 &amp;&amp; sgn(cross(ret[sz - 1], s[i], ret[sz - 2])) &lt;= 0) --sz;\n        ret[sz++] = s[i];\n    }\n    int k = sz;\n    for (int i = (i64)s.size() - 2; i &gt;= 0; i--) {\n        while (sz &gt; k &amp;&amp; sgn(cross(ret[sz - 1], s[i], ret[sz - 2])) &lt;= 0) --sz;\n        ret[sz++] = s[i];\n    }\n    ret.resize(sz - (s.size() &gt; 1));\n    return ret;\n}\n\nLD rotatingCalipers(std::vector&lt;P&gt;&amp; qs) {\n    int n = qs.size();\n    if (n == 2)\n        return dist(qs[0] - qs[1]);\n    LD res = 0;\n    for (int i = 0, j = 2; i &lt; n; i++) { \n        res = std::max(res, dist(qs[i + 1] - qs[i]));\n        while (cross(qs[i + 1], qs[j], qs[i]) &lt; cross(qs[i + 1], qs[(j + 1) % n], qs[i])) j = (j + 1) % n; \n        res = std::max(res, std::max(dist(qs[i] - qs[j]), dist(qs[i + 1] - qs[j])));\n    }\n    return res;\n}\n\nvoid solve() {\n    int n;\n    std::cin &gt;&gt; n;\n    S v(n);\n    for (int i = 0; i &lt; n; i++) std::cin &gt;&gt; v[i].x &gt;&gt; v[i].y;\n    v = convex_hull(v);\n    LD dis = rotatingCalipers(v); //\u51f8\u5305\u6700\u957f\u76f4\u5f84\n    std::cout &lt;&lt; std::fixed &lt;&lt; std::setprecision(0) &lt;&lt; dis * dis &lt;&lt; '\\n';\n}\n</code></pre>"},{"location":"acm/algorithm/geometry/topic1/#_14","title":"\u4e60\u9898","text":"<p>P3187 [HNOI2007] \u6700\u5c0f\u77e9\u5f62\u8986\u76d6</p> <p>Solution</p> <p>\u6211\u4eec\u89c2\u5bdf\u53ef\u77e5\uff0c\u76ee\u6807\u77e9\u5f62\u4e00\u5b9a\u6709\u4e00\u6761\u8fb9\u548c\u51f8\u5305\u8fb9\u91cd\u5408\uff0c\u6545\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u91cd\u5408\u7684\u90a3\u6761\u8fb9\uff0c\u4e0d\u59a8\u8bbe\u4e3a\u5e95\u8fb9\u3002</p> <p>\u7136\u540e\u627e\u51f8\u5305\u5728\u77e9\u5f62\u4e0a\u6700\u5de6\u6700\u4e0a\u6700\u53f3\u8fb9\u7684\u4e09\u4e2a\u70b9\uff0c\u7531\u4e8e\u6709\u5355\u8c03\u6027\uff0c\u76f4\u63a5\u987a\u5e8f\u7ef4\u62a4\u5373\u53ef\u3002</p>"},{"location":"acm/algorithm/geometry/topic1/#_15","title":"\u534a\u5e73\u9762\u4ea4","text":"<p>\u53d6\u591a\u4e2a\u534a\u5e73\u9762\u76f8\u4ea4\u7684\u90e8\u5206\uff0c\u5f80\u5f80\u53d6\u5de6\u534a\u8fb9\u5e73\u9762\u4ea4\u3002</p>"},{"location":"acm/algorithm/geometry/topic1/#_16","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<p>\u524d\u7f6e\uff1a\u70b9\u4e0e\u5411\u91cf</p> <pre><code>struct LV {\n    P p, v; LD ang;\n    LV() {}\n    LV(P s, P t): p(s), v(t - s) { ang = atan2(v.y, v.x); }\n};  // \u53e6\u4e00\u79cd\u5411\u91cf\u8868\u793a\n\nbool operator &lt; (const LV&amp; a, const LV&amp; b) { return a.ang &lt; b.ang; }\nbool on_left(const LV&amp; l, const P&amp; p) { return sgn(cross(l.v, p - l.p)) &gt;= 0; }\nP l_intersection(const LV&amp; a, const LV&amp; b) {\n    P u = a.p - b.p; LD t = cross(b.v, u) / cross(a.v, b.v);\n    return a.p + a.v * t;\n}\n\nS half_plane_intersection(std::vector&lt;LV&gt;&amp; L) {\n    int n = L.size(), fi, la;\n    sort(L.begin(), L.end());\n    S p(n); std::vector&lt;LV&gt; q(n);\n    q[fi = la = 0] = L[0];\n    for (int i = 1; i &lt; n; i++) {\n        while (fi &lt; la &amp;&amp; !on_left(L[i], p[la - 1])) la--;\n        while (fi &lt; la &amp;&amp; !on_left(L[i], p[fi])) fi++;\n        q[++la] = L[i];\n        if (sgn(cross(q[la].v, q[la - 1].v)) == 0) {\n            la--;\n            if (on_left(q[la], L[i].p)) q[la] = L[i];\n        }\n        if (fi &lt; la) p[la - 1] = l_intersection(q[la - 1], q[la]);\n    }\n    while (fi &lt; la &amp;&amp; !on_left(q[fi], p[la - 1])) la--;\n    if (la - fi &lt;= 1) return S();\n    p[la] = l_intersection(q[la], q[fi]);\n    return S(p.begin() + fi, p.begin() + la + 1);\n}\n\nS convex_intersection(const S &amp;v1, const S &amp;v2) {\n    std::vector&lt;LV&gt; h; int n = v1.size(), m = v2.size();\n    for (int i = 0; i &lt; n; i++) h.push_back(LV(v1[i], v1[(i + 1) % n]));\n    for (int i = 0; i &lt; m; i++) h.push_back(LV(v2[i], v2[(i + 1) % m]));\n    return half_plane_intersection(h);\n}\n\nLD intersection_size(S v) {\n    LD tmp = 0;\n    for (int i = 1; i &lt; v.size(); i++) {\n        tmp += fabs(cross(v[i], v[(i + 1) % v.size()], v[0]) / 2);\n    }\n    return tmp;\n}\n\nvoid solve() {\n    int n;\n    std::cin &gt;&gt; n;\n    std::vector&lt;LV&gt; a;\n    while (n--) {\n        int m;\n        std::cin &gt;&gt; m;\n        S hh(m);\n        for (int i = 0; i &lt; m; i++) std::cin &gt;&gt; hh[i];\n        for (int i = 0; i &lt; m; i++)\n            a.push_back((LV){hh[i], hh[(i + 1) % m]});\n    }   \n    S ans = half_plane_intersection(a); //\u76f8\u4ea4\u90e8\u5206\u70b9\u96c6\n    std::cout &lt;&lt; std::fixed &lt;&lt; std::setprecision(3) &lt;&lt; intersection_size(ans) &lt;&lt; '\\n'; //\u76f8\u4ea4\u90e8\u5206\u9762\u79ef\n}\n</code></pre>"},{"location":"acm/algorithm/geometry/topic1/#_17","title":"\u4e60\u9898","text":"<p>P3256 [JLOI2013] \u8d5b\u8f66</p> <p>Solution</p> <p>\u6bcf\u8f86\u8d5b\u8f66\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u6761 \\(y = vx + k\\) \u7684\u76f4\u7ebf\uff0c\u6240\u4ee5\u6bcf\u4e2a\u80fd\u5f97\u5956\u7684\u8d5b\u8f66\u5c31\u662f\u534a\u5e73\u9762\u4ea4\u7684\u8fd9\u4e9b\u70b9\u3002</p> <p>\u5904\u7406\u7684\u65f6\u5019\u8fd8\u8981\u52a0\u4e0a \\(y\\) \u8f74\u8d1f\u534a\u8f74\uff0c\u56e0\u4e3a\u9650\u5b9a\u5728\u7b2c\u4e00\u8c61\u9650\u3002</p> <p>P2600 [ZJOI2008] \u77ad\u671b\u5854</p> <p>Solution</p> <p>\u6bcf\u6761\u7ebf\u770b\u4f5c\u662f\u4e00\u4e2a\u6307\u5411\u53f3\u8fb9\u7684\u5411\u91cf\uff0c\u628a\u6574\u4e2a\u5e73\u9762\u5206\u6210\u4e24\u534a\uff0c\u90a3\u4e48\u77ad\u671b\u53f0\u8981\u5efa\u5728\u5e73\u9762\u5de6\u534a\u8fb9\u3002</p> <p>\u5229\u7528\u534a\u5e73\u9762\u4ea4\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u4e0a\u9762\u7684\u51f8\u591a\u8fb9\u5f62\u8f6e\u5ed3\uff0c\u7136\u540e\u6211\u4eec\u8fd8\u6709\u4e0b\u9762\u7684\u4e00\u4e2a\u591a\u8fb9\u5f62\u8f6e\u5ed3\u3002</p> <p>\u4e0d\u96be\u53d1\u73b0\u4e00\u5b9a\u8981\u4e48\u662f\u5728\u4e0a\u9762\u7684\u62d0\u70b9\u6216\u4e0b\u9762\u7684\u62d0\u70b9\u9009\u62e9\uff0c\u7136\u540e\u6211\u4eec\u4f9d\u6b21\u679a\u4e3e\u62d0\u70b9\uff0c\u627e\u51fa\u548c\u53e6\u4e00\u4e2a\u51f8\u5305\u7684\u4ea4\u70b9\u7b97\u51fa\u8ddd\u79bb\u5373\u53ef\u3002</p>"},{"location":"acm/algorithm/geometry/topic2/","title":"\u4e09\u7ef4\u8ba1\u7b97\u51e0\u4f55","text":""},{"location":"acm/algorithm/graph/topic1/","title":"\u57fa\u7840\u56fe\u8bba","text":""},{"location":"acm/algorithm/graph/topic1/#_2","title":"\u4e60\u9898","text":"<p>CF2026F Choose Your Queries</p> <p>Solution</p> <p>\u9996\u5148\u4e0d\u59a8\u5148\u5bf9\u4e8e\u6bcf\u6761\u8fb9\u90fd\u9009\u62e9 \\(x_i\\)\uff0c\u7136\u540e\u5982\u679c\u6211\u4eec\u540e\u6765\u6539\u9009 \\(y_i\\) \u7684\u8bdd\uff0c\u5219\u662f\u5bf9\u8fd9\u4e24\u4e2a\u70b9\u90fd\u6709\u5f71\u54cd\uff0c\u76f8\u5f53\u4e8e\u5747\u5f02\u6216 \\(1\\)\u3002\u5982\u679c\u662f\u5728\u4e00\u6761\u94fe\u4e0a\uff0c\u5219\u662f\u4f1a\u94fe\u5f0f\u5730\u6539\u53d8\u4e00\u7cfb\u5217\u7684\u503c\u3002\u6700\u540e\u6574\u6761\u94fe\u4e0a\u7684\u503c\u5c31\u662f \\(n \\mod 2\\)\u3002</p> <p>\u6211\u4eec\u628a\u8fd9\u4e9b\u64cd\u4f5c\u770b\u4f5c\u65e0\u5411\u8fb9\uff0c\u5f00\u59cb\u8fde\u8fb9\u3002\u6211\u4eec\u81ea\u4e0b\u5411\u4e0a\u8fdb\u884c\u64cd\u4f5c\uff0c\u6839\u636e\u5f53\u524d\u70b9\u7684\u5947\u5076\u6027\uff0c\u82e5\u662f\u5947\u6570\uff0c\u5219\u548c\u7236\u4eb2\u64cd\u4f5c\u4e00\u6b21\uff0c\u5426\u5219\u4e0d\u64cd\u4f5c\u3002\u5176\u5b9e\u8fd9\u6837\u7684\u64cd\u4f5c\u903b\u8f91\uff0c\u5bf9\u4e8e\u6811\uff0c\u73af\u5747\u662f\u6210\u7acb\u7684\uff0c\u6211\u4eec\u628a\u6574\u4e2a\u56fe\u770b\u4f5c\u82e5\u5e72\u4e2a\u8fde\u901a\u5757\uff0c\u5206\u522b\u64cd\u4f5c\u5373\u53ef\u3002</p>"},{"location":"acm/algorithm/graph/topic2/","title":"\u7f51\u7edc\u6d41","text":""},{"location":"acm/algorithm/graph/topic2/#_2","title":"\u7f51\u7edc\u6d41\u7b97\u6cd5","text":""},{"location":"acm/algorithm/graph/topic2/#_3","title":"\u6700\u5927\u6d41","text":"<p>P3376 \u3010\u6a21\u677f\u3011\u7f51\u7edc\u6700\u5927\u6d41</p> <p>Solution</p> <p>\u4e3b\u8981\u6709 EK \u7b97\u6cd5 \u548c Dicnic \u7b97\u6cd5\uff0c\u5176\u4e2d Dinic \u7b97\u6cd5\u6548\u7387\u66f4\u9ad8\u3002</p> <p>EK \u4ee3\u7801\u5b9e\u73b0\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(nm^2)\\)\u3002</p> <pre><code>#define LL long long\n#define N 10010\n#define M 200010\nusing namespace std;\n\nint n,m,S,T;\nstruct edge{LL u,v,c;};\nvector&lt;edge&gt; e;\nvector&lt;int&gt; h[N];\nLL mf[N],pre[N];\n\nvoid add(int a,int b,int c){\n  e.push_back({a,b,c});\n  h[a].push_back(e.size()-1);\n}\nbool bfs(){//\u627e\u589e\u5e7f\u8def\n  memset(mf,0,sizeof mf);\n  queue&lt;int&gt; q;\n  q.push(S); mf[S]=1e9;\n  while(q.size()){\n    int u=q.front(); q.pop();\n    for(int i=0;i&lt;h[u].size();i++){\n      int j=h[u][i];\n      LL v=e[j].v;\n      if(mf[v]==0 &amp;&amp; e[j].c){\n        mf[v]=min(mf[u],e[j].c);\n        pre[v]=j;//\u5b58\u524d\u9a71\u8fb9\n        q.push(v);\n        if(v==T)return true;\n      }\n    }\n  }\n  return false;\n}\nLL EK(){//\u7d2f\u52a0\u53ef\u884c\u6d41\n  LL flow=0;\n  while(bfs()){\n    int v=T;\n    while(v!=S){//\u66f4\u65b0\u6b8b\u7559\u7f51\n      int i=pre[v];\n      e[i].c-=mf[T];\n      e[i^1].c+=mf[T];\n      v=e[i^1].v;\n    }\n    flow+=mf[T];\n  }\n  return flow;\n}\nvoid solve(){\n  int a,b,c;\n  scanf(\"%d%d%d%d\",&amp;n,&amp;m,&amp;S,&amp;T);\n  while(m--){\n    scanf(\"%d%d%d\",&amp;a,&amp;b,&amp;c);\n    add(a,b,c); \n    add(b,a,0);//\u53cd\u5411\u8fb9\n  }\n  printf(\"%lld\\n\",EK());\n  return ;\n}\n</code></pre> <p>Dinic \u4ee3\u7801\u5b9e\u73b0\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(n^2m)\\)\u3002</p> <pre><code>using i64 = long long;\n\nconst int N = 5e5;\nconst int INF = 0x3f3f3f3f;\n\nstruct MF {\n    struct edge {\n        int v, nxt, cap, flow;\n    } e[N];\n\n    int fir[N], cnt = 0;\n\n    int n, S, T;\n    i64 maxflow = 0;\n    int dep[N], cur[N];\n\n    void init() {\n        memset(fir, -1, sizeof fir);\n        memset(dep, 0, sizeof dep);\n        memset(cur, 0, sizeof cur);\n        cnt = 0;\n    }\n\n    void add_edge(int u, int v, int c) {\n        e[cnt] = {v, fir[u], c, 0};\n        fir[u] = cnt++;\n        e[cnt] = {u, fir[v], 0, 0};\n        fir[v] = cnt++;\n    }\n\n    bool bfs() {\n        std::queue&lt;int&gt; q;\n        memset(dep, 0, sizeof(int) * (n + 1));\n\n        dep[S] = 1;\n        q.push(S);\n        while (q.size()) {\n            int u = q.front();\n            q.pop();\n            for (int i = fir[u]; ~i; i = e[i].nxt) {\n                int v = e[i].v;\n                if ((!dep[v]) &amp;&amp; (e[i].cap &gt; e[i].flow)) {\n                    dep[v] = dep[u] + 1;\n                    q.push(v);\n                }\n            }\n        }\n        return dep[T];\n    }\n\n    int dfs(int u, int flow) {\n        if ((u == T) || (!flow)) return flow;\n\n        int ret = 0;\n        for (int&amp; i = cur[u]; ~i; i = e[i].nxt) {\n            int v = e[i].v, d;\n            if ((dep[v] == dep[u] + 1) &amp;&amp;\n                    (d = dfs(v, std::min(flow - ret, e[i].cap - e[i].flow)))) {\n                ret += d;\n                e[i].flow += d;\n                e[i ^ 1].flow -= d;\n                if (ret == flow) return ret;\n            }\n        }\n        return ret;\n    }\n\n    void dinic() {\n        while (bfs()) {\n            memcpy(cur, fir, sizeof(int) * (n + 1));\n            maxflow += dfs(S, INF);\n        }\n    }\n} mf;\n\nvoid solve() {\n    int m, n;\n    std::cin &gt;&gt; n &gt;&gt; m &gt;&gt; mf.S &gt;&gt; mf.T;\n    mf.n = n;\n    mf.init();\n    for (int i = 0; i &lt; m; i++) {\n        int u, v, w;\n        std::cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;\n        mf.add_edge(u, v, w);\n        mf.add_edge(v, u, 0);\n    }\n    mf.dinic();\n    std::cout &lt;&lt; mf.maxflow &lt;&lt; '\\n';    \n}\n</code></pre> <p>isap \u4ee3\u7801\u5b9e\u73b0\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4f18\u4e8e\u4ee5\u4e0a\u4e24\u4e2a\u7b97\u6cd5\u3002</p> <pre><code>using i64 = long long;\n\nconst int N = 5000 + 5;\nusing P = std::pair&lt;int, int&gt;;\n\nint n;\nstruct MF {\n    const int inf = 2147483647;\n    int S, T;\n    int dep[N], gap[N];\n    i64 maxflow;\n    std::vector&lt;P&gt; e[N]; \n    std::vector&lt;int&gt; id[N];\n    std::queue&lt;int&gt; q;\n\n    void add(int u, int v, i64 w) {\n        id[u].push_back(e[v].size());\n        id[v].push_back(e[u].size());\n        e[u].push_back({v, w});\n        e[v].push_back({u, 0});\n    }\n\n    void bfs() {\n        std::memset(dep, -1, sizeof(dep));\n        std::memset(gap, 0, sizeof(gap));\n        gap[0] = 1;\n        dep[T] = 0;\n        q.push(T);\n        while(!q.empty()) {\n            int x = q.front();\n            q.pop();\n            for (int i = 0; i &lt; e[x].size(); i++) {\n                int v = e[x][i].first;\n                if(dep[v] == -1) {                \n                    dep[v] = dep[x] + 1;\n                    gap[dep[v]]++;\n                    q.push(v);\n                }\n            }\n        }\n    }\n\n    i64 dfs(int x, int flow) {\n        if(x == T) {\n            maxflow += flow;\n            return flow;\n        }\n        i64 used = 0;\n        for (int i = 0; i &lt; e[x].size() ; i++ ) {\n            int v = e[x][i].first, w = e[x][i].second;\n            if(w == 0 || dep[v] + 1 != dep[x]) continue;\n            i64 f = dfs(v, std::min(flow - used, (i64)w));\n            if(f) {\n                used += f;\n                e[x][i].second -= f;\n                e[v][id[x][i]].second += f;\n                if(used == flow) return flow;\n            }\n        }\n        gap[dep[x]]--;\n        if(!gap[dep[x]]) dep[S] = n + 1;\n        dep[x]++;\n        gap[dep[x]]++;\n        return used;\n    }\n\n    void isap() {\n        bfs();\n        while(dep[S] &lt; n) {\n            dfs(S, inf);\n        }\n    }\n\n} mf;\n\nvoid solve() {\n    int m;\n    std::cin &gt;&gt; n &gt;&gt; m &gt;&gt; mf.S &gt;&gt; mf.T;\n    for (int i = 0; i &lt; m; i++) {\n        int u, v, w;\n        std::cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;\n        mf.add(u, v, w);\n    }\n    mf.isap();\n    std::cout &lt;&lt; mf.maxflow &lt;&lt; '\\n';    \n}\n</code></pre>"},{"location":"acm/algorithm/graph/topic2/#_4","title":"\u8d39\u7528\u6d41","text":"<p>\u5728\u6700\u5927\u6d41\u7684\u57fa\u7840\u4e0a\uff0c\u6bcf\u6761\u8fb9\u90fd\u6709\u5355\u4f4d\u6d41\u91cf\u7684\u8d39\u7528\u3002\u6211\u4eec\u9700\u8981\u6c42\u51fa\u5728\u6700\u5927\u5316\u6d41\u91cf\u7684\u524d\u63d0\u4e0b\uff0c\u8fd8\u8981\u4f7f\u5f97\u603b\u8d39\u7528\u6700\u5c0f\u3002</p> <p>\u5b9a\u7406\uff1a\u6c42\u5f97\u540c\u6d41\u91cf\u4e2d\u6700\u5c0f\u8d39\u7528\u7684\u6d41\uff0c\u5f53\u4e14\u4ec5\u5f53\u6b8b\u91cf\u7f51\u7edc\u4e2d\u4e0d\u5b58\u5728\u8d1f\u73af\uff08\u8d39\u7528\u548c\u4e3a\u8d1f\u6570\u7684\u73af\uff09\u3002</p> <ul> <li>\u4f8b\u9898</li> </ul> <p>P3381 \u3010\u6a21\u677f\u3011\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41</p> <p>Solution</p> <pre><code>const int N = 5e5;\nconst int INF = 0x3f3f3f3f;\n\nstruct MCMF {\n    int S, T, cnt = 1, Mincost, Maxflow;\n    int head[N], dis[N], book[N], vis[N];\n    std::deque &lt;int&gt; q;\n    struct Edge {\n        int to, w, c, nxt;\n    } e[N &lt;&lt; 1];\n\n    void init() {\n        memset(head, 0, sizeof(head));\n        for (int i = 1; i &lt;= cnt; i++)\n            e[i].to = e[i].w = e[i].c = e[i].nxt = 0;\n        cnt = 1;\n        Mincost = Maxflow = 0;\n    }\n\n    void add(int from, int to, int w, int c) {\n        e[++cnt].nxt = head[from];\n        e[cnt].w = w;\n        e[cnt].c = c;\n        e[cnt].to = to;\n        head[from] = cnt;\n    }\n\n    void ADD(int from, int to, int w, int c) {\n        add(from, to, w, c), add(to, from, 0, -c);\n    }\n\n    void clear() {\n        memset(book, 0, sizeof(book));\n        memset(vis, 0, sizeof(vis));\n        memset(dis, 0x3f, sizeof(dis));\n        dis[S] = 0;\n        q.push_front(S);\n    }\n\n    bool spfa() {\n        clear();\n        while (!q.empty()) {\n            int x = q.front();\n            q.pop_front(), vis[x] = 0;\n            for (int i = head[x]; i; i = e[i].nxt) {\n                int v = e[i].to;\n                if (e[i].w &lt;= 0 || dis[v] &lt;= dis[x] + e[i].c)\n                    continue;\n                dis[v] = dis[x] + e[i].c;\n                if (vis[v]) continue;\n                vis[v] = 1;\n                if (!q.empty() &amp;&amp; dis[q.front()] &gt; dis[v])\n                    q.push_front(v);\n                else\n                    q.push_back(v);\n            }\n        }\n        return dis[T] != INF;\n    }\n\n    int dfs(int x, int Min) {\n        if (x == T) return Min;\n        book[x] = 1;\n        int flow = 0;\n        for (int i = head[x]; i; i = e[i].nxt) {\n            int v = e[i].to, c = e[i].c;\n            if (e[i].w &lt;= 0 || book[v] || dis[v] != dis[x] + c)\n                continue;\n            int tmp = dfs(v, std::min(e[i].w, Min - flow));\n            flow += tmp, e[i].w -= tmp, e[i ^ 1].w += tmp, Mincost += c * tmp;\n            if (flow == Min)\n                break;\n        }\n        return flow;\n    }\n\n    void dinic() {\n        while (spfa())\n            Maxflow += dfs(S, INF);\n    }\n\n} mf;\n</code></pre>"},{"location":"acm/algorithm/graph/topic2/#_5","title":"\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d","text":"<p>\u65b0\u589e\u52a0\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9\u6307\u5411\u5de6\u8fb9\u6240\u6709\u7684\u70b9\uff0c\u518d\u65b0\u589e\u52a0\u4e00\u4e2a\u8d85\u7ea7\u6c47\u70b9\u88ab\u53f3\u8fb9\u6240\u6709\u7684\u70b9\u6307\u5411\u3002\u7136\u540e\u8dd1\u6700\u5927\u6d41\u5373\u53ef\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n\\sqrt{e})\\)\u3002</p> <pre><code>using i64 = long long;\n\nconst int N = 1e6 + 5;\nusing P = std::pair&lt;int, int&gt;;\n\nstruct MF {\n    const int inf = 0x3f3f3f3f;\n    int S, T;\n    int dep[N], gap[N], maxflow;\n    std::vector&lt;P&gt; e[N]; \n    std::vector&lt;int&gt; id[N];\n    std::queue&lt;int&gt; q;\n\n    void add(int u,int v,int w) {\n        id[u].push_back(e[v].size());\n        id[v].push_back(e[u].size());\n        e[u].push_back({v, w});\n        e[v].push_back({u, 0});\n    }\n\n\n    void bfs() {\n        std::memset(dep, 0x3f, sizeof(dep));\n        gap[0] = 1;\n        dep[T] = 0;\n        q.push(T);\n        while(!q.empty()) {\n            int x = q.front();\n            q.pop();\n            for (int i = 0; i &lt; e[x].size(); i++) {\n                int v = e[x][i].first;\n                if(dep[v] == inf) {                \n                    dep[v] = dep[x] + 1;\n                    gap[dep[v]]++;\n                    q.push(v);\n                }\n            }\n        }\n    }\n\n    int dfs(int x, int flow) {\n        if(x == T) {\n            maxflow += flow;\n            return flow;\n        }\n        int used = 0;\n        for ( int i = 0 ; i &lt; e[x].size() ; i++ ) {\n            int v = e[x][i].first, w = e[x][i].second;\n            if(w == 0 || dep[v] + 1 != dep[x])continue;\n            int f = dfs(v, std::min(flow - used, w));\n            if(f) {\n                used += f;\n                e[x][i].second -= f;\n                e[v][id[x][i]].second += f;\n                if(used == flow) return flow;\n            }\n        }\n        gap[dep[x]]--;\n        if(!gap[dep[x]]) dep[S] = T + 1;\n        dep[x]++;\n        gap[dep[x]]++;\n        return used;\n    }\n\n    void isap() {\n        bfs();\n        while(dep[S] &lt;= T) {\n            dfs(S, inf);\n        }\n    }\n\n} mf;\n\nvoid solve() {\n    int n, m, e;\n    std::cin &gt;&gt; n &gt;&gt; m &gt;&gt; e;\n    mf.S = 0, mf.T = n + m + 1;\n    for (int i = 0; i &lt; e; i++) {\n        int u, v;\n        std::cin &gt;&gt; u &gt;&gt; v;\n        mf.add(u, v + n, 1);\n    }\n    for (int i = 1; i &lt;= n; i++) {\n        mf.add(mf.S, i, 1);\n    }\n    for (int i = 1; i &lt;= m; i++) {\n        mf.add(i + n, mf.T, 1);\n    }\n    mf.isap();\n    std::cout &lt;&lt; mf.maxflow &lt;&lt; '\\n';    \n}\n</code></pre>"},{"location":"acm/algorithm/graph/topic2/#_6","title":"\u7f51\u7edc\u6d41\u548c\u4e8c\u5206\u56fe\u7684\u7ecf\u5178\u6a21\u578b","text":""},{"location":"acm/algorithm/graph/topic2/#_7","title":"\u6700\u5c0f\u5272","text":""},{"location":"acm/algorithm/graph/topic2/#_8","title":"\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe","text":""},{"location":"acm/algorithm/graph/topic3/","title":"\u8fdb\u9636\u56fe\u8bba","text":"<p>2-SAT</p>"},{"location":"acm/algorithm/math/topic1/","title":"\u6570\u8bba","text":""},{"location":"acm/algorithm/math/topic1/#_2","title":"\u6574\u9664\u548c\u540c\u4f59","text":""},{"location":"acm/algorithm/math/topic1/#_3","title":"\u9006\u5143","text":"<ul> <li>\u9006\u5143\u552f\u4e00\u6027\u5b9a\u7406</li> </ul> <p>\u9006\u5143\u82e5\u5b58\u5728\uff0c\u5219\u603b\u662f\u662f\u552f\u4e00\u7684\u3002</p> <p>Proof</p> <p>\u5047\u8bbe\u4e0d\u552f\u4e00\uff0c\u540c\u65f6\u6709 \\(x \\ne y\\) \u4e14 \\(ax \\equiv ay \\equiv 1(\\mod m)\\)\uff0c\u90a3\u4e48\u5219\u6709 \\(axy = (ax)y = (ay)x = x = y\\)\uff0c\u77db\u76fe\u3002\u6545\u9006\u5143\u552f\u4e00\u3002</p> <ul> <li>\u9006\u5143\u5b58\u5728\u6027\u5b9a\u7406</li> </ul> <p>\u5728\u6a21 \\(m\\) \u4e0b\uff0c\u5f53\u4e14\u4ec5\u5f53 \\(a \\perp m\\) \u65f6\uff0c\\(a\\) \u6709\u4e58\u6cd5\u9006\u5143\u3002</p> <p>\u63a8\u8bba</p> <p>\u5f53 \\(x \\perp m\\) \u65f6\uff0c\\(ax \\equiv bx(\\mod m) \\Leftrightarrow a \\equiv b(\\mod m)\\)\u3002</p> <ul> <li>\u62d3\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5</li> </ul> <p>\u6c42\u89e3 \\(ax + by = \\text{gcd}(a, b)\\) \u7684\u901a\u89e3\u3002</p> <ol> <li>b = 0 \u65f6\uff0cx = 1, y = 0 \u662f\u4e00\u7ec4\u89e3\u3002</li> <li>\u8bbe \\(a' = b, b' = a \\mod b\\)\u3002\u5047\u8bbe\u5df2\u7ecf\u6c42\u5f97 \\(a'x + b'y = \\text{gcd}(a', b')\\) \u7684\u4e00\u7ec4\u89e3 \\(x_0, y_0\\)\u3002\u4e14\u6211\u4eec\u7531\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u53ef\u77e5 \\(\\text{gcd}(a', b') = \\text{gcd}(a, b)\\)\uff0c\u6240\u4ee5</li> </ol> \\[\\begin{align} \\text{gcd}(a, b) &amp;= bx_0 + (a\\mod b)y_0 \\\\                  &amp;= bx_0 + (a - b\\left \\lfloor a / b \\right \\rfloor)y_0 \\\\                  &amp;= ay_0 + b(x_0 - \\left \\lfloor a / b \\right \\rfloor y_0) \\end{align}\\] <p>\u6545\u6709 \\(x = y_0, y = (x_0 - \\left \\lfloor a / b \\right \\rfloor y_0)\\)\u3002\u4ece\u4e0b\u5411\u4e0a\u4e0d\u65ad\u8fed\u4ee3\uff0c\u6700\u540e\u53ef\u5f97\u4e00\u7ec4\u7279\u89e3 \\(x_0, y_0\\)\uff0c\u901a\u89e3\u5219\u662f \\(x = x_0 + tb, y = y_0 - ta(t \\in \\mathbb{Z})\\)\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(\\log a)\\)\u3002</p> <ul> <li>\u88f4\u8700\u5b9a\u7406</li> </ul> <p>\u4e0d\u5b9a\u65b9\u7a0b \\(ax + by = c\\) \u5f53\u4e14\u4ec5\u5f53 \\(\\text{gcd}(a, b) | c\\) \u65f6\u6709\u89e3\u3002</p> <p>Proof</p> <p>\u7531\u62d3\u5c55\u6b27\u51e0\u91cc\u5f97\u53ef\u4ee5\u5f97\u51fa\u3002</p> <ul> <li>\u8d39\u9a6c\u5c0f\u5b9a\u7406</li> </ul> <p>\u5bf9\u4e8e\u8d28\u6570 \\(p\\)\uff0c\u4efb\u610f\u6b63\u6574\u6570 \\(a\\) \u6ee1\u8db3 \\(a^{p - 1} \\equiv 1(\\mod p)\\)\u3002</p> <p>\u63a8\u8bba</p> <p>\\(a^{p - 2} \\equiv a^{-1}(\\mod p)\\)\uff0c\u5e38\u7528\u4e8e\u8ba1\u7b97\u9006\u5143\u3002</p> <p>Proof</p> <p>\u5148\u53d6\u96c6\u5408 \\(T = \\{1, 2, 3, ..., (p - 1)\\}\\)\uff0c\u8be5\u96c6\u5408\u4e58\u79ef\u4e3a \\((p - 1)!\\)\u3002\u518d\u53d6\u96c6\u5408 \\(T' = \\{a, 2a, 3a, ..., (p - 1)a\\}\\)\uff0c\u82e5\u6ee1\u8db3 \\(a^{p - 1} \\equiv 1\\)\uff0c\u90a3\u4e48\u5219\u6709\u8fd9\u4e2a\u96c6\u5408\u7684\u4e58\u79ef\u4e3a \\(a^{p - 1}(p - 1)! \\equiv (p - 1)!\\)\u3002\u90a3\u4e48\u53ea\u9700\u8bc1\u660e\u8fd9\u4e2a\u96c6\u5408\u5728\u6a21 \\(m\\) \u610f\u4e49\u4e0b\u662f \\(1 \\sim p\\) \u7684\u4e00\u4e2a\u6392\u5217\u5373\u53ef\u3002\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e2a\u5143\u7d20\u90fd\u4e0d\u76f8\u540c\u4e14\u6ca1\u6709\u51fa\u73b0\u8fc7 \\(0\\)\u3002</p> <p>\u8bc1\u660e\u6bcf\u4e2a\u5143\u7d20\u90fd\u4e0d\u76f8\u540c\uff1a\u82e5\u76f8\u540c\uff0c\u8bbe \\(ax = ay\\)\uff0c\u5219\u540c\u65f6\u4e58\u4ee5 \\(a\\) \u7684\u9006\u5143\uff0c\u6709 \\(x = y\\)\uff0c\u77db\u76fe\u3002</p> <p>\u8bc1\u660e\u6ca1\u6709\u51fa\u73b0 \\(0\\)\uff1a\u7531\u4e8e \\(a, k \\perp m\\)\uff0c\u6545\u4e0d\u4f1a\u51fa\u73b0 \\(p \\mid ak\\)\u3002</p> <ul> <li>\u6b27\u62c9\u5b9a\u7406</li> </ul> <p>\u5f53 \\(a \\perp m\\) \u65f6\uff0c\\(a^{\\varphi (m)} \\equiv 1(\\mod m)\\)\u3002</p> <p>Proof</p> <p>\u7c7b\u4f3c\u8d39\u9a6c\u5c0f\u5b9a\u7406\u7684\u8bc1\u660e\uff0c\u5148\u6784\u9020\u4e00\u4e2a\u5b50\u96c6 \\(T\\)\uff0c\u5927\u5c0f\u662f \\(|\\varphi(m)|\\)\uff0c\u5747\u662f \\(m\\) \u4ee5\u5185\u548c \\(m\\) \u4e92\u8d28\u7684\u6570\u7684\u96c6\u5408\u3002\u8bbe\u8fd9\u4e2a\u96c6\u5408\u4e58\u79ef\u4e3a \\(S\\)\u3002</p> <p>\u6211\u4eec\u5c06\u6bcf\u4e2a\u5143\u7d20\u5747\u4e58\u4ee5 \\(a\\) \u6784\u9020\u51fa\u65b0\u96c6\u5408 \\(T'\\)\uff0c\u7c7b\u6bd4\u4e0a\u9762\u7684\u8bc1\u660e\u6211\u4eec\u53ef\u5f97 \\(T = T'\\)\u3002\u90a3\u4e48\u5219\u6709 \\(a^{\\varphi(m)}S \\equiv S\\)\u3002\u7531\u4e8e \\(T\\) \u96c6\u5408\u4e2d\u6bcf\u4e2a\u5143\u7d20\u5747\u548c \\(m\\) \u4e92\u8d28\uff0c\u6240\u4ee5 \\(S\\) \u4e5f\u548c \\(m\\) \u4e92\u8d28\uff0c\u540c\u4e58\u4ee5 \\(S\\) \u5728\u6a21 \\(m\\) \u610f\u4e49\u4e0b\u7684\u9006\u5143\uff0c\u6545 \\(a^{\\varphi (m)} \\equiv 1(\\mod m)\\)\u3002</p> <ul> <li>\u7ebf\u6027\u6c42\u524d\u7f00\u9006\u5143</li> </ul> <p>\u5bf9\u4e8e\u8d28\u6570 \\(p\\)\uff0c\u5b58\u5728 \\(n^{-1} \\equiv -\\left \\lfloor p / n  \\right \\rfloor(p\\mod n)^{-1} (\\mod p)\\)\u3002</p> <p>Proof</p> <p>\u5229\u7528 \\(n \\left \\lfloor p / n \\right \\rfloor + p \\mod n \\equiv 0(\\mod p)\\) \u53ef\u4ee5\u63a8\u51fa\u3002</p> <ul> <li>\u6279\u91cf\u6c42\u9006\u5143</li> </ul> <p>\u5bf9\u4e8e \\(A_{1 \\sim n}\\)\uff0c\\(S = (\\prod_{i = 1}^n A_i)^{-1}\\)\uff0c\u5219\u6709 \\(A_i^{-1} = SL_{i - 1}R_{i + 1}\\)\u3002</p>"},{"location":"acm/algorithm/math/topic1/#_4","title":"\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b\u7ec4","text":"<ul> <li>\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406</li> </ul> \\[ \\begin{cases} x \\equiv c_1(\\mod m_1) \\\\ x \\equiv c_2(\\mod m_2) \\\\ \\ \\ \\ \\ \\vdots \\\\ x \\equiv c_k(\\mod m_k) \\end{cases} \\] <p>\u4e14\u6ee1\u8db3\u6a21\u6570\u4e24\u4e24\u4e92\u8d28\uff0c\u6c42 \\(x\\) \u7684\u6700\u5c0f\u81ea\u7136\u6570\u89e3\u3002</p> <p>\u6211\u4eec\u5148\u770b\u4e24\u4e2a\u65b9\u7a0b\u7ec4\u7684\u60c5\u51b5\uff0c</p> \\[\\begin{eqnarray} \\left\\{\\begin{matrix} x \\equiv c_1(\\mod m_1) \\\\ x \\equiv c_2(\\mod m_2) \\end{matrix}\\right. \\end{eqnarray}\\] <p>\u6c42\u89e3\u51fa\u7b54\u6848\u662f \\(x \\equiv c_1m_2\\text{Inv}_{m_1}(m_2) + c_2m_1\\text{Inv}_{m_2}(m_1)(\\mod m_1m_2)\\)\u3002</p> <p>\u5bf9\u4e8e \\(n\\) \u4e2a\u65b9\u7a0b\u7ec4\uff0c\u4e24\u4e24\u5408\u5e76\u5373\u53ef\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n\\log m)\\)\u3002</p> <ul> <li>\u62d3\u5c55\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406</li> </ul> <p>\u4e0d\u4fdd\u8bc1\u6a21\u6570\u4e24\u4e24\u4e92\u8d28\u3002</p> <p>\u76f8\u5f53\u4e8e\u89e3\u65b9\u7a0b \\(am_1 + bm_2 = c_2 - c_1\\)\uff0c\u5148\u5224\u65ad\u6709\u65e0\u89e3\uff0c\u7136\u540e\u518d\u5229\u7528\u6269\u6b27\u6c42\u89e3\u51fa\u7279\u89e3 \\(x_0\\)\uff0c\u5219\u6ee1\u8db3\u8fd9\u4e24\u4e2a\u65b9\u7a0b\u7684\u901a\u89e3\u662f \\(x_0 + k(\\text{lcm}(m_1, m_2))(k \\in \\mathbb{Z})\\)\uff0c\u65b0\u65b9\u7a0b\u76f8\u5f53\u4e8e\u53d8\u6210\u4e86</p> \\[\\begin{eqnarray} \\left\\{\\begin{matrix} x \\equiv x_0(\\mod \\text{lcm}(m_1, m_2)) \\\\ x \\equiv c_3(\\mod m_3) \\end{matrix}\\right. \\end{eqnarray}\\] <p>\u7136\u540e\u4e0d\u65ad\u4e24\u4e24\u5408\u5e76\u5373\u53ef\u3002\u590d\u6742\u5ea6\u4e0d\u53d8\u3002</p>"},{"location":"acm/algorithm/math/topic1/#_5","title":"\u7ec4\u5408\u6570\u53d6\u6a21","text":"<ul> <li>\u6c42\u9636\u4e58\u9006\u5143\u5c0f\u6280\u5de7</li> </ul> <p>\u5148\u7b97 \\(n!\\) \u9006\u5143\uff0c\u7136\u540e\u4e0d\u65ad\u4ece\u540e\u5f80\u524d\u4e58\uff0c\u4f9d\u6b21\u7b97\u9006\u5143\u3002</p> <ul> <li>\u5362\u5361\u65af\u5b9a\u7406</li> </ul> \\[ \\binom{n}{m} \\equiv \\binom{\\left \\lfloor n/p \\right \\rfloor}{\\left \\lfloor m/p \\right \\rfloor}\\binom{n\\mod p}{m\\mod p}(\\mod p) \\] <p>\u8be5\u516c\u5f0f\u7b49\u4ef7\u4e8e\uff1a\u5c06 \\(n, m\\) \u8868\u793a\u4e3a \\(p\\) \u8fdb\u5236\u6570\uff0c\u6570\u7801\u4e3a \\(\\overline{n_1n_2...n_k}\\) \u548c \\(\\overline{m_1m_2...m_k}\\)\uff0c\u5219\u6709</p> \\[ \\binom{n}{m} = \\prod_{i = 1}^k \\binom{n_i}{m_i}(\\mod p) \\] <p>Proof</p> <p>Lemma. \u5bf9\u4e8e \\(1 \\le i \\le p - 1\\)\uff0c\u603b\u6709 \\(\\binom{p}{i} \\equiv 0(\\mod p)\\)\u3002</p> <p>\u56e0\u4e3a \\(\\binom{p}{i} = \\dfrac{p!}{i!(p - i)!} = \\dfrac{(p - 1)!}{i!(p - i)!} \\times p\\)\uff0c\u8fd9\u4e2a\u591a\u51fa\u6765\u7684 \\(p\\) \u4e0d\u4f1a\u88ab\u5206\u6bcd\u7ea6\u6389\uff0c\u6545\u4e00\u5b9a\u662f \\(p\\) \u7684\u500d\u6570\u3002</p> <p>\u6839\u636e\u4e8c\u9879\u5f0f\u5b9a\u7406 \\([x^m](1 + x)^n = \\binom{n}{m}\\)\uff0c\u6784\u9020 \\((1 + x)^p = 1 + \\binom{p}{1}x + ... + \\binom{p}{p}x^p\\)\u3002\u6545 \\((1 + x)^p \\equiv 1 + x^p(\\mod p)\\)\u3002</p> <p>\u6839\u636e \\((1 + x)^n \\equiv (1 + x)^{p\\left \\lfloor n/p \\right \\rfloor}(1 + x)n \\mod p\\)\uff0c\u5206\u522b\u63d0\u53d6\u7b2c \\(m\\) \u9879\u7684\u7cfb\u6570\uff0c\u5219\u6709</p> \\[\\begin{align} (1 + x)^n &amp;\\equiv (1 + x)^{p\\left \\lfloor n/p \\right \\rfloor}(1 + x)n \\mod p \\\\           &amp;\\equiv (1 + x^p)^{\\left \\lfloor n/p \\right \\rfloor}(1 + x)n \\mod p \\\\ \\binom{n}{m} &amp;\\equiv \\sum_{p \\mid i}^m \\binom{\\left \\lfloor n / p \\right \\rfloor }{i / p}\\binom{n\\mod p}{m - i} (\\mod p) \\\\             &amp;\\equiv \\binom{\\left \\lfloor n / p \\right \\rfloor }{m / p}\\binom{n\\mod p}{m \\mod p} (\\mod p) \\end{align}\\] <p>\u4ece\u5012\u6570\u7b2c\u4e8c\u6b65\u5230\u6700\u540e\u4e00\u6b65\uff0c\u867d\u7136\u5012\u6570\u7b2c\u4e8c\u6b65\u662f\u4e00\u4e2a\u548c\u5f0f\uff0c\u4f46\u5176\u5b9e\u53ea\u6709 \\(i = p\\left \\lfloor n / p \\right \\rfloor\\) \u65f6\u624d\u4e0d\u4e3a \\(0\\)\uff0c\u4e5f\u5c31\u662f\u53ea\u6709\u548c\u5f0f\u5c55\u5f00\u7684\u6700\u540e\u4e00\u9879\u4e0d\u4e3a \\(0\\)\u3002\u6545\u53ef\u4ee5\u5316\u7b80\u4e3a\u6700\u540e\u4e00\u9879\u3002\u5176\u5b9e\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4ece\u5012\u6570\u7b2c\u4e09\u6b65\u5230\u6700\u540e\u4e00\u6b65\uff0c\u4e5f\u5373\u53ea\u6709 \\(m - i \\le n \\mod p\\) \u65f6\u624d\u6709\u610f\u4e49\u3002</p> <ul> <li>\u5e93\u9ed8\u5c14\u5b9a\u7406</li> </ul> <p>\\(\\binom{n + m}{m}\\) \u4e2d\u7d20\u56e0\u5b50 \\(p\\) \u4e2a\u6570\u7b49\u4e8e \\(n, m\\) \u5728 \\(p\\) \u8fdb\u5236\u4e0b\u76f8\u52a0\u7684\u8fdb\u4f4d\u6b21\u6570\u3002</p> <p>Proof</p> <p>\u6211\u4eec\u53d1\u73b0 \\(n!\\) \u4e2d \\(p\\) \u7684\u6b21\u6570\u662f \\(\\sum_{i = 1}\\left \\lfloor n/p^i \\right \\rfloor\\)\uff0c\u6839\u636e \\(\\binom{n + m}{m} = \\dfrac{(n + m)!}{n!m!}\\)\uff0c\u56e0\u5b50 \\(p\\) \u7684\u4e2a\u6570\u662f \\(\\sum_{i = 1}\\left \\lfloor (n + m)/p^i \\right \\rfloor - \\left \\lfloor n/p^i \\right \\rfloor - \\left \\lfloor m/p^i \\right \\rfloor\\)\u3002</p> <p>\u89c2\u5bdf\u53d1\u73b0 \\(\\left \\lfloor n/p^i \\right \\rfloor\\) \u8868\u793a \\(n\\) \u5728 \\(p\\) \u8fdb\u5236\u4e0b\u53bb\u9664\u540e \\(i\\) \u4f4d\u7684\u7ed3\u679c\u3002\u5219\u7b2c \\(i\\) \u4f4d\u8fdb\u4f4d\u7684\u5145\u8981\u6761\u4ef6\u6070\u662f \\(\\left \\lfloor (n + m)/p^i \\right \\rfloor = \\left \\lfloor n/p^i \\right \\rfloor + \\left \\lfloor m/p^i \\right \\rfloor + 1\\)\u3002</p> <ul> <li>\u62d3\u5c55\u5362\u5361\u65af\u5b9a\u7406</li> </ul> <p>\u5f53 \\(p\\) \u4e0d\u4fdd\u8bc1\u662f\u8d28\u6570\u65f6\uff0c\u6c42 \\(\\binom{n}{m}\\mod p\\) \u7684\u503c\u3002</p> <p>\u6211\u4eec\u8003\u8651\u5c06 \\(p\\) \u5206\u89e3\u4e3a \\(\\prod_i p_i^{c_i}\\)\uff0c\u6c42\u51fa\u6a21\u5404\u4e2a\u5e42\u7684\u7ed3\u679c\u5e76\u7528\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u6c42\u89e3\u3002</p> <p>\u5bf9\u4e8e \\(\\binom{n}{m}\\mod p\\) \u5f80\u5f80\u6709 \\(p \\mid n!\\)\uff0c\u6545\u65e0\u6cd5\u76f4\u63a5\u6c42\u9006\u3002</p> <p>\u6211\u4eec\u8bb0 \\(r(n) = n! / p^{v(n)}\\)\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u662f\u8ba1\u7b97 </p> \\[     \\dfrac{r(n)}{r(m)r(n - m)}p^{v(n) - v(m) - v(n - m)} \\] <p>\u6211\u4eec\u4e4b\u524d\u5df2\u7ecf\u80fd\u7b97\u51fa \\(v(n) = \\left \\lfloor n/p^i \\right \\rfloor\\)\uff0c</p>"},{"location":"acm/algorithm/math/topic1/#_6","title":"\u8d28\u56e0\u6570\u5206\u89e3","text":"<ul> <li> <p>Miller-Rabin \u7d20\u6027\u6d4b\u8bd5</p> </li> <li> <p>Pollard's Rho \u8d28\u56e0\u6570\u5206\u89e3\u7b97\u6cd5</p> </li> </ul>"},{"location":"acm/algorithm/math/topic1/#_7","title":"\u79bb\u6563\u5bf9\u6570\u4e0e\u539f\u6839","text":"<p>\u7ed9\u5b9a \\(a, c\\)\uff0c\u6c42\u51fa</p> \\[     a^x \\equiv c (\\mod m) \\] <p>\u88ab\u79f0\u4e3a\u79bb\u6563\u5bf9\u6570\u95ee\u9898\uff0c\u76ee\u524d\u6ca1\u6709\u591a\u9879\u5f0f\u590d\u6742\u5ea6\u89e3\u6cd5\u3002</p> <ul> <li>BSGS \u5927\u6b65\u5c0f\u5e03\u7b97\u6cd5</li> </ul> <p>\u7528\u5206\u5757\u6c42\u89e3\uff0c\u8bbe \\(T = \\left \\lceil \\sqrt{m} \\right \\rceil\\)</p> <ul> <li>\u6269\u5c55 BSGS</li> </ul>"},{"location":"acm/algorithm/math/topic1/#_8","title":"\u4e8c\u6b21\u5269\u4f59","text":""},{"location":"acm/algorithm/math/topic1/#_9","title":"\u6742\u9879","text":"<ul> <li>\u5a01\u5c14\u900a\u5b9a\u7406</li> </ul> <p>\u5f53\u4e14\u4ec5\u5f53 \\(p\\) \u662f\u8d28\u6570\u65f6\uff0c\\((p - 1)! \\equiv -1(\\mod p)\\)\u3002</p> <p>Proof</p> <ul> <li>\u5f53 \\(p = 2\\) \u65f6\u663e\u7136\u6210\u7acb\u3002</li> <li>\u8bbe \\(p \\ge 3\\) \u65f6\uff0c\u6211\u4eec\u53d1\u73b0 \\(1 \\sim p - 1\\) \u4e2d\u7684\u9006\u5143\u5fc5\u5b9a\u4e24\u4e24\u914d\u5bf9\uff0c\u66f4\u8fd1\u4e00\u6b65\uff0c\u53ea\u6709 \\(a \\equiv a^{-1}\\) \u65f6\u6709\u4e9b\u7279\u6b8a\uff0c\u6ee1\u8db3\u8fd9\u4e2a\u7684 \\(a\\) \u53ea\u6709 \\(\\pm 1\\)\uff0c\u4e5f\u5c31\u662f \\(\\{2 \\sim p - 2\\}\\) \u7684\u9006\u5143\u540c\u6837\u4e5f\u662f \\(\\{2 \\sim p - 2\\}\\) \u7684\u4e00\u4e2a\u6392\u5217\uff0c\u90a3\u4e48 \\(\\prod_{i = 2}^{p - 2}i \\equiv 1(\\mod p)\\)\uff0c\u90a3\u4e48\u518d\u4e58\u4e0a \\(1\\) \u548c \\(p - 1\\)\uff0c\u6700\u540e\u6709 \\(\\prod_{i = 1}^{p - 1}i \\equiv -1(\\mod p)\\)\u3002</li> </ul>"},{"location":"acm/algorithm/math/topic1/#_10","title":"\u4e60\u9898","text":""},{"location":"acm/algorithm/math/topic1/#_11","title":"\u53c2\u8003\u8d44\u6599","text":"<p>OI-Note Chapter4.1 \u6574\u9664\u4e0e\u540c\u4f59</p>"},{"location":"acm/algorithm/math/topic2/","title":"\u7ec4\u5408\u6570\u5b66","text":""},{"location":"acm/algorithm/math/topic2/#_2","title":"\u524d\u7f6e\u77e5\u8bc6","text":"<p>\u53d6\u6a21\u6a21\u677f\u3002</p> <pre><code>template&lt;const int T&gt;\nstruct ModInt {\n    const static int mod = T;\n    int x;\n    ModInt(int x = 0) : x(x % mod) {}\n    ModInt(long long x) : x(int(x % mod)) {} \n    int val() { return x; }\n    ModInt operator + (const ModInt &amp;a) const { int x0 = x + a.x; return ModInt(x0 &lt; mod ? x0 : x0 - mod); }\n    ModInt operator - (const ModInt &amp;a) const { int x0 = x - a.x; return ModInt(x0 &lt; 0 ? x0 + mod : x0); }\n    ModInt operator * (const ModInt &amp;a) const { return ModInt(1LL * x * a.x % mod); }\n    ModInt operator / (const ModInt &amp;a) const { return *this * a.inv(); }\n    bool operator == (const ModInt &amp;a) const { return x == a.x; };\n    bool operator != (const ModInt &amp;a) const { return x != a.x; };\n    void operator += (const ModInt &amp;a) { x += a.x; if (x &gt;= mod) x -= mod; }\n    void operator -= (const ModInt &amp;a) { x -= a.x; if (x &lt; 0) x += mod; }\n    void operator *= (const ModInt &amp;a) { x = 1LL * x * a.x % mod; }\n    void operator /= (const ModInt &amp;a) { *this = *this / a; }\n    friend ModInt operator + (int y, const ModInt &amp;a){ int x0 = y + a.x; return ModInt(x0 &lt; mod ? x0 : x0 - mod); }\n    friend ModInt operator - (int y, const ModInt &amp;a){ int x0 = y - a.x; return ModInt(x0 &lt; 0 ? x0 + mod : x0); }\n    friend ModInt operator * (int y, const ModInt &amp;a){ return ModInt(1LL * y * a.x % mod);}\n    friend ModInt operator / (int y, const ModInt &amp;a){ return ModInt(y) / a;}\n    friend std::ostream &amp;operator&lt;&lt;(std::ostream &amp;os, const ModInt &amp;a) { return os &lt;&lt; a.x;}\n    friend std::istream &amp;operator&gt;&gt;(std::istream &amp;is, ModInt &amp;t){return is &gt;&gt; t.x;}\n\n    ModInt pow(int64_t n) const {\n        ModInt res(1), mul(x);\n        while(n){\n            if (n &amp; 1) res *= mul;\n            mul *= mul;\n            n &gt;&gt;= 1;\n        }\n        return res;\n    }\n\n    ModInt inv() const {\n        int a = x, b = mod, u = 1, v = 0;\n        while (b) {\n            int t = a / b;\n            a -= t * b; std::swap(a, b);\n            u -= t * v; std::swap(u, v);\n        }\n        if (u &lt; 0) u += mod;\n        return u;\n    }\n\n};\nusing mint = ModInt&lt;998244353&gt;;\n</code></pre>"},{"location":"acm/algorithm/math/topic2/#_3","title":"\u91cd\u8981\u7ed3\u8bba &amp;&amp; \u6a21\u578b","text":"<ul> <li>\u73b0\u6709 \\(n\\) \u4e2a \u5b8c\u5168\u76f8\u540c \u7684\u5143\u7d20\uff0c\u8981\u6c42\u5c06\u5176\u5206\u4e3a \\(k\\) \u7ec4\uff0c\u4fdd\u8bc1\u6bcf\u7ec4\u81f3\u5c11\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u4e00\u5171\u6709\u591a\u5c11\u79cd\u5206\u6cd5\uff1f</li> </ul> <p>Solution</p> <p>\u7528 \\(k - 1\\) \u4e2a\u677f\u5b50\u6765\u63d2\u677f\uff0c\u7b54\u6848\u5c31\u662f \\(\\dbinom{n - 1}{k - 1}\\)\u3002</p> <ul> <li>\u5982\u679c\u95ee\u9898\u53d8\u5316\u4e00\u4e0b\uff0c\u6bcf\u7ec4\u5141\u8bb8\u4e3a\u7a7a\u5462\uff1f</li> </ul> <p>Solution</p> <p>\u5148\u501f \\(k\\) \u4e2a\u518d\u63d2\u677f\uff0c\u7b54\u6848\u4e3a</p> \\[ \\binom{n + k - 1}{k - 1} = \\binom{n + k - 1}{n} \\] <ul> <li>\u5982\u679c\u518d\u6269\u5c55\u4e00\u6b65\uff0c\u8981\u6c42\u5bf9\u4e8e\u7b2c \\(i\\) \u7ec4\uff0c\u81f3\u5c11\u8981\u5206\u5230 \\(a_i,\\sum a_i \\le n\\) \u4e2a\u5143\u7d20\u5462\uff1f</li> </ul> <p>Solution</p> <p>\u7b2c \\(i\\) \u7ec4\u501f\u6765 \\(a_i\\) \u4e2a\uff0c\u7136\u540e\u95ee\u9898\u4e09\u5c31\u8f6c\u5316\u6210\u4e86\u95ee\u9898\u4e8c\uff0c\u76f4\u63a5\u7528\u63d2\u677f\u6cd5\u516c\u5f0f\u5f97\u5230\u7b54\u6848\u4e3a</p> \\[ \\binom{n - \\sum a_i + k - 1}{n - \\sum a_i} \\] <ul> <li>\u4e0d\u76f8\u90bb\u7684\u6392\u5217</li> </ul> <p>Solution</p> <p>\\(1 \\sim n\\) \u8fd9 \\(n\\) \u4e2a\u81ea\u7136\u6570\u4e2d\u9009 \\(k\\) \u4e2a\uff0c\u8fd9 \\(k\\) \u4e2a\u6570\u4e2d\u4efb\u4f55\u4e24\u4e2a\u6570\u90fd\u4e0d\u76f8\u90bb\u7684\u7ec4\u5408\u6709 \\(\\dbinom {n-k+1}{k}\\) \u79cd\u3002</p>"},{"location":"acm/algorithm/math/topic2/#min-max","title":"Min-Max \u5bb9\u65a5","text":"\\[     \\max (S) = \\sum_{T \\subseteq S} (-1)^{|T| + 1}\\min (T) \\] <p>\u4e14\u8fd9\u4e2a\u5f0f\u5b50\u5728\u671f\u671b\u6761\u4ef6\u4e0b\u4e5f\u6210\u7acb</p> \\[     E(\\max (S)) = \\sum_{T \\subseteq S} (-1)^{|T| + 1}E(\\min (T)) \\] <p>\u62d3\u5c55\u5230\u7b2c \\(k\\) \u5927\u7684\u60c5\u51b5</p> \\[     \\text{k-th} \\max (S) = \\sum_{T \\subseteq S} (-1)^{|T| - k} \\binom{|T| - 1}{k - 1}\\min (T) \\] <p>\u4e14\u540c\u6837\u8fd9\u4e2a\u5f0f\u5b50\u5728\u671f\u671b\u6761\u4ef6\u4e0b\u4e5f\u6210\u7acb</p> \\[     E(\\text{k-th} \\max (S)) = \\sum_{T \\subseteq S} (-1)^{|T| - k} \\binom{|T| - 1}{k - 1}E(\\min (T)) \\]"},{"location":"acm/algorithm/math/topic2/#_4","title":"\u4e60\u9898","text":"<p>CF2025E Card Game</p> <p>Solution</p> <p>\u8ba1\u6570\u597d\u9898\uff0c\u5361\u7279\u5170\u6570\u76f8\u5173\u3002</p> <p>\u6211\u4eec\u9996\u5148\u8981\u660e\u767d\u4e00\u70b9\uff0c\u5bf9\u4e8e \\(1\\) \u53f7\u5361\u7247\uff0c\u73a9\u5bb61 \u7684\u6570\u91cf\u4e0d\u5c11\u4e8e \u73a9\u5bb62 \u7684\u6570\u91cf\u3002\u5bf9\u4e8e\u5176\u4ed6\u79cd\u7c7b\u7684\u5361\u7247\uff0c\u73a9\u5bb61 \u7684\u6570\u91cf\u4e0d\u591a\u4e8e\u73a9\u5bb62 \u7684\u6570\u91cf\u3002</p> <p>\u5148\u4ec5\u8003\u8651 \\(n = 1\\) \u7684\u60c5\u51b5\uff0c\u76f8\u5f53\u4e8e\u4e24\u4eba\u5404\u9009 \\(\\dfrac{n}{2}\\) \u4e2a\u6570\uff0c\u4fdd\u8bc1\u73a9\u5bb62 \u7684\u6bcf\u4e00\u5f20\u724c\u90fd\u6709\u4e00\u5f20\u6bd4\u5b83\u5927\u7684\u724c\u5728\u73a9\u5bb61 \u90a3\u91cc\u4e00\u4e00\u5bf9\u5e94\u3002\u73a9\u5bb61 \u7684\u724c\u76f8\u5f53\u4e8e\u5de6\u62ec\u53f7\uff0c\u73a9\u5bb62\u7684\u724c\u76f8\u5f53\u4e8e\u53f3\u62ec\u53f7\uff0c\u5219\u662f\u770b\u4f5c\u957f\u5ea6\u4e3a \\(n\\) \u7684\u5408\u6cd5\u62ec\u53f7\u79cd\u6570\u3002</p> <p>\u5bf9\u4e8e \\(n &gt; 1\\) \u7684\u60c5\u51b5\uff0c\u73a9\u5bb61 \u53ef\u4ee5\u591a\u62ff\u4e00\u4e9b \\(1\\) \u53f7\u724c\uff0c\u62b5\u6d88\u73a9\u5bb62 \u591a\u51fa\u6765\u7684\u5176\u4ed6\u79cd\u7c7b\u7684\u724c\u3002</p> <p>\u6211\u4eec\u8bbe \\(F_k\\) \u4e3a\u6709 \\(k\\) \u4e2a\u53f3\u62ec\u53f7\u672a\u88ab\u5339\u914d\u7684\u65b9\u6848\u6570\u3002\u7c7b\u6bd4\u4e8e\u5361\u7279\u5170\u6570\u7684\u63a8\u5bfc\u65b9\u5f0f\uff0c\u8fd9\u76f8\u5f53\u4e8e\u8d70\u5230 \\(\\left ( \\dfrac{m - k}{2}, \\dfrac{m + k}{2}\\right )\\) \u4e14\u4e0d\u7a7f\u8fc7\u76f4\u7ebf \\(y = x + k\\) \u7684\u65b9\u6848\u6570\u3002\u7531\u4e8e\u603b\u65b9\u6848\u6570\u662f \\(\\binom{m}{\\frac{m - k}{2}}\\)\uff0c\u4e0d\u5408\u6cd5\u7684\u90e8\u5206\u76f8\u5f53\u4e8e\u6cbf \\(y = x + k + 1\\) \u7ffb\u6298\u6210\u8d70\u5230 \\(\\left(\\dfrac{m - k}{2} - 1, \\dfrac{m + k}{2} + 1\\right)\\) \u7684\u65b9\u6848\u6570\uff0c\u662f \\(\\binom{m}{\\frac{m - k}{2} - 1}\\)\u3002\u6240\u4ee5\u603b\u65b9\u6848\u6570\u662f</p> \\[\\begin{eqnarray} F_k = \\binom{m}{\\frac{m - k}{2}} - \\binom{m}{\\frac{m - k}{2} - 1} \\end{eqnarray}\\] <p>\u6211\u4eec\u63a5\u7740\u518d\u8bbe \\(f_{i, j}\\) \u4e3a\u5230\u7b2c \\(i\\) \u79cd\u5361\u7247\u4e3a\u6b62\uff0c\u8fd8\u6709 \\(j\\) \u5f20 \\(1\\) \u53f7\u5361\u7247\u6ca1\u7528\u7684\u65b9\u6848\u6570\u3002\u8fd9\u4e9b\u591a\u7684\u5361\u7247\u53ef\u4ee5\u548c\u73a9\u5bb62 \u522b\u7684\u79cd\u7c7b\u5361\u7247\u6765\u62b5\u6d88\uff0c\u6545\u6709\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> \\[\\begin{eqnarray} \\begin{cases}  f_{1, j} = F_j &amp; ((m - j)\\mod 2 \\equiv 0) \\\\  f_{i, k} = \\sum f_{i - 1, j} \\times F_{j - k}&amp; ((m + j - k)\\mod 2 \\equiv 0) \\end{cases} \\end{eqnarray}\\] <p>\u7b54\u6848\u662f \\(F_{n, 0}\\)\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(nm^2)\\)\u3002</p>"},{"location":"acm/algorithm/math/topic3/","title":"\u7ebf\u6027\u4ee3\u6570","text":""},{"location":"acm/algorithm/math/topic3/#_2","title":"\u7ebf\u6027\u57fa","text":""},{"location":"acm/algorithm/math/topic3/#_3","title":"\u57fa\u672c\u6982\u5ff5","text":"<p>\u5f20\u6210\uff1a \u8bbe \\(T \\subseteq S\\)\uff0c\u6240\u6709\u8fd9\u6837\u7684\u5b50\u96c6 \\(T\\) \u7684\u5f02\u6216\u548c\u7ec4\u6210\u7684\u96c6\u5408\u79f0\u4e3a\u96c6\u5408 \\(S\\) \u7684\u5f20\u6210\uff0c\u8bb0\u4f5c \\(\\text{span}(S)\\)\u3002\u5373\u5728 \\(S\\) \u4e2d\u9009\u51fa\u4efb\u610f\u591a\u4e2a\u6570\uff0c\u5176\u5f02\u6216\u548c\u7684\u6240\u6709\u53ef\u80fd\u7684\u7ed3\u679c\u7ec4\u6210\u7684\u96c6\u5408\u3002</p> <p>\u7ebf\u6027\u57fa</p> <p>\u6211\u4eec\u79f0\u96c6\u5408 \\(B\\) \u662f\u96c6\u5408 \\(S\\) \u7684\u7ebf\u6027\u57fa\uff0c\u5f53\u4e14\u4ec5\u5f53\uff1a</p> <ol> <li>\\(S \\subseteq \\text{span}(B)\\)\uff0c\u5373 \\(S\\) \u662f \\(B\\) \u7684\u5f20\u6210\u7684\u5b50\u96c6\uff1b</li> <li>\\(B\\) \u662f\u7ebf\u6027\u65e0\u5173\u7684\u3002</li> </ol> <p>\u96c6\u5408 \\(B\\) \u4e2d\u5143\u7d20\u7684\u4e2a\u6570\uff0c\u79f0\u4e3a\u7ebf\u6027\u57fa\u7684\u957f\u5ea6\u3002</p> <p>\u7ebf\u6027\u57fa\u6ee1\u8db3\u6027\u8d28\uff1a</p> <ol> <li>\\(B\\) \u662f\u6781\u5c0f\u7684\u6ee1\u8db3\u7ebf\u6027\u57fa\u6027\u8d28\u7684\u96c6\u5408\uff0c\u5b83\u7684\u4efb\u4f55\u771f\u5b50\u96c6\u90fd\u4e0d\u53ef\u80fd\u662f\u7ebf\u6027\u57fa\u3002</li> <li>\\(S\\) \u4e2d\u7684\u4efb\u610f\u5143\u7d20\u90fd\u53ef\u4ee5\u552f\u4e00\u8868\u793a\u4e3a \\(B\\) \u4e2d\u82e5\u5e72\u4e2a\u5143\u7d20\u5f02\u6216\u8d77\u6765\u7684\u7ed3\u679c\u3002</li> </ol>"},{"location":"acm/algorithm/math/topic3/#_4","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<pre><code>struct LinearBasis {\n    static constexpr int MAXN = 50;\n    i64 a[MAXN + 1];\n    i64 b[MAXN + 1];\n    int tot = 0, zero = 0;\n\n    LinearBasis() {\n        std::fill(a, a + MAXN + 1, 0);\n        std::fill(b, b + MAXN + 1, 0);\n        tot = 0; zero = 0;\n    }\n\n    LinearBasis(std::vector&lt;i64&gt; x) {\n        build(x);\n    }\n\n    void insert(i64 t) {\n        for (int j = MAXN; j &gt;= 0; j--) {\n            if (!(t &amp; (1ll &lt;&lt; j))) continue;\n\n            if (a[j]) t ^= a[j];\n            else {\n                for (int k = 0; k &lt; j; k++) if (t &amp; (1ll &lt;&lt; k)) t ^= a[k];\n                for (int k = j + 1; k &lt;= MAXN; k++) if (a[k] &amp; (1ll &lt;&lt; j)) a[k] ^= t;\n                a[j] = t;\n                return ;\n            }\n        }\n        if (t == 0) zero = 1;\n    }\n\n    // \u6570\u7ec4 x \u8868\u793a\u96c6\u5408 S\uff0c\u4e0b\u6807\u8303\u56f4 [1...n]\n    void build(std::vector&lt;i64&gt; x) {\n        std::fill(a, a + MAXN + 1, 0);\n        std::fill(b, b + MAXN + 1, 0);\n        tot = zero = 0;\n\n        for (auto num: x) {\n            insert(num);\n        }\n\n        tot = 0;\n        for (int i = 0; i &lt;= MAXN; i++) if (a[i]) b[tot++] = a[i];\n    }\n\n    i64 queryMax() {\n        i64 res = 0;\n        for (int i = 0; i &lt;= MAXN; i++) res ^= a[i];\n        return res;\n    }\n\n    i64 queryMin() {\n        for (int i = 0; i &lt;= MAXN; i++) \n            if (a[i]) return a[i];\n    }\n\n    i64 query(i64 k) {\n        k -= zero;\n        if (!k) return 0;\n        if (k &gt;= (1LL &lt;&lt; tot)) return -1;\n        i64 ans = 0;\n        for(int i = tot - 1; i &gt;= 0; i--)\n            if(k &amp; (1LL &lt;&lt; i)) ans ^= b[i];\n        return ans; \n    }\n\n    void mergeFrom(std::vector&lt;i64&gt; b) {\n        for (auto x: b) insert(x);\n    }\n\n    static LinearBasis merge(const LinearBasis &amp;a, const LinearBasis &amp;b) {\n        LinearBasis res = a;\n        for (int i = 0; i &lt;= MAXN; i++) res.insert(b.a[i]);\n        return res;\n    }\n\n};\n</code></pre>"},{"location":"acm/algorithm/math/topic3/#_5","title":"\u4f8b\u9898","text":"<p>P3812 \u3010\u6a21\u677f\u3011\u7ebf\u6027\u57fa</p> <p>\u7ed9\u5b9a \\(n\\) \u4e2a\u6574\u6570\uff08\u6570\u5b57\u53ef\u80fd\u91cd\u590d\uff09\uff0c\u6c42\u5728\u8fd9\u4e9b\u6570\u4e2d\u9009\u53d6\u4efb\u610f\u4e2a\uff0c\u4f7f\u5f97\u4ed6\u4eec\u7684\u5f02\u6216\u548c\u6700\u5927\u3002</p> <p>Solution</p> <p>\u6c42\u51fa\u8fd9 \\(n\\) \u4e2a\u6570\u7684\u5f02\u6216\u7ebf\u6027\u57fa\uff0c\u5f02\u6216\u8d77\u6765\u6c42 \\(\\text{max}\\)\u3002</p> <pre><code>struct LinearBasis {\n    static constexpr int MAXN = 50;\n    i64 a[MAXN + 1];\n    i64 b[MAXN + 1];\n    int tot = 0, zero = 0;\n\n    LinearBasis() {\n        std::fill(a, a + MAXN + 1, 0);\n        std::fill(b, b + MAXN + 1, 0);\n        tot = 0; zero = 0;\n    }\n\n    LinearBasis(std::vector&lt;i64&gt; x) {\n        build(x);\n    }\n\n    void insert(i64 t) {\n        for (int j = MAXN; j &gt;= 0; j--) {\n            if (!(t &amp; (1ll &lt;&lt; j))) continue;\n\n            if (a[j]) t ^= a[j];\n            else {\n                for (int k = 0; k &lt; j; k++) if (t &amp; (1ll &lt;&lt; k)) t ^= a[k];\n                for (int k = j + 1; k &lt;= MAXN; k++) if (a[k] &amp; (1ll &lt;&lt; j)) a[k] ^= t;\n                a[j] = t;\n                return ;\n            }\n        }\n        if (t == 0) zero = 1;\n    }\n\n    // \u6570\u7ec4 x \u8868\u793a\u96c6\u5408 S\uff0c\u4e0b\u6807\u8303\u56f4 [1...n]\n    void build(std::vector&lt;i64&gt; x) {\n        std::fill(a, a + MAXN + 1, 0);\n        std::fill(b, b + MAXN + 1, 0);\n        tot = zero = 0;\n\n        for (auto num: x) {\n            insert(num);\n        }\n\n        tot = 0;\n        for (int i = 0; i &lt;= MAXN; i++) if (a[i]) b[tot++] = a[i];\n    }\n\n    i64 queryMax() {\n        i64 res = 0;\n        for (int i = 0; i &lt;= MAXN; i++) res ^= a[i];\n        return res;\n    }\n\n};\n\nvoid solve() {\n    int n;\n    std::cin &gt;&gt; n; \n    std::vector&lt;i64&gt; num(n);\n    for (auto &amp;x: num) std::cin &gt;&gt; x;\n    LinearBasis lb(num);\n    std::cout &lt;&lt; lb.queryMax() &lt;&lt; '\\n';\n}\n</code></pre> <p>HDU3949 XOR</p> <p>\u7ed9\u5b9a \\(n\\) \u4e2a\u6574\u6570\uff08\u6570\u5b57\u53ef\u80fd\u91cd\u590d\uff09\uff0c\u6c42\u5728\u8fd9\u4e9b\u6570\u4e2d\u9009\u53d6\u4efb\u610f\u4e2a\uff0c\u7b2c \\(k\\) \u5c0f\u7684\u5f02\u6216\u548c\u3002</p> <p>Solution</p> <p>\u6c42\u51fa\u8fd9 \\(n\\) \u4e2a\u6570\u7684\u5f02\u6216\u7ebf\u6027\u57fa\uff0c\u628a\u5176\u4e2d\u4e3a \\(0\\) \u7684\u5220\u53bb\uff0c\u6784\u9020\u51fa\u5168\u90e8\u975e \\(0\\) \u7684\u7ebf\u6027\u57fa\uff0c\u7136\u540e\u628a \\(k\\) \u6309\u4e8c\u8fdb\u5236\u5212\u5206\uff0c\u9009\u7b2c \\(i\\) \u4e2a\u7ebf\u6027\u57fa\u672c\u8d28\u4e0a\u548c \\(k\\) \u4e8c\u8fdb\u5236\u7b2c \\(i\\) \u4f4d\u4e0a\u662f\u5426\u4e3a \\(1\\) \u662f\u7b49\u4ef7\u7684\u3002</p> <p>\u4e00\u4e2a\u6bd4\u8f83\u5927\u7684\u5751\u70b9\u5c31\u662f\u4e00\u5b9a\u8981\u8003\u8651\u7ebf\u6027\u57fa\u80fd\u5426\u5f97\u5230 \\(0\\)\u3002</p> <pre><code>struct LinearBasis {\n    static constexpr int MAXN = 50;\n    i64 a[MAXN + 1];\n    i64 b[MAXN + 1];\n    int tot = 0, zero = 0;\n\n    LinearBasis() {\n        std::fill(a, a + MAXN + 1, 0);\n        std::fill(b, b + MAXN + 1, 0);\n        tot = 0; zero = 0;\n    }\n\n    LinearBasis(std::vector&lt;i64&gt; x) {\n        build(x);\n    }\n\n    void insert(i64 t) {\n        for (int j = MAXN; j &gt;= 0; j--) {\n            if (!(t &amp; (1ll &lt;&lt; j))) continue;\n\n            if (a[j]) t ^= a[j];\n            else {\n                for (int k = 0; k &lt; j; k++) if (t &amp; (1ll &lt;&lt; k)) t ^= a[k];\n                for (int k = j + 1; k &lt;= MAXN; k++) if (a[k] &amp; (1ll &lt;&lt; j)) a[k] ^= t;\n                a[j] = t;\n                return ;\n            }\n        }\n        if (t == 0) zero = 1;\n    }\n\n    // \u6570\u7ec4 x \u8868\u793a\u96c6\u5408 S\uff0c\u4e0b\u6807\u8303\u56f4 [1...n]\n    void build(std::vector&lt;i64&gt; x) {\n        std::fill(a, a + MAXN + 1, 0);\n        std::fill(b, b + MAXN + 1, 0);\n        tot = zero = 0;\n\n        for (auto num: x) {\n            insert(num);\n        }\n\n        tot = 0;\n        for (int i = 0; i &lt;= MAXN; i++) if (a[i]) b[tot++] = a[i];\n    }\n\n    i64 queryMax() {\n        i64 res = 0;\n        for (int i = 0; i &lt;= MAXN; i++) res ^= a[i];\n        return res;\n    }\n\n    i64 queryMin() {\n        for (int i = 0; i &lt;= MAXN; i++) \n            if (a[i]) return a[i];\n    }\n\n    i64 query(i64 k) {\n        k -= zero;\n        if (!k) return 0;\n        if (k &gt;= (1LL &lt;&lt; tot)) return -1;\n        i64 ans = 0;\n        for(int i = tot - 1; i &gt;= 0; i--)\n            if(k &amp; (1LL &lt;&lt; i)) ans ^= b[i];\n        return ans; \n    }\n\n    void mergeFrom(std::vector&lt;i64&gt; b) {\n        for (auto x: b) insert(x);\n    }\n\n    static LinearBasis merge(const LinearBasis &amp;a, const LinearBasis &amp;b) {\n        LinearBasis res = a;\n        for (int i = 0; i &lt;= MAXN; i++) res.insert(b.a[i]);\n        return res;\n    }\n\n};\n\nvoid solve() {\n    int n;\n    std::cin &gt;&gt; n;\n    std::vector&lt;i64&gt; a(n);\n    for (auto &amp;x: a) std::cin &gt;&gt; x;\n    int q;\n    std::cin &gt;&gt; q;\n    LinearBasis lb(a);\n    while (q--) {\n        i64 k;\n        std::cin &gt;&gt; k;\n        std::cout &lt;&lt; lb.query(k) &lt;&lt; '\\n';\n    }\n}\n</code></pre>"},{"location":"acm/algorithm/math/topic3/#_6","title":"\u53c2\u8003\u8d44\u6599","text":"<p>\u7ebf\u6027\u57fa\u5b66\u4e60\u7b14\u8bb0</p>"},{"location":"acm/algorithm/math/topic4/","title":"\u6570\u8bba\u51fd\u6570","text":""},{"location":"acm/algorithm/math/topic4/#_2","title":"\u524d\u7f6e\u77e5\u8bc6","text":"<p>\u6570\u8bba\u51fd\u6570\uff1a\u5b9a\u4e49\u57df\u4e3a\u6b63\u6574\u6570\u7684\u51fd\u6570\u3002\u966a\u57df\uff08\u503c\u57df\u53ef\u53d6\u7684\u8303\u56f4\uff09\u4e00\u822c\u8ba4\u4e3a\u662f\u590d\u6570\uff0c\u5728\u590d\u6742\u7684\u95ee\u9898\u4e2d\u4e5f\u4ee3\u4ee5\u5e42\u7ea7\u6570\u7b49\u3002</p> <p>\u5b8c\u5168\u79ef\u6027\u51fd\u6570\uff1a\u82e5\u6570\u8bba\u51fd\u6570 \\(f\\) \u6ee1\u8db3 \\(f(xy) = f(x)f(y)\\)\uff0c\u5219\u79f0\u4e3a\u5b8c\u5168\u79ef\u6027\u51fd\u6570\u3002</p> <p>\u79ef\u6027\u51fd\u6570\uff1a\u82e5\u6570\u8bba\u51fd\u6570 \\(f\\) \u6ee1\u8db3 \\(x \\perp y \\Rightarrow f(xy) = f(x)f(y)\\)\uff0c\u5219\u79f0\u4e3a\u5b8c\u5168\u79ef\u6027\u51fd\u6570\u3002</p> <p>\u79ef\u6027\u5206\u89e3\uff1a\u5bf9\u4e8e\u79ef\u6027\u51fd\u6570 \\(f\\)\uff0c\u7ed9\u51fa\u8d28\u56e0\u6570\u5206\u89e3 \\(n = p_1^{c_1}...p_m^{c_m}\\)\uff0c\u5219\u6709</p> \\[     f(n) = \\prod_{i = 1}^m f(p_i^{c_i}) \\] <p>\u70b9\u79ef\uff1a\u4e24\u4e2a\u6570\u8bba\u51fd\u6570 \\(f, g\\) \u7684\u70b9\u79ef\u4e3a\u4e00\u4e2a\u65b0\u7684\u6570\u8bba\u51fd\u6570\uff0c\u8bb0\u4f5c \\(f \\cdot g\\)\u3002\u5176\u6ee1\u8db3</p> \\[     (f \\cdot g)(n) = f(n)g(n) \\]"},{"location":"acm/algorithm/math/topic4/#_3","title":"\u72c4\u5229\u514b\u96f7\u5377\u79ef","text":"<p>\u72c4\u5229\u514b\u96f7\u5377\u79ef\uff1a</p> \\[     (f*g)(n) \\sum_{x \\times y = n} f(x)g(y) = \\sum_{d \\mid n}f(d)g(n / d) \\] <p>\u6027\u8d28</p> <ul> <li>\u4ea4\u6362\u5f8b\uff1a\\(f*g = g*f\\)\u3002</li> <li>\u7ed3\u5408\u5f8b\uff1a\\((f*g)*h = f*(g*h)\\)\u3002</li> <li>\u5355\u4f4d\u5143\uff1a\u8bb0 \\(\\epsilon(n) = [n = 1]\\)\uff0c\u5219\u6709\u5bf9\u4e8e\u4efb\u610f\u6570\u8bba\u51fd\u6570 \\(f\\)\uff0c\\(f*\\epsilon = f\\)\u3002</li> <li>\u9006\u5143\uff1a\u5bf9\u4e8e \\(f*g = \\epsilon\\)\uff0c\u5219\u79f0 \\(f, g\\) \u4e92\u4e3a\u9006\u5143\u3002\u79ef\u6027\u51fd\u6570\u603b\u662f\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u9006\u5143\u3002</li> </ul> <p>\u72c4\u5229\u514b\u96f7\u51fd\u6570\u7684\u8ba1\u7b97\uff1a</p> <p>\u5bf9\u4e8e\u7ed9\u5b9a\u7684 \\(f, g\\)\uff0c\u6c42 \\(f * g\\)\uff0c\u53ef\u4ee5\u8f6c\u679a\u4e3e\u56e0\u6570\u4e3a\u679a\u4e3e\u500d\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n\\log n)\\)\u3002</p> <p>\u9006\u5143\u7684\u8ba1\u7b97\uff1a</p> <p>\u7ed9\u51fa \\(f\\) \u4e14\u6ee1\u8db3 \\(f(1) = 1\\)\uff0c\u6c42\u51fa \\(g\\) \u7684\u524d \\(n\\) \u9879\u6709\uff1a</p> \\[\\begin{eqnarray} g(n) &amp; = &amp; \\begin{cases}  1 &amp; \\text{ if } n &amp; = &amp; 1 \\\\  \\sum_{d \\mid n, d \\ne 1}f(d)g(n / d) &amp; \\text{ if } n &amp; &gt; &amp; 1 \\end{cases} \\end{eqnarray}\\] <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n\\log n)\\)\u3002</p> <p>\u79ef\u6027\u51fd\u6570\u76f8\u5173\u5b9a\u7406</p> <ul> <li>\u4e24\u4e2a\u79ef\u6027\u51fd\u6570\u7684\u72c4\u5229\u514b\u96f7\u5377\u79ef\u4ecd\u662f\u79ef\u6027\u51fd\u6570\u3002</li> <li>\u79ef\u6027\u51fd\u6570\u7684\u9006\u4ecd\u662f\u79ef\u6027\u51fd\u6570\u3002</li> <li>\u5bf9\u4e8e\u79ef\u6027\u51fd\u6570 \\(f, g\\)\uff0c\\(f\\circ g,f\\cdot g,f(g(n))\\) \u90fd\u662f\u79ef\u6027\u51fd\u6570\u3002</li> </ul> <p>\u5e38\u7528\u6570\u8bba\u51fd\u6570\uff1a</p> <p>\u5355\u4f4d\u51fd\u6570 \\(\\varepsilon(n) = [n = 1]\\)\uff0c\u8be5\u51fd\u6570\u662f\u72c4\u5229\u514b\u96f7\u5377\u79ef\u4e0b\u7684\u5355\u4f4d\u5143\u3002 \u5e42\u51fd\u6570 \\(\\text{Id}_k(n) = n^k\\)\uff0c \u5f53 \\(k = 1\\) \u65f6\u4e3a\u6052\u7b49\u51fd\u6570\uff0c\u5f53 \\(k = 0\\) \u65f6\u4e3a\u5e38\u6570\u51fd\u6570\u3002 \u9664\u6570\u51fd\u6570 \\(\\sigma_k(n) = \\sum_{d \\mid n} d^k\\) \uff0c\u5f53 \\(k = 1\\) \u65f6\u4e3a\u56e0\u6570\u548c\u51fd\u6570\uff0c\u5f53 \\(k = 0\\) \u65f6\u4e3a\u56e0\u6570\u4e2a\u6570\u51fd\u6570\u3002  \u6b27\u62c9\u51fd\u6570 \\(\\varphi(n)\\) \u5b9a\u4e49\u4e3a\u5c0f\u4e8e \\(n\\) \u7684\u6570\u4e2d\u548c \\(n\\) \u4e92\u8d28\u7684\u4e2a\u6570\uff0c\u7279\u522b\u5730 \\(\\varphi(1) = 1\\)\u3002</p> <p>\u6027\u8d28\uff1a - \\(\\varphi * 1 = \\text{Id}\\) - \\(\\text{Id}_k * 1 = \\sigma_k\\)</p>"},{"location":"acm/algorithm/math/topic4/#_4","title":"\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14","text":"<p>\u5c06 \\(I\\) \u7684\u72c4\u5229\u514b\u96f7\u5377\u79ef\u9006\u5143\u8bb0\u4e3a \\(\\mu\\)\uff0c\u79f0\u4f5c\u83ab\u6bd4\u4e4c\u65af\u51fd\u6570\u3002</p> \\[ \\mu = I^{-1} \\Leftrightarrow \\sum_{d \\mid n}\\mu(d) = [n = 1] \\] <p>\u83ab\u6bd4\u4e4c\u65af\u516c\u5f0f\u7684\u8868\u8fbe\u5f0f\u4e3a</p> \\[ \\mu(x) = \\left\\{\\begin{matrix}  1, &amp; n = 1 \\\\  (-1)^m, &amp; n = p_1p_2...p_m \\\\  0, &amp; \\text{otherwise} \\end{matrix}\\right. \\] <p>\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14\u516c\u5f0f</p> \\[     g(n) = \\sum_{d \\mid n} f(d) \\Leftrightarrow f(n) = \\sum_{d \\mid n} \\mu(d) g\\left (\\dfrac{d}{n}\\right ) \\] <p>\u5229\u7528\u72c4\u5229\u514b\u96f7\u5377\u79ef\u5f62\u5f0f\u6539\u5199\u53ef\u5f97</p> \\[     f * 1 = g \\Leftrightarrow f = g * \\mu \\]"},{"location":"acm/algorithm/math/topic4/#_5","title":"\u4f8b\u9898","text":"<p>\u6c42 \\(1 \\le x \\le n\\)\uff0c\\(1 \\le y \\le m\\) \u4e14 \\(\\text{gcd}(x, y) = 1\\) \u7684\u4e8c\u5143\u7ec4\u6570\u91cf\u3002</p> <p>Solution</p> \\[\\begin{align} \\sum_{i = 1}^n\\sum_{j = 1}^m [\\text{gcd}(x, y) =1] &amp; = \\sum_{i = 1}^n\\sum_{j = 1}^m \\varepsilon(\\text{gcd}(x, y)) \\newline \\end{align}\\] <p>\u53c8\u56e0\u4e3a \\(\\mu * 1 = \\varepsilon\\)\uff0c</p> \\[\\begin{align} \\sum_{i = 1}^n\\sum_{j = 1}^m \\varepsilon(\\text{gcd}(x, y)) &amp; = \\sum_{i = 1}^n\\sum_{j = 1}^m \\sum_{d \\mid \\text{gcd}(i, j)}\\mu(d) \\newline &amp; = \\sum_{d = 1}^{\\min (n, m)} \\sum_{i = 1}^{\\left \\lfloor \\frac{n}{d} \\right \\rfloor }  \\sum_{j = 1}^{\\left \\lfloor \\frac{m}{d} \\right \\rfloor }\\mu(d) \\newline &amp;= \\sum_{d = 1}^{\\min (n, m)} \\left \\lfloor \\frac{n}{d} \\right \\rfloor\\left \\lfloor \\frac{m}{d} \\right \\rfloor \\mu(d) \\end{align}\\] <p>\u6c42 \\(1 \\le x \\le n\\)\uff0c\\(1 \\le y \\le m\\) \u4e14 \\(\\text{gcd}(x, y) = k\\) \u7684\u4e8c\u5143\u7ec4\u6570\u91cf\u3002</p> <p>Solution</p> <p>\u4ee4 \\(i \\to ki\\)\uff0c\\(j \\to kj\\)\uff0c\u6240\u6c42\u5373\u4e3a </p> \\[ \\sum_{i = 1}^{\\left \\lfloor \\frac{n}{k} \\right \\rfloor }\\sum_{j = 1}^{\\left \\lfloor \\frac{m}{k} \\right \\rfloor } [\\text{gcd}(i, j) = 1] \\] <p>\u90a3\u4e48\u5c31\u548c\u4e0a\u4e00\u9053\u4f8b\u9898\u4e00\u6837\u4e86\u3002</p> <p>P2398 GCD SUM</p> <p>\u6c42 \\(\\sum_{i = 1}^n\\sum_{j = 1}^m\\text{gcd}(i, j)\\)\u3002</p> <p>Solution</p> \\[\\begin{align} \\sum_{i = 1}^n\\sum_{j = 1}^m \\text{gcd}(x, y) &amp; = \\sum_{i = 1}^n\\sum_{j = 1}^m \\text{Id}(\\text{gcd}(x, y)) \\newline \\end{align}\\] <p>\u53c8\u56e0\u4e3a \\(\\varphi * 1 = \\text{Id}\\)\uff0c</p> \\[\\begin{align} \\sum_{i = 1}^n\\sum_{j = 1}^m \\text{Id}(\\text{gcd}(x, y)) &amp; = \\sum_{i = 1}^n\\sum_{j = 1}^m \\sum_{d \\mid \\text{gcd}(i, j)}\\varphi(d) \\newline &amp; = \\sum_{d = 1}^{\\min (n, m)} \\sum_{i = 1}^{\\left \\lfloor \\frac{n}{d} \\right \\rfloor }  \\sum_{j = 1}^{\\left \\lfloor \\frac{m}{d} \\right \\rfloor }\\varphi(d) \\newline &amp;= \\sum_{d = 1}^{\\min (n, m)}\\left \\lfloor \\frac{n}{d} \\right \\rfloor\\left \\lfloor \\frac{m}{d} \\right \\rfloor  \\varphi(d) \\end{align}\\]"},{"location":"acm/algorithm/math/topic4/#_6","title":"\u6574\u9664","text":""},{"location":"acm/algorithm/math/topic4/#_7","title":"\u675c\u6559\u7b5b","text":"<p>\u672c\u8d28\u662f\u72c4\u5229\u514b\u96f7\u5377\u79ef\u7684\u81ea\u7136\u63a8\u5bfc\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4ee5 \\(O(n^{\\frac{2}{3}})\\) \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5bf9\u79ef\u6027\u51fd\u6570\u7684\u524d\u7f00\u6c42\u548c\u3002</p> \\[\\begin{align} \\sum_{i = 1}^n (f*g)(i) &amp;= \\sum_{i = 1}^n\\sum_{j = 1}^{\\left \\lfloor \\frac{n}{i} \\right \\rfloor }f(i)g(j)\\newline &amp;= \\sum_{i = 1}^n g(i)\\sum_{j = 1}^{\\left \\lfloor \\frac{n}{i} \\right \\rfloor }f(j)\\newline &amp;= \\sum_{i = 1}^n g(i)S\\left (\\left \\lfloor \\frac{n}{i} \\right \\rfloor\\right )\\newline &amp;= g(1)S(n) + \\sum_{i = 2}^n g(i)S\\left (\\left \\lfloor \\frac{n}{i} \\right \\rfloor\\right )\\newline \\end{align}\\] <p>\u90a3\u4e48\u6211\u4eec\u4fbf\u53ef\u4ee5\u5f97\u5230</p> \\[ g(1)S(n) = \\sum_{i = 1}^n (f*g)(i) - \\sum_{i = 2}^n g(i)S\\left (\\left \\lfloor \\frac{n}{i} \\right \\rfloor\\right ) \\] <p>\u5bf9\u4e8e\u540e\u9762\u7684\u90a3\u5806\u5f0f\u5b50\u53ef\u4ee5\u9012\u5f52\u6c42\u89e3\u3002\u5f53 \\((f*g)(n)\\) \u548c \\(g(n)\\) \u7684\u524d\u7f00\u548c\u5747\u53ef\u4ee5 \\(O(1)\\) \u6c42\u89e3\u51fa\u65f6\u7b97\u6cd5\u590d\u6742\u5ea6\u4e3a \\(O(n^{\\frac{3}{4}})\\)\uff0c\u82e5\u7ebf\u6027\u7b5b\u9884\u5904\u7406 \\(S(n)\\) \u7684\u524d \\(n^{\\frac{2}{3}}\\) \u9879\u7684\u503c\uff0c\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u4f18\u5316\u5230 \\(O(n^{\\frac{2}{3}})\\)\u3002</p> <p>\u8fd9\u91cc\u5206\u522b\u4ee5\u6c42\u83ab\u6bd4\u4e4c\u65af\u51fd\u6570\u548c\u6b27\u62c9\u51fd\u6570\u7684\u524d\u7f00\u548c\u4e3a\u4f8b\u3002</p> <p>\u7531\u4e8e \\(\\mu * 1 = \\varepsilon\\)\uff0c\u4ee4 \\(g = 1\\) \u5219\u6709</p> \\[\\begin{align} g(1)S(n) &amp;= \\sum_{i = 1}^n (f*g)(i) - \\sum_{i = 2}^n g(i)S\\left (\\left \\lfloor \\frac{n}{i} \\right \\rfloor\\right ) \\newline   S(n) &amp;= \\sum_{i = 1}^n\\varepsilon (i) - \\sum_{i = 2}^n S\\left (\\left \\lfloor \\frac{n}{i} \\right \\rfloor\\right ) \\newline  S(n) &amp;= 1 - \\sum_{i = 2}^n S\\left (\\left \\lfloor \\frac{n}{i} \\right \\rfloor\\right ) \\end{align}\\] <p>\u7531\u4e8e \\(\\varphi * 1 = \\text{Id}\\)\uff0c\u4ee4 \\(g = 1\\) \u5219\u6709</p> \\[\\begin{align} g(1)S(n) &amp;= \\sum_{i = 1}^n (f*g)(i) - \\sum_{i = 2}^n g(i)S\\left (\\left \\lfloor \\frac{n}{i} \\right \\rfloor\\right ) \\newline   S(n) &amp;= \\sum_{i = 1}^n\\text{Id} (i) - \\sum_{i = 2}^n S\\left (\\left \\lfloor \\frac{n}{i} \\right \\rfloor\\right ) \\newline  S(n) &amp;= \\dfrac{n(n + 1)}{2} - \\sum_{i = 2}^n S\\left (\\left \\lfloor \\frac{n}{i} \\right \\rfloor\\right ) \\end{align}\\] <p>P4213 \u3010\u6a21\u677f\u3011\u675c\u6559\u7b5b</p> <p>\u5206\u522b\u6c42\u51fa\u83ab\u6bd4\u4e4c\u65af\u51fd\u6570\u548c\u6b27\u62c9\u51fd\u6570\u7684\u524d\u7f00\u548c\u3002</p> <p>Solution</p> <pre><code>bool isnp[N];\nstd::vector&lt;int&gt; primes;\nint mu[N], smu[N];\nstd::unordered_map&lt;i64, int&gt; umsmu;\ni64 phi[N], sphi[N];\nstd::unordered_map&lt;i64, i64&gt; umsphi;\n\nvoid sieve() {\n    mu[1] = 1;\n    phi[1] = 1;\n    for (int i = 2; i &lt; N; i++) {\n        if (!isnp[i])\n            primes.push_back(i), mu[i] = -1, phi[i] = i - 1;\n        for (int p : primes) {\n            if (p * i &gt;= N)\n                break;\n            isnp[p * i] = 1;\n            if (i % p == 0) {\n                mu[p * i] = 0;\n                phi[p * i] = phi[i] * p;\n                break;\n            }\n            else {\n                mu[p * i] = mu[p] * mu[i];\n                phi[p * i] = phi[p] * phi[i];\n            }\n        }\n    }\n    for (int i = 1; i &lt; N; ++i) {\n        sphi[i] = sphi[i - 1] + phi[i]; \n        smu[i] = smu[i - 1] + mu[i];\n    }\n}\n\nint sum_mu(i64 n) {\n    if (n &lt; N)\n        return smu[n];\n    if (umsmu.count(n))\n        return umsmu[n];\n    int ans = 1;\n    for (i64 l = 2, r; l &lt;= n; l = r + 1) {\n        r = n / (n / l);\n        ans -= (r - l + 1) * sum_mu(n / l);\n    }\n    umsmu[n] = ans;\n    return ans;\n}\n\ni64 sum_phi(i64 n) {\n    if (n &lt; N)\n        return sphi[n];\n    if (umsphi.count(n))\n        return umsphi[n];\n    i64 ans = n * (n + 1) / 2; \n    for (i64 l = 2, r; l &lt;= n; l = r + 1) {\n        r = n / (n / l);\n        ans -= (r - l + 1) * sum_phi(n / l);\n    }\n    umsphi[n] = ans;\n    return ans;\n}\n\n\nvoid solve() {\n    i64 n;\n    std::cin &gt;&gt; n;\n    std::cout &lt;&lt; sum_phi(n) &lt;&lt; ' ' &lt;&lt; sum_mu(n)&lt;&lt; '\\n';\n}\n</code></pre>"},{"location":"acm/algorithm/math/topic5/","title":"\u535a\u5f08\u8bba","text":""},{"location":"acm/algorithm/math/topic5/#_2","title":"\u76f8\u5173\u77e5\u8bc6","text":"<p>SG \u51fd\u6570</p> <p>\u5b9a\u4e49 SG \u51fd\u6570\u4e3a \\(\\operatorname{SG}(x)=\\operatorname{mex}\\{\\operatorname{SG}(y_1), \\operatorname{SG}(y_2), \\ldots, \\operatorname{SG}(y_k)\\}\\)\u3002</p> <p>\u800c\u5bf9\u4e8e\u7531 n \u4e2a\u6709\u5411\u56fe\u6e38\u620f\u7ec4\u6210\u7684\u7ec4\u5408\u6e38\u620f\uff0c\u8bbe\u5b83\u4eec\u7684\u8d77\u70b9\u5206\u522b\u4e3a \\(s_1, s_2, \\ldots, s_n\\)\uff0c\u5219\u6709\u5b9a\u7406\uff1a\u5f53\u4e14\u4ec5\u5f53 \\(\\operatorname{SG}(s_1) \\oplus \\operatorname{SG}(s_2) \\oplus \\ldots \\oplus \\operatorname{SG}(s_n) \\neq 0\\) \u65f6\uff0c\u8fd9\u4e2a\u6e38\u620f\u662f\u5148\u624b\u5fc5\u80dc\u7684\u3002\u540c\u65f6\uff0c\u8fd9\u662f\u8fd9\u4e00\u4e2a\u7ec4\u5408\u6e38\u620f\u7684\u6e38\u620f\u72b6\u6001 x \u7684 SG \u503c\u3002</p> <p>\u5df4\u4ec0\u535a\u5955\uff08Bash Game\uff09</p> <p>A \u548c B \u4e00\u5757\u62a5\u6570\uff0c\u6bcf\u4eba\u6bcf\u6b21\u62a5\u6700\u5c11 1 \u4e2a\uff0c\u6700\u591a\u62a5 4 \u4e2a\uff0c\u770b\u8c01\u5148\u62a5\u5230 30\u3002\u8fd9\u662f\u6700\u53e4\u8001\u7684\u5173\u4e8e\u5df4\u4ec0\u535a\u5955\u7684\u6e38\u620f\u4e86\u3002</p> <p>\u90a3\u4e48\u5982\u679c\u6211\u4eec\u8981\u62a5 n \u4e2a\u6570\uff0c\u6bcf\u6b21\u6700\u5c11\u62a5\u4e00\u4e2a\uff0c\u6700\u591a\u62a5 m \u4e2a\uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u8fd9\u4e48\u4e00\u4e2a\u6574\u6570 k \u548c r\uff0c\u4f7f \\(n = k(m + 1) + r\\)\uff0c\u4ee3\u5165\u4e0a\u9762\u7684\u4f8b\u5b50\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053\uff0c\u5982\u679c \\(r = 0\\)\uff0c\u90a3\u4e48\u5148\u624b\u5fc5\u8d25\uff1b\u5426\u5219\uff0c\u5148\u624b\u5fc5\u80dc\u3002</p> <p>\u5a01\u4f50\u592b\u535a\u5f08\uff08Wythoff Game\uff09</p> <p>\u6709\u4e24\u5806\u5404\u82e5\u5e72\u7684\u7269\u54c1\uff0c\u4e24\u4eba\u8f6e\u6d41\u4ece\u5176\u4e2d\u4e00\u5806\u53d6\u81f3\u5c11\u4e00\u4ef6\u7269\u54c1\uff0c\u81f3\u591a\u4e0d\u9650\uff0c\u6216\u4ece\u4e24\u5806\u4e2d\u540c\u65f6\u53d6\u76f8\u540c\u4ef6\u7269\u54c1\uff0c\u89c4\u5b9a\u6700\u540e\u53d6\u5b8c\u8005\u80dc\u5229\u3002</p> <p>\u7ed3\u8bba\uff1a\u82e5\u4e24\u5806\u7269\u54c1\u7684\u521d\u59cb\u503c\u4e3a (x\uff0cy)\uff0c\u4e14 x &lt; y\uff0c\u5219\u53e6 z = y - x\uff1b</p> <p>\u8bb0 <code>w = (int) [((sqrt(5) + 1) / 2) * z]</code>\uff1b</p> <p>\u82e5 <code>w == x</code>\uff0c\u5219\u5148\u624b\u5fc5\u8d25\uff0c\u5426\u5219\u5148\u624b\u5fc5\u80dc\u3002</p> Proof <p>\u6211\u4eec\u89c2\u5bdf\u524d\u51e0\u4e2a\u5fc5\u8d25\u5c40\u9762\uff08\u5947\u5f02\u5c40\u52bf\uff09 <pre><code>0: (0, 0) \n1: (1, 2) \n2: (3, 5) \n3: (4, 7) \n4: (6, 10) \n5: (8, 13) \n</code></pre> \u7b2c \\(i\\) \u4e2a\u5947\u5f02\u5c40\u52bf\u5f62\u5982 \\((x, x + i)\\)\uff0c\u6211\u4eec\u53d1\u73b0\u6bcf\u6b21\u6700\u540e\u4e00\u4e2a\u5947\u5f02\u5c40\u52bf\u7684\u6700\u5c0f\u503c\u4e00\u5b9a\u662f\u524d\u9762\u6240\u6709\u6570\u7684 \\(\\text{mex}\\)\uff0c\u5e76\u4e14\u8fd8\u6709\u76f8\u90bb\u5947\u5f02\u5c40\u52bf\uff0c\u6700\u5c0f\u503c\u53ea\u589e\u52a0 1 \u6216 2\u3002\u53ef\u4ee5\u8fd1\u4f3c\u8868\u793a\u4e3a \\(\\left \\lfloor  na \\right \\rfloor\\)\uff0c\u90a3\u4e48\u7b2c\u4e8c\u4e2a\u503c\u5c31\u662f \\(\\left \\lfloor (a + 1)n \\right \\rfloor\\)\u3002</p> <p>\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u5f15\u7406\uff0cbeatty \u5b9a\u7406\u3002</p> <p>\u5bf9\u4e8e\u4e24\u4e2a\u65e0\u7406\u6570 \\(x, y\\)\uff0c\u82e5\u5176\u6ee1\u8db3 \\(\\dfrac{1}{x} + \\dfrac{1}{y} = 1\\)\uff0c\u4ee4 \\(P = \\{p | p = \\left \\lfloor  nx \\right \\rfloor, n \\in N^+\\}, Q = \\{q | q = \\left \\lfloor  mx \\right \\rfloor, m \\in N^+\\}\\)\u3002 \u90a3\u4e48\u5219\u6709 \\(P \\cap Q = \\emptyset, P \\cup Q = N^+\\)\u3002</p> <p>\u5176\u5b9e\u5c31\u662f\u8bf4\u660e\u4e86\u81ea\u7136\u6570\u80fd\u6309\u67d0\u4e00\u89c4\u5219\u88ab\u6070\u597d\u5212\u5206\u6210 \\(P, Q\\) \u4e24\u4e2a\u96c6\u5408\u3002</p> <p>\u548c\u8fd9\u91cc\u7684\u5947\u5f02\u5c40\u52bf\u6709\u70b9\u50cf\uff0c\u5176\u5b9e\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c\u4e0d\u96be\u53d1\u73b0\u81ea\u7136\u6570\u4e5f\u88ab\u6bcf\u4e2a\u5c40\u52bf\u7b2c\u4e00\uff0c\u4e8c\u4e2a\u6570\u6070\u597d\u5212\u5206\u4e24\u534a\u3002</p> <p>\u6545\u7531 beatty \u5b9a\u7406\uff0c\u6211\u4eec\u6709 \\(\\dfrac{1}{a} + \\dfrac{1}{a + 1} = 1\\)\uff0c\u6c42\u51fa \\(a = \\dfrac{\\sqrt{5} + 1}{2}\\)\u3002\u6545\u5f53 \\(\\left \\lfloor \\dfrac{\\sqrt{5} + 1}{2}\\right \\rfloor \\times (b - a) = a\\) \u65f6\uff0c\u4e3a\u5947\u5f02\u5c40\u52bf\uff0c\u5148\u624b\u5fc5\u8d25\u3002</p> <p>\u5c3c\u59c6\u535a\u5f08\uff08Nimm Game\uff09</p> <p>\u5c3c\u59c6\u535a\u5f08\u6307\u7684\u662f\u8fd9\u6837\u4e00\u4e2a\u535a\u5f08\u6e38\u620f\uff1a\u6709\u4efb\u610f\u5806\u7269\u54c1\uff0c\u6bcf\u5806\u7269\u54c1\u7684\u4e2a\u6570\u662f\u4efb\u610f\u7684\uff0c\u53cc\u65b9\u8f6e\u6d41\u4ece\u4e2d\u53d6\u7269\u54c1\uff0c\u6bcf\u4e00\u6b21\u53ea\u80fd\u4ece\u4e00\u5806\u7269\u54c1\u4e2d\u53d6\u90e8\u5206\u6216\u5168\u90e8\u7269\u54c1\uff0c\u6700\u5c11\u53d6\u4e00\u4ef6\uff0c\u53d6\u5230\u6700\u540e\u4e00\u4ef6\u7269\u54c1\u7684\u4eba\u83b7\u80dc\u3002</p> <p>\u7ed3\u8bba\u5c31\u662f\uff1a\u628a\u6bcf\u5806\u7269\u54c1\u6570\u5168\u90e8\u5f02\u6216\u8d77\u6765\uff0c\u5982\u679c\u5f97\u5230\u7684\u503c\u4e3a 0\uff0c\u90a3\u4e48\u5148\u624b\u5fc5\u8d25\uff0c\u5426\u5219\u5148\u624b\u5fc5\u80dc\u3002</p> <p>\u6590\u6ce2\u90a3\u5951\u535a\u5f08</p> <p>\u6709\u4e00\u5806\u7269\u54c1\uff0c\u4e24\u4eba\u8f6e\u6d41\u53d6\u7269\u54c1\uff0c\u5148\u624b\u6700\u5c11\u53d6\u4e00\u4e2a\uff0c\u81f3\u591a\u65e0\u4e0a\u9650\uff0c\u4f46\u4e0d\u80fd\u628a\u7269\u54c1\u53d6\u5b8c\uff0c\u4e4b\u540e\u6bcf\u6b21\u53d6\u7684\u7269\u54c1\u6570\u4e0d\u80fd\u8d85\u8fc7\u4e0a\u4e00\u6b21\u53d6\u7684\u7269\u54c1\u6570\u7684\u4e8c\u500d\u4e14\u81f3\u5c11\u4e3a\u4e00\u4ef6\uff0c\u53d6\u8d70\u6700\u540e\u4e00\u4ef6\u7269\u54c1\u7684\u4eba\u83b7\u80dc\u3002</p> <p>\u7ed3\u8bba\u662f\uff1a\u5148\u624b\u80dc\u5f53\u4e14\u4ec5\u5f53 n \u4e0d\u662f\u6590\u6ce2\u90a3\u5951\u6570\uff08n \u4e3a\u7269\u54c1\u603b\u6570\uff09\u3002</p>"},{"location":"acm/algorithm/math/topic5/#_3","title":"\u4e60\u9898","text":"<p>P2252 [SHOI2002] \u53d6\u77f3\u5b50\u6e38\u620f|\u3010\u6a21\u677f\u3011\u5a01\u4f50\u592b\u535a\u5f08</p> <p>Solution</p> <p>\u7ed3\u8bba\u548c\u8bc1\u660e\u89c1\u4e0a\u3002</p> <p>\u552f\u4e00\u8981\u6ce8\u610f\u7684\u662f\u8981\u7528 <code>sqrtl</code> \u800c\u4e0d\u662f <code>sqrt</code>\uff0c\u4e0d\u7136\u4f1a\u6709\u7cbe\u5ea6\u95ee\u9898\u3002</p>"},{"location":"acm/algorithm/math/topic5/#_4","title":"\u53c2\u8003\u8d44\u6599","text":"<p>\u535a\u5f08\u8bba\uff08\u5df4\u4ec0\u535a\u5955\uff0c\u5a01\u4f50\u592b\u535a\u5f08\uff0c\u5c3c\u59c6\u535a\u5f08\uff0c\u6590\u6ce2\u90a3\u5951\u535a\u5f08\uff09</p>"},{"location":"acm/algorithm/math/game-theory/topic1/","title":"\u7b97\u6cd5\u7b14\u8bb0 | \u535a\u5f08\u8bba","text":"<p>SG \u51fd\u6570</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u535a\u5f08\u8bba"]},{"location":"acm/algorithm/math/game-theory/topic1/#_1","title":"\u535a\u5f08\u8bba\u7b80\u4ecb","text":"<p>\u6ce8\uff1a\u4e0b\u9762\u8fd9\u6bb5\u6587\u5b57\u6458\u6284\u81ea OI-Wiki</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u535a\u5f08\u8bba"]},{"location":"acm/algorithm/math/game-theory/topic1/#_2","title":"\u516c\u5e73\u7ec4\u5408\u6e38\u620f","text":"<p>\u516c\u5e73\u7ec4\u5408\u6e38\u620f\uff08Impartial Game\uff09\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <ul> <li>\u6e38\u620f\u6709\u4e24\u4e2a\u4eba\u53c2\u4e0e\uff0c\u4e8c\u8005\u8f6e\u6d41\u505a\u51fa\u51b3\u7b56\uff0c\u53cc\u65b9\u5747\u77e5\u9053\u6e38\u620f\u7684\u5b8c\u6574\u4fe1\u606f\uff1b</li> <li>\u4efb\u610f\u4e00\u4e2a\u6e38\u620f\u8005\u5728\u67d0\u4e00\u786e\u5b9a\u72b6\u6001\u53ef\u4ee5\u4f5c\u51fa\u7684\u51b3\u7b56\u96c6\u5408\u53ea\u4e0e\u5f53\u524d\u7684\u72b6\u6001\u6709\u5173\uff0c\u800c\u4e0e\u6e38\u620f\u8005\u65e0\u5173\uff1b</li> <li>\u6e38\u620f\u4e2d\u7684\u540c\u4e00\u4e2a\u72b6\u6001\u4e0d\u53ef\u80fd\u591a\u6b21\u62b5\u8fbe\uff0c\u6e38\u620f\u4ee5\u73a9\u5bb6\u65e0\u6cd5\u884c\u52a8\u4e3a\u7ed3\u675f\uff0c\u4e14\u6e38\u620f\u4e00\u5b9a\u4f1a\u5728\u6709\u9650\u6b65\u540e\u4ee5\u975e\u5e73\u5c40\u7ed3\u675f\u3002</li> </ul>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u535a\u5f08\u8bba"]},{"location":"acm/algorithm/math/game-theory/topic1/#_3","title":"\u975e\u516c\u5e73\u7ec4\u5408\u6e38\u620f","text":"<p>\u975e\u516c\u5e73\u7ec4\u5408\u6e38\u620f\uff08Partizan Game\uff09\u4e0e\u516c\u5e73\u7ec4\u5408\u6e38\u620f\u7684\u533a\u522b\u5728\u4e8e\u5728\u975e\u516c\u5e73\u7ec4\u5408\u6e38\u620f\u4e2d\uff0c\u6e38\u620f\u8005\u5728\u67d0\u4e00\u786e\u5b9a\u72b6\u6001\u53ef\u4ee5\u505a\u51fa\u7684\u51b3\u7b56\u96c6\u5408\u4e0e\u6e38\u620f\u8005\u6709\u5173\u3002\u5927\u90e8\u5206\u7684\u68cb\u7c7b\u6e38\u620f\u90fd \u4e0d\u662f \u516c\u5e73\u7ec4\u5408\u6e38\u620f\uff0c\u5982\u56fd\u9645\u8c61\u68cb\u3001\u4e2d\u56fd\u8c61\u68cb\u3001\u56f4\u68cb\u3001\u4e94\u5b50\u68cb\u7b49\uff08\u56e0\u4e3a\u53cc\u65b9\u90fd\u4e0d\u80fd\u4f7f\u7528\u5bf9\u65b9\u7684\u68cb\u5b50\uff09\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u535a\u5f08\u8bba"]},{"location":"acm/algorithm/math/game-theory/topic1/#_4","title":"\u53cd\u5e38\u6e38\u620f","text":"<p>\u53cd\u5e38\u6e38\u620f\uff08Mis\u00e8re Game\uff09\u6309\u7167\u4f20\u7edf\u7684\u6e38\u620f\u89c4\u5219\u8fdb\u884c\u6e38\u620f\uff0c\u4f46\u662f\u5176\u80dc\u8005\u4e3a\u7b2c\u4e00\u4e2a\u65e0\u6cd5\u884c\u52a8\u7684\u73a9\u5bb6\u3002\u4ee5 Nim \u6e38\u620f\u4e3a\u4f8b\uff0cNim \u6e38\u620f\u4e2d\u53d6\u8d70\u6700\u540e\u4e00\u9897\u77f3\u5b50\u7684\u4e3a\u80dc\u8005\uff0c\u800c\u53cd\u5e38 Nim \u6e38\u620f\u4e2d\u53d6\u8d70\u6700\u540e\u4e00\u523b\u77f3\u5b50\u7684\u4e3a\u8d25\u8005\u3002</p> <p>\u672c\u6587\u4e3b\u8981\u7814\u7a76\u516c\u5e73\u7ec4\u5408\u6e38\u620f\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u535a\u5f08\u8bba"]},{"location":"acm/algorithm/math/game-theory/topic1/#sg","title":"SG \u51fd\u6570","text":"<p>\u6211\u4eec\u901a\u8fc7 Nim \u6e38\u620f\u6765\u4ecb\u7ecd SG \u51fd\u6570\uff0c\u4ec0\u4e48\u662f Nim \u6e38\u620f\u5462\uff1f</p> <p>Nim \u6e38\u620f\u662f\u4e00\u79cd\u4e24\u4e2a\u4eba\u73a9\u7684\u56de\u5408\u5236\u6570\u5b66\u6218\u7565\u6e38\u620f\u3002\u6e38\u620f\u8005\u8f6e\u6d41\u4ece\u51e0\u6392\u68cb\u5b50\uff08\u6216\u8005\u4efb\u4f55\u9053\u5177\uff09\u4e2d\u9009\u62e9\u4e00\u6392\uff0c\u518d\u7531\u8fd9\u4e00\u6392\u4e2d\u53d6\u8d70\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\uff0c\u4f9d\u89c4\u5219\u4e0d\u540c\uff0c\u62ff\u8d70\u6700\u540e\u4e00\u4e2a\u7684\u53ef\u80fd\u662f\u8f93\u5bb6\uff0c\u4e5f\u6709\u53ef\u80fd\u662f\u8d62\u5bb6\u3002\uff08\u8f6c\u81ea \u5c3c\u59c6\u6e38\u620f\uff09</p> <p>\u6211\u4eec\u63a5\u4e0b\u6765\u5b9a\u4e49\u4e00\u79cd\u51fd\u6570 \\(SG(x)\\)\uff0c\u5e76\u4e14\u4ee4 \\(SG(x):=mex\\{SG(y)|x \\to y\\}\\)\uff0c\u8fd9\u91cc \\(x\\)\uff0c\\(y\\) \u5747\u8868\u793a\u67d0\u79cd\u72b6\u6001\uff0c\\(x \\to y\\) \u8868\u793a \\(x\\) \u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21\u64cd\u4f5c\u5230\u8fbe \\(y\\)\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a \\(y\\) \u662f \\(x\\) \u7684\u540e\u7ee7\u72b6\u6001\u3002\\(mex\\) \u8868\u793a\u4e00\u4e2a\u96c6\u5408\u4e2d\u672a\u51fa\u73b0\u7684\u6700\u5c0f\u81ea\u7136\u6570\uff08\u4f8b\u5982 \\(mex\\{0, 1, 3\\} = 2\\) \uff09\u3002\u5982\u679c \\(SG(x) = n\\)\uff0c\u8bf4\u660e\u53ef\u4ee5\u4ece\u5f53\u524d\u72b6\u6001\u8f6c\u79fb\u5230 \\(0\\sim n - 1\\) \u7684\u72b6\u6001\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u72b6\u6001\uff0c\u5982\u679c\u5b83\u662f\u5fc5\u80dc\u6001\uff0c\u90a3\u4e48\u5b83\u79fb\u52a8\u4e00\u6b65\uff0c\u4e0b\u4e00\u6b65\u4e00\u5b9a\u53ef\u4ee5\u53d8\u6210\u5fc5\u8d25\u6001\u3002\u5982\u679c\u4e00\u4e2a\u72b6\u6001\u662f\u5fc5\u8d25\u6001\uff0c\u90a3\u4e48\u5b83\u65e0\u8bba\u600e\u4e48\u79fb\u52a8\uff0c\u5b83\u7684\u4e0b\u4e00\u6b65\u53ea\u80fd\u662f\u5fc5\u80dc\u6001\u3002\u6211\u4eec\u4ee4 \\(SG(x) = 0\\) \u8868\u793a\u5fc5\u8d25\uff0c\\(SG(x) \\ne 0\\) \u8868\u793a\u5fc5\u80dc\u3002\u90a3\u4e48 \\(SG(x) = 0\\) \u65f6\u8bf4\u660e\u4e0b\u4e00\u6b65\u7684\u72b6\u6001 \\(y\\) \u5168\u90fd\u662f \\(SG(y) \\ne 0\\)\uff0c\\(SG(x) \\ne 0\\) \u8bf4\u660e\u4e0b\u4e00\u6b65\u5b58\u5728\u72b6\u6001 \\(y'\\) \u6ee1\u8db3 \\(SG(y') \\ne 0\\)\u3002\u7b26\u5408\u6211\u4eec\u7684\u80dc\u8d25\u72b6\u6001\u3002</p> <p>\u5bf9\u4e8e\u5355\u5806\u7684 Nim \u6e38\u620f\uff0c\u4e0d\u96be\u8bc1\u660e \\(SG(x) = x\\)\uff0c\u4f46\u662f\u5bf9\u4e8e\u53cc\u5806\uff0c\u4e09\u5806\uff0cn \u5806\u60c5\u51b5\u5c31\u5f88\u590d\u6742\u3002\u6240\u4ee5\u6211\u4eec\u5f15\u5165 SG\u5b9a\u7406\u3002</p> <p>Sprague-Grundy\u5b9a\u7406\uff08\u4e24\u4e2a\u6e38\u620f\u7684\u60c5\u5f62\uff09\uff1a</p> <p>\u5bf9\u4e8e\u516c\u5e73\u7ec4\u5408\u6e38\u620f\u7684\u4e24\u4e2a\u72b6\u6001 \\(x\\) \u548c \\(y\\)\uff0c\u6709 \\(SG(x + y) = SG(x) \\oplus SG(y)\\)</p> <p>\u63a8\u5e7f\u7684\u60c5\u5f62\uff1a</p> <p>\u5bf9\u4e8e\u516c\u5e73\u7ec4\u5408\u6e38\u620f\u7684 \\(n\\) \u4e2a\u72b6\u6001 \\(x_1,x_2, \\dots,x_n\\)\uff0c\u6709 \\(SG(x_1 + x_2 + \\cdots + x_n) = SG(x_1) \\oplus SG(x_2) \\oplus \\cdots \\oplus SG(x_n)\\)</p> <p>\u5b9a\u7406\u5177\u4f53\u8bc1\u660e\u89c1\u8fd9\u91cc\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u535a\u5f08\u8bba"]},{"location":"acm/algorithm/math/game-theory/topic1/#_5","title":"\u53c2\u8003\u6587\u732e","text":"<p>\u516c\u5e73\u7ec4\u5408\u6e38\u620f - OI-Wiki</p> <p>\u7b97\u6cd5\u5b66\u4e60\u7b14\u8bb0(51): SG\u51fd\u6570 - Pecco - \u77e5\u4e4e</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u535a\u5f08\u8bba"]},{"location":"acm/algorithm/math/game-theory/images/topic1/","title":"\u7b97\u6cd5\u7b14\u8bb0 | \u6570\u8bba\uff08\u4e00\uff09","text":"<p>\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\uff0c\u9006\u5143\uff0c\u6b27\u62c9\u51fd\u6570</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/game-theory/images/topic1/#1","title":"1. \u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/game-theory/images/topic1/#11","title":"1.1 \u7b97\u6cd5\u4ecb\u7ecd","text":"<p>\u8bbe \\(a, b\\) \u4e3a\u4e0d\u5168\u4e3a \\(0\\) \u7684\u6574\u6570\uff0c\u5b58\u5728\u6574\u6570 \\(x, y\\) \u4f7f\u5f97 \\(ax + by = (a, b)\\)\u3002</p> <p>\u8fdb\u4e00\u6b65\u5730\uff0c\\(ax + by = m\\) \u6709\u89e3\u7684\u5145\u8981\u6761\u4ef6\u662f \\((a, b) | m\\) \uff08\u88f4\u8700\u5b9a\u7406\uff0c\u53c8\u53eb\u505a\u8d1d\u7956\u5b9a\u7406\uff09 \u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/game-theory/images/topic1/#12","title":"1.2 \u8bc1\u660e","text":"<p>\u82e5\u6211\u4eec\u6c42 \\(ax + by = (a, b)\\) \u7684\u89e3\uff0c\u4e0d\u5982\u5148\u6c42 \\(bx + (a \\mod b) y = (b, a \\mod b)\\) \u7684\u89e3\uff0c\u800c\u4e14\u7531\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u53ef\u77e5 \\((a, b) = (b, a \\mod b)\\)\u3002</p> <p>\u7ecf\u8fc7\u53d8\u6362 \\(bx + (a \\mod b)y = bx + (a - b \\times \\left \\lfloor \\dfrac{a}{b} \\right \\rfloor )y = ay + b(x - \\left \\lfloor \\dfrac{a}{b} \\right \\rfloor y)\\)\uff0c\u6240\u4ee5\u5f97\u51fa \\(bx + (a \\mod b) y = (b, a \\mod b)\\) \u7684\u89e3\u4e3a \\(x_0, y_0\\) \u540e\u5c31\u53ef\u4ee5\u5f97\u51fa \\(ax + by = (a, b)\\) \u7684\u89e3\u662f \\(x = y_0, y = (x_0 - \\left \\lfloor \\dfrac{a}{b} \\right \\rfloor y_0)\\) \u800c\u901a\u8fc7\u4e0d\u65ad\u8f97\u8f6c\u76f8\u9664\u6cd5\uff0c\u663e\u7136\u5230\u6700\u540e\u6211\u4eec\u5f97\u5230\u7684\u5f0f\u5b50\u4e3a \\((a, b)x + 0\\times y = (a, b)\\)\uff0c\u5f88\u5bb9\u6613\u53ef\u4ee5\u4ee4 \\(x = 1, y = 0\\) \u4e3a\u8fd9\u91cc\u7684\u4e00\u7ec4\u89e3\uff0c\u7136\u540e\u4e0d\u65ad\u8fed\u4ee3\u56de\u53bb\u6c42\u51fa\u6211\u4eec\u8981\u7684\u89e3\u3002</p> <p>\u5bf9\u4e8e\u8fdb\u4e00\u6b65\u7ed3\u8bba\u7684\u8bc1\u660e\uff0c\u82e5 \\(m\\) \u662f\u8be5\u65b9\u7a0b\u7ec4\u7684\u89e3\uff0c\u7531\u4e8e \\((a, b)\\) \u53ef\u4ee5\u6574\u9664\u5de6\u5f0f\uff0c\u90a3\u4e48 \\((a, b)\\) \u4e5f\u53ef\u4ee5\u6574\u9664\u53f3\u5f0f\uff08\u5145\u5206\u6027\uff09\u3002</p> <p>\u82e5 \\((a, b)|m\\)\uff0c\u90a3\u4e48\u6211\u4eec\u5df2\u77e5 \\(ax + by = (a, b)\\) \u7684\u4e00\u7ec4\u89e3\uff0c\u7b49\u5f0f\u4e24\u8fb9\u540c\u65f6\u4e58\u4ee5 \\(\\dfrac{m}{(a, b)}\\) \u4fbf\u53ef\u4ee5\u5f97\u5230\u539f\u65b9\u7a0b\u7ec4\u7684\u89e3\uff08\u5fc5\u8981\u6027\uff09\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/game-theory/images/topic1/#13","title":"1.3 \u5b9e\u73b0","text":"<pre><code>int exgcd(int a, int b, int &amp;x, int &amp;y) {\n    if (b == 0) {\n        x = 1;\n        y = 0;\n        return a;\n    }\n    int d = exgcd(b, a % b, y, x); \n    y -= (a / b) * x;\n    return d;\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/game-theory/images/topic1/#2","title":"2. \u9006\u5143","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/game-theory/images/topic1/#21","title":"2.1 \u5b9a\u4e49","text":"<p>\u82e5 \\(ab \\equiv 1(\\mod p)\\) \u5219\u79f0 \\(a\\)\uff0c\\(b\\) \u5728 \u6a21 \\(p\\) \u610f\u4e49\u4e0b\u4e92\u4e3a\u9006\u5143\uff0c\u8bb0\u4e3a \\(a = inv(b)\\)\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/game-theory/images/topic1/#22","title":"2.2 \u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u6c42\u9006\u5143","text":"<p>\u7531\u4e0a\u4e00\u8282\u53ef\u77e5\uff0c\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u53ef\u4ee5\u6c42\u51fa \\(ax + by = 1\\) \u7684\u4e00\u7ec4 \\(x, y\\) \u89e3\uff0c\u6545\u6211\u4eec\u8981\u6c42 \\(ax \\equiv 1(mod\\ b)\\) \u5373\u6c42 \\(ax + by = 1\\) \u7684\u4e00\u7ec4\u89e3\uff0c\u800c\u4e14\u8fd9\u91cc\u8981\u6c42\u6709\u89e3\u7684\u6761\u4ef6\u662f \\((a, b) = 1\\)\uff0c\u5229\u7528\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u5f88\u5bb9\u6613\u5f97\u51fa\u3002</p> <pre><code>ll exgcd(ll a, ll b, ll &amp;x, ll &amp;y) {\n    if (b == 0)\n    {\n        x = 1;\n        y = 0;\n        return a;\n    }\n    ll d = exgcd(b, a % b, y, x);\n    y -= (a / b) * x;\n    return d;\n}\nll inv(ll a, ll p) {\n    ll x, y;\n    if (exgcd(a, p, x, y) != 1)\n        return -1;\n    return (x % p + p) % p;\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/game-theory/images/topic1/#23","title":"2.3 \u8d39\u9a6c\u5c0f\u5b9a\u7406\u6c42\u9006\u5143","text":"<p>\u8d39\u9a6c\u5c0f\u5b9a\u7406\u7684\u5185\u5bb9\u5982\u4e0b\uff1a</p> <p>\u82e5 \\(p\\) \u4e3a\u7d20\u6570\uff0c\u4e14 \\((a, p) = 1\\)\uff0c\u5219 \\(a^{p - 1} \\equiv 1(mod \\ p)\\)\u3002</p> <p>\u8bc1\u660e\uff08\u5f85\u5b8c\u5584\uff09</p> <p>\u5229\u7528\u8be5\u5b9a\u7406\uff0c\u4e0d\u96be\u5f97\u51fa \\(inv(a) \\equiv a^{p - 2}(mod \\ p)\\)\uff0c\u6545\u53ef\u4ee5\u7528\u5feb\u901f\u5e42\u6765\u6c42\u89e3\u3002</p> <pre><code>inline ll qpow(ll a, ll b, ll p) {\n    ll ans = 1;\n    while (b) {\n        if (b &amp; 1) ans = ans % p * a % p;\n        a = a % p * a % p;\n        b &gt;&gt;= 1;\n    }\n    return ans;\n}\ninline ll inv(ll a, ll p) {\n    return qpow(a, p - 2, p);\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/game-theory/images/topic1/#24","title":"2.4 \u7ebf\u6027\u9012\u63a8\u6c42\u89e3\u9006\u5143","text":"<p>\u5982\u679c\u9898\u76ee\u8981\u6c42 \\(1 \\sim n\\) \u7684\u9006\u5143\uff0c\u90a3\u4e48\u524d\u4e24\u79cd\u65b9\u6cd5\u90fd\u5f88\u4f4e\u6548\uff0c\u8fd9\u91cc\u5f15\u5165\u7b2c\u4e09\u79cd\uff0c\u7ebf\u6027\u9012\u63a8\u6765\u6c42\u89e3\u3002</p> <p>\u4e0b\u9762\u7528 \\(O(n)\\) \u65b9\u6cd5\u6c42 \\(1 \\sim n\\) \u5173\u4e8e \\(p\\) \u7684\u9006\u5143\u3002</p> <p>\u9996\u5148\u663e\u7136 \\(1^{-1} \\equiv 1(mod \\ p)\\)\u3002</p> <p>\u5bf9\u4e8e\u6570 \\(i\\)\uff0c\u6709 \\(p = ki + j\\)\uff0c\u8fd9\u91cc \\(k = \\left \\lfloor \\dfrac{p}{i} \\right \\rfloor,j = p \\% i\\)\u3002</p> <p>\u90a3\u4e48\u5219\u6709 \\(ki + j \\equiv 0(mod \\ p)\\)\uff0c\u7b49\u5f0f\u4e24\u8fb9\u540c\u65f6\u4e58\u4ee5 \\(i^{-1}j^{-1}\\)\uff0c\u5219\u6709 \\(kj^{-1} + i^{-1} \\equiv 0(mod \\ p)\\)\u3002</p> <p>\u6545 \\(i^{-1} \\equiv -\\left \\lfloor \\dfrac{p}{i} \\right \\rfloor(p \\ mod \\ i)^{-1}(mod \\ p)\\)\uff0c\u800c\u4e14 \\(p \\ mod \\ i\\) \u80af\u5b9a\u5c0f\u4e8e \\(i\\) \uff0c\u6240\u4ee5\u53ef\u4ee5\u7531\u524d\u9012\u63a8\u540e\u3002</p> <p>\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u8fd9\u91cc\u4e3a\u9632\u6b62\u51fa\u73b0\u8d1f\u6570\uff0c\u6240\u4ee5\u5199\u7684\u662f <code>p - p / i</code> \uff0c\u800c\u4e14\u5f53 \\(i | p\\) \u65f6 <code>inv[i]</code> \u5e94\u8be5\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u6211\u4eec\u5f80\u5f80\u7528\u5927\u7d20\u6570 \\(10^9 + 7\\) \u6765\u8868\u793a\u3002</p> <pre><code>inv[1] = 1;\nfor (int i = 2; i &lt;= n; ++i) {\n  inv[i] = (long long)(p - p / i) * inv[p % i] % p;\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/game-theory/images/topic1/#25-n","title":"2.5 \u6c42\u4efb\u610f n \u4e2a\u6570\u7684\u9006\u5143","text":"<p>\u5bf9\u4e8e\u6c42\u4efb\u610f \\(n\\) \u4e2a\u6570 \\(a_i\\)\uff0c\u6211\u4eec\u7b97\u8fd9\u4e2a \\(n\\) \u4e2a\u6570\u7684\u524d\u7f00\u79ef\uff0c\u8bb0\u4e3a \\(s_i\\)\u3002</p> <p>\u7136\u540e\u6211\u4eec\u8ba1\u7b97 \\(s_n\\) \u7684\u9006\u5143\u4e3a \\(sInv_n\\)\uff0c\u90a3\u4e48 \\(s_i\\) \u7684\u9006\u5143\u4e3a \\(sInv_i =sInv_{i + 1} \\times a_{i + 1}\\)\u3002</p> <p>\u7136\u540e\u6613\u5f97 \\(a_i\\) \u7684\u9006\u5143 \\(Inv_i = sInv_i \\times s_{i - 1}\\)\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u8fd1\u4f3c \\(O(n)\\)\u3002 </p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/game-theory/images/topic1/#3","title":"3. \u6b27\u62c9\u51fd\u6570","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/game-theory/images/topic1/#4","title":"4. \u4e2d\u56fd\u5269\u4f59\u5b9a\u7406","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/game-theory/images/topic1/#41","title":"4.1 \u95ee\u9898\u7b80\u8ff0","text":"<p>\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u662f\u7528\u6765\u6c42\u89e3\u8bf8\u5982 $$ \\begin{cases} x \\equiv a_1(\\mod n_1) \\ x \\equiv a_2(\\mod n_2) \\     \\vdots \\ x \\equiv a_k(\\mod n_k) \\end{cases} $$ \u8fd9\u6837\u7684\u65b9\u7a0b\u7ec4\u95ee\u9898\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/game-theory/images/topic1/#42","title":"4.2 \u8fc7\u7a0b","text":"<ol> <li>\u7b97\u6240\u6709\u6a21\u6570\u7684\u79ef \\(n\\)\uff1b</li> <li>\u5bf9\u4e8e\u7b2c \\(i\\) \u4e2a\u65b9\u7a0b\uff1a<ul> <li>\u8ba1\u7b97 \\(m_i = \\dfrac{n}{n_i}\\)\uff1b</li> <li>\u8ba1\u7b97 \\(m_i\\) \u5728\u6a21 \\(n_i\\) \u610f\u4e49\u4e0b\u7684\u9006\u5143 \\(m_i^{-1}\\)\uff1b</li> <li>\u8ba1\u7b97 \\(c_i = m_im_i^{-1}\\)\uff08\u8fd9\u65f6\u4e0d\u8981\u5bf9 \\(n_i\\) \u53d6\u6a21\uff09</li> </ul> </li> <li>\u65b9\u7a0b\u7ec4\u5728\u6a21 \\(n\\) \u610f\u4e49\u4e0b\u7684\u552f\u4e00\u89e3\u4e3a \\(x = \\sum_{i = 1}^k a_ic_i(\\mod n)\\)</li> </ol>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/game-theory/images/topic1/#43","title":"4.3 \u5b9e\u73b0","text":"<pre><code>void CRT() {\n  ll n, M = 1, ans = 0;\n  cin &gt;&gt; n; \n  for(int i = 1; i &lt;= n; i++) {\n    cin &gt;&gt; b[i] &gt;&gt; a[i];\n    M *= b[i];\n  }\n  for(int i = 1; i &lt;= n; i++) {\n    ll m = M / b[i];\n    ll x, y;\n    exgcd(m, b[i], x, y); // \u6ce8\uff1a\u5982\u679c\u6a21\u6570\u4e0d\u4e3a\u8d28\u6570\u65f6\uff0c\u6c42\u9006\u5143\u4e0d\u80fd\u7528\u8d39\u9a6c\u5c0f\u5b9a\u7406\u6765\u7b97\uff0c\u53ea\u80fd\u7528\u6269\u6b27\u6765\u7b97\n    x = (x + b[i]) % b[i]; x %= M;\n    m *= x; m %= M;\n    ans += a[i] * m % M;\n    ans %= M;\n  }\n  cout &lt;&lt; (ans % M + M) % M &lt;&lt; endl;\n  return ;\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/game-theory/images/topic1/#44","title":"4.4 \u6269\u5c55\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406","text":"<p>\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u7684\u9002\u7528\u8303\u56f4\u662f\u6a21\u6570\u4e92\u8d28\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5f53\u65b9\u7a0b\u6a21\u6570\u4e0d\u4e92\u8d28\u65f6\u6211\u4eec\u8981\u7528\u5230\u6269\u5c55\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u3002</p> <p>\u601d\u8def\u662f\u4e0d\u65ad\u628a \\(n\\) \u4e2a\u65b9\u7a0b\u4e24\u4e24\u5408\u5e76\uff0c\u5bf9\u4e8e $$ \\begin{cases} x \\equiv b(\\mod a) \\ x \\equiv B(\\mod A)  \\end{cases} $$ \u6211\u4eec\u4ee4 \\(x = ya + b = YB + A\\) \uff0c\u90a3\u4e48\u6709 \\(B - b = ya - YA\\)\uff0c\u6211\u4eec\u5229\u7528\u6269\u6b27\u53ef\u4ee5\u6c42\u89e3\u51fa \\(x'a + y'A = (a,A)\\) \u7684\u4e00\u7ec4\u89e3\uff0c\u90a3\u4e48\u82e5 \\((a, A) \\nmid B-b\\) \u5219\u65b9\u7a0b\u65e0\u89e3\uff0c\u5bf9\u4e8e\u6709\u89e3\u7684\u60c5\u51b5 \\((x' \\times \\dfrac{B - b}{(a, A)})a + (y' \\times \\dfrac{B - b}{(a, A)})A = B - b\\)\uff0c\u4ee4 \\(X = x' \\times \\dfrac{B - b}{(a, A)}, Y = y' \\times \\dfrac{B - b}{(a, A)}\\) \u82e5\u662f\u8ba9\u89e3\u6700\u5c0f\u5373\u662f\u8ba9 \\(X\\) \u6700\u5c0f\uff0c\u6211\u4eec\u8c03\u6574 \\(X\\) \u53ef\u4ee5\u901a\u8fc7\u8ba9 \\(X + k \\times \\dfrac{A}{(a, A)}\\)\uff0c\u8fd9\u65f6 \\(Y\\) \u76f8\u5e94\u51cf\u53bb\u540c\u7b49\u7cfb\u6570\u7684 \\(\\dfrac{a}{(a, A)}\\)\u3002\u6240\u4ee5 \\(X = (X \\mod \\dfrac{A}{(a, A)} + \\dfrac{A}{(a, A)}) \\mod \\dfrac{A}{(a, A)}\\)\u3002\u6c42\u51fa\u65b0\u7684 \\(X\\) \u540e\u518d\u6839\u636e \\(x = yX + a\\) \u53ef\u4ee5\u6c42\u51fa\u65b0\u7684 \\(x\\)\uff0c\u65b0\u7684 \\(b = x \\mod \\dfrac{A \\times a}{(a, A)}\\)\uff0c\u65b0\u7684 \\(a = \\dfrac{A \\times a}{(a, A)}\\)\u3002\u90a3\u4e48\u5c31\u53ef\u4ee5\u5f97\u51fa\u65b0\u7684\u65b9\u7a0b \\(x \\equiv b(\\mod a)\\) \u4e86\u3002\u6700\u540e\u901a\u8fc7\u4e0d\u65ad\u5408\u5e76\u53d8\u4e3a\u4e00\u4e2a\u65b9\u7a0b\u5c31\u80fd\u6c42\u51fa\u7b54\u6848\u4e86\u3002  </p> <pre><code>void ExCRT() {\n  scanf(\"%d\", &amp;n);\n  for(int i = 1; i &lt;= n; i++) {\n    scanf(\"%lld%lld\", &amp;A, &amp;B);\n    if(i == 1) {\n      a = A;\n      b = B;\n    }\n    else {\n      g = exgcd(a, A, x, y);\n      if((B - b) % g) {\n        printf(\"-1\");\n        return ;\n      }\n      x = x * ((B - b) / g);\n      x = (x % (A / g) + (A / g)) % (A / g);\n      l = A / g * a;\n      b = ((a * x + b) % l + l) % l;\n      a = l;\n    }\n  }\n  printf(\"%lld\\n\", b % a);\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/game-theory/images/topic1/#5","title":"5. \u5362\u5361\u65af\u5b9a\u7406","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/game-theory/images/topic1/#51","title":"5.1 \u5b9a\u4e49","text":"<p>\u5bf9\u4e8e\u8d28\u6570 \\(p\\)\uff0c\u6709 $$ \\begin{pmatrix} n \\ m \\end{pmatrix} \\mod p = \\begin{pmatrix} \\left \\lfloor \\dfrac{n}{p} \\right \\rfloor \\ \\left \\lfloor \\dfrac{m}{p}\\right \\rfloor \\end{pmatrix} \\cdot \\begin{pmatrix} n \\mod p \\m \\mod p \\end{pmatrix} \\mod p $$ \u7531\u4e8e\\(n \\mod p\\) \u548c \\(m \\mod p\\) \u80af\u5b9a\u5c0f\u4e8e \\(p\\)\uff0c\u6240\u4ee5\u76f4\u63a5\u7b97\u5373\u53ef\uff0c\u5bf9 \\(\\left \\lfloor \\dfrac{n}{p} \\right \\rfloor\\) \u90e8\u5206\u518d\u7528\u5362\u5361\u65af\u5b9a\u7406\u8ba1\u7b97\u3002</p> <p>\u4e5f\u5373 \\(Lucas(n,m,p)=c(n\\%p,m\\%p)\u00d7Lucas(\\dfrac{n}{p},\\dfrac{m}{p},p)\\)\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/game-theory/images/topic1/#52","title":"5.2 \u8bc1\u660e","text":"<p>\u9996\u5148\u8bc1\u660e\u9996\u5148\u6211\u4eec\u9700\u8981\u8bc1\u660e \\(C_p^i \\equiv \\dfrac{p}{i}C_{p - 1}^{i - 1} \\equiv 0(\\mod p)(1 \\le i \\le p-1)\\) \u7531\u4e8e \\(p\\) \u4e3a\u8d28\u6570\uff0c\u6545 \\(\\dfrac{1}{i}C_{p - 1}^{i - 1}\\) \u4e3a\u6574\u6570\uff0c\u4e58\u4ee5 \\(p\\) \u540e\u548c \\(p\\) \u540c\u4f59\u4e3a \\(0\\)\uff0c\u6545\u5f97\u8bc1\u3002</p> <p>\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\u6709 \\((1 + x)^p \\equiv 1 + x^p(\\mod p)\\)</p> <p>\u5bf9\u4e8e \\(C_m^n \\mod p\\)\uff0c\u5176\u5b9e\u5c31\u662f\u6c42 \\((1 + x^n)\\mod p\\) \u4e2d \\(x^m\\) \u7684\u7cfb\u6570\u3002</p> <p>\u6211\u4eec\u4ee4 \\(n = ap +b\\)\uff0c\\(m = cp + d\\)\u3002\u6240\u4ee5\u63a5\u4e0b\u6765\u8bc1 \\(C_n^m \\equiv C_a^c \\times C_b^d(\\mod p)\\)\u3002</p> <p>\u6211\u4eec\u6709 $$ (1 + x)^n \\equiv (1 + x)^{pa}(1 + x)^b \\equiv (1 + x<sup>p)</sup>a(1 + x)^b(\\mod p) $$ \u89c2\u5bdf \\(x^m\\) \u7684\u7cfb\u6570\uff0c\u6545 \\(C_n^m x^m \\equiv C_a^c x^{cp}C_b^dx^d(\\mod p)\\)\uff0c\u7531\u4e8e \\(x^b\\) \u7cfb\u6570\u4e00\u81f4\uff0c\u6240\u4ee5  $$ C_n^m \\equiv C_a^c \\times C_b^d \\equiv C_{\\left \\lfloor \\frac{n}{p} \\right \\rfloor}^{\\left \\lfloor \\frac{m}{p} \\right \\rfloor} \\times C_{n \\mod p}^{m \\mod p}(\\mod p) $$ \u6545\u5f97\u8bc1\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/game-theory/images/topic1/#53","title":"5.3 \u5b9e\u73b0","text":"<pre><code>ll Lucas(ll n, ll m) {\n  return ((m == 0) ? 1 : (c(n % p, m % p) % p * Lucas(n / p, m / p) % p));\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/game-theory/images/topic1/#54","title":"5.4 \u6269\u5c55\u5362\u5361\u65af\u5b9a\u7406","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/number-theory/topic1/","title":"\u7b97\u6cd5\u7b14\u8bb0 | \u6570\u8bba\uff08\u4e00\uff09","text":"<p>\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\uff0c\u9006\u5143\uff0c\u6b27\u62c9\u51fd\u6570</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/number-theory/topic1/#1","title":"1. \u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/number-theory/topic1/#11","title":"1.1 \u7b97\u6cd5\u4ecb\u7ecd","text":"<p>\u8bbe \\(a, b\\) \u4e3a\u4e0d\u5168\u4e3a \\(0\\) \u7684\u6574\u6570\uff0c\u5b58\u5728\u6574\u6570 \\(x, y\\) \u4f7f\u5f97 \\(ax + by = (a, b)\\)\u3002</p> <p>\u8fdb\u4e00\u6b65\u5730\uff0c\\(ax + by = m\\) \u6709\u89e3\u7684\u5145\u8981\u6761\u4ef6\u662f \\((a, b) | m\\) \uff08\u88f4\u8700\u5b9a\u7406\uff0c\u53c8\u53eb\u505a\u8d1d\u7956\u5b9a\u7406\uff09 \u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/number-theory/topic1/#12","title":"1.2 \u8bc1\u660e","text":"<p>\u82e5\u6211\u4eec\u6c42 \\(ax + by = (a, b)\\) \u7684\u89e3\uff0c\u4e0d\u5982\u5148\u6c42 \\(bx + (a \\mod b) y = (b, a \\mod b)\\) \u7684\u89e3\uff0c\u800c\u4e14\u7531\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u53ef\u77e5 \\((a, b) = (b, a \\mod b)\\)\u3002</p> <p>\u7ecf\u8fc7\u53d8\u6362 \\(bx + (a \\mod b)y = bx + (a - b \\times \\left \\lfloor \\dfrac{a}{b} \\right \\rfloor )y = ay + b(x - \\left \\lfloor \\dfrac{a}{b} \\right \\rfloor y)\\)\uff0c\u6240\u4ee5\u5f97\u51fa \\(bx + (a \\mod b) y = (b, a \\mod b)\\) \u7684\u89e3\u4e3a \\(x_0, y_0\\) \u540e\u5c31\u53ef\u4ee5\u5f97\u51fa \\(ax + by = (a, b)\\) \u7684\u89e3\u662f \\(x = y_0, y = (x_0 - \\left \\lfloor \\dfrac{a}{b} \\right \\rfloor y_0)\\) \u800c\u901a\u8fc7\u4e0d\u65ad\u8f97\u8f6c\u76f8\u9664\u6cd5\uff0c\u663e\u7136\u5230\u6700\u540e\u6211\u4eec\u5f97\u5230\u7684\u5f0f\u5b50\u4e3a \\((a, b)x + 0\\times y = (a, b)\\)\uff0c\u5f88\u5bb9\u6613\u53ef\u4ee5\u4ee4 \\(x = 1, y = 0\\) \u4e3a\u8fd9\u91cc\u7684\u4e00\u7ec4\u89e3\uff0c\u7136\u540e\u4e0d\u65ad\u8fed\u4ee3\u56de\u53bb\u6c42\u51fa\u6211\u4eec\u8981\u7684\u89e3\u3002</p> <p>\u5bf9\u4e8e\u8fdb\u4e00\u6b65\u7ed3\u8bba\u7684\u8bc1\u660e\uff0c\u82e5 \\(m\\) \u662f\u8be5\u65b9\u7a0b\u7ec4\u7684\u89e3\uff0c\u7531\u4e8e \\((a, b)\\) \u53ef\u4ee5\u6574\u9664\u5de6\u5f0f\uff0c\u90a3\u4e48 \\((a, b)\\) \u4e5f\u53ef\u4ee5\u6574\u9664\u53f3\u5f0f\uff08\u5145\u5206\u6027\uff09\u3002</p> <p>\u82e5 \\((a, b)|m\\)\uff0c\u90a3\u4e48\u6211\u4eec\u5df2\u77e5 \\(ax + by = (a, b)\\) \u7684\u4e00\u7ec4\u89e3\uff0c\u7b49\u5f0f\u4e24\u8fb9\u540c\u65f6\u4e58\u4ee5 \\(\\dfrac{m}{(a, b)}\\) \u4fbf\u53ef\u4ee5\u5f97\u5230\u539f\u65b9\u7a0b\u7ec4\u7684\u89e3\uff08\u5fc5\u8981\u6027\uff09\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/number-theory/topic1/#13","title":"1.3 \u5b9e\u73b0","text":"<pre><code>int exgcd(int a, int b, int &amp;x, int &amp;y) {\n    if (b == 0) {\n        x = 1;\n        y = 0;\n        return a;\n    }\n    int d = exgcd(b, a % b, y, x); \n    y -= (a / b) * x;\n    return d;\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/number-theory/topic1/#2","title":"2. \u9006\u5143","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/number-theory/topic1/#21","title":"2.1 \u5b9a\u4e49","text":"<p>\u82e5 \\(ab \\equiv 1(\\mod p)\\) \u5219\u79f0 \\(a\\)\uff0c\\(b\\) \u5728 \u6a21 \\(p\\) \u610f\u4e49\u4e0b\u4e92\u4e3a\u9006\u5143\uff0c\u8bb0\u4e3a \\(a = inv(b)\\)\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/number-theory/topic1/#22","title":"2.2 \u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u6c42\u9006\u5143","text":"<p>\u7531\u4e0a\u4e00\u8282\u53ef\u77e5\uff0c\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u53ef\u4ee5\u6c42\u51fa \\(ax + by = 1\\) \u7684\u4e00\u7ec4 \\(x, y\\) \u89e3\uff0c\u6545\u6211\u4eec\u8981\u6c42 \\(ax \\equiv 1(mod\\ b)\\) \u5373\u6c42 \\(ax + by = 1\\) \u7684\u4e00\u7ec4\u89e3\uff0c\u800c\u4e14\u8fd9\u91cc\u8981\u6c42\u6709\u89e3\u7684\u6761\u4ef6\u662f \\((a, b) = 1\\)\uff0c\u5229\u7528\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u5f88\u5bb9\u6613\u5f97\u51fa\u3002</p> <pre><code>ll exgcd(ll a, ll b, ll &amp;x, ll &amp;y) {\n    if (b == 0)\n    {\n        x = 1;\n        y = 0;\n        return a;\n    }\n    ll d = exgcd(b, a % b, y, x);\n    y -= (a / b) * x;\n    return d;\n}\nll inv(ll a, ll p) {\n    ll x, y;\n    if (exgcd(a, p, x, y) != 1)\n        return -1;\n    return (x % p + p) % p;\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/number-theory/topic1/#23","title":"2.3 \u8d39\u9a6c\u5c0f\u5b9a\u7406\u6c42\u9006\u5143","text":"<p>\u8d39\u9a6c\u5c0f\u5b9a\u7406\u7684\u5185\u5bb9\u5982\u4e0b\uff1a</p> <p>\u82e5 \\(p\\) \u4e3a\u7d20\u6570\uff0c\u4e14 \\((a, p) = 1\\)\uff0c\u5219 \\(a^{p - 1} \\equiv 1(mod \\ p)\\)\u3002</p> <p>\u8bc1\u660e\uff08\u5f85\u5b8c\u5584\uff09</p> <p>\u5229\u7528\u8be5\u5b9a\u7406\uff0c\u4e0d\u96be\u5f97\u51fa \\(inv(a) \\equiv a^{p - 2}(mod \\ p)\\)\uff0c\u6545\u53ef\u4ee5\u7528\u5feb\u901f\u5e42\u6765\u6c42\u89e3\u3002</p> <pre><code>inline ll qpow(ll a, ll b, ll p) {\n    ll ans = 1;\n    while (b) {\n        if (b &amp; 1) ans = ans % p * a % p;\n        a = a % p * a % p;\n        b &gt;&gt;= 1;\n    }\n    return ans;\n}\ninline ll inv(ll a, ll p) {\n    return qpow(a, p - 2, p);\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/number-theory/topic1/#24","title":"2.4 \u7ebf\u6027\u9012\u63a8\u6c42\u89e3\u9006\u5143","text":"<p>\u5982\u679c\u9898\u76ee\u8981\u6c42 \\(1 \\sim n\\) \u7684\u9006\u5143\uff0c\u90a3\u4e48\u524d\u4e24\u79cd\u65b9\u6cd5\u90fd\u5f88\u4f4e\u6548\uff0c\u8fd9\u91cc\u5f15\u5165\u7b2c\u4e09\u79cd\uff0c\u7ebf\u6027\u9012\u63a8\u6765\u6c42\u89e3\u3002</p> <p>\u4e0b\u9762\u7528 \\(O(n)\\) \u65b9\u6cd5\u6c42 \\(1 \\sim n\\) \u5173\u4e8e \\(p\\) \u7684\u9006\u5143\u3002</p> <p>\u9996\u5148\u663e\u7136 \\(1^{-1} \\equiv 1(mod \\ p)\\)\u3002</p> <p>\u5bf9\u4e8e\u6570 \\(i\\)\uff0c\u6709 \\(p = ki + j\\)\uff0c\u8fd9\u91cc \\(k = \\left \\lfloor \\dfrac{p}{i} \\right \\rfloor,j = p \\% i\\)\u3002</p> <p>\u90a3\u4e48\u5219\u6709 \\(ki + j \\equiv 0(mod \\ p)\\)\uff0c\u7b49\u5f0f\u4e24\u8fb9\u540c\u65f6\u4e58\u4ee5 \\(i^{-1}j^{-1}\\)\uff0c\u5219\u6709 \\(kj^{-1} + i^{-1} \\equiv 0(mod \\ p)\\)\u3002</p> <p>\u6545 \\(i^{-1} \\equiv -\\left \\lfloor \\dfrac{p}{i} \\right \\rfloor(p \\ mod \\ i)^{-1}(mod \\ p)\\)\uff0c\u800c\u4e14 \\(p \\ mod \\ i\\) \u80af\u5b9a\u5c0f\u4e8e \\(i\\) \uff0c\u6240\u4ee5\u53ef\u4ee5\u7531\u524d\u9012\u63a8\u540e\u3002</p> <p>\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u8fd9\u91cc\u4e3a\u9632\u6b62\u51fa\u73b0\u8d1f\u6570\uff0c\u6240\u4ee5\u5199\u7684\u662f <code>p - p / i</code> \uff0c\u800c\u4e14\u5f53 \\(i | p\\) \u65f6 <code>inv[i]</code> \u5e94\u8be5\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u6211\u4eec\u5f80\u5f80\u7528\u5927\u7d20\u6570 \\(10^9 + 7\\) \u6765\u8868\u793a\u3002</p> <pre><code>inv[1] = 1;\nfor (int i = 2; i &lt;= n; ++i) {\n  inv[i] = (long long)(p - p / i) * inv[p % i] % p;\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/number-theory/topic1/#25-n","title":"2.5 \u6c42\u4efb\u610f n \u4e2a\u6570\u7684\u9006\u5143","text":"<p>\u5bf9\u4e8e\u6c42\u4efb\u610f \\(n\\) \u4e2a\u6570 \\(a_i\\)\uff0c\u6211\u4eec\u7b97\u8fd9\u4e2a \\(n\\) \u4e2a\u6570\u7684\u524d\u7f00\u79ef\uff0c\u8bb0\u4e3a \\(s_i\\)\u3002</p> <p>\u7136\u540e\u6211\u4eec\u8ba1\u7b97 \\(s_n\\) \u7684\u9006\u5143\u4e3a \\(sInv_n\\)\uff0c\u90a3\u4e48 \\(s_i\\) \u7684\u9006\u5143\u4e3a \\(sInv_i =sInv_{i + 1} \\times a_{i + 1}\\)\u3002</p> <p>\u7136\u540e\u6613\u5f97 \\(a_i\\) \u7684\u9006\u5143 \\(Inv_i = sInv_i \\times s_{i - 1}\\)\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u8fd1\u4f3c \\(O(n)\\)\u3002 </p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/number-theory/topic1/#3","title":"3. \u6b27\u62c9\u51fd\u6570","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/number-theory/topic1/#4","title":"4. \u4e2d\u56fd\u5269\u4f59\u5b9a\u7406","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/number-theory/topic1/#41","title":"4.1 \u95ee\u9898\u7b80\u8ff0","text":"<p>\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u662f\u7528\u6765\u6c42\u89e3\u8bf8\u5982 $$ \\begin{cases} x \\equiv a_1(\\mod n_1) \\ x \\equiv a_2(\\mod n_2) \\     \\vdots \\ x \\equiv a_k(\\mod n_k) \\end{cases} $$ \u8fd9\u6837\u7684\u65b9\u7a0b\u7ec4\u95ee\u9898\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/number-theory/topic1/#42","title":"4.2 \u8fc7\u7a0b","text":"<ol> <li>\u7b97\u6240\u6709\u6a21\u6570\u7684\u79ef \\(n\\)\uff1b</li> <li>\u5bf9\u4e8e\u7b2c \\(i\\) \u4e2a\u65b9\u7a0b\uff1a<ul> <li>\u8ba1\u7b97 \\(m_i = \\dfrac{n}{n_i}\\)\uff1b</li> <li>\u8ba1\u7b97 \\(m_i\\) \u5728\u6a21 \\(n_i\\) \u610f\u4e49\u4e0b\u7684\u9006\u5143 \\(m_i^{-1}\\)\uff1b</li> <li>\u8ba1\u7b97 \\(c_i = m_im_i^{-1}\\)\uff08\u8fd9\u65f6\u4e0d\u8981\u5bf9 \\(n_i\\) \u53d6\u6a21\uff09</li> </ul> </li> <li>\u65b9\u7a0b\u7ec4\u5728\u6a21 \\(n\\) \u610f\u4e49\u4e0b\u7684\u552f\u4e00\u89e3\u4e3a \\(x = \\sum_{i = 1}^k a_ic_i(\\mod n)\\)</li> </ol>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/number-theory/topic1/#43","title":"4.3 \u5b9e\u73b0","text":"<pre><code>void CRT() {\n  ll n, M = 1, ans = 0;\n  cin &gt;&gt; n; \n  for(int i = 1; i &lt;= n; i++) {\n    cin &gt;&gt; b[i] &gt;&gt; a[i];\n    M *= b[i];\n  }\n  for(int i = 1; i &lt;= n; i++) {\n    ll m = M / b[i];\n    ll x, y;\n    exgcd(m, b[i], x, y); // \u6ce8\uff1a\u5982\u679c\u6a21\u6570\u4e0d\u4e3a\u8d28\u6570\u65f6\uff0c\u6c42\u9006\u5143\u4e0d\u80fd\u7528\u8d39\u9a6c\u5c0f\u5b9a\u7406\u6765\u7b97\uff0c\u53ea\u80fd\u7528\u6269\u6b27\u6765\u7b97\n    x = (x + b[i]) % b[i]; x %= M;\n    m *= x; m %= M;\n    ans += a[i] * m % M;\n    ans %= M;\n  }\n  cout &lt;&lt; (ans % M + M) % M &lt;&lt; endl;\n  return ;\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/number-theory/topic1/#44","title":"4.4 \u6269\u5c55\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406","text":"<p>\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u7684\u9002\u7528\u8303\u56f4\u662f\u6a21\u6570\u4e92\u8d28\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5f53\u65b9\u7a0b\u6a21\u6570\u4e0d\u4e92\u8d28\u65f6\u6211\u4eec\u8981\u7528\u5230\u6269\u5c55\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u3002</p> <p>\u601d\u8def\u662f\u4e0d\u65ad\u628a \\(n\\) \u4e2a\u65b9\u7a0b\u4e24\u4e24\u5408\u5e76\uff0c\u5bf9\u4e8e $$ \\begin{cases} x \\equiv b(\\mod a) \\ x \\equiv B(\\mod A)  \\end{cases} $$ \u6211\u4eec\u4ee4 \\(x = ya + b = YB + A\\) \uff0c\u90a3\u4e48\u6709 \\(B - b = ya - YA\\)\uff0c\u6211\u4eec\u5229\u7528\u6269\u6b27\u53ef\u4ee5\u6c42\u89e3\u51fa \\(x'a + y'A = (a,A)\\) \u7684\u4e00\u7ec4\u89e3\uff0c\u90a3\u4e48\u82e5 \\((a, A) \\nmid B-b\\) \u5219\u65b9\u7a0b\u65e0\u89e3\uff0c\u5bf9\u4e8e\u6709\u89e3\u7684\u60c5\u51b5 \\((x' \\times \\dfrac{B - b}{(a, A)})a + (y' \\times \\dfrac{B - b}{(a, A)})A = B - b\\)\uff0c\u4ee4 \\(X = x' \\times \\dfrac{B - b}{(a, A)}, Y = y' \\times \\dfrac{B - b}{(a, A)}\\) \u82e5\u662f\u8ba9\u89e3\u6700\u5c0f\u5373\u662f\u8ba9 \\(X\\) \u6700\u5c0f\uff0c\u6211\u4eec\u8c03\u6574 \\(X\\) \u53ef\u4ee5\u901a\u8fc7\u8ba9 \\(X + k \\times \\dfrac{A}{(a, A)}\\)\uff0c\u8fd9\u65f6 \\(Y\\) \u76f8\u5e94\u51cf\u53bb\u540c\u7b49\u7cfb\u6570\u7684 \\(\\dfrac{a}{(a, A)}\\)\u3002\u6240\u4ee5 \\(X = (X \\mod \\dfrac{A}{(a, A)} + \\dfrac{A}{(a, A)}) \\mod \\dfrac{A}{(a, A)}\\)\u3002\u6c42\u51fa\u65b0\u7684 \\(X\\) \u540e\u518d\u6839\u636e \\(x = yX + a\\) \u53ef\u4ee5\u6c42\u51fa\u65b0\u7684 \\(x\\)\uff0c\u65b0\u7684 \\(b = x \\mod \\dfrac{A \\times a}{(a, A)}\\)\uff0c\u65b0\u7684 \\(a = \\dfrac{A \\times a}{(a, A)}\\)\u3002\u90a3\u4e48\u5c31\u53ef\u4ee5\u5f97\u51fa\u65b0\u7684\u65b9\u7a0b \\(x \\equiv b(\\mod a)\\) \u4e86\u3002\u6700\u540e\u901a\u8fc7\u4e0d\u65ad\u5408\u5e76\u53d8\u4e3a\u4e00\u4e2a\u65b9\u7a0b\u5c31\u80fd\u6c42\u51fa\u7b54\u6848\u4e86\u3002  </p> <pre><code>void ExCRT() {\n  scanf(\"%d\", &amp;n);\n  for(int i = 1; i &lt;= n; i++) {\n    scanf(\"%lld%lld\", &amp;A, &amp;B);\n    if(i == 1) {\n      a = A;\n      b = B;\n    }\n    else {\n      g = exgcd(a, A, x, y);\n      if((B - b) % g) {\n        printf(\"-1\");\n        return ;\n      }\n      x = x * ((B - b) / g);\n      x = (x % (A / g) + (A / g)) % (A / g);\n      l = A / g * a;\n      b = ((a * x + b) % l + l) % l;\n      a = l;\n    }\n  }\n  printf(\"%lld\\n\", b % a);\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/number-theory/topic1/#5","title":"5. \u5362\u5361\u65af\u5b9a\u7406","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/number-theory/topic1/#51","title":"5.1 \u5b9a\u4e49","text":"<p>\u5bf9\u4e8e\u8d28\u6570 \\(p\\)\uff0c\u6709 $$ \\begin{pmatrix} n \\ m \\end{pmatrix} \\mod p = \\begin{pmatrix} \\left \\lfloor \\dfrac{n}{p} \\right \\rfloor \\ \\left \\lfloor \\dfrac{m}{p}\\right \\rfloor \\end{pmatrix} \\cdot \\begin{pmatrix} n \\mod p \\m \\mod p \\end{pmatrix} \\mod p $$ \u7531\u4e8e\\(n \\mod p\\) \u548c \\(m \\mod p\\) \u80af\u5b9a\u5c0f\u4e8e \\(p\\)\uff0c\u6240\u4ee5\u76f4\u63a5\u7b97\u5373\u53ef\uff0c\u5bf9 \\(\\left \\lfloor \\dfrac{n}{p} \\right \\rfloor\\) \u90e8\u5206\u518d\u7528\u5362\u5361\u65af\u5b9a\u7406\u8ba1\u7b97\u3002</p> <p>\u4e5f\u5373 \\(Lucas(n,m,p)=c(n\\%p,m\\%p)\u00d7Lucas(\\dfrac{n}{p},\\dfrac{m}{p},p)\\)\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/number-theory/topic1/#52","title":"5.2 \u8bc1\u660e","text":"<p>\u9996\u5148\u8bc1\u660e\u9996\u5148\u6211\u4eec\u9700\u8981\u8bc1\u660e \\(C_p^i \\equiv \\dfrac{p}{i}C_{p - 1}^{i - 1} \\equiv 0(\\mod p)(1 \\le i \\le p-1)\\) \u7531\u4e8e \\(p\\) \u4e3a\u8d28\u6570\uff0c\u6545 \\(\\dfrac{1}{i}C_{p - 1}^{i - 1}\\) \u4e3a\u6574\u6570\uff0c\u4e58\u4ee5 \\(p\\) \u540e\u548c \\(p\\) \u540c\u4f59\u4e3a \\(0\\)\uff0c\u6545\u5f97\u8bc1\u3002</p> <p>\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\u6709 \\((1 + x)^p \\equiv 1 + x^p(\\mod p)\\)</p> <p>\u5bf9\u4e8e \\(C_m^n \\mod p\\)\uff0c\u5176\u5b9e\u5c31\u662f\u6c42 \\((1 + x^n)\\mod p\\) \u4e2d \\(x^m\\) \u7684\u7cfb\u6570\u3002</p> <p>\u6211\u4eec\u4ee4 \\(n = ap +b\\)\uff0c\\(m = cp + d\\)\u3002\u6240\u4ee5\u63a5\u4e0b\u6765\u8bc1 \\(C_n^m \\equiv C_a^c \\times C_b^d(\\mod p)\\)\u3002</p> <p>\u6211\u4eec\u6709 $$ (1 + x)^n \\equiv (1 + x)^{pa}(1 + x)^b \\equiv (1 + x<sup>p)</sup>a(1 + x)^b(\\mod p) $$ \u89c2\u5bdf \\(x^m\\) \u7684\u7cfb\u6570\uff0c\u6545 \\(C_n^m x^m \\equiv C_a^c x^{cp}C_b^dx^d(\\mod p)\\)\uff0c\u7531\u4e8e \\(x^b\\) \u7cfb\u6570\u4e00\u81f4\uff0c\u6240\u4ee5  $$ C_n^m \\equiv C_a^c \\times C_b^d \\equiv C_{\\left \\lfloor \\frac{n}{p} \\right \\rfloor}^{\\left \\lfloor \\frac{m}{p} \\right \\rfloor} \\times C_{n \\mod p}^{m \\mod p}(\\mod p) $$ \u6545\u5f97\u8bc1\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/number-theory/topic1/#53","title":"5.3 \u5b9e\u73b0","text":"<pre><code>ll Lucas(ll n, ll m) {\n  return ((m == 0) ? 1 : (c(n % p, m % p) % p * Lucas(n / p, m / p) % p));\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/number-theory/topic1/#54","title":"5.4 \u6269\u5c55\u5362\u5361\u65af\u5b9a\u7406","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/number-theory/topic2/","title":"\u6570\u8bba\u8fdb\u9636","text":""},{"location":"acm/algorithm/math/poly/topic1/","title":"\u7b97\u6cd5\u7b14\u8bb0 | \u6570\u8bba\uff08\u4e00\uff09","text":"<p>\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\uff0c\u9006\u5143\uff0c\u6b27\u62c9\u51fd\u6570</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/poly/topic1/#1","title":"1. \u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/poly/topic1/#11","title":"1.1 \u7b97\u6cd5\u4ecb\u7ecd","text":"<p>\u8bbe \\(a, b\\) \u4e3a\u4e0d\u5168\u4e3a \\(0\\) \u7684\u6574\u6570\uff0c\u5b58\u5728\u6574\u6570 \\(x, y\\) \u4f7f\u5f97 \\(ax + by = (a, b)\\)\u3002</p> <p>\u8fdb\u4e00\u6b65\u5730\uff0c\\(ax + by = m\\) \u6709\u89e3\u7684\u5145\u8981\u6761\u4ef6\u662f \\((a, b) | m\\) \uff08\u88f4\u8700\u5b9a\u7406\uff0c\u53c8\u53eb\u505a\u8d1d\u7956\u5b9a\u7406\uff09 \u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/poly/topic1/#12","title":"1.2 \u8bc1\u660e","text":"<p>\u82e5\u6211\u4eec\u6c42 \\(ax + by = (a, b)\\) \u7684\u89e3\uff0c\u4e0d\u5982\u5148\u6c42 \\(bx + (a \\mod b) y = (b, a \\mod b)\\) \u7684\u89e3\uff0c\u800c\u4e14\u7531\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u53ef\u77e5 \\((a, b) = (b, a \\mod b)\\)\u3002</p> <p>\u7ecf\u8fc7\u53d8\u6362 \\(bx + (a \\mod b)y = bx + (a - b \\times \\left \\lfloor \\dfrac{a}{b} \\right \\rfloor )y = ay + b(x - \\left \\lfloor \\dfrac{a}{b} \\right \\rfloor y)\\)\uff0c\u6240\u4ee5\u5f97\u51fa \\(bx + (a \\mod b) y = (b, a \\mod b)\\) \u7684\u89e3\u4e3a \\(x_0, y_0\\) \u540e\u5c31\u53ef\u4ee5\u5f97\u51fa \\(ax + by = (a, b)\\) \u7684\u89e3\u662f \\(x = y_0, y = (x_0 - \\left \\lfloor \\dfrac{a}{b} \\right \\rfloor y_0)\\) \u800c\u901a\u8fc7\u4e0d\u65ad\u8f97\u8f6c\u76f8\u9664\u6cd5\uff0c\u663e\u7136\u5230\u6700\u540e\u6211\u4eec\u5f97\u5230\u7684\u5f0f\u5b50\u4e3a \\((a, b)x + 0\\times y = (a, b)\\)\uff0c\u5f88\u5bb9\u6613\u53ef\u4ee5\u4ee4 \\(x = 1, y = 0\\) \u4e3a\u8fd9\u91cc\u7684\u4e00\u7ec4\u89e3\uff0c\u7136\u540e\u4e0d\u65ad\u8fed\u4ee3\u56de\u53bb\u6c42\u51fa\u6211\u4eec\u8981\u7684\u89e3\u3002</p> <p>\u5bf9\u4e8e\u8fdb\u4e00\u6b65\u7ed3\u8bba\u7684\u8bc1\u660e\uff0c\u82e5 \\(m\\) \u662f\u8be5\u65b9\u7a0b\u7ec4\u7684\u89e3\uff0c\u7531\u4e8e \\((a, b)\\) \u53ef\u4ee5\u6574\u9664\u5de6\u5f0f\uff0c\u90a3\u4e48 \\((a, b)\\) \u4e5f\u53ef\u4ee5\u6574\u9664\u53f3\u5f0f\uff08\u5145\u5206\u6027\uff09\u3002</p> <p>\u82e5 \\((a, b)|m\\)\uff0c\u90a3\u4e48\u6211\u4eec\u5df2\u77e5 \\(ax + by = (a, b)\\) \u7684\u4e00\u7ec4\u89e3\uff0c\u7b49\u5f0f\u4e24\u8fb9\u540c\u65f6\u4e58\u4ee5 \\(\\dfrac{m}{(a, b)}\\) \u4fbf\u53ef\u4ee5\u5f97\u5230\u539f\u65b9\u7a0b\u7ec4\u7684\u89e3\uff08\u5fc5\u8981\u6027\uff09\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/poly/topic1/#13","title":"1.3 \u5b9e\u73b0","text":"<pre><code>int exgcd(int a, int b, int &amp;x, int &amp;y) {\n    if (b == 0) {\n        x = 1;\n        y = 0;\n        return a;\n    }\n    int d = exgcd(b, a % b, y, x); \n    y -= (a / b) * x;\n    return d;\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/poly/topic1/#2","title":"2. \u9006\u5143","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/poly/topic1/#21","title":"2.1 \u5b9a\u4e49","text":"<p>\u82e5 \\(ab \\equiv 1(\\mod p)\\) \u5219\u79f0 \\(a\\)\uff0c\\(b\\) \u5728 \u6a21 \\(p\\) \u610f\u4e49\u4e0b\u4e92\u4e3a\u9006\u5143\uff0c\u8bb0\u4e3a \\(a = inv(b)\\)\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/poly/topic1/#22","title":"2.2 \u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u6c42\u9006\u5143","text":"<p>\u7531\u4e0a\u4e00\u8282\u53ef\u77e5\uff0c\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u53ef\u4ee5\u6c42\u51fa \\(ax + by = 1\\) \u7684\u4e00\u7ec4 \\(x, y\\) \u89e3\uff0c\u6545\u6211\u4eec\u8981\u6c42 \\(ax \\equiv 1(mod\\ b)\\) \u5373\u6c42 \\(ax + by = 1\\) \u7684\u4e00\u7ec4\u89e3\uff0c\u800c\u4e14\u8fd9\u91cc\u8981\u6c42\u6709\u89e3\u7684\u6761\u4ef6\u662f \\((a, b) = 1\\)\uff0c\u5229\u7528\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u5f88\u5bb9\u6613\u5f97\u51fa\u3002</p> <pre><code>ll exgcd(ll a, ll b, ll &amp;x, ll &amp;y) {\n    if (b == 0)\n    {\n        x = 1;\n        y = 0;\n        return a;\n    }\n    ll d = exgcd(b, a % b, y, x);\n    y -= (a / b) * x;\n    return d;\n}\nll inv(ll a, ll p) {\n    ll x, y;\n    if (exgcd(a, p, x, y) != 1)\n        return -1;\n    return (x % p + p) % p;\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/poly/topic1/#23","title":"2.3 \u8d39\u9a6c\u5c0f\u5b9a\u7406\u6c42\u9006\u5143","text":"<p>\u8d39\u9a6c\u5c0f\u5b9a\u7406\u7684\u5185\u5bb9\u5982\u4e0b\uff1a</p> <p>\u82e5 \\(p\\) \u4e3a\u7d20\u6570\uff0c\u4e14 \\((a, p) = 1\\)\uff0c\u5219 \\(a^{p - 1} \\equiv 1(mod \\ p)\\)\u3002</p> <p>\u8bc1\u660e\uff08\u5f85\u5b8c\u5584\uff09</p> <p>\u5229\u7528\u8be5\u5b9a\u7406\uff0c\u4e0d\u96be\u5f97\u51fa \\(inv(a) \\equiv a^{p - 2}(mod \\ p)\\)\uff0c\u6545\u53ef\u4ee5\u7528\u5feb\u901f\u5e42\u6765\u6c42\u89e3\u3002</p> <pre><code>inline ll qpow(ll a, ll b, ll p) {\n    ll ans = 1;\n    while (b) {\n        if (b &amp; 1) ans = ans % p * a % p;\n        a = a % p * a % p;\n        b &gt;&gt;= 1;\n    }\n    return ans;\n}\ninline ll inv(ll a, ll p) {\n    return qpow(a, p - 2, p);\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/poly/topic1/#24","title":"2.4 \u7ebf\u6027\u9012\u63a8\u6c42\u89e3\u9006\u5143","text":"<p>\u5982\u679c\u9898\u76ee\u8981\u6c42 \\(1 \\sim n\\) \u7684\u9006\u5143\uff0c\u90a3\u4e48\u524d\u4e24\u79cd\u65b9\u6cd5\u90fd\u5f88\u4f4e\u6548\uff0c\u8fd9\u91cc\u5f15\u5165\u7b2c\u4e09\u79cd\uff0c\u7ebf\u6027\u9012\u63a8\u6765\u6c42\u89e3\u3002</p> <p>\u4e0b\u9762\u7528 \\(O(n)\\) \u65b9\u6cd5\u6c42 \\(1 \\sim n\\) \u5173\u4e8e \\(p\\) \u7684\u9006\u5143\u3002</p> <p>\u9996\u5148\u663e\u7136 \\(1^{-1} \\equiv 1(mod \\ p)\\)\u3002</p> <p>\u5bf9\u4e8e\u6570 \\(i\\)\uff0c\u6709 \\(p = ki + j\\)\uff0c\u8fd9\u91cc \\(k = \\left \\lfloor \\dfrac{p}{i} \\right \\rfloor,j = p \\% i\\)\u3002</p> <p>\u90a3\u4e48\u5219\u6709 \\(ki + j \\equiv 0(mod \\ p)\\)\uff0c\u7b49\u5f0f\u4e24\u8fb9\u540c\u65f6\u4e58\u4ee5 \\(i^{-1}j^{-1}\\)\uff0c\u5219\u6709 \\(kj^{-1} + i^{-1} \\equiv 0(mod \\ p)\\)\u3002</p> <p>\u6545 \\(i^{-1} \\equiv -\\left \\lfloor \\dfrac{p}{i} \\right \\rfloor(p \\ mod \\ i)^{-1}(mod \\ p)\\)\uff0c\u800c\u4e14 \\(p \\ mod \\ i\\) \u80af\u5b9a\u5c0f\u4e8e \\(i\\) \uff0c\u6240\u4ee5\u53ef\u4ee5\u7531\u524d\u9012\u63a8\u540e\u3002</p> <p>\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u8fd9\u91cc\u4e3a\u9632\u6b62\u51fa\u73b0\u8d1f\u6570\uff0c\u6240\u4ee5\u5199\u7684\u662f <code>p - p / i</code> \uff0c\u800c\u4e14\u5f53 \\(i | p\\) \u65f6 <code>inv[i]</code> \u5e94\u8be5\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u6211\u4eec\u5f80\u5f80\u7528\u5927\u7d20\u6570 \\(10^9 + 7\\) \u6765\u8868\u793a\u3002</p> <pre><code>inv[1] = 1;\nfor (int i = 2; i &lt;= n; ++i) {\n  inv[i] = (long long)(p - p / i) * inv[p % i] % p;\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/poly/topic1/#25-n","title":"2.5 \u6c42\u4efb\u610f n \u4e2a\u6570\u7684\u9006\u5143","text":"<p>\u5bf9\u4e8e\u6c42\u4efb\u610f \\(n\\) \u4e2a\u6570 \\(a_i\\)\uff0c\u6211\u4eec\u7b97\u8fd9\u4e2a \\(n\\) \u4e2a\u6570\u7684\u524d\u7f00\u79ef\uff0c\u8bb0\u4e3a \\(s_i\\)\u3002</p> <p>\u7136\u540e\u6211\u4eec\u8ba1\u7b97 \\(s_n\\) \u7684\u9006\u5143\u4e3a \\(sInv_n\\)\uff0c\u90a3\u4e48 \\(s_i\\) \u7684\u9006\u5143\u4e3a \\(sInv_i =sInv_{i + 1} \\times a_{i + 1}\\)\u3002</p> <p>\u7136\u540e\u6613\u5f97 \\(a_i\\) \u7684\u9006\u5143 \\(Inv_i = sInv_i \\times s_{i - 1}\\)\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u8fd1\u4f3c \\(O(n)\\)\u3002 </p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/poly/topic1/#3","title":"3. \u6b27\u62c9\u51fd\u6570","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/poly/topic1/#4","title":"4. \u4e2d\u56fd\u5269\u4f59\u5b9a\u7406","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/poly/topic1/#41","title":"4.1 \u95ee\u9898\u7b80\u8ff0","text":"<p>\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u662f\u7528\u6765\u6c42\u89e3\u8bf8\u5982 $$ \\begin{cases} x \\equiv a_1(\\mod n_1) \\ x \\equiv a_2(\\mod n_2) \\     \\vdots \\ x \\equiv a_k(\\mod n_k) \\end{cases} $$ \u8fd9\u6837\u7684\u65b9\u7a0b\u7ec4\u95ee\u9898\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/poly/topic1/#42","title":"4.2 \u8fc7\u7a0b","text":"<ol> <li>\u7b97\u6240\u6709\u6a21\u6570\u7684\u79ef \\(n\\)\uff1b</li> <li>\u5bf9\u4e8e\u7b2c \\(i\\) \u4e2a\u65b9\u7a0b\uff1a<ul> <li>\u8ba1\u7b97 \\(m_i = \\dfrac{n}{n_i}\\)\uff1b</li> <li>\u8ba1\u7b97 \\(m_i\\) \u5728\u6a21 \\(n_i\\) \u610f\u4e49\u4e0b\u7684\u9006\u5143 \\(m_i^{-1}\\)\uff1b</li> <li>\u8ba1\u7b97 \\(c_i = m_im_i^{-1}\\)\uff08\u8fd9\u65f6\u4e0d\u8981\u5bf9 \\(n_i\\) \u53d6\u6a21\uff09</li> </ul> </li> <li>\u65b9\u7a0b\u7ec4\u5728\u6a21 \\(n\\) \u610f\u4e49\u4e0b\u7684\u552f\u4e00\u89e3\u4e3a \\(x = \\sum_{i = 1}^k a_ic_i(\\mod n)\\)</li> </ol>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/poly/topic1/#43","title":"4.3 \u5b9e\u73b0","text":"<pre><code>void CRT() {\n  ll n, M = 1, ans = 0;\n  cin &gt;&gt; n; \n  for(int i = 1; i &lt;= n; i++) {\n    cin &gt;&gt; b[i] &gt;&gt; a[i];\n    M *= b[i];\n  }\n  for(int i = 1; i &lt;= n; i++) {\n    ll m = M / b[i];\n    ll x, y;\n    exgcd(m, b[i], x, y); // \u6ce8\uff1a\u5982\u679c\u6a21\u6570\u4e0d\u4e3a\u8d28\u6570\u65f6\uff0c\u6c42\u9006\u5143\u4e0d\u80fd\u7528\u8d39\u9a6c\u5c0f\u5b9a\u7406\u6765\u7b97\uff0c\u53ea\u80fd\u7528\u6269\u6b27\u6765\u7b97\n    x = (x + b[i]) % b[i]; x %= M;\n    m *= x; m %= M;\n    ans += a[i] * m % M;\n    ans %= M;\n  }\n  cout &lt;&lt; (ans % M + M) % M &lt;&lt; endl;\n  return ;\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/poly/topic1/#44","title":"4.4 \u6269\u5c55\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406","text":"<p>\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u7684\u9002\u7528\u8303\u56f4\u662f\u6a21\u6570\u4e92\u8d28\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5f53\u65b9\u7a0b\u6a21\u6570\u4e0d\u4e92\u8d28\u65f6\u6211\u4eec\u8981\u7528\u5230\u6269\u5c55\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u3002</p> <p>\u601d\u8def\u662f\u4e0d\u65ad\u628a \\(n\\) \u4e2a\u65b9\u7a0b\u4e24\u4e24\u5408\u5e76\uff0c\u5bf9\u4e8e $$ \\begin{cases} x \\equiv b(\\mod a) \\ x \\equiv B(\\mod A)  \\end{cases} $$ \u6211\u4eec\u4ee4 \\(x = ya + b = YB + A\\) \uff0c\u90a3\u4e48\u6709 \\(B - b = ya - YA\\)\uff0c\u6211\u4eec\u5229\u7528\u6269\u6b27\u53ef\u4ee5\u6c42\u89e3\u51fa \\(x'a + y'A = (a,A)\\) \u7684\u4e00\u7ec4\u89e3\uff0c\u90a3\u4e48\u82e5 \\((a, A) \\nmid B-b\\) \u5219\u65b9\u7a0b\u65e0\u89e3\uff0c\u5bf9\u4e8e\u6709\u89e3\u7684\u60c5\u51b5 \\((x' \\times \\dfrac{B - b}{(a, A)})a + (y' \\times \\dfrac{B - b}{(a, A)})A = B - b\\)\uff0c\u4ee4 \\(X = x' \\times \\dfrac{B - b}{(a, A)}, Y = y' \\times \\dfrac{B - b}{(a, A)}\\) \u82e5\u662f\u8ba9\u89e3\u6700\u5c0f\u5373\u662f\u8ba9 \\(X\\) \u6700\u5c0f\uff0c\u6211\u4eec\u8c03\u6574 \\(X\\) \u53ef\u4ee5\u901a\u8fc7\u8ba9 \\(X + k \\times \\dfrac{A}{(a, A)}\\)\uff0c\u8fd9\u65f6 \\(Y\\) \u76f8\u5e94\u51cf\u53bb\u540c\u7b49\u7cfb\u6570\u7684 \\(\\dfrac{a}{(a, A)}\\)\u3002\u6240\u4ee5 \\(X = (X \\mod \\dfrac{A}{(a, A)} + \\dfrac{A}{(a, A)}) \\mod \\dfrac{A}{(a, A)}\\)\u3002\u6c42\u51fa\u65b0\u7684 \\(X\\) \u540e\u518d\u6839\u636e \\(x = yX + a\\) \u53ef\u4ee5\u6c42\u51fa\u65b0\u7684 \\(x\\)\uff0c\u65b0\u7684 \\(b = x \\mod \\dfrac{A \\times a}{(a, A)}\\)\uff0c\u65b0\u7684 \\(a = \\dfrac{A \\times a}{(a, A)}\\)\u3002\u90a3\u4e48\u5c31\u53ef\u4ee5\u5f97\u51fa\u65b0\u7684\u65b9\u7a0b \\(x \\equiv b(\\mod a)\\) \u4e86\u3002\u6700\u540e\u901a\u8fc7\u4e0d\u65ad\u5408\u5e76\u53d8\u4e3a\u4e00\u4e2a\u65b9\u7a0b\u5c31\u80fd\u6c42\u51fa\u7b54\u6848\u4e86\u3002  </p> <pre><code>void ExCRT() {\n  scanf(\"%d\", &amp;n);\n  for(int i = 1; i &lt;= n; i++) {\n    scanf(\"%lld%lld\", &amp;A, &amp;B);\n    if(i == 1) {\n      a = A;\n      b = B;\n    }\n    else {\n      g = exgcd(a, A, x, y);\n      if((B - b) % g) {\n        printf(\"-1\");\n        return ;\n      }\n      x = x * ((B - b) / g);\n      x = (x % (A / g) + (A / g)) % (A / g);\n      l = A / g * a;\n      b = ((a * x + b) % l + l) % l;\n      a = l;\n    }\n  }\n  printf(\"%lld\\n\", b % a);\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/poly/topic1/#5","title":"5. \u5362\u5361\u65af\u5b9a\u7406","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/poly/topic1/#51","title":"5.1 \u5b9a\u4e49","text":"<p>\u5bf9\u4e8e\u8d28\u6570 \\(p\\)\uff0c\u6709 $$ \\begin{pmatrix} n \\ m \\end{pmatrix} \\mod p = \\begin{pmatrix} \\left \\lfloor \\dfrac{n}{p} \\right \\rfloor \\ \\left \\lfloor \\dfrac{m}{p}\\right \\rfloor \\end{pmatrix} \\cdot \\begin{pmatrix} n \\mod p \\m \\mod p \\end{pmatrix} \\mod p $$ \u7531\u4e8e\\(n \\mod p\\) \u548c \\(m \\mod p\\) \u80af\u5b9a\u5c0f\u4e8e \\(p\\)\uff0c\u6240\u4ee5\u76f4\u63a5\u7b97\u5373\u53ef\uff0c\u5bf9 \\(\\left \\lfloor \\dfrac{n}{p} \\right \\rfloor\\) \u90e8\u5206\u518d\u7528\u5362\u5361\u65af\u5b9a\u7406\u8ba1\u7b97\u3002</p> <p>\u4e5f\u5373 \\(Lucas(n,m,p)=c(n\\%p,m\\%p)\u00d7Lucas(\\dfrac{n}{p},\\dfrac{m}{p},p)\\)\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/poly/topic1/#52","title":"5.2 \u8bc1\u660e","text":"<p>\u9996\u5148\u8bc1\u660e\u9996\u5148\u6211\u4eec\u9700\u8981\u8bc1\u660e \\(C_p^i \\equiv \\dfrac{p}{i}C_{p - 1}^{i - 1} \\equiv 0(\\mod p)(1 \\le i \\le p-1)\\) \u7531\u4e8e \\(p\\) \u4e3a\u8d28\u6570\uff0c\u6545 \\(\\dfrac{1}{i}C_{p - 1}^{i - 1}\\) \u4e3a\u6574\u6570\uff0c\u4e58\u4ee5 \\(p\\) \u540e\u548c \\(p\\) \u540c\u4f59\u4e3a \\(0\\)\uff0c\u6545\u5f97\u8bc1\u3002</p> <p>\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\u6709 \\((1 + x)^p \\equiv 1 + x^p(\\mod p)\\)</p> <p>\u5bf9\u4e8e \\(C_m^n \\mod p\\)\uff0c\u5176\u5b9e\u5c31\u662f\u6c42 \\((1 + x^n)\\mod p\\) \u4e2d \\(x^m\\) \u7684\u7cfb\u6570\u3002</p> <p>\u6211\u4eec\u4ee4 \\(n = ap +b\\)\uff0c\\(m = cp + d\\)\u3002\u6240\u4ee5\u63a5\u4e0b\u6765\u8bc1 \\(C_n^m \\equiv C_a^c \\times C_b^d(\\mod p)\\)\u3002</p> <p>\u6211\u4eec\u6709 $$ (1 + x)^n \\equiv (1 + x)^{pa}(1 + x)^b \\equiv (1 + x<sup>p)</sup>a(1 + x)^b(\\mod p) $$ \u89c2\u5bdf \\(x^m\\) \u7684\u7cfb\u6570\uff0c\u6545 \\(C_n^m x^m \\equiv C_a^c x^{cp}C_b^dx^d(\\mod p)\\)\uff0c\u7531\u4e8e \\(x^b\\) \u7cfb\u6570\u4e00\u81f4\uff0c\u6240\u4ee5  $$ C_n^m \\equiv C_a^c \\times C_b^d \\equiv C_{\\left \\lfloor \\frac{n}{p} \\right \\rfloor}^{\\left \\lfloor \\frac{m}{p} \\right \\rfloor} \\times C_{n \\mod p}^{m \\mod p}(\\mod p) $$ \u6545\u5f97\u8bc1\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/poly/topic1/#53","title":"5.3 \u5b9e\u73b0","text":"<pre><code>ll Lucas(ll n, ll m) {\n  return ((m == 0) ? 1 : (c(n % p, m % p) % p * Lucas(n / p, m / p) % p));\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/math/poly/topic1/#54","title":"5.4 \u6269\u5c55\u5362\u5361\u65af\u5b9a\u7406","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/algorithm/others/misc/","title":"\u6742\u9879","text":""},{"location":"acm/algorithm/others/misc/#dsu-on-tree","title":"dsu on tree","text":""},{"location":"acm/algorithm/others/misc/#pb_ds","title":"pb_ds","text":""},{"location":"acm/algorithm/others/random/","title":"How to generate random numbers","text":"<p>Use <code>mt19937</code> or <code>mt19937_64</code> instead of <code>rand()</code>.</p> <p>see this blog</p>"},{"location":"acm/algorithm/string/topic1/","title":"\u57fa\u7840\u5b57\u7b26\u4e32","text":""},{"location":"acm/algorithm/string/topic1/#_2","title":"\u54c8\u5e0c &amp;&amp; \u5f02\u6216\u54c8\u5e0c","text":""},{"location":"acm/algorithm/string/topic1/#trie","title":"Trie","text":""},{"location":"acm/algorithm/string/topic1/#_3","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<p>Trie \u6811\u677f\u5b50</p> <pre><code>struct trie {\n    int t[N][26], sz, ed[N];\n    void init() { sz = 2; memset(ed, 0, sizeof ed); }\n    int _new() { memset(t[sz], 0, sizeof t[sz]); return sz++; }\n    void ins(std::string s, int p) {\n        int u = 1;\n        for(int i = 0; i &lt; s.size(); i++) {\n            int c = s[i] - 'a';\n            if (!t[u][c]) t[u][c] = _new();\n            u = t[u][c];\n        }\n        ed[u] = p;\n    }\n};\n</code></pre> <p>01 trie \u677f\u5b50</p> <pre><code>struct trie {\n    int t[N][2], sz, ed[N];\n    void init() { sz = 2; memset(ed, 0, sizeof ed); }\n    int _new() { memset(t[sz], 0, sizeof t[sz]); return sz++; }\n    void ins(int s) {\n        int u = 1;\n        for (int i = 30; i &gt;= 0; i--) {\n            int c = (s &gt;&gt; i) &amp; 1;\n            if (!t[u][c]) t[u][c] = _new();\n            u = t[u][c];\n        }\n    }\n    int find(int x) {\n        int u = 1, num = 0;\n        for (int i = 30; i &gt;= 0; i--) {\n            int c = (x &gt;&gt; i) &amp; 1;\n            if (t[u][c ^ 1]) {\n                u = t[u][c ^ 1], num += (1 &lt;&lt; i);\n            }\n            else u = t[u][c];\n        }\n        return num;\n    }\n} T;\n</code></pre>"},{"location":"acm/algorithm/string/topic1/#manacher","title":"Manacher","text":""},{"location":"acm/algorithm/string/topic1/#_4","title":"\u7b97\u6cd5\u4ecb\u7ecd","text":"<p>\u8be5\u7b97\u6cd5\u53ef\u4ee5\u7ebf\u6027\u6c42\u51fa\u5b57\u7b26\u4e32\u7684\u4ee5\u5404\u4e2a\u4f4d\u7f6e\u4e3a\u8f74\u7684\u56de\u6587\u5b50\u4e32\u6700\u5927\u957f\u5ea6</p>"},{"location":"acm/algorithm/string/topic1/#_5","title":"\u8fc7\u7a0b","text":"<p>\u672c\u7b97\u6cd5\u6c42\u7684\u662f\u4ee5\u5404\u4f4d\u7f6e\u4e3a\u5bf9\u79f0\u4e2d\u5fc3\u7684\u6700\u5927\u5bf9\u79f0\u534a\u5f84\u662f\u591a\u5c11\uff0c\u7531\u4e8e\u4f1a\u51fa\u73b0\u957f\u5ea6\u4e3a\u5947\u6570\u7684\u5bf9\u79f0\u533a\u95f4\uff08\u5bf9\u79f0\u4e2d\u5fc3\u5728\u4e24\u4e2a\u4f4d\u7f6e\u4e2d\u95f4\uff09\uff0c\u5076\u6570\u957f\u5ea6\u7684\u5bf9\u79f0\u533a\u95f4\uff08\u5bf9\u79f0\u4e2d\u5fc3\u5728\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u5904\uff09\u3002\u6240\u4ee5\u6211\u4eec\u5bf9\u539f\u5b57\u4e32\u8fdb\u884c\u53d8\u6362\uff0c\u6bd4\u5982 <code>abcba</code> \u53d8\u4e3a <code>##a#b#c#b#a#</code> \uff0c\u8fd9\u6837\u7684\u8bdd\u5bf9\u79f0\u4e2d\u5fc3\u5c31\u662f\u8fd9\u4e2a\u4f4d\u7f6e\u672c\u8eab\u4e86\u3002</p> <p>\u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u6570\u7ec4 \\(len\\) \uff0c\\(len\\) \u6570\u7ec4\u8868\u793a\u8fd9\u4e2a\u70b9\u80fd\u591f\u6269\u5c55\u51fa\u7684\u56de\u6587\u957f\u5ea6\u3002</p> <p>\u6211\u4eec\u4ece\u524d\u5411\u540e\u904d\u5386\u4e00\u904d\uff0c\u5faa\u73af\u53d8\u91cf\u4e3a \\(i\\)\uff0c\u5f15\u5165\u8f85\u52a9\u53d8\u91cf \\(maxr\\) \u548c \\(mid\\) \uff0c\\(maxr\\) \u8868\u793a\u89e6\u53ca\u5230\u7684\u6700\u53f3\u8fb9\u7684\u5b57\u7b26\u4f4d\u7f6e\uff0c\\(mid\\) \u8868\u793a\u5305\u542b \\(maxr\\) \u56de\u6587\u4e32\u7684\u4e2d\u5fc3\u8f74\u6240\u5728\u4f4d\u7f6e\u3002\u5bf9\u4e8e\u6bcf\u6b21\u904d\u5386\u5230\u7684\u65b0\u7684\u4f4d\u7f6e \\(i\\)\uff0c\u4e0d\u96be\u53d1\u73b0\u5982\u679c \\(i &lt; maxr\\)\uff0c\u90a3\u4e48 \\(len[i] = min\\{len[mid] \\}\\)</p> <p>\u5f53 \\(i\\) \u5728 \\(maxr\\) \u5de6\u8fb9\u4e14\u5728 \\(mid\\) \u53f3\u8fb9\u65f6\uff1a</p> <p>\u8bbe \\(i\\) \u5173\u4e8e \\(mid\\) \u7684\u5bf9\u79f0\u70b9\u4e3a \\(j\\)\uff0c\u663e\u7136 \\(len[i]\\) \u4e00\u5b9a\u4e0d\u4f1a\u5c0f\u4e8e \\(len[j]\\)\uff08\u5bf9\u79f0\uff09\u3002</p> <p>\u5176\u4e2d \\(j\\) \u4e3a \\((mid&lt;&lt;1)\u2212i\\)\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u5c31\u8bbe\u7f6e \\(len[i] = min\\{len[mid], maxr - i \\}\\) \u7136\u540e\u7ee7\u7eed\u5c1d\u8bd5\u6269\u5c55\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8f83\u5feb\u5730\u6c42\u51fa \\(len[i]\\)\uff0c\u7136\u540e\u66f4\u65b0 \\(maxr\\) \u548c \\(mid\\)</p> <p>\u5f53 \\(i\\) \u5728 \\(maxr\\) \u53f3\u8fb9\u65f6\uff0c\u6211\u4eec\u65e0\u6cd5\u5f97\u77e5\u5173\u4e8e \\(len[i]\\) \u7684\u4fe1\u606f\uff0c\u53ea\u597d\u4ece \\(1\\) \u5f00\u59cb\u904d\u5386\uff0c\u7136\u540e\u66f4\u65b0 \\(maxr\\) \u548c \\(mid\\)\u3002</p> <p>\u672c\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u5747\u4e3a\u7ebf\u6027\u7684\u3002</p>"},{"location":"acm/algorithm/string/topic1/#_6","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<p>\u4e0b\u6807\u4ece \\(0\\) \u5f00\u59cb\u3002</p> <pre><code>std::vector&lt;int&gt; manacher(std::vector&lt;int&gt; s) {\n  std::vector&lt;int&gt; t{0};\n  for (auto c : s) {\n    t.push_back(c);\n    t.push_back(0);\n  }\n  int n = t.size();\n  std::vector&lt;int&gt; r(n);\n  for (int i = 0, j = 0; i &lt; n; i++) {\n    if (2 * j - i &gt;= 0 &amp;&amp; j + r[j] &gt; i) {\n      r[i] = std::min(r[2 * j - i], j + r[j] - i);\n    }\n    while (i - r[i] &gt;= 0 &amp;&amp; i + r[i] &lt; n &amp;&amp; t[i - r[i]] == t[i + r[i]]) {\n      r[i] += 1;\n    }\n    if (i + r[i] &gt; j + r[j]) {\n      j = i;\n    }\n  }\n  return r;\n}\n</code></pre>"},{"location":"acm/algorithm/string/topic1/#kmp-border","title":"KMP &amp;&amp; Border \u7406\u8bba","text":"<p>Border : \u5b57\u7b26\u4e32\u7684\u67d0\u4e2a\u524d\u7f00(\u975e\u539f\u4e32)\uff0c\u80fd\u4e0e\u540e\u7f00\u5b8c\u5168\u5339\u914d\u3002</p>"},{"location":"acm/algorithm/string/topic1/#_7","title":"\u524d\u7f00\u51fd\u6570","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u5b57\u7b26\u4e32 \\(s\\)\uff0c\u5176\u524d\u7f00\u51fd\u6570\u88ab\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u6570\u7ec4 \\(\\pi\\)\u3002 \u5176\u4e2d \\(\\pi[i]\\) \u7684\u5b9a\u4e49\u662f\uff1a\u6700\u957f\u7684\u76f8\u7b49\u7684\u771f\u540e\u7f00\u771f\u524d\u7f00\u957f\u5ea6\uff08\u81ea\u8eab\u9664\u5916\uff09\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5b57\u4e32 \\(s[0\\dots i]\\) \u6709\u4e00\u5bf9\u76f8\u7b49\u7684\u771f\u524d\u7f00 \\(s[0\\dots k - 1]\\) \u548c\u771f\u540e\u7f00 \\(s[i - (k - 1) \\dots i]\\) \u5b83\u4eec\u76f8\u7b49\u4e14\u662f\u8fd9\u4e2a\u5b57\u4e32\u4e2d\u6240\u80fd\u627e\u5230\u6700\u957f\u7684\u524d\u7f00\u540e\u7f00\uff0c\u90a3\u4e48 \\(\\pi[i] = k\\)\u3002</p>"},{"location":"acm/algorithm/string/topic1/#_8","title":"\u4f18\u5316 &amp; \u8fc7\u7a0b","text":"<p>\u76f4\u63a5\u6700\u6734\u7d20\u7684\u8ba1\u7b97\u524d\u7f00\u51fd\u6570\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n^3)\\)\uff0c\u6545\u6211\u4eec\u53ef\u4ee5\u52a0\u5165\u4f18\u5316\u3002</p> <p>\u4f18\u5316\u4e00\uff1a\u6bcf\u6b21\u65b0\u52a0\u5165\u4e00\u4e2a\u6570\u65f6\uff0c\u8d21\u732e\u6700\u591a\u52a0 \\(1\\)\uff0c\u5373 \\(\\pi[i + 1] \\le \\pi[i] + 1\\) \uff0c\u53d6\u7b49\u5f53\u4e14\u4ec5\u5f53 \\(s[\\pi[i] + 1] == s[i + 1]\\)\u3002</p> <p>\u4f18\u5316\u4e8c\uff1a\u5176\u5b9e\u4f18\u5316\u4e00\u7684\u60c5\u51b5\u4f18\u5316\u4e86\u65b0\u52a0\u5165\u7684\u6570\u4f9d\u7136\u5339\u914d\u6210\u529f\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u4f18\u5316\u4e8c\u53ef\u4ee5\u4f18\u5316\u65b0\u52a0\u5165\u7684\u6570\u5931\u914d\u7684\u60c5\u51b5\u3002\u6211\u4eec\u5047\u8bbe\u8bb0\u5f55\u4e00\u4e2a\u6570\u7ec4 \\(k\\)\uff0c\\(k[i]\\) \u8868\u793a\u7b2c \\(i + 1\\) \u4f4d\u5931\u914d\u4e4b\u540e\u5e94\u8be5\u8df3\u5230\u7b2c \\(k[i]\\) \u4f4d\u4e0a\u3002\u90a3\u4e48\u6211\u4eec\u6bcf\u6b21\u53ef\u4ee5\u4e0d\u65ad\u5411\u524d\u8df3\uff0c\u5982\u679c\u5339\u914d\u6210\u529f\u5c31\u662f\u4f18\u5316\u4e00\u7684\u60c5\u51b5\uff0c\u5339\u914d\u4e0d\u6210\u529f\u5c31\u7ee7\u7eed\u56de\u8df3\u3002</p> <p>\u6211\u4eec\u5047\u8bbe\u5411\u524d\u56de\u8df3\u4e00\u6b21\u5230\u8fbe\u7684\u4f4d\u7f6e\u4e3a \\(j\\)\u3002\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u6211\u4eec\u53d1\u73b0 \\(s[0\\dots j] = s[i - j \\dots i] = s[\\pi[i] - j \\dots \\pi[i]](j &lt; \\pi[i])\\)\uff0c\u90a3\u4e48\u5219\u6709 \\(j = \\pi[\\pi[i]]\\)\uff0c\u6545\u6bcf\u6b21\u5411\u524d\u8df3\u53ea\u9700\u8ba9 \\(j = k[j]\\)\uff0c\u7b49\u627e\u5230\u9002\u914d\u65f6\u5c31\u6309\u4f18\u5316\u4e00\u66f4\u65b0\uff0c\u4e00\u76f4\u9002\u914d\u4e0d\u6210\u529f\u5c31\u6309 \\(0\\) \u6765\u66f4\u65b0 \\(k[i]\\)\u3002\u8fd9\u6837\u7684\u8bdd\u76f8\u5f53\u4e8e\u8ba9\u8be5\u4e32\u81ea\u5df1\u5339\u914d\u81ea\u5df1\u6765\u6c42 \\(k[i]\\)\uff0c\u7136\u540e\u6c42\u8be5\u4e32\u5728\u5176\u4ed6\u4e32\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\u5c31\u8ba9\u8be5\u4e32\u4e0e\u5176\u4ed6\u4e32\u5339\u914d\uff0c\u7b49\u5230 \\(j\\) \u53d8\u4e3a\u8be5\u4e32\u7684\u957f\u5ea6\u65f6\uff0c\u8bf4\u660e\u6574\u4e2a\u4e32\u51fa\u73b0\u4e86\uff0c\u53ef\u4ee5\u8bb0\u5f55\u4e0b\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e86\u3002</p>"},{"location":"acm/algorithm/string/topic1/#_9","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<p>Prefix Function</p> <p>kmp \u7b97\u6cd5\uff0c\u4e0b\u6807\u4ece \\(1\\) \u5f00\u59cb\uff0c\u5176\u4e2d <code>pi[0]</code> \u7684\u503c\u4e3a \\(-1\\)\u3002\u4f46\u662f <code>std::string s</code> \u7684\u4e0b\u6807\u4ece \\(0\\) \u5f00\u59cb\u3002 </p> <pre><code>std::vector&lt;int&gt; Get_Pi(std::string s) {\n    int n = s.size();\n    std::vector&lt;int&gt; pi(n + 1); \n    pi[0] = -1;\n    for (int i = 1; i &lt;= n; i++) {\n        int j = pi[i - 1];\n        while (j != -1 &amp;&amp; s[i - 1] != s[j]) j = pi[j];\n        pi[i] = j + 1;\n    }\n    return pi;\n}\n</code></pre> <p>Z Function</p> <pre><code>std::vector&lt;int&gt; ZFunction(std::string s) {\n    int n = s.size();\n    std::vector&lt;int&gt; z(n + 1);\n    z[0] = n;\n    for (int i = 1, j = 1; i &lt; n; i++) {\n        z[i] = std::max(0, std::min(j + z[j] - i, z[i - j]));\n        while (i + z[i] &lt; n &amp;&amp; s[z[i]] == s[i + z[i]]) {\n            z[i]++;\n        }\n        if (i + z[i] &gt; j + z[j]) {\n            j = i;\n        }\n    }\n    return z;\n}\n</code></pre>"},{"location":"acm/algorithm/string/topic1/#_10","title":"\u76f8\u5173\u7ed3\u8bba","text":"<p>KMP \u7684 fail \u6570\u7ec4\u523b\u753b\u7684\u5c31\u662f\u5404\u4e2a\u524d\u7f00\u7684\u6700\u5927 Border\u3002</p> <p>\u4e00\u4e2a\u4e32\u6240\u6709\u7684 border \u957f\u5ea6\u662f <code>{fail[n], fail[fail[n]], ...}</code>\u3002</p> <p>Weak Periodicity Lemma: \u82e5 \\(p, q\\) \u4e3a \\(S\\) \u7684\u5468\u671f\uff0c\u4e14 \\(p + q \\le n\\) \uff0c\u5219 \\(gcd\u2061(p,q)\\) \u4e5f\u662f \\(S\\) \u7684\u5468\u671f\u3002\uff08\u7b80\u79f0\u4e3a WPL\uff09</p> <p>\u5f3a\u5316\u7248 </p>"},{"location":"acm/algorithm/string/topic1/#acam","title":"ACAM","text":"<p>ACAM \u672c\u8d28\u5c31\u662f\u5728 Trie \u6811\u4e0a\u8dd1 kmp\u3002</p>"},{"location":"acm/algorithm/string/topic1/#_11","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<p>Trie \u6811\u6839\u8282\u70b9\u662f \\(0\\)\u3002\u521d\u59cb\u5316 <code>ac.init()</code> \u4e00\u5b9a\u8981\u8bb0\u5f97\uff01</p> <pre><code>const int N = 2e5 + 5;\nstruct AhoCorasick {\n    static constexpr int M = 26;\n    int ch[N][M], cnt[N], fail[N];\n    int sz;\n    void init() {\n        sz = 1;\n        std::memset(ch[0], 0, sizeof ch[0]);\n        std::memset(cnt, 0, sizeof cnt);\n    }\n    void insert(const std::string &amp;s) {\n        int n = s.size(); int u = 0, c;\n        for(int i = 0; i &lt; n; i++) {\n            c = s[i] - 'a';\n            if (!ch[u][c]) {\n                memset(ch[sz], 0, sizeof ch[sz]);\n                cnt[sz] = 0; ch[u][c] = sz++;\n            }\n            u = ch[u][c];\n        }\n        cnt[u]++;\n    }\n    void build() {\n        std::queue&lt;int&gt; Q;\n        fail[0] = 0;\n        for (int c = 0, u; c &lt; M; c++) {\n            u = ch[0][c];\n            if (u) { Q.push(u); fail[u] = 0; }\n        }\n        while (!Q.empty()) {\n            int r = Q.front(); Q.pop();\n            for (int c = 0, u; c &lt; M; c++) {\n                u = ch[r][c];\n                if (!u) {\n                    ch[r][c] = ch[fail[r]][c];\n                    continue;\n                }\n                fail[u] = ch[fail[r]][c];\n                Q.push(u);\n            }\n        }\n    }\n    int query(std::string t) {\n        int u = 0, res = 0, n = t.size();\n        for (int i = 0; i &lt; n; i++) {\n            u = ch[u][t[i] - 'a'];\n            for (int j = u; j &amp;&amp; cnt[j] != -1; j = fail[j]) {\n                res += cnt[j], cnt[j] = -1;\n            }\n        }\n        return res;\n    }\n} ac;\n</code></pre>"},{"location":"acm/algorithm/string/topic1/#_12","title":"\u4e60\u9898","text":"<p>P2414 [NOI2011] \u963f\u72f8\u7684\u6253\u5b57\u673a</p> <p>Solution</p> <p>\u52a0\u6df1\u5bf9 ACAM \u7406\u89e3\u7684\u597d\u9898\u3002</p> <p>\u6211\u4eec\u627e x \u5728 y \u91cc\u51fa\u73b0\u7684\u6b21\u6570\u3002\u4e14\u6211\u4eec\u77e5\u9053\u5b50\u4e32 = \u524d\u7f00\u7684\u540e\u7f00\u3002</p> <p>\u53c8\u7531\u4e8e\uff1aTrie\u6811\uff08AC\u81ea\u52a8\u673a\uff09\u7684\u7956\u5148\u8282\u70b9 = \u524d\u7f00\uff0cFail\u6811\u7684\u7956\u5148\u8282\u70b9 = \u540e\u7f00\u3002</p> <p>x \u5728 y \u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u5373\u5728 Fail \u6811\u4e2d\u6709\u8282\u70b9 x \u4f5c\u4e3a\u7956\u5148\u7684 Trie \u6811\u4e2d y \u7684\u7956\u5148\u7684\u6570\u91cf\uff0c \u5373 Fail \u6811\u4e2d x \u7684\u5b50\u6811\u4e0e Trie \u6811\u4e2d y \u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u7684\u516c\u5171\u8282\u70b9\u6570\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e2a y\uff0c\u6211\u4eec\u53ef\u4ee5\u7b97\u51fa\u5168\u90e8\u548c\u5b83\u6709\u5173\u7684 x \u51fa\u73b0\u7684\u6b21\u6570\u3002\u6211\u4eec dfs \u4e00\u904d trie \u6811\uff0c\u8d70\u5230\u7684\u70b9 +1\uff0c\u56de\u6eaf -1\u3002\u7136\u540e\u7b97\u51fa\u8fd9\u4e9b\u70b9\u5728 fail \u6811\u91cc\u5bf9\u4ed6\u4eec\u7236\u8282\u70b9\u7684\u8d21\u732e\uff08\u5c31\u662f\u5bf9\u7236\u8282\u70b9\u6c42\u5b50\u6811\u548c\uff09\u3002\u7531 \u5b50\u6811 \u5bb9\u6613\u60f3\u5230\u5229\u7528 dfs\u5e8f \u8f6c\u5316\u4e3a\u533a\u95f4\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002</p> <p>P2292 [HNOI2004] L \u8bed\u8a00</p> <p>Solution</p> <p>\u4e0d\u9519\u7684\u9898\uff0cACAM \u548c DP \u76f8\u7ed3\u5408\u3002</p> <p>\u5148\u4ece\u66b4\u529b\u5165\u624b\uff0c\u76f4\u63a5 dp\uff0c\u6211\u4eec\u5224\u65ad\u5f53\u524d\u72b6\u6001\u662f\u5426\u53ef\u4ee5\u4ece\u524d\u9762\u7684\u72b6\u6001\u8f6c\u79fb\u8fc7\u6765\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(mn|t|)\\)\u3002</p> <p>\u89c2\u5bdf\u6570\u636e\u8303\u56f4\u53d1\u73b0\uff0c\u6587\u672c\u4e32\u957f\u5ea6\u5f88\u5c0f\uff0c\u90fd\u4e0d\u8d85\u8fc7 \\(20\\)\uff0c\u8fd9\u5f15\u5bfc\u6211\u4eec\u5411\u72b6\u538b / <code>bitset</code> \u65b9\u5411\u53bb\u60f3\u3002\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u5728 \\([i - 20, i)\\) \u8303\u56f4\u5185\u6709\u54ea\u4e9b\u72b6\u6001\u662f\u53ef\u4ee5\u7684\uff0c\u4ee5\u53ca\u5728 \\([i - 20, i)\\) \u8303\u56f4\u5185\u6709\u54ea\u4e9b\u4f4d\u7f6e\u52a0\u4e0a\u4e00\u4e2a\u6587\u672c\u4e32\u662f\u53ef\u4ee5\u5230\u8fbe \\(i\\) \u7684\u3002\u6211\u4eec\u5206\u522b\u5c06\u8fd9\u4e24\u4e2a\u72b6\u6001\u72b6\u538b\u4e00\u4e0b\uff0c\u7136\u540e\u5224\u65ad\u7684\u65f6\u5019\u7528\u6309\u4f4d\u4e0e\u5373\u53ef\u3002</p> <p>\u524d\u4e00\u4e2a\u72b6\u6001\u597d\u627e\uff0c\u6211\u4eec\u627e\u51fa\u5f53\u524d\u7b54\u6848\u662f\u987a\u4fbf\u66f4\u65b0\u4e00\u4e0b\u5373\u53ef\u3002\u540e\u4e00\u4e2a\u72b6\u6001\u6211\u4eec\u53ef\u4ee5\u7528 ACAM\uff0c\u5176\u5b9e\u591a\u6587\u672c\u5339\u914d\u4e5f\u6307\u5411\u4e86 ACAM\u3002\u6211\u4eec\u6cbf\u7740 Trie \u6811\uff0c\u5f53\u524d\u8fd9\u4e2a\u8282\u70b9\u7684\u72b6\u6001\u4f1a\u7ee7\u627f\u5b83\u7684 <code>fail</code>\uff0c\u7136\u540e\u5982\u679c\u5f53\u524d\u8fd9\u4e2a\u8282\u70b9\u672c\u8eab\u4e5f\u662f\u6587\u672c\u4e32\u7684\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31 <code>|= (1u &lt;&lt; dep[u])</code>\uff0c\u5373\u72b6\u6001\u8981\u7b97\u4e0a\u81ea\u5df1\u7684\u8d21\u732e\u3002</p> <p>\u6700\u540e\u4ece\u524d\u5f80\u540e\u8f6c\u79fb\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(m|s|)\\)\u3002</p> <p>P3966 [TJOI2013] \u5355\u8bcd</p> <p>Solution</p> <p>\u663e\u7136\u662f\u5efa\u7acb AC \u81ea\u52a8\u673a\uff0c\u7136\u540e\u6211\u4eec\u5728 Trie \u6811\u4e0a\u8dd1\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u90fd\u8ba9\u8ba1\u6570 +1\uff0c\u8868\u793a\u6211\u4eec\u7ecf\u8fc7\u4e86\u8fd9\u4e2a\u5b57\u7b26\u4e32\uff0c\u540c\u65f6\u8fd9\u4e2a\u5b57\u7b26\u4e32\u53ef\u4ee5\u4f5c\u4e3a\u522b\u7684\u4e32\u7684\u540e\u7f00\u51fa\u73b0\uff0c\u6240\u4ee5\u6240\u6709\u8fd9\u4e2a\u8282\u70b9\u8fd8\u8981\u52a0\u4e0a\u6240\u6709 fail \u5b50\u6811\u548c\u3002</p> <p>\u7edf\u8ba1\u7684\u65f6\u5019\u5012\u7740\u8dd1\u4e00\u904d\u7edf\u8ba1\u5b50\u6811\u548c\u5373\u53ef\uff08\u8fd9\u91cc\u662f\u6309\u7167\u6784\u5efa AC \u81ea\u52a8\u673a\u65f6\u7684\u8282\u70b9\u5012\u5e8f\u8dd1\uff09\uff0c\u968f\u540e\u8f93\u51fa\u6bcf\u4e2a\u5b57\u7b26\u4e32\u6240\u5728\u7684\u8282\u70b9\u7b54\u6848\u3002</p> <p>P3121 [USACO15FEB] Censoring G</p> <p>Solution</p> <p>\u672c\u9898\u505a\u6cd5\u662f ACAM + \u6808\uff0c\u5bf9\u4e8e\u5355\u8bcd\u5efa ACAM\uff0c\u7136\u540e\u7528\u6587\u672c\u4e32\u53bb\u8dd1\uff0c\u5bf9\u4e8e\u8dd1\u5230\u7684\u6bcf\u4e2a\u70b9\u7528\u6808\u5b58\u8d77\u6765\uff0c\u8dd1\u5230\u4e00\u4e2a\u5355\u8bcd\u8282\u70b9\u4e0a\uff0c\u6211\u4eec\u5c31\u8df3\u56de\u8fd9\u4e2a\u5355\u8bcd\u957f\u5ea6\u5373\u53ef\u3002</p> <p>P5270 \u65e0\u8bba\u600e\u6837\u795e\u6811\u5927\u4eba\u90fd\u4f1a\u5220\u5e93\u8dd1\u8def</p> <p>Solution</p> <p>\u54c8\u5e0c\u597d\u9898\u3002</p> <p>\u5b66\u5230\u4e86\u7528\u54c8\u5e0c\u5982\u4f55\u5224\u65ad\u4efb\u610f\u6392\u5217\u662f\u5426\u76f8\u7b49\u3002\u5bf9\u6574\u4e2a\u503c\u57df\u5f04\u4e00\u4e2a\u968f\u673a\u6620\u5c04 \\(Num_i\\)\uff0c\u7136\u540e\u5bf9\u4e8e\u503c \\(i\\)\uff0c\u5b83\u5bf9\u54c8\u5e0c\u7684\u8d21\u732e\u5c31\u662f <code>qpow(Num[i], i)</code>\uff0c\u8fd9\u6837\u54c8\u5e0c\u51b2\u7a81\u7684\u6982\u7387\u5f88\u5c0f\u4e14\u53ef\u4ee5\u5224\u65ad\u662f\u5426\u4efb\u610f\u6392\u5217\u5747\u76f8\u7b49\u3002</p> <p>\u672c\u9898\u5bf9\u4e8e \\(q\\) \u8f83\u5c0f\u7684\u60c5\u51b5\uff0c\u7ef4\u62a4\u53cc\u6307\u9488\uff0c\u7136\u540e\u5bf9\u4e8e \\(q\\) \u5927\u7684\u60c5\u51b5\uff0c\u4e00\u5b9a\u662f\u5faa\u73af\u7684\uff0c\u5468\u671f\u4e3a \\(m\\)\uff0c\u6545\u53ef\u4ee5\u6c42\u89e3\u3002</p> <p>P5537\u3010XR-3\u3011\u7cfb\u7edf\u8bbe\u8ba1</p> <p>Solution</p> <p>\u55b5\u55b5\u9898\u3002</p> <p>\u54c8\u5e0c\u7684\u53e6\u4e00\u4e2a\u795e\u5947\u7528\u6cd5\uff0c\u5b83\u53ef\u4ee5\u8868\u793a\u4e00\u68f5\u6811\u7684\u7ed3\u6784\u3002</p> <p>\u7531\u4e8e\u672c\u9898\u4e2d\u6811\u7684\u7ed3\u6784\u662f\u4e0d\u6539\u53d8\u7684\uff0c\u6240\u4ee5\u4ece\u6839\u5230\u67d0\u4e00\u4e2a\u56fa\u5b9a\u70b9\u7684\u8def\u5f84\u4e5f\u662f\u4e0d\u53d8\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u54c8\u5e0c\u503c\u628a\u5b83\u8868\u793a\u51fa\u6765\u3002</p> <p>\u7136\u540e\u5728 \\([l, r]\\) \u533a\u95f4\u4e2d\uff0c\u6211\u4eec\u4e8c\u5206\u67e5\u627e\uff0c\u82e5\u6839\u5230 \\(x\\) \u8def\u7ebf\u7684\u54c8\u5e0c\u503c\u52a0\u4e0a\u4ece \\(l\\) \u5230\u6211\u4eec\u5224\u65ad\u4f4d\u7f6e\u7684 \\(a\\) \u6570\u7ec4\u7684\u54c8\u5e0c\u503c\u76f8\u7b49\uff0c\u5219\u8bf4\u660e\u53ef\u4ee5\u3002</p> <p>\u672c\u9898\u5361\u4e24\u4e2a \\(\\text{log}\\) \u505a\u6cd5\uff0c\u7528\u7ebf\u6bb5\u6811\u4e8c\u5206\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u4e00\u8fb9\u4e8c\u5206\u5224\u65ad\uff0c\u4e00\u8fb9\u5411\u4e0b\u9012\u5f52\u627e\u533a\u95f4\u7ebf\u6bb5\uff0c\u6240\u4ee5\u76f8\u7b49\u4e8e\u4e8c\u5206\u548c\u5224\u65ad\u8fc7\u7a0b\u4e00\u8d77\u89e3\u51b3\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(nlogn)\\)\uff0c\u4f46\u662f\u7ebf\u6bb5\u6811\u4e8c\u5206\u5e38\u6570\u8f83\u5927\uff0c\u5982\u679c\u7528\u6811\u72b6\u6570\u7ec4 + \u4e8c\u5206\u662f\u4e24\u4e2a \\(\\text{log}\\) \u7684\u505a\u6cd5\uff0c\u4f46\u662f\u5e38\u6570\u8f83\u5c0f\uff0c\u5bfc\u81f4\u65f6\u95f4\u4e0a\u5dee\u522b\u4e0d\u5927\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u3002</p> <p>\u672c\u9898\u8fd8\u5b66\u5230\u4e86 <code>pb_ds</code> \u7684\u7528\u6cd5\uff0c\u5177\u4f53\u5728\u6742\u9879\u4e2d\u53ef\u89c1\u3002\u5728\u4f7f\u7528 <code>map</code> \u8bb0\u5f55\u54c8\u5e0c\u503c\u7684\u65f6\u5019\uff0c\u5f80\u5f80\u53ef\u4ee5\u7528 <code>unordered_map</code> \u6216 <code>cc_hash_table</code> \u6765\u4ee3\u66ff\uff0c\u7528\u6cd5\u548c <code>map</code> \u4e00\u6837\u3002</p> <p>\u4ee5\u53ca\u672c\u9898\u5361\u6a21\u6570\uff0c\u4f46\u662f\u4e0d\u5361\u81ea\u7136\u6ea2\u51fa\u3002\u4e0b\u6b21\u9047\u5230\u54c8\u5e0c\u7684\u9898\u76ee\uff0c\u5982\u679c\u8fc7\u4e0d\u6389\u53ef\u4ee5\u8003\u8651\u591a\u6362\u51e0\u79cd\u6784\u9020\u54c8\u5e0c\u7684\u65b9\u5f0f\u3002</p> <p>P3426 [POI2005] SZA-Template</p> <p>Solution</p> <p>\u55b5\u55b5\u9898\u3002</p> <p>\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u4e00\u4e2a\u5370\u7ae0\u53ef\u4ee5\u5370\u51fa\u5b57\u7b26\u4e32 \\(S\\)\uff0c\u90a3\u4e48\u4e5f\u53ef\u4ee5\u5370\u51fa \\(fail_{|S|}\\)\uff0c\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u7b54\u6848\uff0c\u5176\u5b9e\u8981\u4e48\u662f\u957f\u5ea6 \\(n\\)\uff0c\u8981\u4e48\u662f \\(fail_n\\)\u3002\u6240\u4ee5\u53ea\u8981\u5224\u65ad\u80fd\u5426\u7528 \\(fail_n\\) \u7684\u7b54\u6848\u6765\u66f4\u65b0\u5373\u53ef\u3002\u5f00\u6876\u6570\u7ec4 <code>M[i]</code> \u8868\u793a\u957f\u5ea6\u4e3a \\(i\\) \u53ef\u4ee5\u5370\u51fa\u7684\u6700\u957f\u957f\u5ea6\u3002\u90a3\u4e48\u5982\u679c\u6709 <code>M[fail[n]] + fail[n] &gt;= n</code>\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u53ef\u4ee5\u7528 <code>ans[fail[n]]</code> \u6765\u66f4\u65b0\u3002</p> <p>\u6ce8\u610f\u8fd9\u91cc\u4e0d\u80fd\u662f <code>fail[n] + fail[n] &gt;= n</code>\uff0c\u56e0\u4e3a\u53ef\u80fd\u6709\u591a\u4e2a \\(n\\) \u90fd\u6709\u76f8\u540c\u7684 <code>fail[n]</code>\uff0c\u6240\u4ee5 <code>fail[n]</code> \u53ef\u4ee5\u66f4\u65b0\u5230\u7684\u957f\u5ea6\u53ef\u80fd\u5f88\u957f\u3002</p> <p>P3193 [HNOI2008] GT\u8003\u8bd5</p> <p>Solution</p> <p>\u591a\u65b9\u9762\u7ed3\u5408\u7684\u597d\u9898\u3002</p> <p>\u6211\u4eec\u8bbe \\(f_{i, j}\\) \u8868\u793a\u957f\u4e32\u5339\u914d\u5230\u7b2c \\(i\\) \u4f4d\u65f6\uff0c\u77ed\u4e32\u6070\u597d\u5339\u914d\u5230\u7b2c \\(j\\) \u4f4d\u7684\u65b9\u6848\u6570\u3002\u90a3\u4e48\u6700\u7ec8\u7684\u7b54\u6848\u5c31\u662f \\(\\sum_{j = 0}^{m - 1} f_{n, j}\\)\u3002</p> <p>\u8003\u8651\u4ece \\(f_{i, j}\\) \u8f6c\u79fb\uff0c\u5b83\u5f80\u540e\u589e\u52a0\u4e00\u4e2a\u5b57\u7b26 \\(i + 1\\) \u540e\uff0c\u53ef\u80fd\u5339\u914d\u4e0a \\(j + 1\\)\uff0c\u4e5f\u53ef\u80fd\u6ca1\u5339\u914d\u4e0a\uff0c\u6b64\u65f6\u53ef\u80fd\u4f1a\u5339\u914d\u4e0a\u522b\u7684\u524d\u7f00\uff0c\u5373\u5bf9 \\(f_{i + 1, k}\\) \u9020\u6210\u8d21\u732e\uff0c\u6211\u4eec\u8bb0\u8d21\u732e\u4e3a \\(g_{i, k}\\)\uff0c\u8fd9\u4e2a \\(g_{i, j}\\) \u8868\u793a\u5728\u524d\u7f00 \\(i\\) \u540e\u6709\u51e0\u79cd\u65b9\u6848\u53ef\u4ee5\u53d8\u6210\u524d\u7f00 \\(j\\)\u3002\u8fd9\u4e2a\u6570\u7ec4\u662f\u56fa\u5b9a\u7684\uff0c\u53ef\u4ee5\u63d0\u524d\u5904\u7406\u51fa\u6765\uff0c\u5229\u7528\u7684\u662f kmp \u4e0d\u65ad\u5f80\u524d\u8df3\uff0c\u6c42\u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u5339\u914d\u4e0a\u3002</p> <p>\u89c2\u5bdf\u52a8\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\\(f_{i, j} = \\sum_{k = 0}^{m - 1} f_{i - 1, k}g_{k, j}\\)\uff0c\u8fd9\u662f\u77e9\u9635\u4e58\u6cd5 \\(F_{i} = F_{i - 1}G\\)\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u77e9\u9635\u5feb\u901f\u5e42\u4f18\u5316\u5373\u53ef\u3002</p> <p>P3294 [SCOI2016] \u80cc\u5355\u8bcd</p> <p>Solution</p> <p>\u672c\u9898\u9898\u610f\u662f\u8ba9\u4f9d\u6b21\u653e\u5165\u6bcf\u4e2a\u6587\u672c\u4e32\uff0c\u5f53\u653e\u5165\u8be5\u6587\u672c\u4e32\u540e\uff0c\u8fd9\u4e2a\u6587\u672c\u4e32\u7684\u771f\u540e\u7f00\u4e5f\u4e00\u5b9a\u90fd\u88ab\u653e\u8fdb\u53bb\uff0c\u8bbe\u6240\u6709\u4e0d\u4e3a\u5176\u4ed6\u6587\u672c\u4e32\u771f\u540e\u7f00\u7684\u6587\u672c\u4e32\u7684\u4f4d\u7f6e\u548c\u4e3a \\(S\\)\uff0c\u95ee\u653e\u5165\u65b9\u6cd5\u662f \\(S\\) \u6700\u5c0f\u3002</p> <p>\u8fd9\u9898\u4e00\u4e2a\u5de7\u5999\u8f6c\u5316\u4e3a\u540e\u7f00\u53d8\u524d\u7f00\uff0c\u8fd9\u6837\u6ee1\u8db3\u771f\u524d\u7f00\u7684\u6761\u4ef6\u5c31\u53ef\u4ee5\u5728 Trie \u6811\u4e0a\u5b8c\u6210\u3002\u7136\u540e\u6211\u4eec\u8ba9\u6240\u6709\u6587\u672c\u4e32\u7684\u524d\u7f00\u8282\u70b9\u8fde\u5411\u5b83\u81ea\u5df1\uff0c\u4e5f\u5c31\u662f\u8bf4\u8981\u653e\u8fd9\u4e2a\u8282\u70b9\uff0c\u8981\u5148\u628a\u5b83\u7684\u7236\u8282\u70b9\u90fd\u5148\u653e\u5165\u3002\u6240\u4ee5\u6211\u4eec\u91cd\u6784\u4e86 Trie \u6811\uff0c\u53ea\u53d6 Trie \u6811\u4e0a\u8868\u793a\u6587\u672c\u4e32\u7ed3\u675f\u4f4d\u7f6e\u7684\u90a3\u51e0\u4e2a\u8282\u70b9\u3002\u4e0d\u96be\u8bc1\u660e\u5bf9\u4e8e\u4e00\u68f5\u5b50\u6811\uff0c\u6211\u4eec\u6bcf\u6b21\u8981\u6309\u513f\u5b50\u6570\u4ece\u5c0f\u653e\u5927\u653e\u5165\u6bcf\u4e2a\u8282\u70b9\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u5148\u628a\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6309\u513f\u5b50\u6570\u6392\u5e8f\uff0c\u7136\u540e\u7528 dfs \u5e8f\u7b97\u8d21\u732e\u5373\u53ef\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u8d21\u732e\u5c31\u662f\u5b83\u7684 dfs \u5e8f\u51cf\u53bb\u7236\u4eb2\u7684 dfs \u5e8f\u3002</p>"},{"location":"acm/algorithm/string/topic1/#_13","title":"\u53c2\u8003\u8d44\u6599","text":"<p>\u5b57\u7b26\u4e32\u57fa\u7840</p> <p>\u5e38\u89c1\u5b57\u7b26\u4e32\u7b97\u6cd5</p>"},{"location":"acm/algorithm/string/topic2/","title":"\u8fdb\u9636\u5b57\u7b26\u4e32","text":""},{"location":"acm/algorithm/string/topic2/#_1","title":"\u8fdb\u9636\u5b57\u7b26\u4e32","text":""},{"location":"acm/algorithm/string/topic2/#pam","title":"PAM","text":"<p>\u56de\u6587\u81ea\u52a8\u673a\u5373\u56de\u6587\u6811\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\)\u3002</p>"},{"location":"acm/algorithm/string/topic2/#_2","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<p>\u5b57\u7b26\u4e32\u4e0b\u6807\u4ece \\(1\\) \u5f00\u59cb\u3002</p> <p>PAM \u4e2d \\(1\\) \u53f7\u70b9\u662f\u5947\u56de\u6587\u7684\u6839\uff0c\\(0\\) \u53f7\u70b9\u662f\u5076\u56de\u6587\u7684\u6839\u3002\u6545\u5b9e\u9645\u6709\u542b\u4e49\u7684\u70b9\u662f \\(2 \\sim \\text{tot}\\)\u3002</p> <p>\u6bcf\u4e2a\u8282\u70b9\u5bf9\u5e94\u4e00\u4e2a\u56de\u6587\u4e32\uff0c<code>fail[i]</code> \u8868\u793a\u548c\u8fd9\u4e2a \\(i\\) \u56de\u6587\u4e32\u540c\u53f3\u7aef\u70b9\u7684\u6700\u957f\u56de\u6587\u4e32\u3002\u6bcf\u4e2a\u8282\u70b9\u5747\u6709 <code>fail</code> \u8fde\u63a5\u3002</p> <p>\u53ef\u4ee5\u6c42\u51fa\u672c\u8d28\u4e0d\u540c\u56de\u6587\u4e32\u4e2a\u6570\uff0c\u6bcf\u4e2a\u56de\u6587\u4e32\u51fa\u73b0\u6b21\u6570\uff0c\u957f\u5ea6\u3002\u677f\u5b50\u91cc\u53ea\u6c42\u51fa\u8fd9\u4e2a\u56de\u6587\u4f5c\u4e3a\u6700\u957f\u56de\u6587\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u82e5\u6c42\u5168\u90e8\u51fa\u73b0\u7684\u6b21\u6570\u8981\u4ece\u540e\u5f80\u524d\u5bf9 <code>cnt</code> \u6c42\u548c\u3002</p> <pre><code>const int N = 500005;\nstruct PAM { \n    int fail[N], ch[N][26], cnt[N], len[N];\n    int tot, last, p, q;\n    std::string s;\n    void init() {\n        tot = last = 0;\n        s[0] = -1, fail[0] = 1, last = 0;\n        len[0] = 0, len[1] = -1, tot = 1; \n        memset(ch[0], 0, sizeof(ch[0]));\n        memset(ch[1], 0, sizeof(ch[1]));\n        std::cin &gt;&gt; s;\n        s = ' ' + s;\n    }\n    int newnode(int x) {\n        len[++tot] = x;\n        memset(ch[tot], 0, sizeof(ch[tot]));\n        return tot;\n    }\n    int getfail(int x, int n) {\n        while(s[n - 1 - len[x]] != s[n]) x = fail[x];\n        return x;\n    }\n    void build() {\n        for(int i = 1; s[i]; ++i){\n            int x = s[i] - 'a';\n            p = getfail(last, i);\n            if(!ch[p][x]) {\n                // \u5982\u679c\u6709\u4e86\u8f6c\u79fb\u5c31\u4e0d\u7528\u5efa\u4e86\uff0c\u5426\u5219\u8981\u65b0\u5efa \n                // \u524d\u540e\u90fd\u52a0\u4e0a\u65b0\u5b57\u7b26\uff0c\u6240\u4ee5\u65b0\u56de\u6587\u4e32\u957f\u5ea6\u8981\u52a02 \n                q = newnode(len[p] + 2);\n                // \u56e0\u4e3afail\u6307\u5411\u7684\u5f97\u662f\u539f\u4e32\u7684\u4e25\u683c\u540e\u7f00\uff0c\u6240\u4ee5\u8981\u4ecep\u7684fail\u5f00\u59cb\u627e\u8d77 \n                fail[q] = ch[getfail(fail[p], i)][x]; \n                // \u8bb0\u5f55\u8f6c\u79fb \n                ch[p][x] = q;\n            }\n            ++cnt[last = ch[p][x]];\n        }\n    }\n} pam;\n</code></pre>"},{"location":"acm/algorithm/string/topic2/#_3","title":"\u4e60\u9898","text":"<p>P4287 [SHOI2011] \u53cc\u500d\u56de\u6587</p> <p>Solution</p> <p>\u5982\u679c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\u66b4\u529b\u8df3 <code>fail</code> \u4e00\u5b9a\u4f1a\u8d85\u65f6\uff0c\u6240\u4ee5\u6211\u4eec\u518d\u5f00\u4e00\u4e2a\u6570\u7ec4 <code>kkk[i]</code> \u8868\u793a\u8fd9\u4e2a <code>i</code> \u80fd\u5f80\u4e0a\u8df3\u7684 <code>fail</code> \u4e2d\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e <code>i</code> \u4e00\u534a\u4e2d\u6700\u957f\u7684\u90a3\u4e2a\u56de\u6587\u3002 </p> <p>\u6240\u4ee5\u6211\u4eec\u5224\u65ad\u4e00\u4e2a\u8282\u70b9\u80fd\u5426\u4f5c\u4e3a\u53cc\u500d\u56de\u6587\u53ea\u7528\u5224\u65ad <code>kkk[i]</code> \u7684\u957f\u5ea6\u662f\u5426\u6070\u597d\u4e3a <code>len[i]</code> \u7684\u4e00\u534a\u5e76\u4e14 <code>len[i]</code> \u662f \\(4\\) \u7684\u500d\u6570\u3002</p> <p>P4762 [CERC2014] Virus synthesis</p> <p>Solution</p> <p>\u56de\u6587\u81ea\u52a8\u673a\u597d\u9898\u3002</p> <p>\u6211\u4eec\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\uff0c\u6700\u7ec8\u4e32\u4e00\u5b9a\u662f\u4e00\u4e2a\u56de\u6587\u52a0\u4e0a\u82e5\u5e72\u6b21\u5355\u4e2a\u52a0\u5f97\u6765\u7684\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528 dp \u6c42\u51fa\u6587\u672c\u4e32\u4e2d\u6bcf\u4e00\u4e2a\u56de\u6587\u4e32\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\uff0c\u7136\u540e \\(ans = \\min \\{|s| - |i| + f_i\\}\\)\u3002</p> <p>\u800c\u4e14\u8fd9\u91cc\u6ce8\u610f\uff0c\u6211\u4eec\u6c42\u7684\u56de\u6587\u662f\u53ea\u6c42\u5076\u56de\u6587\u7684\u7b54\u6848\uff0c\u56e0\u4e3a\u7ffb\u8f6c\u7684\u65f6\u5019\u5bf9\u5947\u56de\u6587\u64cd\u4f5c\u4f1a\u7834\u574f\u5176\u7ed3\u6784\u3002</p> <p>\u6211\u4eec\u5229\u7528\u4e0a\u4e2a\u4f8b\u9898\u4e2d\u7684 <code>kkk</code> \u6570\u7ec4\uff0c\u6240\u4ee5\u8f6c\u79fb\u7684\u65f6\u5019 \\(f_v = \\min \\{f_v, f_{kkk} + len_v - len_{kkk}\\}\\)\u3002</p> <p>\u4ee5\u53ca\uff0c\u6211\u4eec\u8f6c\u79fb\u7684\u65f6\u5019\u679a\u4e3e\u6bcf\u6b21\u4e24\u8fb9\u65b0\u589e\u7684\u5b57\u7b26\u662f\u4ec0\u4e48\uff0c\u82e5\u4ece\u72b6\u6001 \\(u\\) \u53ef\u4ee5\u8f6c\u79fb\u5230\u72b6\u6001 \\(v\\)\uff0c \u5219\u6709 \\(f_v = \\min \\{f_v, f_u + 1\\}\\)\u3002 \u56e0\u4e3a\u8fd9\u662f\u5076\u5bf9\u79f0\u4e32\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u7ffb\u6298\u653e\u5230\u6700\u540e\u505a\u3002</p>"},{"location":"acm/algorithm/string/topic2/#sa","title":"SA","text":""},{"location":"acm/algorithm/string/topic2/#_4","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<p>\u4e0b\u6807\u4ece \\(1\\) \u5f00\u59cb\u3002</p> <p>\u5b9a\u4e49 <code>rk[i]</code> \u8868\u793a <code>suf[i]</code> \u5728\u6240\u6709\u540e\u7f00\u4e2d\u7684\u5b57\u5178\u5e8f\u6392\u5e8f\u3002   </p> <p>\u5b9a\u4e49 <code>sa[i]</code> \u8868\u793a\u6392\u540d\u4e3a \\(i\\) \u7684\u540e\u7f00\u5f00\u59cb\u7684\u4f4d\u7f6e\u3002</p> <p>\u5b9a\u4e49 <code>ht[i]</code> \u8868\u793a <code>suf[sa[i - 1]]</code> \u4e0e <code>suf[sa[i]]</code> \u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u957f\u5ea6 \\(|\\text{lcp}(sa_{i - 1}, sa_i)|\\)\uff0c\u5373\u6392\u540d\u4e3a \\(i\\) \u548c \\(i - 1\\) \u7684\u540e\u7f00\u7684 LCP \u957f\u5ea6\u3002<code>ht[1]</code> \u672a\u5b9a\u4e49\uff0c\u4e00\u822c\u4e3a \\(0\\)\u3002</p> <pre><code>constexpr int N = 2e5 + 5;\nint ht[N], sa[N], rk[N];\nint ork[N], buc[N], id[N];\nvoid build(std::string s) {\n    int m = N - 1, p = 0;\n    int n = s.size() - 1;\n    for (int i = 1; i &lt;= n; i++) ork[i] = 0;    \n    for (int i = 1; i &lt;= n; i++) buc[i] = 0;\n    for(int i = 1; i &lt;= n; i++) buc[rk[i] = s[i]]++;\n    for(int i = 1; i &lt;= m; i++) buc[i] += buc[i - 1];\n    for(int i = n; i; i--) sa[buc[rk[i]]--] = i;\n    for(int w = 1; ; m = p, p = 0, w &lt;&lt;= 1) { // m \u8868\u793a\u6876\u7684\u5927\u5c0f, \u7b49\u4e8e\u4e0a\u4e00\u8f6e\u7684 rk \u6700\u5927\u503c.\n        for(int i = n - w + 1; i &lt;= n; i++) id[++p] = i; // \u5faa\u73af\u987a\u5e8f\u65e0\u5173, \u987a\u5e8f\u5012\u5e8f\u90fd\u53ef\u4ee5, \u4e0d\u5f71\u54cd\u6700\u7ec8\u7ed3\u679c.\n        for(int i = 1; i &lt;= n; i++) if(sa[i] &gt; w) id[++p] = sa[i] - w;\n        memset(buc, 0, m + 1 &lt;&lt; 2); // \u6ce8\u610f\u6e05\u7a7a\u6876.\n        memcpy(ork, rk, n + 1 &lt;&lt; 2); // \u6ce8\u610f\u62f7\u8d1d rk -&gt; ork.\n        p = 0;\n        for(int i = 1; i &lt;= n; i++) buc[rk[i]]++;\n        for(int i = 1; i &lt;= m; i++) buc[i] += buc[i - 1];\n        for(int i = n; i; i--) sa[buc[rk[id[i]]]--] = id[i]; // \u6ce8\u610f, \u5012\u5e8f\u679a\u4e3e\u4fdd\u8bc1\u8ba1\u6570\u6392\u5e8f\u7684\u7a33\u5b9a\u6027. \u57fa\u6570\u6392\u5e8f\u7684\u6b63\u786e\u6027\u57fa\u4e8e\u5185\u5c42\u8ba1\u6570\u6392\u5e8f\u7684\u7a33\u5b9a\u6027.\n        for(int i = 1; i &lt;= n; i++) rk[sa[i]] = ork[sa[i - 1]] == ork[sa[i]] &amp;&amp; ork[sa[i - 1] + w] == ork[sa[i] + w] ? p : ++p; // \u539f\u6392\u540d\u4e8c\u5143\u7ec4\u76f8\u540c\u5219\u65b0\u6392\u540d\u76f8\u540c, \u5426\u5219\u6392\u540d +1.\n        if(p == n) break; // n \u4e2a\u6392\u540d\u4e92\u4e0d\u76f8\u540c, \u6392\u5e8f\u5b8c\u6210.\n    }\n    for(int i = 1, k = 0; i &lt;= n; i++) {\n        if(k) k--;\n        while(s[i + k] == s[sa[rk[i] - 1] + k]) k++; // sa[rk[i]] = i, \u9700\u8981\u4fdd\u8bc1 s[0] \u548c s[n + 1] \u4e3a\u7a7a\u5b57\u7b26 (\u591a\u6d4b\u6e05\u7a7a), \u5426\u5219\u53ef\u80fd\u51fa\u9519.\n        ht[rk[i]] = k;\n    }\n}\n</code></pre>"},{"location":"acm/algorithm/string/topic2/#_5","title":"\u76f8\u5173\u6027\u8d28","text":"<p>\u4efb\u610f\u4e24\u4e2a\u540e\u7f00\u7684 LCP</p> <p>\u8bbe <code>rk[i]</code> &lt; <code>rk[j]</code>\uff0c\u5219 \\(|\\text{lcp}(i, j)| = \\min_{p = rk_i + 1}^{rk_j}\\{ht_p\\}\\)\u3002</p> <p>\u672c\u8d28\u4e0d\u540c\u5b50\u4e32\u6570</p> <p>\u4e2a\u6570\u4e3a </p> \\[ \\binom{n + 1}{2} - \\sum_{i = 2}^n ht_i \\]"},{"location":"acm/algorithm/string/topic2/#_6","title":"\u4e60\u9898","text":""},{"location":"acm/algorithm/string/topic2/#sam","title":"SAM","text":""},{"location":"acm/algorithm/string/topic2/#sam_1","title":"SAM \u7684\u6784\u9020","text":"<p>\u5176\u4e2d parent tree\uff08\u5373\u540e\u7f00\u94fe\u63a5\u6811\uff09 \u6309\u7167\u5b50\u4e32\u7684 endpos \u5c06\u5176\u5212\u5206\u4e3a\u82e5\u5e72\u96c6\u5408\uff0c\u6bcf\u4e2a\u96c6\u5408\u4ea4\u96c6\u4e3a\u7a7a\u3002</p> <p>\u800c\u540e\u7f00\u81ea\u52a8\u673a\u4e0a\u7684\u6bcf\u4e2a\u8f6c\u79fb\u8fb9\u90fd\u53ef\u4ee5\u5f62\u6210\u4e00\u4e2a\u5b50\u4e32\u3002\u6211\u4eec\u7ef4\u62a4\u7684\u5c31\u662f\u540e\u7f00\u81ea\u52a8\u673a\u548c parent tree\u3002</p>"},{"location":"acm/algorithm/string/topic2/#_7","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<p>\u6839\u8282\u70b9\u662f \\(1\\)\u3002</p> <pre><code>struct SAM {\n    static constexpr int ALPHABET_SIZE = 26;\n    struct Node {\n        int len;\n        int fa; // \u94fe\u63a5\u8fb9\uff0c\u4e5f\u5373 parent tree \u7236\u8fb9\u3002\n        std::array&lt;int, ALPHABET_SIZE&gt; next; // \u8f6c\u79fb\u8fb9\n        Node() : len{}, fa{}, next{} {}\n    };\n    int las, tot; // \u6700\u540e\u4e00\u4e2a\u70b9\u4ee5\u53ca\u603b\u70b9\u6570\n    std::vector&lt;Node&gt; t;\n    SAM() {\n        init();\n    }\n    void init() {\n        t.assign(3, Node());\n        las = tot = 1;\n    }\n    void add(int c) {\n        int p = las, np = ++tot;\n        las = np;\n        t.emplace_back();\n        t[np].len = t[p].len + 1;\n        for (; p &amp;&amp; !t[p].next[c]; p = t[p].fa) t[p].next[c] = np;\n        if (!p) t[np].fa = 1;\n        else {\n            int v = t[p].next[c];\n            if (t[v].len == t[p].len + 1) t[np].fa = v;\n            else { \n                int nv = ++tot;\n                t.emplace_back();\n                t[nv] = t[v];\n                t[nv].len = t[p].len + 1;\n                for (; p &amp;&amp; (t[p].next[c] == v); p = t[p].fa) t[p].next[c] = nv;\n                t[np].fa = t[v].fa = nv;\n            } \n\n        }\n    }\n    void add(char c, char offset = 'a') {\n        return add(c - offset);\n    }\n\n    int next(int p, int x) {\n        return t[p].next[x];\n    }\n\n    int next(int p, char c, char offset = 'a') {\n        return next(p, c - 'a');\n    }\n\n    int fa(int p) {\n        return t[p].fa;\n    }\n\n    int len(int p) {\n        return t[p].len;\n    }\n\n    int size() {\n        return t.size();\n    }\n\n};\n</code></pre>"},{"location":"acm/algorithm/string/topic2/#_8","title":"\u4f8b\u9898","text":"<p>1. SAM \u53ef\u4ee5\u6c42\u51fa\u6240\u6709\u672c\u8d28\u4e0d\u540c\u5b50\u4e32\u7684\u51fa\u73b0\u6b21\u6570\u3002</p> <p>P3804 \u3010\u6a21\u677f\u3011\u540e\u7f00\u81ea\u52a8\u673a\uff08SAM\uff09</p> <p>\u8bf7\u4f60\u6c42\u51fa \\(S\\) \u7684\u6240\u6709\u51fa\u73b0\u6b21\u6570\u4e0d\u4e3a \\(1\\) \u7684\u5b50\u4e32\u7684\u51fa\u73b0\u6b21\u6570\u4e58\u4e0a\u8be5\u5b50\u4e32\u957f\u5ea6\u7684\u6700\u5927\u503c\u3002</p> <p>Solution</p> <p>\u5229\u7528 SAM \u6784\u9020\u51fa parent tree\uff0cparent tree \u53ef\u4ee5\u8868\u793a\u51fa\u5168\u90e8\u7684\u5b50\u4e32\u3002\u5728 parent tree \u4e0a\u8dd1\u4e00\u4e2a dfs \u5373\u53ef\u7edf\u8ba1\u51fa\u6bcf\u4e2a\u5b50\u4e32\u51fa\u73b0\u7684\u6b21\u6570\u3002</p> <pre><code>const int N = 4e6 + 6;\ni64 cnt[N];\n\nstruct SAM {\n    static constexpr int ALPHABET_SIZE = 26;\n    struct Node {\n        int len;\n        int fa; // \u94fe\u63a5\u8fb9\uff0c\u4e5f\u5373 parent tree \u7236\u8fb9\u3002\n        std::array&lt;int, ALPHABET_SIZE&gt; next; // \u8f6c\u79fb\u8fb9\n        Node() : len{}, fa{}, next{} {}\n    };\n    int las, tot; // \u6700\u540e\u4e00\u4e2a\u70b9\u4ee5\u53ca\u603b\u70b9\u6570\n    std::vector&lt;Node&gt; t;\n    SAM() {\n        init();\n    }\n    void init() {\n        t.assign(3, Node());\n        las = tot = 1;\n    }\n    void add(int c) {\n        int p = las, np = ++tot;\n        las = np;\n        t.emplace_back();\n        t[np].len = t[p].len + 1;\n        for (; p &amp;&amp; !t[p].next[c]; p = t[p].fa) t[p].next[c] = np;\n        if (!p) t[np].fa = 1;\n        else {\n            int v = t[p].next[c];\n            if (t[v].len == t[p].len + 1) t[np].fa = v;\n            else { \n                int nv = ++tot;\n                t.emplace_back();\n                t[nv] = t[v];\n                t[nv].len = t[p].len + 1;\n                for (; p &amp;&amp; (t[p].next[c] == v); p = t[p].fa) t[p].next[c] = nv;\n                t[np].fa = t[v].fa = nv;\n            } \n\n        }\n    }\n    void add(char c, char offset = 'a') {\n        return add(c - offset);\n    }\n\n    int next(int p, int x) {\n        return t[p].next[x];\n    }\n\n    int next(int p, char c, char offset = 'a') {\n        return next(p, c - 'a');\n    }\n\n    int fa(int p) {\n        return t[p].fa;\n    }\n\n    int len(int p) {\n        return t[p].len;\n    }\n\n    int size() {\n        return t.size();\n    }\n\n};\n\nstd::vector&lt;int&gt; e[N];\nSAM sam;\ni64 ans = 0;\n\nvoid dfs(int u) {\n    for(auto v: e[u]) {\n        dfs(v);\n        cnt[u] += cnt[v];\n    }\n    if(cnt[u] &gt; 1) ans = std::max(ans, 1ll * cnt[u] * sam.len(u));\n}\n\nvoid solve() {\n    std::string s;\n    std::cin &gt;&gt; s;\n    for(int i = 0; i &lt; s.size(); i++) {\n        sam.add(s[i]);\n    }\n    int tmp = 1;\n    for (int i = 0; i &lt; s.size(); i++) {\n        tmp = sam.next(tmp, s[i]);\n        cnt[tmp] = 1;\n    }\n    for(int i = 2; i &lt;= sam.tot; i++) e[sam.fa(i)].push_back(i); \n    dfs(1);\n    std::cout &lt;&lt; ans &lt;&lt; '\\n'; \n}\n</code></pre> <p>2. SAM \u53ef\u4ee5\u6c42\u51fa\u6240\u6709\u672c\u8d28\u4e0d\u540c\u5b50\u4e32\u7684\u603b\u4e2a\u6570\u3002</p> <p>P2408 \u4e0d\u540c\u5b50\u4e32\u4e2a\u6570</p> <p>\u7ed9\u4f60\u4e00\u4e2a\u957f\u4e3a \\(n\\) \u7684\u5b57\u7b26\u4e32\uff0c\u6c42\u4e0d\u540c\u7684\u5b50\u4e32\u7684\u4e2a\u6570\u3002</p> <p>Solution</p> <p>\u672c\u9898\u6709\u4e24\u79cd\u65b9\u6cd5\u3002</p> <p>\u65b9\u6cd5\u4e00\uff1a</p> <p>parent tree \u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u7684\u4e32\u6ca1\u6709\u4ea4\u96c6\uff0c\u800c\u4e14\u4e00\u5b9a\u8868\u793a\u4e86\u6240\u6709\u7684\u4e32\u3002\u6545\u628a\u6240\u6709\u8282\u70b9\u8868\u793a\u7684\u4e32\u7684\u4e2a\u6570\u52a0\u8d77\u6765\u5373\u4e3a\u7b54\u6848\u3002</p> <p>\\(ans = \\sum sam.len(i) - sam.len(sam.fa(i))\\)\u3002</p> <pre><code>const int N = 4e6 + 6;\ni64 cnt[N];\n\nstruct SAM {\n    static constexpr int ALPHABET_SIZE = 26;\n    struct Node {\n        int len;\n        int fa; // \u94fe\u63a5\u8fb9\uff0c\u4e5f\u5373 parent tree \u7236\u8fb9\u3002\n        std::array&lt;int, ALPHABET_SIZE&gt; next; // \u8f6c\u79fb\u8fb9\n        Node() : len{}, fa{}, next{} {}\n    };\n    int las, tot; // \u6700\u540e\u4e00\u4e2a\u70b9\u4ee5\u53ca\u603b\u70b9\u6570\n    std::vector&lt;Node&gt; t;\n    SAM() {\n        init();\n    }\n    void init() {\n        t.assign(3, Node());\n        las = tot = 1;\n    }\n    void add(int c) {\n        int p = las, np = ++tot;\n        las = np;\n        t.emplace_back();\n        t[np].len = t[p].len + 1;\n        for (; p &amp;&amp; !t[p].next[c]; p = t[p].fa) t[p].next[c] = np;\n        if (!p) t[np].fa = 1;\n        else {\n            int v = t[p].next[c];\n            if (t[v].len == t[p].len + 1) t[np].fa = v;\n            else { \n                int nv = ++tot;\n                t.emplace_back();\n                t[nv] = t[v];\n                t[nv].len = t[p].len + 1;\n                for (; p &amp;&amp; (t[p].next[c] == v); p = t[p].fa) t[p].next[c] = nv;\n                t[np].fa = t[v].fa = nv;\n            } \n\n        }\n    }\n    void add(char c, char offset = 'a') {\n        return add(c - offset);\n    }\n\n    int next(int p, int x) {\n        return t[p].next[x];\n    }\n\n    int next(int p, char c, char offset = 'a') {\n        return next(p, c - 'a');\n    }\n\n    int fa(int p) {\n        return t[p].fa;\n    }\n\n    int len(int p) {\n        return t[p].len;\n    }\n\n    int size() {\n        return t.size();\n    }\n\n};\n\nstd::vector&lt;int&gt; e[N];\nSAM sam;\ni64 ans = 0;\n\nvoid solve() {\n    int n;\n    std::cin &gt;&gt; n;\n    std::string s;\n    std::cin &gt;&gt; s;\n    for(int i = 0; i &lt; n; i++) {\n        sam.add(s[i]);\n    }\n    i64 ans = 0;\n    for(int i = 2; i &lt;= sam.tot; i++) ans += sam.len(i) - sam.len(sam.fa(i)); \n    dfs(1);\n    std::cout &lt;&lt; ans &lt;&lt; '\\n'; \n}\n</code></pre> <p>\u65b9\u6cd5\u4e8c\uff1a</p> <p>SAM \u672c\u8d28\u662f\u4e00\u4e2a DAG\uff0c\u4ece\u6839\u8282\u70b9\u6240\u8d70\u7684\u8f6c\u79fb\u8fb9\u53ef\u4ee5\u5f62\u6210\u4e00\u4e2a\u5b50\u4e32\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e0a\u9762\u8dd1 dp\uff0c\u6211\u4eec\u4ee4 <code>f[u]</code> \u8868\u793a\u4ece <code>u</code> \u5f00\u59cb\u7684\u53ef\u4ee5\u5f62\u6210\u7684\u5b57\u7b26\u4e32\u4e2a\u6570\u3002\u5e76\u4e14\u7531\u4e8e\u6bcf\u4e2a\u9876\u70b9\u51fa\u53d1\u5f62\u6210\u7684\u4e32\u90fd\u662f\u4e92\u4e0d\u76f8\u540c\u7684\uff0c\u90a3\u4e48\u8f6c\u79fb\u7684\u65f6\u5019\u662f <code>f[u] += f[v]</code>\uff0c\u518d\u7b97\u4e0a\u81ea\u5df1 <code>f[u]++</code>\u3002</p> <p>\u6700\u540e\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\u8981\u51cf\u53bb\u7a7a\u4e32\uff0c\u7b54\u6848\u5373\u4e3a <code>f[1] - 1</code>\u3002</p> <pre><code>void dfs(int u) {\n    if (cnt[u]) return ;\n    for (int i = 0; i &lt; 26; i++) {\n        int v = sam.next(u, i); \n        if (v) dfs(v);\n        cnt[u] += cnt[v];\n    }\n    cnt[u]++;\n}\n\nvoid solve() {\n    int n;\n    std::cin &gt;&gt; n;\n    std::string s;\n    std::cin &gt;&gt; s;\n    for(int i = 0; i &lt; n; i++) {\n        sam.add(s[i]);\n    }\n    dfs(1);\n    std::cout &lt;&lt; cnt[1] - 1 &lt;&lt; '\\n'; \n}\n</code></pre>"},{"location":"acm/algorithm/string/topic2/#bitset","title":"bitset \u4e71\u641e","text":""},{"location":"acm/algorithm/string/topic2/#_9","title":"\u7b97\u6cd5\u7b80\u4ecb","text":"<p>\u8bbe\u6587\u672c\u4e32 \\(s\\)\uff0c\u591a\u4e2a\u6a21\u5f0f\u4e32 \\(t\\)\uff0c\u6211\u4eec\u9996\u5148\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5b57\u7b26\u90fd\u5f00\u4e00\u4e2a bitset \u8bb0\u5f55\u6bcf\u4e2a\u5b57\u7b26\u5728\u6587\u672c\u4e32\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002</p> <p>\u7136\u540e\u5bf9\u4e8e\u6bcf\u6b21\u7684\u6a21\u5f0f\u4e32\uff0c\u6211\u4eec\u65b0\u5f00\u4e00\u4e2a bitset \u8bb0\u5f55\u7b54\u6848\uff0c\u82e5 \\(Ans[i] = 1\\) \u5219\u8868\u793a\u7b2c \\(i\\) \u4f4d\u53ef\u4ee5\u662f\u6a21\u5f0f\u4e32\u7ed3\u675f\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u904d\u5386\u6574\u4e2a\u6a21\u5f0f\u4e32\uff0c\u7136\u540e\u901a\u8fc7\u5de6\u79fb + \u6309\u4f4d\u4e0e\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u5224\u65ad\u6587\u672c\u4e32\u4e2d\u54ea\u4e9b\u4f4d\u7f6e\u53ef\u4ee5\u8ba9\u5b57\u7b26\u4e32\u7684\u8fd9\u4e2a\u4f4d\u7f6e\u6ee1\u8db3\u6761\u4ef6\uff0c\u6700\u540e\u53ef\u4ee5\u901a\u8fc7\u8bb0\u5f55 \\(Ans\\) \u91cc\u6709\u51e0\u4e2a \\(1\\) \u6765\u5224\u65ad\u6a21\u5f0f\u4e32\u51fa\u73b0\u4e86\u51e0\u6b21\u3002</p> <p>\u8fd9\u6837\u6211\u4eec\u5c31\u5728 \\(O\\left(\\dfrac{|s|\\sum |t|}{\\omega}\\right)\\) \u7684\u65f6\u95f4\u5185\u6c42\u51fa\u4e86\u6240\u6709\u6a21\u5f0f\u4e32\u5728\u6587\u672c\u4e32\u4e2d\u51fa\u73b0\u7684\u6240\u6709\u4f4d\u7f6e\u3002</p>"},{"location":"acm/algorithm/string/topic2/#_10","title":"\u4f8b\u9898","text":"<p>CF914F Substrings in a String</p> <p>Solution</p> <p>\u57fa\u672c\u4e0a\u5c31\u662f\u4e0a\u8ff0\u601d\u60f3\u7684\u6a21\u677f\u3002\u800c\u4e14 bitset \u4fee\u6539\u5341\u5206\u65b9\u4fbf\u3002</p> <p>\u6570\u636e\u8303\u56f4 \\(1e5\\)\uff0c\u65f6\u9650 \\(6s\\)\uff0c\u4e8e\u662f\u53ef\u4ee5\u5927\u529b\u4e71\u641e\u3002</p> <p>CF963D Frequency of String</p> <p>Solution</p> <p>\u6570\u636e\u8303\u56f4 \\(1e5\\)\uff0c\u65f6\u9650 \\(1.5s\\)\uff0c\u4f9d\u7136\u53ef\u4ee5 bitset \u4e71\u641e\u8fc7\u3002</p> <p>\u6211\u4eec\u6c42\u51fa\u6bcf\u4e2a\u6a21\u5f0f\u4e32\u51fa\u73b0\u7684\u4f4d\u7f6e\u5728\u5bf9\u76f8\u90bb \\(k\\) \u4e2a\u957f\u5ea6\u53d6 \\(\\text{min}\\) \u5373\u53ef\u3002</p> <p>\u8fd9\u91cc\u7528\u5230\u4e86 bitset \u91cc\u7684 <code>_Find_first()</code> \u548c <code>_Find_next()</code> \u51fd\u6570\u3002</p> <pre><code>const int N = 1e5 + 5;\nstd::bitset&lt;N&gt; c[30], tmp;\nint cnt[N], tot;\n\nvoid solve() {\n    std::string s;\n    std::cin &gt;&gt; s;\n    int q, len;\n    std::cin &gt;&gt; q;\n    len = s.size();\n    for (int i = 0; i &lt; 26; i++) c[i].reset();\n    for (int i = 0; i &lt; len; i++) c[s[i] - 'a'][i] = 1;\n    while (q--) {\n        int k;\n        std::string m;\n        std::cin &gt;&gt; k &gt;&gt; m;\n        int ans = 0x3f3f3f3f;\n        tmp.set(); tot = 0;\n        int L = m.size();\n        for (int i = 0; i &lt; L; i++) {\n            tmp &amp;= (c[m[i] - 'a'] &lt;&lt; (L - i - 1));\n        }       \n        for (int i = tmp._Find_first(); i != N; i = tmp._Find_next(i)) {\n            cnt[++tot] = i;\n        }\n        for (int i = k; i &lt;= tot; i++) {\n            ans = std::min(ans, cnt[i] - cnt[i - k + 1] + L);\n        }\n        if (ans == 0x3f3f3f3f) std::cout &lt;&lt; \"-1\\n\";\n        else std::cout &lt;&lt; ans &lt;&lt; '\\n';\n    }\n}\n</code></pre> <p>\u987a\u4fbf\u53ef\u4ee5\u8bf4\u660e\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u679a\u4e3e\u6240\u6709\u6587\u672c\u4e32\u51fa\u73b0\u4f4d\u7f6e\uff08\u5373 \\(\\text{endpos}\\) \uff09\u7684\u65f6\u5019\u4e0d\u4f1a\u8d85\u65f6\u3002</p> <p>\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u5f15\u7406\uff1a\u4e92\u4e0d\u76f8\u540c\u7684\u957f\u5ea6\u4e4b\u548c\u4e3a \\(M\\) \u7684\u5b57\u7b26\u4e32\u7684 \\(\\text{endpos}\\) \u96c6\u5408\u5927\u5c0f\u4e4b\u548c\u4e0d\u8d85\u8fc7 \\(n\\sqrt{M}\\)\u3002</p> <p>\u8bc1\u660e\uff1a\u957f\u5ea6\u4e3a \\(L\\) \u7684\u5b57\u7b26\u4e32 \\(\\text{endpos}\\) \u96c6\u5408\u5927\u5c0f\u6700\u591a\u4e3a \\(n - L + 1 \\le n\\)\uff0c\u800c \\(\\sum L \\le M\\) \u610f\u5473\u7740\u6700\u591a\u53ea\u6709 \\(\\sqrt{M}\\) \u79cd\u957f\u5ea6\uff0c\u5f97\u8bc1\u3002</p> <p>\u6545\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O\\left(\\dfrac{|s|\\sum |t|}{\\omega} + |s|\\sqrt{\\sum |t|}\\right)\\)\u3002</p>"},{"location":"acm/algorithm/string/topic2/#_11","title":"\u4e60\u9898","text":"<p>CF802I Fake News (hard)</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u4e32 \\(S\\)\uff0c\u5bf9\u4e8e\u6240\u6709\u7684\u5b50\u4e32\uff0c\u6c42 \\(\\sum_p \\text{cnt}^2(s, p)\\)\uff0c\u5176\u4e2d \\(\\text{cnt}(s, p)\\) \u8868\u793a \\(p\\) \u5728 \\(s\\) \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002</p> <p>Solution</p> <p>SAM \u7684\u5178\u578b\u5e94\u7528\uff0c\u6bd4\u8f83\u677f\u3002</p> <p>SAM \u53ef\u4ee5\u65b9\u4fbf\u6c42\u51fa\u5728\u6bcf\u4e2a\u5212\u5206\u96c6\u5408\u4e0b\u5b50\u4e32\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u6c42\u51fa\u5e73\u65b9\u76f8\u52a0\u5373\u53ef\uff0c\u5373\u4e3a \\(\\sum cnt^2_u \\times (len[u] - len[fa_u] )\\)\u3002</p>"},{"location":"acm/algorithm/string/topic2/#_12","title":"\u53c2\u8003\u8d44\u6599","text":"<p>bitset \u7684\u5999\u7528\uff1a\u4e71\u641e\u5b57\u7b26\u4e32\u5339\u914d</p> <p>\u5e38\u89c1\u5b57\u7b26\u4e32\u7b97\u6cd5 II\uff1a\u81ea\u52a8\u673a\u76f8\u5173</p> <p>\u540e\u7f00\u81ea\u52a8\u673a\u5b66\u4e60\u7b14\u8bb0(\u5e72\u8d27\u7bc7)</p> <p>\u540e\u7f00\u81ea\u52a8\u673a\u5b66\u4e60\u7b14\u8bb0(\u5e94\u7528\u7bc7)</p> <p>\u56de\u6587\u81ea\u52a8\u673a\u5b66\u4e60\u7b14\u8bb0</p> <p>\u5b57\u7b26\u4e32 - \u8463\u6653\u7b97\u6cd5</p>"},{"location":"acm/at/abc351/","title":"ABC351 ~ 360","text":""},{"location":"acm/at/abc351/#atcoder-beginner-contest-352","title":"AtCoder Beginner Contest 352","text":""},{"location":"acm/at/abc351/#d-permutation-subsequence","title":"D. Permutation Subsequence","text":"<p>Solution:</p> <p>We use array b to write down \\(a_i\\)'s position.</p> <p>Then we just need to use sliding window technique to solve it. </p>"},{"location":"acm/at/abc351/#f-estimate-order","title":"F. Estimate Order","text":"<p>Solution:</p> <p>DFS.</p> <p>For a relationship between two points, we can enumerate all possible solutions.</p> <p>The maximum complexity is \\(O(n(n - 2)(n - 4) .. 2)\\).</p> <p>Supposing many limitations, the factual complexity is much less than that.</p>"},{"location":"acm/at/abc351/#g-socks-3","title":"G. Socks 3","text":"<p>Solution:</p> <p>Let \\(P(X = i)\\) denotes the probability that the sockets fetched from first i times are different and that satisfies the condition at the (i + 1)-th time.</p> <p>Then the answer is \\(1 + \\sum_{i = 1}^{n} i \\cdot P(X = i)\\).</p> <p>And we have the Lemma </p> \\[ \\sum_{i = 1}^{n} i \\cdot P(X = i) = \\sum_{i = 1}^n P(X \\ge i) \\] Proof \\[     \\begin{align*}     \\text{LHS} &amp;= \\sum_{i = 1}^n P(X = i)\\sum_{j = 1}^i 1 \\\\                &amp;= \\sum_{j = 1}^n \\sum_{i = j}^n P(X = i) \\\\                &amp;= \\sum_{i = 1}^n P(X \\ge i) = \\text{RHS}     \\end{align*} \\] <p>And how to find the value of \\(P(X \\ge i)\\).  \\(P(X \\ge i)\\) denotes the probability that the sockets fetched from first i times are different.</p> <p>So we can find that:</p> \\[     P(X \\ge i) = \\dfrac{\\sum_{b_1, b_2, ..., b_i}\\prod_{j = 1}^{i} A_{b_j}}{\\binom{S}{i}}  \\] <p>\\(S\\) denotes the sum of \\(a_i\\).</p> <p>The number of numerator is \\([x^k]\\prod (1 + a_ix)\\), we can use NTT tech by dividing and conquering to solve it.</p>"},{"location":"acm/at/abc371/","title":"ABC371 ~ 380","text":""},{"location":"acm/at/abc371/#atcoder-beginner-contest-371","title":"AtCoder Beginner Contest 371","text":""},{"location":"acm/at/abc371/#f-takahashi-in-narrow-road","title":"F. Takahashi in Narrow Road","text":"<p>Solution</p> <p>\u8c8c\u4f3c\u662f\u7ecf\u5178\u5957\u8def\uff0c\u4f46\u662f\u662f\u7b2c\u4e00\u6b21\u89c1\u3002 QwQ</p> <p>\u7531\u4e8e\u6bcf\u6b21\u79fb\u52a8\u4e4b\u540e\uff0c\u76f8\u90bb\u6328\u5728\u4e00\u8d77\u7684\u53ef\u80fd\u4f1a\u5f62\u6210\u516c\u5dee\u4e3a \\(1\\) \u7684\u7b49\u5dee\u6570\u5217\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u95ee\u9898\u8f6c\u5316\u4e00\u4e0b\uff0c\u8ba9\u7b2c \\(i\\) \u4e2a\u5143\u7d20\u51cf \\(i\\)\u3002</p> <p>\u8fd9\u6837\u4e00\u6bb5\u7b49\u5dee\u6570\u5217\u5c31\u4f1a\u53d8\u6210\u4e00\u6bb5\u76f8\u540c\u7684\u6570\u3002\u7136\u540e\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff08\u533a\u95f4\u4fee\u6539 + \u533a\u95f4\u6700\u503c\uff09\u5373\u53ef\u3002</p> <p>\u7531\u4e8e\u524d\u540e\u6539\u53d8\u65f6\u5747\u51cf\u53bb\u4e86 \\(i\\)\uff0c\u6240\u4ee5\u6700\u540e\u7b97\u7b54\u6848\u7684\u65f6\u5019\u4f9d\u7136\u662f\u79fb\u52a8\u524d\u7684\u533a\u95f4\u548c\u51cf\u53bb\u79fb\u52a8\u540e\u7684\u533a\u95f4\u548c\uff0c\u5373 \\(\\left|\\sum_l^r a_i - tmp \\times (r - k + 1) \\right|\\)\u3002</p>"},{"location":"acm/at/abc371/#g-lexicographically-smallest-permutation","title":"G. Lexicographically Smallest Permutation","text":"<p>Solution</p> <p>\u55b5\u55b5\u9898\u3002</p> <p>\u6574\u6bb5\u5e8f\u5217\u53ef\u4ee5\u5206\u6210\u82e5\u5e72\u4e2a\u7f6e\u6362\u73af\uff0c\u6211\u4eec\u4ece\u524d\u5230\u540e\u8d2a\u5fc3\uff0c\u5904\u7406\u5b8c\u524d \\(i\\) \u4e2a\u4f4d\u7f6e\uff0c\u5bf9\u4e8e\u7b2c \\(i + 1\\) \u4e2a\u4f4d\u7f6e\uff0c\u6211\u4eec\u5e94\u8be5\u5728\u5c3d\u91cf\u6ee1\u8db3\u524d\u9762\u7684\u6761\u4ef6\u57fa\u7840\u4e0a\u8ba9\u76ee\u524d\u7684\u7f6e\u6362\u73af\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u3002</p> <p>\u5728\u4e0d\u8003\u8651\u4f1a\u7206 <code>long long</code> \u7684\u524d\u63d0\u4e0b\uff0c\u6211\u4eec\u8fd9\u9898\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\u627e\u73af\u7684\u8d77\u59cb\u4f4d\u7f6e\u6c42\u89e3\uff0c\u5047\u8bbe\u524d\u9762\u5904\u7406\u7684\u73af\u957f\u5ea6\u7684\u6700\u5c0f\u516c\u500d\u6570\u4e3a \\(\\text{lcm}\\)\uff0c\u5728\u65b0\u7684\u73af\u4e2d\uff0c\u6211\u4eec\u6bcf\u6b21\u8df3 \\(\\text{lcm}\\)\uff0c\u8bbe\u65b0\u7684\u73af\u957f\u4e3a \\(\\text{len}\\)\uff0c\u90a3\u4e48\u65b0\u7684\u73af\u7684\u8d77\u59cb\u4f4d\u7f6e\u53ea\u7528\u627e \\(\\dfrac{\\text{len}}{\\text{gcd(len, lcm)}}\\) \u6b21\u5373\u53ef\uff0c\u800c\u4e14\u53d1\u73b0\u65f6\u95f4\u590d\u6742\u5ea6\u751a\u81f3\u662f \\(O(n)\\) \u7684\u3002\u8fd9\u91cc\u7684\u9ad8\u7cbe\u5ea6\u53ef\u4ee5\u7528 Python \u5b9e\u73b0\uff0c\u5373\u5b98\u65b9\u505a\u6cd5\u3002</p> <p>\u5982\u679c\u7528 C++ \u7684\u8bdd\uff0c\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u73af\u7684\u7ea6\u675f\u6761\u4ef6\uff0c\u5373 \\(x \\equiv a(\\mod m)\\)\uff0c\u672c\u8d28\u4e0a\u4e5f\u662f\u7531\u82e5\u5e72\u7684 \\(x \\equiv a(\\mod m_i^{\\alpha_i})\\)\uff08\\(m_i^{\\alpha_i}\\) \u662f \\(m\\) \u7684\u6807\u51c6\u56e0\u6570\u5206\u89e3\uff09\u3002\u90a3\u4e48\u5bf9\u4e8e\u67d0\u4e00\u4e2a\u56fa\u5b9a\u7684\u957f\u5ea6\uff08\u5373\u6a21\u6570 \\(m_i^{\\alpha_i}\\)\uff09\uff0c\u4e00\u65e6\u6211\u4eec\u6c42\u89e3\u51fa\u5176\u7ea6\u675f\u6761\u4ef6\uff0c\u90a3\u4e48\u540e\u9762\u90fd\u8981\u6ee1\u8db3\u8fd9\u4e2a\u7ea6\u675f\u6761\u4ef6\u3002</p> <p>\u4e00\u5171\u4e0d\u8d85\u8fc7 \\(N\\) \u4e2a\u7ea6\u675f\u6761\u4ef6\uff0c\u6211\u4eec\u521d\u59cb\u90fd\u8bbe\u4e3a \\(-1\\)\uff0c\u6bcf\u6b21\u627e\u4e00\u4e2a\u65b0\u73af\uff0c\u5c31\u66f4\u65b0\u6a21\u6570\u4e3a\u73af\u957f\u5ea6\u7ea6\u6570\u7684\u90a3\u4e9b\u6761\u4ef6\u3002</p> <p>\u7136\u540e\u5c31\u597d\u529e\u4e86\uff0c\u679a\u4e3e\u8d77\u59cb\u4f4d\u7f6e\uff0c\u5224\u65ad\u5bf9\u4e8e\u662f\u73af\u957f\u5ea6\u7ea6\u6570\u7684\u90a3\u4e9b\u6a21\u6570\uff0c\u5b83\u4eec\u662f\u5426\u6ee1\u8db3\u5148\u524d\u7684\u6761\u4ef6\u3002\u6700\u540e\u627e\u51fa\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5408\u6cd5\u4f4d\u7f6e\u5373\u53ef\u3002\u5206\u89e3\u8d28\u56e0\u6570 \\(O(n\\sqrt{n})\\)\uff0c\u627e\u8d77\u59cb\u4f4d\u7f6e \\(O(n\\log n)\\)\uff0c\u6545\u590d\u6742\u5ea6\u4e3a \\(O(n\\sqrt{n})\\)\u3002</p>"},{"location":"acm/at/abc371/#atcoder-beginner-contest-372","title":"AtCoder Beginner Contest 372","text":""},{"location":"acm/at/abc371/#f","title":"F.","text":"<p>Solution</p>"},{"location":"acm/at/abc371/#atcoder-beginner-contest-379","title":"AtCoder Beginner Contest 379","text":""},{"location":"acm/at/abc371/#f-takahashi-in-narrow-road_1","title":"F. Takahashi in Narrow Road","text":"<p>Solution</p>"},{"location":"acm/at/abc381/","title":"ABC381 ~ 390","text":""},{"location":"acm/at/abc381/#atcoder-beginner-contest-384","title":"AtCoder Beginner Contest 384","text":""},{"location":"acm/at/abc381/#f-double-sum-2","title":"F. Double Sum 2","text":"<p>\\(f(x)\\) \u8868\u793a \\(x\\) \u4e00\u76f4\u9664\u4ee5 \\(2\\) \u76f4\u5230\u4e0d\u80fd\u6574\u9664\u4e4b\u540e\u7684\u7ed3\u679c\uff0c\u7ed9\u5b9a\u5e8f\u5217 \\(\\{A_i\\}\\) \u6c42 \\(\\sum_{i = 1}^N \\sum_{j = i }^N f(A_i + A_j)\\)\u3002</p> <p>Solution</p>"},{"location":"acm/at/abc381/#g-abs-sum","title":"G. Abs Sum","text":"<p>\u7ed9\u5b9a\u957f\u5ea6\u4e3a \\(N\\) \u7684\u5e8f\u5217 \\(\\{A_i\\}\\) \u548c \\(\\{B_i\\}\\) \u4ee5\u53ca \u957f\u5ea6\u4e3a \\(K\\) \u7684\u5e8f\u5217 \\({X_k}\\) \u548c \\({Y_k}\\)\u3002\u6c42 \\(\\sum_{i = 1}^{X_k} \\sum_{j = i }^{Y_k} |A_i - B_j|\\)\u3002</p> <p>Solution</p>"},{"location":"acm/at/arc101/","title":"ARC101 ~ 110","text":""},{"location":"acm/at/arc101/#atcoder-regular-contest-104","title":"AtCoder Regular Contest 104","text":""},{"location":"acm/at/arc101/#c-fair-elevator","title":"C. Fair Elevator","text":"<p>Solution</p> <p>\u6709\u5fc5\u8981\u4e8b\u5148\u8bf4\u660e\u4e00\u4e0b\u9898\u610f\u3002</p> <p>\\(2n\\) \u4e2a\u4f4d\u5b50\uff0c\u88ab\u5212\u5206\u4e3a \\(n\\) \u4e2a\u533a\u95f4\uff0c\u8fd9 \\(n\\) \u4e2a\u533a\u95f4\u5141\u8bb8\u91cd\u53e0\uff0c\u4f46\u662f\u91cd\u53e0\u7684\u533a\u95f4\u957f\u5ea6\u90fd\u662f\u76f8\u7b49\u7684\u3002\u4e14\u6bcf\u4e2a\u4f4d\u5b50\u90fd\u53ea\u80fd\u662f\u4e00\u4e2a\u533a\u95f4\u7684\u8d77\u70b9\u6216\u7ec8\u70b9\uff0c\u7ed9\u5b9a\u5176\u4e2d\u4e00\u90e8\u5206\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u95ee\u662f\u5426\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u60c5\u51b5\u3002</p> <p>\u7136\u540e\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u533a\u95f4\u5982\u679c\u6ee1\u8db3\u6761\u4ef6\uff0c\u8981\u4e48\u8fd9\u4e2a\u533a\u95f4\u53ef\u4ee5\u5212\u5206\u4e3a\u66f4\u5c0f\u7684\u7b26\u5408\u6761\u4ef6\u7684\u533a\u95f4\uff0c\u8981\u4e48\u8fd9\u4e2a\u533a\u95f4\u4e00\u5b9a\u662f\u5f62\u5982 <code>(1, 2, 3, ..., k, 1, 2, 3, ..., k)</code> \u8fd9\u6837\u4e00\u4e00\u5bf9\u5e94\u7684\u60c5\u51b5\u3002</p> <p>\u4e14 \\(n\\) \u7684\u8303\u56f4\u5f88\u5c0f\uff0c\u53ef\u4ee5\u76f4\u63a5 \\(O(n^3)\\) \u66b4\u529b dp \u5373\u53ef\u3002</p>"},{"location":"acm/at/arc101/#d-multiset-mean","title":"D. Multiset Mean","text":"<p>Solution</p> <p>\u672c\u9898\u5b66\u5230\u4e86\u524d\u7f00\u548c\u4f18\u5316\u591a\u91cd\u80cc\u5305\u3002</p> <p>\u4e00\u4e2a\u5f88\u5de7\u5999\u7684\u8f6c\u5316\uff0c\u56e0\u4e3a \\(\\sum p_i \\times i \\equiv 0 (\\mod x)\\)\uff0c\u5176\u4e2d \\(p_i \\le k\\)\u3002</p> <p>\u6211\u4eec\u4e0d\u77e5\u9053\u548c\u662f x \u7684\u591a\u5c11\u500d\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u6570\u5747\u51cf\u53bb x\uff0c\u5e73\u5747\u6570\u5c31\u662f 0\u3002\u90a3\u4e48 <code>1, 2, ..., n</code> \u5c31\u53d8\u6210\u4e86 <code>1 - x, 2 - x, ...,  n - x</code>\u3002</p> <p>\u6574\u4e2a\u6570\u5217\u5206\u4e3a\u8d1f\u6570\u90e8\u5206\uff0c0\uff0c\u6b63\u6570\u90e8\u5206\uff0c0 \u53ef\u4ee5\u968f\u4fbf\u53d6\uff0c\u6709 k + 1 \u79cd\u53d6\u6cd5\u3002\u8d1f\u6570\u548c\u6b63\u6570\u90e8\u5206\u548c\u76f8\u7b49\u3002</p> <p>\u4ee4 \\(f_{i, j}\\) \u8868\u793a\u7528 \\(1 ~ i\\) \u4e14\u6bcf\u4e2a\u6570\u4e0d\u8d85\u8fc7\u9650\u5236\u60c5\u51b5\u4e0b\u51d1\u6210 \\(j\\) \u7684\u65b9\u6848\u6570\u3002\u53ef\u4ee5\u7528\u591a\u91cd\u80cc\u5305\u89e3\u51b3\u3002</p> <p>\u6700\u7ec8\u5bf9\u4e8e\u7b54\u6848\u8ba1\u7b97\uff0c\\(ans_x = (\\sum_{j = 1}^{kn(n + 1) / 2}(k + 1)f_{x - 1, j}f_{n - x, j}) - 1\\)\uff0c\u51cf 1 \u662f\u51cf\u53bb\u7a7a\u96c6\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002</p> <p>\u76f4\u63a5 dp \u590d\u6742\u5ea6\u662f \\(O(n^3k^2)\\)\uff0c\u6211\u4eec\u91c7\u7528\u524d\u7f00\u548c\u4f18\u5316\uff0c\u601d\u8def\u5c31\u662f\u5148\u628a\u5f53\u4f5c\u5b8c\u5168\u80cc\u5305\u7b97\uff0c\u7136\u540e\u51cf\u53bb\u9009\u4e86 \\(k + 1\\) \u53ca\u4ee5\u4e0a\u7684\u65b9\u6848\u6570\uff08\u51cf\u7684\u65f6\u5019\u8981\u4ece\u5927\u5230\u5c0f\uff09\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(n^2k^2)\\)\u3002</p>"},{"location":"acm/at/arc101/#atcoder-regular-contest-105","title":"AtCoder Regular Contest 105","text":""},{"location":"acm/at/arc101/#c-camels-and-bridge","title":"C. Camels and Bridge","text":"<p>Solution</p> <p>\u7531\u4e8e n \u5f88\u5c0f\uff0c\u76f4\u63a5 n! \u679a\u4e3e\u5168\u6392\u5217\u3002\u5bf9\u4e8e\u4e00\u79cd\u56fa\u5b9a\u7684\u6392\u5217\uff0c\u672c\u9898\u5b9e\u9645\u4e0a\u662f\u52a0\u4e0a\u4e86 \\(\\dfrac{n(n + 1)}{2}\\) \u4e2a\u9650\u5236\u6761\u4ef6\uff0c\u5373\u5bf9\u4e8e\u6bcf\u5bf9 (i, j)\uff0c\u81f3\u5c11\u6ee1\u8db3 i ~ j \u7684\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e \u627f\u53d7\u8d28\u91cf\u5c0f\u4e8e\u8fd9\u6bb5\u548c\u7684\u6bb5\u843d\u7684\u6700\u957f\u957f\u5ea6\u3002\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u4ece\u524d\u5f80\u540e\u52a0\u5165\u4e00\u4e2a\u725b <code>p[i]</code> \u540e\uff0c\u6211\u4eec\u8981\u6ee1\u8db3\u6240\u6709\u5173\u4e8e <code>p[i]</code> \u7684\u6761\u4ef6\u3002\u8bbe <code>f[i]</code> \u8868\u793a\u524d i \u5934\u725b\u7684\u6700\u5c0f\u957f\u5ea6\uff0c\u90a3\u4e48\u5219\u6709 <code>f[i] = max{f[i], f[j] + len[i, j]}</code>\u3002\u56e0\u4e3a\u8981\u6240\u6709\u7684\u9650\u5236\u6761\u4ef6\u5747\u6ee1\u8db3\u6240\u4ee5\u8981\u53d6 max\u3002</p> <p>\u6700\u540e\u5bf9\u6240\u6709\u7684\u6392\u5217\u53d6 <code>min{f[n]}</code> \u5373\u53ef\u3002</p>"},{"location":"acm/at/arc101/#d-lets-play-nim","title":"D. Let's Play Nim","text":"<p>Solution</p> <p>\u535a\u5f08\u8bba\uff0c\u4f46\u4e0d\u80fd\u7528 SG \u51fd\u6570\u89e3\u7b54\u3002</p> <p>\u601d\u8003\u53d1\u73b0\u628a\u888b\u5b50\u91cc\u7684\u786c\u5e01\u5168\u5012\u51fa\u6765\u4e4b\u540e\uff0c\u5148\u540e\u624b\u7684\u60c5\u51b5\u662f\u56fa\u5b9a\u7684\u3002\u800c\u4e14\u6b64\u65f6\u662f\u4e00\u4e2a\u5178\u578b Nim \u6e38\u620f\u3002</p> <p>\u7136\u540e\u4e00\u822c\u601d\u8003\u8fd9\u7c7b\u95ee\u9898\u8fd8\u662f\u8003\u8651\u4e00\u4e9b\u6781\u7aef\u53d6\u6cd5\uff08\u5f80\u5f80\u662f\u6b63\u89e3\uff09\u3002</p> <p>\u5982\u679c\u6709\u5947\u6570\u4e2a\uff0c\u90a3\u4e48\u6700\u540e\u662f\u7b2c\u4e8c\u4e2a\u4eba\u5148\u53d6\u76d8\u5b50\u7684\u786c\u5e01\uff0c\u4ed6\u5e0c\u671b\u5f02\u6216\u548c\u4e0d\u4e3a 0\uff0c\u90a3\u4e48\u662f\u5426\u5b58\u5728\u64cd\u4f5c\u4f7f\u5f97\u67d0\u4e2a\u76d8\u5b50\u4e0a\u7684\u786c\u5e01\u6570\u4e25\u683c\u5927\u4e8e\u603b\u786c\u5e01\u6570\u7684\u4e00\u534a\u5462\uff0c\u662f\u53ef\u4ee5\u505a\u5230\u7684\u3002\u4ed6\u53ea\u8981\u6bcf\u6b21\u8f6e\u5230\u4ed6\u64cd\u4f5c\u65f6\u53d6\u6700\u591a\u7684\u888b\u5b50\uff0c\u653e\u5230\u7b2c\u4e00\u4e2a\u4eba\u7b2c\u4e00\u6b21\u653e\u7684\u76d8\u5b50\u4e0a\u3002\u8fd9\u6837\u5176\u4ed6\u76d8\u5b50\u7684 \\(\\sum_{i = 2}^k \\oplus a_i \\le \\sum_{i = 2}^k a_i &lt; a_1\\)\uff0c\u6545\u540e\u624b\u5fc5\u80dc\u3002</p> <p>\u5982\u679c\u6709\u5076\u6570\u4e2a\uff0c\u90a3\u4e48\u6700\u540e\u662f\u7b2c\u4e8c\u4e2a\u4eba\u5148\u53d6\u76d8\u5b50\u7684\u786c\u5e01\uff0c\u4ed6\u5e0c\u671b\u5f02\u6216\u548c\u4e0d\u4e3a 0\u3002\u4ed6\u4e5f\u53ef\u4ee5\u6bcf\u6b21\u5012\u51fa\u786c\u5e01\u6570\u6700\u591a\u7684\u653e\u5230\u4e00\u4e2a\u76d8\u5b50\u91cc\uff0c\u7b2c\u4e8c\u4e2a\u4eba\u7684\u7b56\u7565\u5176\u5b9e\u4e5f\u76f8\u540c\uff0c\u90a3\u4e48\u7b2c\u4e8c\u4e2a\u4eba\u653e\u5728\u76d8\u5b50\u91cc\u7684\u786c\u5e01\u6570\u4e00\u5b9a\u5c0f\u4e8e\u6216\u7b49\u4e8e\u7b2c\u4e00\u4e2a\u4eba\u7684\u3002\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u53ef\u80fd\u76f8\u7b49\uff0c\u4e0d\u76f8\u7b49\u5c31\u7b2c\u4e00\u4e2a\uff0c\u5426\u5219\u7b2c\u4e8c\u4e2a\u3002</p>"},{"location":"acm/at/arc101/#atcoder-regular-contest-106","title":"AtCoder Regular Contest 106","text":""},{"location":"acm/at/arc101/#c-solutions","title":"C. Solutions","text":"<p>Solution</p> <p>\u4ed4\u7ec6\u601d\u8003\u4ee5\u53ca\u624b\u73a9\u6837\u4f8b\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u5f53 M \u4e3a\u6b63\u6570\u65f6\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u5de6\u7aef\u70b9\u5f88\u5c0f\u4e14\u53f3\u7aef\u70b9\u5f88\u5927\u7684\u8986\u76d6\u5176\u4ed6\u5168\u90e8\u533a\u95f4\u7684\u5927\u533a\u95f4\uff0c\u90a3\u4e48\u7b2c\u4e8c\u4e2a\u4eba\u7684\u7b54\u6848\u4e00\u5b9a\u662f 1\u3002\u800c\u4e14\u7b2c\u4e8c\u4e2a\u4eba\u81f3\u5c11\u80fd\u9009\u4e00\u4e2a\u533a\u95f4\uff0c\u5982\u679c\u7b2c\u4e00\u4e2a\u4eba\u6240\u6709\u533a\u95f4\u90fd\u80fd\u9009\u4e0a\uff0c\u90a3\u4e48\u7b2c\u4e8c\u4e2a\u4eba\u6240\u6709\u533a\u95f4\u4e5f\u90fd\u80fd\u9009\u4e0a\uff0c\u6b64\u65f6 M \u4e3a 0\u3002\u6240\u4ee5\u7b2c\u4e00\u4e2a\u4eba\u9009 N - 1 \u4e2a\u533a\u95f4\u65f6\uff0cM \u6700\u5927\uff0c\u6b64\u65f6\u662f N - 2\u3002</p> <p>\u6545 M &gt; N - 2 \u65f6\u65e0\u89e3\uff0c\u5426\u5219\u5728 M \u4e3a\u6b63\u6570\u65f6\u5c31\u50cf\u5982\u4e0a\u6240\u8bf4\u6784\u9020\u3002</p> <p>M \u4e3a 0 \u65f6\uff0c\u6784\u9020 N \u4e2a\u4e92\u4e0d\u76f8\u4ea4\u7684\u533a\u95f4\u5373\u53ef\u3002</p> <p>M \u4e3a\u8d1f\u6570\u65f6\uff0c\u6784\u9020\u51e0\u4e2a\u53d1\u73b0\u4e0d\u6210\u7acb\uff0c\u7b2c\u4e00\u4e2a\u4eba\u7684\u65b9\u6848\u4e00\u5b9a\u6bd4\u7b2c\u4e8c\u4e2a\u4eba\u4f18\uff0c\u65e0\u89e3\u3002</p>"},{"location":"acm/at/arc101/#d-powers","title":"D. Powers","text":"<p>Solution</p> <p>\u5f0f\u5b50\u4e0d\u5bf9\u79f0\uff0c\u9996\u5148\u8003\u8651\u5bb9\u65a5\u3002</p> \\[\\begin{eqnarray}     \\sum_{l = 1}^n\\sum_{r = l + 1}^n (a_l + a_r)^x = \\dfrac{\\sum_{l = 1}^n\\sum_{r = 1}^n (a_l + a_r)^x - \\sum_{i = 1}^n (2a_i)^x}{2} \\end{eqnarray}\\] <p>\u540e\u9762\u90a3\u4e2a\u597d\u6c42\u89e3\uff0c\u8003\u8651\u5982\u4f55\u5904\u7406\u524d\u9762\u7684 \\(\\sum_{l = 1}^n\\sum_{r = 1}^n (a_l + a_r)^x\\)\u3002</p> \\[\\begin{eqnarray}     \\sum_{l = 1}^n\\sum_{r = 1}^n (a_l + a_r)^x = \\sum_{l = 1}^n\\sum_{r = 1}^n \\sum_{i = 0}^x \\binom{x}{i}a_l^ia_r^{x - i} \\newline = \\sum_{i = 0}^x \\binom{x}{i}\\left(\\sum_{l = 1}^n a_l^i \\right ) \\left(\\sum_{r = 1}^n a_r^{x - i}\\right ) \\newline \\end{eqnarray}\\] <p>\u7136\u540e\u9884\u5904\u7406\u4e00\u4e0b i \u6b21\u5e42\u7684\u524d\u7f00\u548c\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(nk + k^2)\\)\u3002</p>"},{"location":"acm/at/arc101/#atcoder-regular-contest-107","title":"AtCoder Regular Contest 107","text":""},{"location":"acm/at/arc101/#c-shuffle-permutation","title":"C. Shuffle Permutation","text":"<p>Solution</p> <p>\u884c\u5217\u76f8\u5bf9\u72ec\u7acb\uff0c\u6545\u5206\u5f00\u8003\u8651\u3002\u4e0d\u96be\u53d1\u73b0\u82e5 \\(A, B\\) \u53ef\u4ee5\u4ea4\u6362\uff0c\\(B, C\\) \u53ef\u4ee5\u4ea4\u6362\uff0c\u5219 \\(A, C\\) \u53ef\u4ee5\u4ea4\u6362\u3002</p> <p>\u6545\u5e76\u67e5\u96c6\u7ef4\u62a4\uff0c\u5bf9\u4e8e\u96c6\u5408\u4e2a\u6570\u4e3a \\(n\\) \u7684\u5e76\u67e5\u96c6\uff0c\u4e00\u5171 \\(n!\\) \u79cd\u6392\u5217\u65b9\u5f0f\u3002\u7d2f\u4e58\u5373\u53ef\u3002</p>"},{"location":"acm/at/arc101/#d-number-of-multisets","title":"D. Number of Multisets","text":"<p>Solution</p> <p>\u55b5\u55b5\u9898\u3002</p> <p>\u8bbe <code>f[i][j]</code> \u8868\u793a\u7528 \\(i\\) \u4e2a\u6570\uff0c\u548c\u4e3a \\(j\\) \u7684\u65b9\u6848\u6570\u3002</p> <p>\u8003\u8651\u4e0d\u9057\u6f0f\u7684\u5168\u90e8\u8f6c\u79fb\u5230\u4f4d\uff0c\u76f8\u5f53\u4e8e\u53ef\u4ee5\u7531\u53e6\u4e00\u4e2a\u96c6\u5408\u6dfb\u52a0 \\(1\\) \u6216\u6574\u4f53\u9664\u4ee5 \\(2\\) \u5f97\u6765\u3002</p> <p>\u8fd9\u6837\u4e00\u5b9a\u662f\u6240\u6709\u60c5\u51b5\u90fd\u5305\u542b\u7684\uff0c\u524d\u8005\u8868\u793a\u53ef\u91cd\u96c6\u6700\u5927\u5143\u7d20\u662f \\(1\\) \u7684\u60c5\u51b5\uff0c\u540e\u8005\u8868\u793a\u6700\u5927\u5143\u7d20\u4e0d\u662f \\(1\\) \u7684\u60c5\u51b5\u3002</p> <p>\u6ce8\u610f\u8f6c\u79fb\u7684\u65f6\u5019\u4ece\u5927\u5230\u5c0f\u8f6c\u79fb\uff0c\u8fd9\u6837\u9664\u4ee5 \\(4\\)\uff0c\u9664\u4ee5 \\(8\\) \u7684\u60c5\u51b5\u7b49\u7b49\u90fd\u4f1a\u4ee5\u524d\u7f00\u548c\u7684\u5f62\u5f0f\u88ab\u8003\u8651\u8fdb\u6765\u3002</p>"},{"location":"acm/at/arc101/#atcoder-regular-contest-108","title":"AtCoder Regular Contest 108","text":""},{"location":"acm/at/arc101/#c-keep-graph-connected","title":"C. Keep Graph Connected","text":"<p>Solution</p> <p>\u7b80\u5355\u6784\u9020\u3002\u4e0d\u96be\u53d1\u73b0\u82e5\u56fe\u8054\u901a\u5219\u4e00\u5b9a\u5b58\u5728\u4e00\u79cd\u5408\u7406\u65b9\u5f0f\u3002</p> <p>\u770b\u4f5c\u4e00\u68f5\u6811\uff0c\u6811\u6839\u7684\u503c\u968f\u4fbf\u53d6\uff0c\u6211\u4eec\u5c3d\u91cf\u8ba9\u513f\u5b50\u8282\u70b9\u7684\u503c\u548c\u5b83\u8fde\u5411\u7236\u4eb2\u7684\u90a3\u6761\u8fb9\u7684\u503c\u76f8\u7b49\u3002\u5982\u679c\u7236\u4eb2\u7684\u503c\u5df2\u7ecf\u548c\u8fd9\u6761\u8fb9\u7684\u503c\u76f8\u7b49\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8ba9\u513f\u5b50\u968f\u4fbf\u53d6\u4e00\u4e2a\u4e0d\u540c\u7684\u503c\u3002\u8fd9\u6837\u7684\u6784\u9020\u7684\u8bdd\u4e0d\u96be\u53d1\u73b0\uff0c\u6784\u9020\u5230\u513f\u5b50\u8282\u70b9\u4e3a\u6b62\uff0c\u4ece\u513f\u5b50\u5230\u6839\u8282\u70b9\u7684\u6bcf\u6761\u8fb9\u90fd\u6ee1\u8db3\uff0c\u90a3\u4e48\u6574\u68f5\u6811\u4e5f\u90fd\u6ee1\u8db3\u3002</p>"},{"location":"acm/at/arc101/#d-ab","title":"D. AB","text":"<p>Solution</p> <p>\u55b5\u55b5\u5206\u7c7b\u8ba8\u8bba\u9898\u3002</p> <p>\u4e0d\u59a8\u5047\u8bbe \\(C_{AB} = A\\)\uff0c\u90a3\u4e48\u957f\u5ea6\u4e3a \\(3\\)\uff0c\u5c31\u662f <code>AAB</code>\u3002</p> <ul> <li>\u5982\u679c \\(C_{AA} = A\\)\uff0c\u90a3\u4e48\u6700\u7ec8\u7684\u5b57\u7b26\u4e32\u53ea\u80fd\u662f\u5f62\u5982 <code>A...AB</code> \u7684\u5f62\u5f0f\u3002\u7b54\u6848\u4e3a \\(1\\)\u3002</li> <li>\u5982\u679c \\(C_{AA} = B\\)\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u51fa\u73b0 <code>ABAB</code> \u7684\u7ed3\u6784\uff0c\u6211\u4eec\u7ee7\u7eed\u5206\u7c7b\u8ba8\u8bba\u3002<ul> <li>\u5982\u679c \\(C_{BA} = A\\)\uff0c\u6b64\u65f6\u65e0\u6cd5\u51fa\u73b0\u8fde\u7eed\u7684 \\(B\\)\uff0c\u4e00\u5b9a\u662f\u51fa\u73b0\u4e00\u6bb5 \\(A\\)\uff0c\u7136\u540e\u4e00\u4e2a \\(B\\) \u7684\u5f62\u5f0f\u3002\u53ef\u4ee5\u7528 DP \u6765\u89e3\u51b3\u3002\u7531\u4e8e\u51fa\u73b0\u4e0d\u4e86 <code>BB</code> \u7684\u7ed3\u6784\u6240\u4ee5\u90fd\u4e0d\u7528\u8003\u8651 \\(C_{BB}\\)\u3002</li> <li>\u5982\u679c \\(C_{BA} = B\\)\uff0c\u6b64\u65f6 \\(B\\) \u53ef\u4ee5\u8fde\u7eed\uff0c\u7136\u540e \\(A\\) \u4e5f\u53ef\u4ee5\u8fde\u7eed\uff0c\u624b\u6a21\u53d1\u73b0\u5176\u5b9e\u4e2d\u95f4\u7684 \\(n - 3\\) \u957f\u5ea6\u662f\u4efb\u610f \\(A,B\\) \u5e8f\u5217\u90fd\u53ef\u4ee5\u3002\u6545\u7b54\u6848\u4e3a \\(2^{n - 3}\\)\u3002</li> </ul> </li> </ul> <p>\u5bf9\u4e8e \\(C_{AB} = B\\) \u540c\u7406\u3002</p>"},{"location":"acm/at/arc101/#atcoder-regular-contest-109","title":"AtCoder Regular Contest 109","text":""},{"location":"acm/at/arc101/#c-large-rps-tournament","title":"C. Large RPS Tournament","text":"<p>Solution</p> <p>\u500d\u589e\u3002</p> <p>\u8bbe <code>a1[i][j]</code> \u8868\u793a\u4ece \\(i\\) \u5f00\u59cb\u5f80\u540e \\(2^{j}\\) \u4e2a\u4eba\u7684\u4f4d\u7f6e\u662f\u591a\u5c11\uff0c<code>ans[i][j]</code> \u8868\u793a\u4ece \\(i\\) \u5f00\u59cb\u5f80\u540e \\(2^{j}\\) \u4e2a\u4eba\u6700\u7ec8\u80dc\u51fa\u7684\u662f\u54ea\u79cd\u72b6\u6001\uff0c\u8f6c\u79fb\u5373\u53ef\u3002</p>"},{"location":"acm/at/arc101/#d-l","title":"D. L","text":"<p>Solution</p> <p>\u601d\u8def\u548c\u6253\u7684\u8868\u53c2\u8003\u81ea \u8fd9\u4e2a\u535a\u5ba2\u3002</p> <p>\u975e\u5e38\u795e\u79d8\u7684\u9898\u76ee\uff0c\u611f\u89c9\u4e0d\u770b\u9898\u89e3\u8fd8\u662f\u5f88\u96be\u505a\u51fa\u6765\u3002</p> <p>\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u6a2a\u7eb5\u5750\u6807\u548c\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u8fd9\u4e2a <code>L</code>\u3002\u6240\u4ee5\u5c31\u662f\u4ece \\((1, 1)\\) \u5230\u8fbe \\((ax + bx + cx, ay + by + cy)\\) \u7684\u6700\u5c0f\u6b65\u6570\u3002</p> <p>\u6211\u4eec\u6253\u8868\u53ef\u5f97</p> <pre><code> 7,  , 6, 6,  , 6, 6,  , 6, 6,  , 6, 6,  , 6, 6,  , 6, 6,  , 7,\n  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,\n 7,  , 6, 5,  , 5, 5,  , 5, 5,  , 5, 5,  , 5, 5,  , 5, 6,  , 6,\n 7,  , 6, 5,  , 4, 4,  , 4, 4,  , 4, 4,  , 4, 4,  , 5, 5,  , 6,\n  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,\n 7,  , 6, 5,  , 4, 3,  , 3, 3,  , 3, 3,  , 3, 4,  , 4, 5,  , 6,\n 7,  , 6, 5,  , 4, 3,  , 2, 2,  , 2, 2,  , 3, 3,  , 4, 5,  , 6,\n  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,\n 7,  , 6, 5,  , 4, 3,  , 2, 1,  , 1, 1,  , 2, 3,  , 4, 5,  , 6,\n 7,  , 6, 5,  , 4, 3,  , 2, 1,  , 0, 1,  , 2, 3,  , 4, 5,  , 6,\n  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,\n 7,  , 6, 5,  , 4, 3,  , 2, 2,  , 1, 1,  , 2, 3,  , 4, 5,  , 6,\n 7,  , 6, 5,  , 4, 3,  , 3, 2,  , 2, 2,  , 2, 3,  , 4, 5,  , 6,\n  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,\n 7,  , 6, 5,  , 4, 4,  , 3, 3,  , 3, 3,  , 3, 3,  , 4, 5,  , 6,\n 7,  , 6, 5,  , 5, 4,  , 4, 4,  , 4, 4,  , 4, 4,  , 4, 5,  , 6,\n  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,\n 7,  , 6, 6,  , 5, 5,  , 5, 5,  , 5, 5,  , 5, 5,  , 5, 5,  , 6,\n 7,  , 7, 6,  , 6, 6,  , 6, 6,  , 6, 6,  , 6, 6,  , 6, 6,  , 6,\n  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,\n 8,  , 7, 7,  , 7, 7,  , 7, 7,  , 7, 7,  , 7, 7,  , 7, 7,  , 7,\n</code></pre> <p>\u5176\u4e2d\u6709\u4e00\u4e9b\u70b9\u662f\u65e0\u6cd5\u53d6\u5230\u7684\uff0c\u5c31\u7528\u7a7a\u6765\u8868\u793a\u3002</p> <p>\u4e2d\u95f4\u7684 \\(0\\) \u5bf9\u5e94\u7684\u5c31\u662f \\((1, 1)\\)\uff0c\u6211\u4eec\u53ef\u4ee5\u91cd\u65b0\u8fdb\u884c\u5750\u6807\u53d8\u6362\uff0c\u628a\u7a7a\u7684\u884c\u5217\u53bb\u6389\uff0c\u7136\u540e\u628a \\(0\\) \u770b\u4f5c\u662f \\((0, 0)\\)\u3002\u8fd9\u6837\u6700\u7ec8\u7b54\u6848\u5c31\u662f \\(\\max \\{|x|, |y|\\} + [x = y]\\)\uff0c\u6ce8\u610f \\((0, 0)\\) \u548c \\((1, 1)\\) \u4f4d\u7f6e\u8981\u7279\u5224\u3002</p>"},{"location":"acm/at/arc101/#atcoder-regular-contest-110","title":"AtCoder Regular Contest 110","text":""},{"location":"acm/at/arc101/#d-binomial-coefficient-is-fun","title":"D. Binomial Coefficient is Fun","text":"<p>Solution</p> <p>\u751f\u6210\u51fd\u6570\u9898\u3002</p> <p>\u5206\u522b\u4ece OGF \u548c\u7ec4\u5408\u610f\u4e49\u4e24\u79cd\u65b9\u9762\u53bb\u5165\u624b\u3002</p> <p>\u65b9\u6cd5\u4e00\uff1a</p> <p>\u8003\u8651 \\(\\binom{i}{j}\\) \u7684\u751f\u6210\u51fd\u6570 \\(F_j(x) = \\sum_{i \\ge 0}\\binom{i}{j}x^i\\)\uff0c\u7531 \\(\\binom{i}{j} = \\binom{i - 1}{j - 1} + \\binom{i - 1}{j}\\)\uff0c\u6211\u4eec\u53ef\u4ee5\u63a8\u5bfc\u51fa \\(F_j(x) = \\dfrac{x}{1 - x}F_{j - 1}(x)\\)\uff0c\u53c8\u56e0\u4e3a \\(F_0(x) = \\dfrac{1}{1 - x}\\)\uff0c\u6240\u4ee5 \\(F_j(x) = \\dfrac{x^j}{(1 - x)^{j + 1}}\\)\u3002</p> <p>\u8bbe \\(s = \\sum a_i\\)\uff0c\u5219\u672c\u9898\u662f\u6c42</p> \\[\\begin{align}     \\sum_{j = s}^m[x^j]\\prod_{i = 1}^n F_{a_i}(x)      &amp;= \\sum_{j = s}^m[x^j] F_{s}(x) \\\\     &amp;= \\sum_{j = s}^m[x^j] \\dfrac{x^s}{(1 - x)^{s + 1}}\\\\     &amp;= \\sum_{j = s}^m[x^{j - s}] \\dfrac{1}{(1 - x)^{s + 1}} \\end{align}\\] <p>\u8fd9\u91cc\u6709\u4e00\u4e2a\u7ed3\u8bba \\([x^i]\\left(\\dfrac{1}{1 - x}\\right)^j = \\binom{i + j - 1}{i}\\)\u3002</p> proof \\[\\begin{align}     [x^i]\\left(\\dfrac{1}{1 - x}\\right)^j     &amp;= [x^i]\\left(1 - x\\right)^{-j}\\\\     &amp;= (-1)^i\\dfrac{(-j)^{\\underline{i}}}{i!}\\\\     &amp;= (-1)^i\\dfrac{(-1)^ij^{\\overline{i}}}{i!}\\\\     &amp;= \\dfrac{(i + j - 1)^{\\underline{i}}}{i!}\\\\     &amp;= \\binom{i + j - 1}{i} \\end{align}\\] <p>\u6545</p> \\[     \\text{\u539f\u5f0f} = \\sum_{j = s}^m \\binom{j + n - 1}{s + n - 1} = \\binom{m + n}{s + n} \\] <p>\u65b9\u6cd5\u4e8c\uff1a</p> <p>\u7ec4\u5408\u610f\u4e49\u66f4\u662f\u5341\u5206\u5de7\u5999\u3002</p> <p>\u6bcf\u4e00\u9879 \\(\\binom{b_i}{a_i} = \\binom{a_i + c_i}{a_i}\\)\uff0c\u76f8\u5f53\u4e8e\u5411 \\(a_i\\) \u4e2a\u7403\u4e2d\u63d2\u5165 \\(c_i\\) \u4e2a\u7403\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u4f5c\u6709 \\(n\\) \u888b\u7403\uff0c\u6bcf\u888b \\(a_i\\) \u4e2a\u7403\uff0c\u90a3\u4e48\u5219\u662f\uff1a</p> <p>\\(a_1\\) |\u6321\u677f| \\(a_2\\) |\u6321\u677f| ... |\u6321\u677f| \\(a_{n - 1}\\) |\u6321\u677f| \\(a_n\\) |\u6321\u677f|</p> <p>\u6ce8\u610f\u8fd9\u91cc\u4e00\u5b9a\u8981\u662f \\(n\\) \u4e2a\u6321\u677f\uff0c\u56e0\u4e3a\u6211\u63d2\u5165\u7684\u7403\u662f \\(0 \\sim m - \\sum a_i\\)\u3002\u591a\u7684\u7403\u76f8\u5f53\u4e8e\u63d2\u5230\u6700\u540e\u7684\u677f\u5b50\u540e\u9762\u4e86\u3002</p> <p>\u5411 \\(n\\) \u4e2a\u7403\u91cc\u63d2\u5165 \\(k - 1\\) \u4e2a\u677f\u5b50\u4e14\u5141\u8bb8\u677f\u5b50\u4e4b\u95f4\u4e3a\u7a7a\u7684\u65b9\u6848\u6570\u662f \\(\\binom{n + k - 1}{n}\\)\u3002</p> <p>\u90a3\u4e48\u672c\u9898\u5176\u5b9e\u4e5f\u53ef\u4ee5\u770b\u4f5c\u5411\u5168\u662f \\(a_i\\) \u548c\u9694\u677f\u7684\u5e8f\u5217\u63d2\u5165\u4e0d\u540c\u7684\u4ee3\u8868\u662f \\(b_i\\) \u7684\u7403\u3002</p> <p>\u7403\u7684\u603b\u4e2a\u6570\u662f \\(m - \\sum a_i\\)\uff0c\u90a3\u4e48\u65b9\u6848\u6570\u662f \\(\\binom{n + m}{\\sum a_i + n}\\)\u3002</p>"},{"location":"acm/at/arc111/","title":"ARC111 ~ 120","text":""},{"location":"acm/at/arc111/#atcoder-regular-contest-111","title":"AtCoder Regular Contest 111","text":""},{"location":"acm/at/arc111/#a-simple-math-2","title":"A. Simple Math 2","text":"<p>Solution</p> <p>\u7cd6\u4e38\u4e86\uff0carc \u7684 a \u90fd\u4e0d\u4f1a\u505a\u4e86 TAT \u3002\u3002\u3002</p> \\[\\begin{align}     \\left \\lfloor \\dfrac{10 ^ n}{m} \\right \\rfloor \\mod m     &amp;= \\left \\lfloor \\dfrac{10 ^ n}{m} \\right \\rfloor - km \\\\     &amp;= \\left \\lfloor \\dfrac{10 ^ n - km^2}{m} \\right \\rfloor \\\\     &amp;= \\left \\lfloor \\dfrac{10 ^ n \\mod m^2}{m} \\right \\rfloor \\end{align}\\] <p>\u5feb\u901f\u5e42\u5373\u53ef\u3002</p>"},{"location":"acm/at/arc111/#b-reversible-cards","title":"B. Reversible Cards","text":"<p>Solution</p> <p>\u96be\u7ef7\uff0c\u672c\u9898\u662f\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\uff0c\u4e5f\u4e0d\u4f1a\u3002QwQ</p> <p>\u5176\u5b9e\u7f29\u70b9\u4e5f\u80fd\u505a\uff0c\u5f53\u65f6\u60f3\u5230\u4e86\u4f46\u611f\u89c9\u4e0d\u7528\uff0c\u5199\u4e86\u4e2a\u8d2a\u5fc3\u679c\u7136\u4e0d\u5bf9\u3002\u3002\u3002</p> <p>\u53ef\u4ee5\u8ba9\u6bcf\u4e2a\u5361\u7247\u770b\u4f5c\u662f\u5de6\u8fb9\u7684\u70b9\uff0c\u5361\u7247\u4e0a\u7684\u4e24\u79cd\u989c\u8272\u770b\u4f5c\u662f\u53f3\u8fb9\u7684\u70b9\uff0c\u6211\u4eec\u8dd1\u4e00\u904d\u6700\u5927\u5339\u914d\u5373\u53ef\u3002\u6ce8\u610f\u989c\u8272\u76f8\u540c\u65f6\u8fde\u4e00\u8fb9\u5373\u53ef\uff0c\u4e0d\u7136\u4f1a\u8d85\u65f6\u3002</p> <p>Dinic \u7684\u6700\u5927\u5339\u914d\u65f6\u9650\u8fd8\u662f\u6709\u70b9\u7d27\u5f20\uff0c\u540e\u6765\u6362\u6210 isap \u7684\u6700\u5927\u5339\u914d\u5c31\u5feb\u591a\u4e86\u3002</p>"},{"location":"acm/at/arc111/#c-too-heavy","title":"C. Too Heavy","text":"<p>Solution</p> <p>C \u505a\u7684\u76f8\u5f53\u987a\uff0c\u4e0d\u8fc7\u8fd8\u662f\u5199\u9898\u89e3\u8bb0\u5f55\u4e00\u4e0b\u3002</p> <p>\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u7c7b\u4f3c\u7f6e\u6362\u73af\u4e00\u6837\u7684\u7ed3\u6784\u3002\u4e0d\u8fc7\u7531\u4e8e\u4f1a\u6709\u4eba\u62ce\u4e0d\u52a8\u7684\u9650\u5236\uff0c\u6211\u4eec\u6309\u7167\u6bcf\u4e2a\u4eba\u627f\u53d7\u7684\u6781\u9650\u4ece\u5c0f\u5230\u5927\u627e\uff0c\u5982\u679c\u8fd9\u4e2a\u4eba\u7684\u4e1c\u897f\u4e0d\u662f\u4ed6\u7684\u5e76\u4e14\u4ed6\u73b0\u5728\u642c\u4e0d\u52a8\uff0c\u6216\u8005\u8981\u548c\u4ed6\u4e92\u6362\u7684\u90a3\u4e2a\u4eba\u642c\u4e0d\u52a8\uff0c\u5219\u65e0\u89e3\u3002\u5426\u5219\u6211\u4eec\u5c31\u627e\u5230\u62ff\u4ed6\u4e1c\u897f\u7684\u90a3\u4e2a\u4eba\uff0c\u548c\u4ed6\u4e92\u6362\u5373\u53ef\u3002</p> <p>\u8fd9\u6837\u7684\u8bdd\uff0c\u6bcf\u6b21\u64cd\u4f5c\u5b8c\u4e4b\u540e\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u4eba\u7684\u4e1c\u897f\u90fd\u4f1a\u7ed9\u627f\u53d7\u80fd\u529b\u66f4\u5f3a\u7684\u4eba\uff0c\u6240\u4ee5\u4e0d\u5b58\u5728\u4e00\u4e2a\u5f3a\u7684\u4eba\u628a\u4e1c\u897f\u7ed9\u5f31\u7684\u4eba\u5bfc\u81f4\u65e0\u89e3\u7684\u60c5\u51b5\uff0c\u8fd9\u6837\u4e00\u5b9a\u5c31\u4f1a\u662f\u6700\u4f18\u7684\u3002</p> <p>\u6362\u4e2a\u89d2\u5ea6\u60f3\uff0c\u5f31\u7684\u4eba\u9650\u5236\u6761\u4ef6\u4e5f\u591a\uff0c\u6240\u4ee5\u4e5f\u8981\u5148\u6ee1\u8db3\u4ed6\u4eec\uff0c\u7136\u540e\u4e00\u6b21\u81f3\u5c11\u6ee1\u8db3\u4e00\u4e2a\u4eba\uff0c\u4e0d\u5b58\u5728\u6bd4\u8fd9\u66f4\u4f18\u7684\u7b56\u7565\u3002</p>"},{"location":"acm/at/arc111/#d-orientation","title":"D. Orientation","text":"<p>Solution</p> <p>\u55b5\u55b5\u6784\u9020\u9898\u3002</p> <p>\u9996\u5148\u9898\u76ee\u4fdd\u8bc1\u4e00\u5b9a\u6709\u53ef\u884c\u89e3\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u7528\u8d1f\u8d23\u6784\u9020\u5c31\u884c\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u6761\u8fb9 \\((x, y)\\)\uff0c\u82e5 \\(C_x &lt; C_y\\) \u90a3\u4e48\u4e00\u5b9a\u662f\u5927\u7684\u6307\u5411\u5c0f\u7684\u3002</p> <p>\u73b0\u5728\u8003\u8651 \\(C_x = C_y\\) \u7684\u60c5\u51b5\uff0c\u82e5 \\(x\\) \u8fde\u5411 \\(y\\)\uff0c\u90a3\u4e48 \\(y\\) \u5230\u7684\u70b9 \\(x\\) \u90fd\u80fd\u5230\uff0c\u6545 \\(C_x \\ge C_y\\)\uff1b\u82e5 \\(x\\) \u8fde\u5411 \\(y\\)\uff0c\u90a3\u4e48 \\(y\\) \u5230\u7684\u70b9 \\(x\\) \u90fd\u80fd\u5230\uff0c\u6545 \\(C_x \\ge C_y\\)\u3002\u6240\u4ee5\u4e0d\u96be\u60f3\u5230 \\(x\\) \u548c \\(y\\) \u662f\u5728\u4e00\u4e2a\u73af\u4e0a\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u76f8\u7b49\u7684\u8fb9\u90fd\u6328\u4e2a\u8fde\u6210\u73af\u5373\u53ef\u3002</p>"},{"location":"acm/at/arc111/#atcoder-regular-contest-112","title":"AtCoder Regular Contest 112","text":""},{"location":"acm/at/arc111/#c-dfs-game","title":"C. DFS Game","text":"<p>Solution</p> <p>\u633a\u5de7\u5999\u7684 \u6811\u5f62DP + \u8d2a\u5fc3\u9898\u3002</p> <p>\u6211\u4eec\u53d1\u73b0\u5148\u624b\u53d6\u5230\u5f53\u524d\u70b9\u7684\u9999\u8549\u540e\uff0c\u63a5\u4e0b\u6765\u7684\u51b3\u7b56\u6743\u5728\u540e\u624b\u3002\u6240\u4ee5\u540e\u624b\u7684\u51b3\u5b9a\u662f\u5173\u952e\u3002</p> <p>\u5982\u679c\u4ece \\(u\\) \u8d70\u5411 \\(v\\)\uff0c\\(v\\) \u5b50\u6811\u91cc\u6709\u5076\u6570\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u91cd\u56de\u5230 \\(u\\) \u65f6\u8fd8\u662f\u540e\u624b\u51b3\u7b56\u3002</p> <p>\u4e0d\u59a8\u8bbe <code>f[u]</code> \u8868\u793a\u5148\u624b\u9009\u62e9 \\(u\\) \u8282\u70b9\uff0c\u7531\u540e\u624b\u505a\u51b3\u5b9a\uff0c\u5148\u624b\u80fd\u83b7\u5f97\u7684\u4ef7\u503c\u3002\u90a3\u4e48\u540e\u624b\u7684\u4ef7\u503c\u5c31\u662f \\(size_u - f_u\\)\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u5c06 \\(u\\) \u7684\u5b50\u6811\u8282\u70b9\u5206\u4e3a\u4e09\u7c7b\uff1a</p> <ol> <li>\\(2 \\mid size_{v}\\) \u4e14 \\(f_v \\le size_v - f_v\\)\uff0c\u6b64\u65f6\u540e\u624b\u62ff\u6bd4\u5148\u624b\u6709\u4f18\u52bf\uff0c\u4e14\u4e4b\u540e\u8fd8\u662f\u540e\u624b\u64cd\u4f5c\uff0c\u6240\u4ee5\u540e\u624b\u4f1a\u591a\u62ff\u8fd9\u4e9b\u70b9\uff0c\u628a\u80fd\u62ff\u7684\u90fd\u62ff\u3002</li> <li>\\(2 \\mid size_{v}\\) \u4e14 \\(f_v &gt; size_v - f_v\\)\uff0c\u6b64\u65f6\u540e\u624b\u80af\u5b9a\u4e0d\u60f3\u62ff\u8fd9\u4e9b\u70b9\uff0c\u8fd9\u4e9b\u70b9\u6700\u7ec8\u7531\u8c01\u62ff\u8d70\u662f\u56fa\u5b9a\u7684\uff0c\u662f\u7531\u7b2c\u4e09\u7c7b\u70b9\u7684\u4e2a\u6570\u51b3\u5b9a\u7684\u3002</li> <li>\\(2 \\nmid size_{v}\\)\uff0c\u8fd9\u4e9b\u70b9\u4f1a\u6539\u53d8\u5148\u540e\u624b\u7684\u987a\u5e8f\u3002\u6211\u4eec\u62ff\u8fd9\u4e9b\u70b9\u7684\u987a\u5e8f\u662f\u6309\u7167 \\((size_v - f_v) - (f_v)\\) \u4ece\u5927\u5230\u5c0f\u51b3\u5b9a\u7684\uff0c\u56e0\u4e3a\u6bcf\u6b21\u51b3\u7b56\u8005\u5f97\u5230\u7684\u90fd\u662f \\(size_v - f_v\\) \u800c\u5bf9\u65b9\u5f97\u5230\u7684\u662f \\(f_v\\)\uff0c\u6240\u4ee5\u8d2a\u5fc3\u7b56\u7565\u662f\u6bcf\u6b21\u9009\u62e9 \\((size_v - f_v) - (f_v)\\) \u6700\u5927\u7684\u90a3\u4e2a\u3002</li> </ol> <p>Note</p> <p>\u95ee\uff1a\u6709 \\(n\\) \u4e2a\u7269\u54c1\uff0c\u6bcf\u4e2a\u7269\u54c1\u6709\u4e24\u4e2a\u4ef7\u503c \\(a_i\\) \u548c \\(b_i\\)\uff0c\u4e00\u4eba\u9009\u4e86 \\(a_i\\)\uff0c\u53e6\u4e00\u4eba\u5c31\u9009 \\(b_i\\)\u3002\u6bcf\u4e2a\u4eba\u6700\u4f18\u7b56\u7565\u662f\u4ec0\u4e48\u4f7f\u5f97\u4ef7\u503c\u548c\u6700\u5927\u3002</p> <p>\u89e3\uff1a\u6309\u7167 \\(|a_i - b_i|\\) \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u7136\u540e\u6bcf\u4eba\u4f9d\u6b21\u9009\u53d6\u5373\u53ef\u3002</p>"},{"location":"acm/at/arc111/#d-skate","title":"D. Skate","text":"<p>Solution</p> <p>\u6211\u4eec\u53d1\u73b0\u5982\u679c \\((i, j)\\) \u662f\u4e00\u4e2a <code>#</code>\uff0c\u90a3\u4e48\u80fd\u8d70\u7b2c \\(i\\) \u884c\u5c31\u80fd\u8d70\u7b2c \\(j\\) \u5217\uff0c\u6240\u4ee5\u7b2c \\(i\\) \u884c\u548c\u7b2c \\(j\\) \u5217\u53ef\u4ee5\u7406\u89e3\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u91cc\u3002\u521d\u59cb\u7684\u65f6\u5019\u6700\u5916\u5c42\u7684\u4e00\u5708\u4e5f\u80af\u5b9a\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u91cc\u3002</p> <p>\u800c\u4e14\u6211\u4eec\u53d1\u73b0\u4efb\u4f55\u4f4d\u7f6e\u90fd\u80fd\u8d70\u5230 \\((1, 1)\\)\uff0c\u6240\u4ee5\u53ea\u8981 \\((1, 1)\\) \u80fd\u5230\u8fbe\u5168\u90e8\u5373\u53ef\u3002</p> <p>\u6700\u540e\u6211\u4eec\u7684\u76ee\u6807\u5176\u5b9e\u8981\u4e48\u662f\u5168\u90e8\u884c\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u91cc\uff0c\u8981\u4e48\u5168\u90e8\u5217\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u91cc\u3002\u76f4\u63a5\u628a\u80fd\u8fde\u7684\u7528\u5e76\u67e5\u96c6\u8fde\u8d77\u6765\uff0c\u6700\u540e\u5224\u65ad\u4e00\u4e0b\u662f\u628a\u884c\u8fde\u8d77\u6765\u6b21\u6570\u5c11\u8fd8\u662f\u5217\u8fde\u8d77\u6765\u6b21\u6570\u5c11\u5373\u53ef\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(hw\\log (hw))\\)\u3002</p>"},{"location":"acm/at/arc111/#atcoder-regular-contest-113","title":"AtCoder Regular Contest 113","text":""},{"location":"acm/at/arc111/#d-sky-reflector","title":"D. Sky Reflector","text":"<p>Solution</p> <p>\u7b80\u5355\u8ba1\u6570\u9898\u3002</p> <p>\u6211\u4eec\u89c2\u5bdf\u53d1\u73b0 \\(\\min\\{B_i\\} \\ge \\max \\{A_i\\}\\)\uff0c\u6211\u4eec\u679a\u4e3e \\(A_i\\) \u7684\u6700\u5927\u503c\u8bbe\u4e3a \\(x\\)\uff0c\u90a3\u4e48 \\(\\{A_i\\}\\) \u4e00\u5171\u6709 \\((x)^n - (x - 1)^n\\) \u79cd\u9009\u6cd5\uff0c\u4e14 \\(\\{B_i\\}\\) \u4e00\u5171\u6709 \\((k - x + 1)^m\\) \u79cd\u9009\u6cd5\u3002 \u76f8\u4e58\u7d2f\u52a0\u5373\u53ef\u3002</p> <p>\u6ce8\u610f\u8981\u5206\u522b\u7279\u5224\u4e00\u4e0b \\(n = 1\\) \u548c \\(m = 1\\) \u7684\u60c5\u51b5\u3002</p>"},{"location":"acm/at/arc111/#atcoder-regular-contest-114","title":"AtCoder Regular Contest 114","text":""},{"location":"acm/at/arc111/#c-sequence-scores","title":"C. Sequence Scores","text":"<p>\u5bf9\u4e8e\u957f\u5ea6 \\(n\\)\uff0c\u6bcf\u4e2a\u6570\u7684\u503c\u57df\u662f \\([1, m]\\) \u7684\u5e8f\u5217 \\(A\\)\u3002\u8bb0 \\(f(A)\\) \u8868\u793a\u628a\u5168 \\(0\\) \u5e8f\u5217 \\(X\\) \u53d8\u4e3a \\(A\\) \u7684\u64cd\u4f5c\u6b21\u6570\u3002\u6bcf\u6b21\u64cd\u4f5c\u9009 \\([l, r, x]\\)\uff0c\u4ee4 \\(X_i = \\max \\left (X_i, v \\right )\\)\u3002</p> <p>\u5bf9\u4e8e\u6240\u6709\u7684\u5e8f\u5217\u53ef\u80fd\uff0c\u6c42 \\(f\\) \u51fd\u6570\u4e4b\u548c\u3002</p> <p>Solution</p>"},{"location":"acm/at/arc111/#d-moving-pieces-on-line","title":"D. Moving Pieces on Line","text":"<p>Solution</p>"},{"location":"acm/at/arc171/","title":"ARC171 ~ 180","text":""},{"location":"acm/at/arc171/#arc173","title":"ARC173","text":""},{"location":"acm/at/arc171/#b-make-many-triangles","title":"B. Make Many Triangles","text":"<p>Solution</p> <p>If there exists a line containg more than k points, which satisfies that \\(2 \\times (n - k) &lt;= k\\), so the answer is \\(n - k\\).</p> <p>Otherwise the ans is \\(\\dfrac{n}{3}\\).</p>"},{"location":"acm/at/arc171/#c-not-median","title":"C. Not Median","text":"<p>Solution</p> <p>If the i-th answer is very big, the condition may be either of them below.</p> <pre><code>- + - + - + - + - 0 + - + - + - + - + -\n\n+ - + - + - + - + 0 - + - + - + - + - +\n</code></pre> <p>Supposing i-th answer is k, and for \\(j \\in [i, i + k]\\), the answer_j = \\(3\\).</p> <p>Because it satisfies that \\((a_j - a_{j - 1}) \\times (a_j - a_{j + 1}) \\ge 0\\).</p> <p>And the final time complexity is O(n).</p>"},{"location":"acm/at/arc171/#d-bracket-walk","title":"D. Bracket Walk","text":"<p>Solution</p> <p>Let <code>(</code> be \\(1\\), <code>)</code> be \\(-1\\).</p> <p>If there exists a route that satisfies the total value is \\(0\\), even it's illegal, we can also transform it into a valid parentheses string by circular shifting.</p> <p>For example, <code>)())((</code> can become <code>(()())</code> which is valid.</p> <p>So the problem is to find a route which involves all the edge and the sum is \\(0\\).</p> <p>Obviously, if there exists a positive ring and a negative ring, there will be an answer. Moreover, if all the ring of the graph is neither positive not negative, it can also have an answer.</p>"},{"location":"acm/at/arc171/#arc174","title":"ARC174","text":""},{"location":"acm/at/arc171/#a-a-multiply","title":"A. A Multiply","text":"<p>Solution</p> <p>If \\(C &gt; 0\\), find the \\(k_1\\), which is the maximum of the subsum of <code>A</code>.</p> <p>If \\(C &lt; 0\\), find the \\(k_2\\), which is the minimum of the subsum of <code>A</code>.</p> <p>Supposing the total sum of <code>A</code> is \\(S_a\\), then the answer is \\(C \\times (k_{1 / 2} - 1) + S_a\\). </p>"},{"location":"acm/at/arc171/#b-bought-review","title":"B. Bought Review","text":"<p>Solution</p> <p>It's obvious that only one review has the highest cost-effectiveness.</p> <p>So we just need to compare the review 4 and review 5, which to choose.</p>"},{"location":"acm/at/arc171/#c-catastrophic-roulette","title":"C. Catastrophic Roulette","text":"<p>Solution:</p> <p>Good Probability DP.</p> <p>\\(F_i\\) denotes that after choose i items, the expeted fine for the first people.</p> <p>\\(G_i\\) denotes that after choose i items, the expected fine for the second people.</p> <p>(First people denotes the one who will choose the item this time.)</p> <p>Then we can get the transformation formula:</p> \\[ \\begin{align*}     F_i &amp;= (1 - \\dfrac{i}{n})G_{i + 1} + \\dfrac{i}{n}(G_i + 1)  \\newline     G_i &amp;= (1 - \\dfrac{i}{n})F_{i + 1} + \\dfrac{i}{n}F_i \\end{align*} \\] <p>\\(F_0\\) and \\(G_0\\) are the answers.</p>"},{"location":"acm/at/arc171/#d-digit-vs-square-root","title":"D. Digit vs Square Root","text":"<p>Solution</p> <p>To create a table, we can enumerate some of the smallest Ns and find that the experimental result below:</p> <pre><code>  [ 1 , 1 ]\n  [ 80 , 80 ]\n  [ 90 , 109 ]\n  [ 9800 , 9800 ]\n  [ 9900 , 10099 ]\n  [ 998000 , 998000 ]\n  [ 999000 , 1000999 ]\n  [ 99980000 , 99980000 ]\n  [ 99990000 , 100009999 ]\n</code></pre> <p>So we can find the regular patterns of the results. And just to calculate it. </p> <p>Don't forget to use <code>long long</code>. :)</p>"},{"location":"acm/at/arc171/#arc176","title":"ARC176","text":""},{"location":"acm/at/arc171/#c-max-permutation","title":"C. Max Permutation","text":"<p>Solution:</p> <p>For a position \\(x\\), if there exists \\((x, y, k)\\), \\((x, z, k)\\), then the position \\(x\\) must be \\(k\\).</p> <p>If there exists \\((x, y, k_1)\\), \\((x, z, k_2)\\) which satisfies \\(k_1 &lt; k_2\\), then the position \\(z\\) must be \\(k\\).</p> <p>So the breakthrough point must be the position which related to other position more than once.</p> <p>We can sort the connection by the value increasingly.</p> <p>For some value, its position either be determined or between two positions.</p> <p>We can find all these points and the rest number can be put in the sequence decreasingly.</p> <p>If the maximum among some positions isn't more than \\(x\\), so the prospected positions for x should exclude these positions.</p> <p>We can find out all prospected positions for each of values and calculate the answer.</p>"},{"location":"acm/cf/","title":"CF \u8865\u5168\u8ba1\u5212","text":"<p>\u5b66\u7b97\u7ade\u7684\u5c31\u662f\u4e00\u7fa4\u7f51\u763e\u5c11\u5e74\uff0c\u65e9\u8be5\u7535\u7535\u4e86\u3002</p> <p>It's time to Internet addiction</p>"},{"location":"acm/cf/cf1801/","title":"1821 ~ 1830","text":"<p>\u5343\u91cc\u4e4b\u884c\uff0c\u59cb\u4e8e\u8db3\u4e0b\u3002</p> <p>Abstract</p> <ul> <li> 1826. Codeforces Round 870 (Div. 2)<ul> <li>E. Walk the Runway</li> <li>F. Fading into Fog</li> </ul> </li> <li> 1828. Codeforces Round 873 (Div. 2)<ul> <li>D2. Range Sorting (Hard Version)</li> <li>E. Palindrome Partition</li> <li>F. Two Centroids</li> </ul> </li> <li> 1829. Codeforces Round 871 (Div. 4)<ul> <li>G. Hits Different</li> </ul> </li> <li> 1837. Educational Codeforces Round 149 (Rated for Div. 2)<ul> <li>E. Playoff Fixing</li> <li>F. Editorial for Two</li> </ul> </li> <li> 1840. Codeforces Round 878 (Div. 3)<ul> <li>F. Railguns</li> <li>G2. In Search of Truth (Hard Version) </li> </ul> </li> <li> 1848. Codeforces Round 885 (Div. 2)<ul> <li>C. Vika and Price Tags</li> <li>D. Vika and Bonuses</li> <li>F. Vika and Wiki</li> </ul> </li> <li> 1850. Codeforces Round 886 (Div. 4)<ul> <li>F. We Were Both Children</li> <li>H. The Third Letter   </li> </ul> </li> </ul>"},{"location":"acm/cf/cf1801/#1826-codeforces-round-870-div-2","title":"1826. Codeforces Round 870 (Div. 2)","text":""},{"location":"acm/cf/cf1801/#e-walk-the-runway","title":"E. Walk the Runway","text":"<p>Description</p> <p>\\(n\\) \u4e2a\u4eba\u6bcf\u4e2a\u4eba\u90fd\u6709\u4e00\u4e2a\u4ef7\u503c \\(p_i\\)\uff0c\u7136\u540e\u8fd9 \\(n\\) \u4e2a\u4eba\u6709 \\(m\\) \u7ef4\u6570\u503c\uff0c\u8981\u6c42\u4f60\u4ece\u4e2d\u9009\u53d6\u82e5\u5e72\u4e2a\u4eba\u5e76\u4e14\u53ef\u4ee5\u4efb\u610f\u8c03\u6574\u9009\u7684\u4eba\u7684\u987a\u5e8f\uff0c\u8981\u6c42\u9009\u7684\u4eba\u6ee1\u8db3 \\(m\\) \u7ef4\u4e2d\u6bcf\u4e00\u7ef4\u91cc\u9009\u7684\u4eba\u7684\u6570\u503c\u90fd\u4e25\u683c\u9012\u589e\u3002</p> <p>\\(n \\le 5000,m \\le 500\\)\u3002</p> <p>Solution</p> <p>\u5982\u679c\u6211\u4eec\u5df2\u77e5\u4e24\u4e2a\u4eba\u4e4b\u95f4\u7684\u504f\u5e8f\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e24\u4e2a\u4eba\u4e4b\u95f4\u8fde\u4e00\u6761\u6709\u5411\u8fb9\uff08\u6216\u4e0d\u8fde\uff09\uff0c\u6545\u8fd9 \\(n\\) \u4e2a\u4eba\u7684\u5173\u7cfb\u53ef\u4ee5\u7528\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\u6765\u8868\u793a\uff0c\u5728\u56fe\u4e0a\u8dd1 dfs\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(n^2)\\)\uff0c\u662f\u5b8c\u5168\u591f\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u7814\u7a76\u5982\u4f55\u6c42\u4efb\u610f\u4e24\u4e2a\u4eba\u4e4b\u95f4\u504f\u5e8f\u5173\u7cfb\u3002</p> <p>\u76f4\u63a5\u66b4\u529b\u6c42\u504f\u5e8f\u5173\u7cfb\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(n^2m)\\)\uff0c\u663e\u7136\u662f\u4f1a T \u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528 bitset \u6765\u4f18\u5316\u3002\u5bf9\u6bcf\u4e00\u7ef4\u6392\u5b8c\u5e8f\u540e\u524d\u9762\u7684\u80af\u5b9a\u4e0d\u4f1a\u6392\u5728\u8fd9\u4e2a\u6570\u7684\u540e\u9762\uff0c\u6545\u6bcf\u6b21\u7528 bitset \u7684 &amp; \u8fd0\u7b97\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(\\dfrac{m}{w})\\)\uff0c\u5176\u4e2d \\(w\\) \u7b49\u4e8e \\(64\\)\u3002</p> <p>Code</p>"},{"location":"acm/cf/cf1801/#f-fading-into-fog","title":"F. Fading into Fog","text":"<p>Description</p> <p>\u4ea4\u4e92\u9898</p> <p>\u6709 \\(n\\) \u4e2a\u9690\u85cf\u70b9\uff0c\u6bcf\u6b21\u4f60\u53ef\u4ee5\u7ed9\u51fa \\(a\\)\uff0c\\(b\\)\uff0c\\(c\\)\uff0c\u8be2\u95ee\u4e00\u6761\u5f62\u5982 \\(ax+by+c=0\\) \u7684\u76f4\u7ebf\uff0c\u4ea4\u4e92\u5e93\u4f1a\u4ee5\u4efb\u610f\u987a\u5e8f\u544a\u8bc9\u4f60\u6bcf\u4e2a\u70b9\u5728\u76f4\u7ebf\u4e0a\u7684\u6295\u5f71\uff08\u4fdd\u8bc1\u6bcf\u4e2a\u8fd4\u56de\u7684\u6295\u5f71\u70b9\u4e0e\u771f\u5b9e\u6295\u5f71\u70b9\u7684\u8ddd\u79bb\u4e0d\u8d85\u8fc7 \\(10^{-4}\\)\uff09\u3002</p> <p>\u8bf7\u7528\u6700\u5c11\u7684\u8be2\u95ee\u6c42\u51fa\u8fd9\u4e9b\u9690\u85cf\u70b9\u7684\u4f4d\u7f6e\uff0c\u7cbe\u5ea6\u76f8\u5dee \\(10^{-3}\\) \u5373\u53ef\u3002</p> <p>\u4fdd\u8bc1\u6bcf\u4e2a\u9690\u85cf\u70b9\u7684\u4e0e\u5176\u4ed6\u9690\u85cf\u70b9\u7684 \\(x\\) \u5750\u6807\u548c \\(y\\) \u5750\u6807\u90fd\u81f3\u5c11\u76f8\u5dee \\(1\\)\uff0c\u6bcf\u6b21\u8be2\u95ee\u7684 \\(\u2223a\u2223+\u2223b\u2223\u22650.1\\)\u3002</p> <p>Solution</p> <p>\u901a\u8fc7\u753b\u56fe\u89c2\u5bdf\u4e0d\u96be\u53d1\u73b0\uff0c\u5176\u5b9e\u6700\u591a\u4e09\u6b21\u8be2\u95ee\u5c31\u53ef\u4ee5\u786e\u5b9a\u8fd9 \\(n\\) \u4e2a\u70b9\u4e86\uff0c\u6240\u4ee5\u9898\u76ee\u5c31\u53d8\u4e3a\u4e0d\u8d85\u8fc7\u4e09\u6b21\u8be2\u95ee\u6c42\u51fa \\(n\\) \u70b9\uff0c\u4e00\u6761\u5e73\u884c \\(x\\) \u8f74\uff0c\u4e00\u6761\u5e73\u884c \\(y\\) \u8f74\uff0c\u4e00\u6761\u659c\u7740\u7684\u8fb9\uff08\u4f46\u662f\u5f88\u8d34\u8fd1 \\(x\\) \u8f74\uff09\uff0c\u524d\u4e24\u4e2a\u5c31\u53ef\u4ee5\u786e\u5b9a\u8fd9 \\(n\\) \u4e2a\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\uff0c\u7b2c\u4e09\u4e2a\u5b8c\u5168\u786e\u5b9a\u8fd9 \\(n\\) \u4e2a\u70b9\u3002</p> <p>\u4e3a\u4ec0\u4e48\u7b2c\u4e09\u6761\u7ebf\u8981\u8d34\u8fd1 \\(x\\) \u8f74\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u7684\u5904\u7406\u65b9\u6cd5\u662f\u5bf9\u7b2c\u4e00\uff0c\u4e09\u6761\u7ebf\u5f97\u5230\u7684 \\(n\\) \u4e2a\u6295\u5f71\u70b9\u6309\u6a2a\u5750\u6807\u6392\u5e8f\uff0c\u9009\u4e00\u6761\u8d34\u8fd1 \\(x\\) \u8f74\u7684\u7ebf\u4fdd\u8bc1\u8fd9 \\(n\\) \u4e2a\u70b9\u548c\u7b2c\u4e00\u6761\u7ebf\u7684 \\(n\\) \u4e2a\u70b9\u987a\u5e8f\u4e00\u81f4\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u53ef\u4ee5\u7b97\u51fa\u6bcf\u4e2a\u70b9\u7eb5\u5750\u6807\u7684\u503c\uff0c\u4f46\u4e0d\u51c6\u786e\u53ef\u80fd\u4f1a\u6709\u8bef\u5dee\uff0c\u4f46\u662f\u6211\u4eec\u77e5\u9053\u6bcf\u4e2a\u70b9\u7684\u7eb5\u5750\u6807\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u627e\u7eb5\u5750\u6807\u548c\u6211\u4eec\u8ba1\u7b97\u7684\u4f30\u8ba1\u503c\u4e2d\u6700\u8d34\u8fd1\u7684\u503c\u6765\u66ff\u6362\u3002</p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u672c\u9898\u5bf9\u7cbe\u5ea6\u8981\u6c42\u8f83\u9ad8\uff0c\u5e94\u7528 <code>long double</code> \u6765\u5b58\u50a8</p> <p>Code</p>"},{"location":"acm/cf/cf1801/#1828-codeforces-round-873-div-2","title":"1828. Codeforces Round 873 (Div. 2)","text":""},{"location":"acm/cf/cf1801/#d2-range-sorting-hard-version","title":"D2. Range Sorting (Hard Version)","text":"<p>Description</p> <p>\u5bf9\u4e00\u4e2a\u6570\u7ec4 \\(\\{p_i\\}\\) \u7684\u4e00\u6bb5\u533a\u95f4 \\([l,r]\\) \u6392\u5e8f\u7684\u4ee3\u4ef7\u4e3a \\(r\u2212l\\) \uff0c\u5bf9\u6574\u4e2a\u6570\u7ec4 \\(p_i\\) \u6392\u5e8f\u7684\u4ee3\u4ef7\u4e3a\u9009\u5b9a\u82e5\u5e72\u533a\u95f4\u5e76\u6392\u5e8f\uff0c\u4f7f\u5f97\u6574\u4e2a\u6570\u7ec4\u6709\u5e8f\u7684\u4ee3\u4ef7\u4e4b\u548c\u3002</p> <p>\u6c42 \\(\\{a_i\\}\\) \u7684\u6240\u6709\u5b50\u6bb5\u6392\u5e8f\u7684\u4ee3\u4ef7\u4e4b\u548c\u3002</p> <p>Easy Version \\(n \\le 5 \\times 10^3\\)</p> <p>Hard Version \\(n \\le 3 \\times 10^5\\)</p> <p>Solution</p> <p>\u6709\u70b9\u96be\u60f3\u3002</p> <p>\u4ed4\u7ec6\u89c2\u5bdf\u6837\u4f8b\uff0c\u4e0d\u96be\u53d1\u73b0\u4e00\u4e9b\u6027\u8d28\uff1a</p> <ul> <li>\u64cd\u4f5c\u533a\u95f4\u4e00\u5b9a\u662f\u4e0d\u91cd\u53e0\u7684\uff0c\u4e0d\u7136\u76f4\u63a5\u5bf9\u6574\u4e2a\u533a\u95f4\u64cd\u4f5c\u66f4\u4f18\u3002</li> <li>\u5c3d\u53ef\u80fd\u591a\u533a\u95f4\u64cd\u4f5c\u4f1a\u4f7f\u7b54\u6848\u66f4\u4f18\u3002</li> <li>\u66f4\u5206\u6210\u4e24\u4e2a\u533a\u95f4\u64cd\u4f5c\u5219\u4e00\u5b9a\u6ee1\u8db3\u524d\u4e00\u4e2a\u533a\u95f4\u7684\u6700\u5927\u503c\u5c0f\u4e8e\u540e\u4e00\u4e2a\u533a\u95f4\u7684\u6700\u5c0f\u503c\u3002</li> </ul> <p>\u90a3\u4e48\u57fa\u4e8e\u4ee5\u4e0a\u6027\u8d28\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u641e\u51fa \\(O(n^3)\\) \u66b4\u529b\uff1a\u679a\u4e3e\u533a\u95f4\u5de6\u53f3\u7aef\u70b9\uff0c\u679a\u4e3e\u4e2d\u95f4\u95f4\u9694\u70b9\uff0c\u63d0\u524d\u7528 st\u8868 \u9884\u5904\u7406\u51fa\u533a\u95f4\u6700\u5927\u6700\u5c0f\u503c\u7136\u540e\u6765\u6c42\uff0c\u4f46\u662f\u8fd9\u6837\u53d1\u73b0\u8fde Easy Version \u90fd\u8fc7\u4e0d\u4e86\uff0c\u6545\u6211\u4eec\u53ef\u4ee5\u6765\u7a0d\u6539\u8fdb\u4e00\u4e0b\u601d\u8def\u3002</p> <p>\u5bf9\u4e8e Easy Version\uff0c\u6211\u4eec\u53ef\u4ee5\u56fa\u5b9a\u5de6\u7aef\u70b9\uff0c\u6bcf\u6b21\u679a\u4e3e\u53f3\u7aef\u70b9\uff0c\u6bcf\u6b21\u5411\u540e\u52a0\u5165\u4e00\u4e2a\u65b0\u7684\u6570\u65f6\uff0c\u6211\u4eec\u8981\u91cd\u65b0\u8ba1\u7b97\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u6211\u4eec\u7b97 \\([l, r]\\) \u533a\u95f4\u7684\u7b54\u6848\u5c31\u662f\u533a\u95f4\u957f\u5ea6\u51cf\u53bb\u6700\u591a\u53ef\u62c6\u5206\u533a\u95f4\u6570\uff0c\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86 \\([l, r - 1]\\) \u533a\u95f4\u7684\u7b54\u6848\u4ee5\u53ca\u5212\u5206\u533a\u95f4\uff0c\u52a0\u5165 \\(a_r\\) \u6570\u540e\uff0c\u6211\u4eec\u5176\u5b9e\u5c31\u662f\u8981\u628a\u8fd9\u4e2a\u6570\u548c\u67d0\u4e2a\u533a\u95f4\u5408\u5e76\uff0c\u6ee1\u8db3\u5408\u5e76\u540e\u7684\u533a\u95f4\u7684\u6700\u5c0f\u503c\u4f9d\u7136\u5927\u4e8e\u524d\u9762\u533a\u95f4\u7684\u6700\u5927\u503c\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u4e4b\u524d\u51e0\u4e2a\u5212\u5206\u533a\u95f4\u7684\u6700\u5927\u503c\uff0c\u7136\u540e\u4e0d\u65ad\u5411\u524d\u8df3\uff0c\u770b \\(a_r\\) \u53ef\u4ee5\u548c\u54ea\u51e0\u4e2a\u533a\u95f4\u5408\u5e76\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u5408\u5e76\u7684\u533a\u95f4\u5c31\u76f4\u63a5\u5408\u5e76\uff0c\u8fd9\u6837\u4e00\u5b9a\u662f\u6700\u4f18\u7684\u3002\u5408\u5e76\u5b8c\u4e4b\u540e\u66f4\u65b0\u65b0\u7684\u62c6\u5206\u533a\u95f4\uff0c\u7b54\u6848\u4e5f\u6bd4\u8f83\u597d\u7edf\u8ba1\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n^2)\\)\u3002</p> <p>\u5bf9\u4e8e Hard Vesion\uff0c\u6211\u4eec\u53d1\u73b0\u5f88\u96be\u4ece Easy Version \u4e0a\u518d\u7ee7\u7eed\u4f18\u5316\uff0c\u6211\u4eec\u6362\u53e6\u4e00\u4e2a\u601d\u8def\u3002\u80fd\u8fc7 \\(3 \\times 10^5\\) \u7684\u505a\u6cd5\u5e94\u8be5\u662f \\(O(nlogn)\\) \u6216 \\(O(n)\\) \u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u627e\u5230\u8fd9\u4e2a\u590d\u6742\u5ea6\u7684\u7b97\u6cd5\u5e94\u8be5\u662f\u7b97\u6bcf\u4e2a\u4f4d\u7f6e\u6240\u80fd\u505a\u51fa\u7684\u8d21\u732e\u3002\u6211\u4eec\u5148\u7b97\u6700\u574f\u60c5\u51b5\u4e0b\u4e00\u5171\u7684\u4ee3\u4ef7\u4e3a \\(\\sum_{i = 2}^{n}(i - 1)(n - i + 1)\\)\uff0c\u7136\u540e\u6211\u4eec\u518d\u7b97\u6bcf\u4e2a\u4f4d\u7f6e\u5bf9\u4ee3\u4ef7\u80fd\u51cf\u5c11\u7684\u8d21\u732e\u3002\u82e5\u80fd\u5bf9\u7b54\u6848\u4ea7\u751f\u51cf\u5c11\u7684\u8d21\u732e\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5927\u533a\u95f4\uff0c\u6211\u4eec\u4e00\u5b9a\u53ef\u4ee5\u62c6\u5206\u6210\u4e24\u4e2a\u5c0f\u533a\u95f4\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\uff0c\u6211\u4eec\u4e0d\u59a8\u5047\u8bbe\u8fd9\u4e2a\u4f4d\u7f6e \\(i\\) \u4e0a\u7684\u6570\u662f\u540e\u4e00\u4e2a\u533a\u95f4\u7684\u6700\u5c0f\u503c\u3002\u7136\u540e\u6211\u4eec\u5f80\u540e\u627e\u5230\u7b2c\u4e00\u4e2a\u5c0f\u4e8e \\(a_i\\) \u7684\u6570\u7684\u4f4d\u7f6e \\(r_i\\)\uff08\u8fd9\u91cc\u6c42\u201c\u7b2c\u4e00\u4e2a\u5c0f\u4e8e\u201c\u8fd9\u6837\u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u6765\u6c42\uff09\uff0c\u7136\u540e\u518d\u5f80\u524d\u627e\u7b2c\u4e00\u4e2a\u5c0f\u4e8e \\(a_i\\) \u7684\u6570\u7684\u4f4d\u7f6e \\(l_i\\)\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u540e\u4e00\u4e2a\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u662f \\((l_i + 1)\\)\uff0c\u53f3\u7aef\u70b9\u662f\u5728 \\(i \\sim (r_i - 1)\\) \u91cc\u9009\u3002\u7136\u540e\u524d\u4e00\u4e2a\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u662f \\(l_i\\)\uff0c\u6700\u540e\u53ea\u7528\u786e\u5b9a\u524d\u4e00\u4e2a\u533a\u95f4\u7684\u5de6\u7aef\u70b9\uff0c\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u7528 st\u8868 \u5148\u6c42\u51fa\u533a\u95f4\u6700\u5927\u503c\uff0c\u7136\u540e\u4e0d\u65ad\u8df3\u8868\u6765\u6c42\u51fa\u5de6\u7aef\u70b9 \\(kdl\\)\u3002\u7136\u540e\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6570\u5bf9\u7b54\u6848\u51cf\u5c11\u7684\u8d21\u732e\u4e3a \\((r_i - i)\\times(l_i - kdl + 1)\\)\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(nlogn)\\)\u3002</p> <p>Code (Easy Version)</p> <p>Code (Hard Version)</p>"},{"location":"acm/cf/cf1801/#e-palindrome-partition","title":"E. Palindrome Partition","text":"<p>Description</p> <p>\u79f0\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u597d\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a\u5076\u6570\u7684\u56de\u6587\u4e32\u6216\u7531\u82e5\u5e72\u957f\u5ea6\u4e3a\u5076\u6570\u7684\u56de\u6587\u4e32\u62fc\u63a5\u800c\u6210\u3002</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u5b57\u7b26\u4e32 \\(s\\)\uff0c\u6c42\u6709\u591a\u5c11 \\(s\\) \u7684\u5b50\u4e32\u662f\u597d\u7684\u3002</p> <p>\\(1\u2264n\u22645\u00d710^5\\)\uff0c\\(s\\) \u4ec5\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002</p> <p>Solution</p> <p>\u6839\u636e\u6570\u636e\u8303\u56f4\u53ef\u4ee5\u5f97\u51fa\u6b63\u89e3\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u8be5\u662f \\(O(n)\\) \u6216 \\(O(nlogn)\\) \u7684\u3002</p> <p>\u672c\u9898\u91c7\u7528\u52a8\u6001\u89c4\u5212\uff0c\u53ef\u4ee5\u4ee4 \\(g[i]\\) \u8868\u793a\u4ee5 \\(i\\) \u7ed3\u5c3e\u7684\u597d\u4e32\u4e2a\u6570\uff0c\u90a3\u4e48\u663e\u7136\u7b54\u6848\u5c31\u662f \\(\\sum_{i = 1}^n g[i]\\) \u3002\u90a3\u4e48\u600e\u4e48\u6c42 \\(g[i]\\) \u5462\uff0c\u6211\u4eec\u8003\u8651\u5230\u5bf9\u4e8e\u4e00\u4e2a\u56de\u6587\u4e32\uff0c\u6211\u4eec\u628a\u5b83\u5c3d\u53ef\u80fd\u591a\u5206\u4e3a\u7531\u82e5\u5e72\u56de\u6587\u5b57\u4e32\u7ec4\u6210\uff0c\u5206\u5230\u4e0d\u80fd\u5206\u4e3a\u6b62\u3002\u8fd9\u6837\u5206\u89e3\u51fa\u6765\u7684\u6bcf\u4e00\u4e2a\u56de\u6587\u4e32\u91cc\u4e00\u5b9a\u4e0d\u4f1a\u5305\u542b\u56de\u6587\u524d\u7f00 / \u540e\u7f00\uff08\u56e0\u4e3a\u8981\u662f\u5305\u542b\u7684\u8bdd\u5c31\u53c8\u53ef\u4ee5\u5206\u89e3\u4e86\uff09\u3002\u8fd9\u6837\u5206\u89e3\u4e4b\u540e\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u597d\u7684\u5b57\u7b26\u4e32\uff0c\u4e00\u5b9a\u662f\u7531\u82e5\u5e72\u5c0f\u7684\u4e0d\u53ef\u5206\u89e3\u7684\u56de\u6587\u4e32\u7ec4\u6210\u3002\u800c\u4e14\u663e\u7136\u8fd9\u79cd\u5206\u89e3\u65b9\u6cd5\u662f\u552f\u4e00\u7684\u3002\u8bf4\u660e\u8fd9\u6837\u7684\u8bdd\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u597d\u7684\u5b57\u7b26\u4e32\u800c\u8a00\u6211\u4eec\u53ea\u7b97\u4e86\u4e00\u6b21\uff0c\u6b63\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002\u57fa\u4e8e\u8fd9\u4e2a\u601d\u8def\uff0c\u6211\u4eec\u518d\u5f15\u5165\u4e00\u4e2a\u65b0\u7684\u6570\u7ec4 \\(f[i]\\)\uff0c\\(f[i]\\) \u8868\u793a\u4ee5 \\(i\\) \u7ed3\u5c3e\u7684\u56de\u6587\u4e32\u7684\u6700\u5c0f\u957f\u5ea6\uff0c\u56e0\u4e3a\u4ee5 \\(i\\) \u7ed3\u5c3e\u7684\u5b57\u4e32\u4e00\u5b9a\u662f\u5305\u542b\u4ee5 \\(i\\) \u7ed3\u5c3e\u7684\u6700\u5c0f\u56de\u6587\u4e32\u7684\uff0c\u800c\u4e14\u57fa\u4e8e\u4e4b\u524d\u7684\u5206\u89e3\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 \\(g[i] = g[i - f[i]] + 1(f[i] \\ne 0)\\)\uff0c\u5f53 \\(f[i] = 0\\) \u65f6\uff0c\\(g[i] = 0\\)\u3002\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\u5982\u4f55\u6c42 \\(f[i]\\)\uff0c\u6211\u4eec\u5148\u8fdb\u884c\u4e00\u904d Manacher \u7b97\u6cd5\uff0c\u6c42\u51fa\u4ee5\u6bcf\u4e00\u4f4d\u4e3a\u5bf9\u79f0\u8f74\u7684\u6700\u5927\u56de\u6587\u534a\u5f84\uff0c\u7531\u4e8e\u8981\u6c42\u662f\u5076\u56de\u6587\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8003\u8651\u4ee5\u4e24\u4e2a\u4f4d\u7f6e\u4e2d\u95f4\u4e3a\u8f74\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u82e5\u4ee5\u7b2c \\(i\\) \u4f4d\u4e3a\u8f74\uff0c\u90a3\u4e48 \\([i + 1, i + len[i]]\\) \u8fd9\u4e2a\u8303\u56f4\u5185\u662f\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u56de\u6587\u7ed3\u5c3e\u7684\uff0c\u53ef\u4ee5\u88ab \\(i\\) \u8986\u76d6\u3002\u800c\u60f3\u8981\u8ba9\u56de\u6587\u6700\u5c0f\uff0c\u5c31\u662f\u4ece\u540e\u5411\u524d\u626b\u4e00\u904d\uff0c\u5982\u679c\u5148\u88ab\u4ee5 \\(i\\) \u8986\u76d6\u7684\uff0c\u4e00\u5b9a\u6ee1\u8db3\u4ee5 \\(i\\) \u4e3a\u8f74\u56de\u6587\u6700\u5c0f\uff0c\u6211\u4eec\u77e5\u9053\u4e86\u53f3\u7aef\u70b9\u548c\u56de\u6587\u8f74\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u56de\u6587\u957f\u5ea6\u4e86\uff0c\u4e5f\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa \\(f[i]\\) \u4e86\uff0c\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u533a\u95f4\u4e2d\u4e00\u90e8\u5206\u70b9\u88ab\u4e4b\u524d\u7684\u5bf9\u79f0\u8f74\u8986\u76d6\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u88ab\u4e4b\u540e\u5bf9\u79f0\u8f74\u8986\u76d6\u65f6\u8981\u8df3\u8fc7\u8fd9\u51e0\u4e2a\u70b9\uff0c\u53ef\u4ee5\u7528\u53cc\u5411\u94fe\u8868\u6765\u7ef4\u62a4\u3002</p> <p>Code</p>"},{"location":"acm/cf/cf1801/#f-two-centroids","title":"F. Two Centroids","text":"<p>Description</p> <p>Solution</p>"},{"location":"acm/cf/cf1801/#1829-codeforces-round-871-div-4","title":"1829. Codeforces Round 871 (Div. 4)","text":""},{"location":"acm/cf/cf1801/#g-hits-different","title":"G. Hits Different","text":"<p>Description</p> <p></p> <p>\u82e5\u5e72\u5757\u4ee5\u91d1\u5b57\u5854\u72b6\u6446\u653e\uff0c\u7528\u7403\u51fb\u5012\u4e0b\u65b9\u7684\uff0c\u4e0a\u65b9\u4e5f\u4f1a\u5012\u4e0b\uff0c\u7b2c \\(n\\) \u5757\u5206\u6570 \\(n^2\\)\uff0c\u95ee\u7528\u7403\u6253\u7b2c \\(n\\) \u5757\u80fd\u5f97\u591a\u5c11\u5206</p> <p>Solution</p> <p>\u65b9\u6cd5\u4e00\uff1a</p> <p>\u200b   \u52a8\u6001\u89c4\u5212\uff0c \\(f[i]\\) \u8868\u793a\u51fb\u6253\u7b2c \\(i\\) \u5757\u80fd\u5f97\u7684\u5206\u6570\uff0c\\(f[i] = f[\u5de6\u4e0a] + f[\u53f3\u4e0a] - f[\u516c\u5171]\\)\uff0c\u56e0\u4e3a\u5de6\u4e0a\u548c\u53f3\u4e0a\u662f\u6709\u516c\u5171\u90e8\u5206\u4f1a\u591a\u7b97\uff0c\u6240\u4ee5\u7b80\u5355\u5bb9\u65a5\u4e00\u4e0b</p> <p>\u65b9\u6cd5\u4e8c\uff1a</p> <p>\u200b   \u8fd8\u662f\u52a8\u6001\u89c4\u5212\uff0c\u5148\u628a\u56fe\u503e\u659c \\(45\u00b0\\)</p> <p>\u200b   </p> <p>\u200b   \u611f\u89c9\u53d8\u597d\u770b\u4e86\u4e00\u70b9\uff08\uff1f\uff09</p> <p>\u200b   \u518d\u8f6c45\u00b0</p> <p></p> <p>\u200b   \u55ef\uff0c\u53d8\u6210\u4e00\u4e2a\u7b80\u5355\u4e8c\u7ef4DP\u5c31\u80fd\u89e3\u51b3\u7684\u95ee\u9898\u4e86</p> <p>Code (Method I)</p> <p>Code (Method II)</p>"},{"location":"acm/cf/cf1811/","title":"1821 ~ 1830","text":"<p>\u5343\u91cc\u4e4b\u884c\uff0c\u59cb\u4e8e\u8db3\u4e0b\u3002</p> <p>Abstract</p> <ul> <li> 1826. Codeforces Round 870 (Div. 2)<ul> <li>E. Walk the Runway</li> <li>F. Fading into Fog</li> </ul> </li> <li> 1828. Codeforces Round 873 (Div. 2)<ul> <li>D2. Range Sorting (Hard Version)</li> <li>E. Palindrome Partition</li> <li>F. Two Centroids</li> </ul> </li> <li> 1829. Codeforces Round 871 (Div. 4)<ul> <li>G. Hits Different</li> </ul> </li> <li> 1837. Educational Codeforces Round 149 (Rated for Div. 2)<ul> <li>E. Playoff Fixing</li> <li>F. Editorial for Two</li> </ul> </li> <li> 1840. Codeforces Round 878 (Div. 3)<ul> <li>F. Railguns</li> <li>G2. In Search of Truth (Hard Version) </li> </ul> </li> <li> 1848. Codeforces Round 885 (Div. 2)<ul> <li>C. Vika and Price Tags</li> <li>D. Vika and Bonuses</li> <li>F. Vika and Wiki</li> </ul> </li> <li> 1850. Codeforces Round 886 (Div. 4)<ul> <li>F. We Were Both Children</li> <li>H. The Third Letter   </li> </ul> </li> </ul>"},{"location":"acm/cf/cf1811/#1826-codeforces-round-870-div-2","title":"1826. Codeforces Round 870 (Div. 2)","text":""},{"location":"acm/cf/cf1811/#e-walk-the-runway","title":"E. Walk the Runway","text":"<p>Description</p> <p>\\(n\\) \u4e2a\u4eba\u6bcf\u4e2a\u4eba\u90fd\u6709\u4e00\u4e2a\u4ef7\u503c \\(p_i\\)\uff0c\u7136\u540e\u8fd9 \\(n\\) \u4e2a\u4eba\u6709 \\(m\\) \u7ef4\u6570\u503c\uff0c\u8981\u6c42\u4f60\u4ece\u4e2d\u9009\u53d6\u82e5\u5e72\u4e2a\u4eba\u5e76\u4e14\u53ef\u4ee5\u4efb\u610f\u8c03\u6574\u9009\u7684\u4eba\u7684\u987a\u5e8f\uff0c\u8981\u6c42\u9009\u7684\u4eba\u6ee1\u8db3 \\(m\\) \u7ef4\u4e2d\u6bcf\u4e00\u7ef4\u91cc\u9009\u7684\u4eba\u7684\u6570\u503c\u90fd\u4e25\u683c\u9012\u589e\u3002</p> <p>\\(n \\le 5000,m \\le 500\\)\u3002</p> <p>Solution</p> <p>\u5982\u679c\u6211\u4eec\u5df2\u77e5\u4e24\u4e2a\u4eba\u4e4b\u95f4\u7684\u504f\u5e8f\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e24\u4e2a\u4eba\u4e4b\u95f4\u8fde\u4e00\u6761\u6709\u5411\u8fb9\uff08\u6216\u4e0d\u8fde\uff09\uff0c\u6545\u8fd9 \\(n\\) \u4e2a\u4eba\u7684\u5173\u7cfb\u53ef\u4ee5\u7528\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\u6765\u8868\u793a\uff0c\u5728\u56fe\u4e0a\u8dd1 dfs\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(n^2)\\)\uff0c\u662f\u5b8c\u5168\u591f\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u7814\u7a76\u5982\u4f55\u6c42\u4efb\u610f\u4e24\u4e2a\u4eba\u4e4b\u95f4\u504f\u5e8f\u5173\u7cfb\u3002</p> <p>\u76f4\u63a5\u66b4\u529b\u6c42\u504f\u5e8f\u5173\u7cfb\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(n^2m)\\)\uff0c\u663e\u7136\u662f\u4f1a T \u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528 bitset \u6765\u4f18\u5316\u3002\u5bf9\u6bcf\u4e00\u7ef4\u6392\u5b8c\u5e8f\u540e\u524d\u9762\u7684\u80af\u5b9a\u4e0d\u4f1a\u6392\u5728\u8fd9\u4e2a\u6570\u7684\u540e\u9762\uff0c\u6545\u6bcf\u6b21\u7528 bitset \u7684 &amp; \u8fd0\u7b97\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(\\dfrac{m}{w})\\)\uff0c\u5176\u4e2d \\(w\\) \u7b49\u4e8e \\(64\\)\u3002</p> <p>Code</p>"},{"location":"acm/cf/cf1811/#f-fading-into-fog","title":"F. Fading into Fog","text":"<p>Description</p> <p>\u4ea4\u4e92\u9898</p> <p>\u6709 \\(n\\) \u4e2a\u9690\u85cf\u70b9\uff0c\u6bcf\u6b21\u4f60\u53ef\u4ee5\u7ed9\u51fa \\(a\\)\uff0c\\(b\\)\uff0c\\(c\\)\uff0c\u8be2\u95ee\u4e00\u6761\u5f62\u5982 \\(ax+by+c=0\\) \u7684\u76f4\u7ebf\uff0c\u4ea4\u4e92\u5e93\u4f1a\u4ee5\u4efb\u610f\u987a\u5e8f\u544a\u8bc9\u4f60\u6bcf\u4e2a\u70b9\u5728\u76f4\u7ebf\u4e0a\u7684\u6295\u5f71\uff08\u4fdd\u8bc1\u6bcf\u4e2a\u8fd4\u56de\u7684\u6295\u5f71\u70b9\u4e0e\u771f\u5b9e\u6295\u5f71\u70b9\u7684\u8ddd\u79bb\u4e0d\u8d85\u8fc7 \\(10^{-4}\\)\uff09\u3002</p> <p>\u8bf7\u7528\u6700\u5c11\u7684\u8be2\u95ee\u6c42\u51fa\u8fd9\u4e9b\u9690\u85cf\u70b9\u7684\u4f4d\u7f6e\uff0c\u7cbe\u5ea6\u76f8\u5dee \\(10^{-3}\\) \u5373\u53ef\u3002</p> <p>\u4fdd\u8bc1\u6bcf\u4e2a\u9690\u85cf\u70b9\u7684\u4e0e\u5176\u4ed6\u9690\u85cf\u70b9\u7684 \\(x\\) \u5750\u6807\u548c \\(y\\) \u5750\u6807\u90fd\u81f3\u5c11\u76f8\u5dee \\(1\\)\uff0c\u6bcf\u6b21\u8be2\u95ee\u7684 \\(\u2223a\u2223+\u2223b\u2223\u22650.1\\)\u3002</p> <p>Solution</p> <p>\u901a\u8fc7\u753b\u56fe\u89c2\u5bdf\u4e0d\u96be\u53d1\u73b0\uff0c\u5176\u5b9e\u6700\u591a\u4e09\u6b21\u8be2\u95ee\u5c31\u53ef\u4ee5\u786e\u5b9a\u8fd9 \\(n\\) \u4e2a\u70b9\u4e86\uff0c\u6240\u4ee5\u9898\u76ee\u5c31\u53d8\u4e3a\u4e0d\u8d85\u8fc7\u4e09\u6b21\u8be2\u95ee\u6c42\u51fa \\(n\\) \u70b9\uff0c\u4e00\u6761\u5e73\u884c \\(x\\) \u8f74\uff0c\u4e00\u6761\u5e73\u884c \\(y\\) \u8f74\uff0c\u4e00\u6761\u659c\u7740\u7684\u8fb9\uff08\u4f46\u662f\u5f88\u8d34\u8fd1 \\(x\\) \u8f74\uff09\uff0c\u524d\u4e24\u4e2a\u5c31\u53ef\u4ee5\u786e\u5b9a\u8fd9 \\(n\\) \u4e2a\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\uff0c\u7b2c\u4e09\u4e2a\u5b8c\u5168\u786e\u5b9a\u8fd9 \\(n\\) \u4e2a\u70b9\u3002</p> <p>\u4e3a\u4ec0\u4e48\u7b2c\u4e09\u6761\u7ebf\u8981\u8d34\u8fd1 \\(x\\) \u8f74\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u7684\u5904\u7406\u65b9\u6cd5\u662f\u5bf9\u7b2c\u4e00\uff0c\u4e09\u6761\u7ebf\u5f97\u5230\u7684 \\(n\\) \u4e2a\u6295\u5f71\u70b9\u6309\u6a2a\u5750\u6807\u6392\u5e8f\uff0c\u9009\u4e00\u6761\u8d34\u8fd1 \\(x\\) \u8f74\u7684\u7ebf\u4fdd\u8bc1\u8fd9 \\(n\\) \u4e2a\u70b9\u548c\u7b2c\u4e00\u6761\u7ebf\u7684 \\(n\\) \u4e2a\u70b9\u987a\u5e8f\u4e00\u81f4\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u53ef\u4ee5\u7b97\u51fa\u6bcf\u4e2a\u70b9\u7eb5\u5750\u6807\u7684\u503c\uff0c\u4f46\u4e0d\u51c6\u786e\u53ef\u80fd\u4f1a\u6709\u8bef\u5dee\uff0c\u4f46\u662f\u6211\u4eec\u77e5\u9053\u6bcf\u4e2a\u70b9\u7684\u7eb5\u5750\u6807\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u627e\u7eb5\u5750\u6807\u548c\u6211\u4eec\u8ba1\u7b97\u7684\u4f30\u8ba1\u503c\u4e2d\u6700\u8d34\u8fd1\u7684\u503c\u6765\u66ff\u6362\u3002</p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u672c\u9898\u5bf9\u7cbe\u5ea6\u8981\u6c42\u8f83\u9ad8\uff0c\u5e94\u7528 <code>long double</code> \u6765\u5b58\u50a8</p> <p>Code</p>"},{"location":"acm/cf/cf1811/#1828-codeforces-round-873-div-2","title":"1828. Codeforces Round 873 (Div. 2)","text":""},{"location":"acm/cf/cf1811/#d2-range-sorting-hard-version","title":"D2. Range Sorting (Hard Version)","text":"<p>Description</p> <p>\u5bf9\u4e00\u4e2a\u6570\u7ec4 \\(\\{p_i\\}\\) \u7684\u4e00\u6bb5\u533a\u95f4 \\([l,r]\\) \u6392\u5e8f\u7684\u4ee3\u4ef7\u4e3a \\(r\u2212l\\) \uff0c\u5bf9\u6574\u4e2a\u6570\u7ec4 \\(p_i\\) \u6392\u5e8f\u7684\u4ee3\u4ef7\u4e3a\u9009\u5b9a\u82e5\u5e72\u533a\u95f4\u5e76\u6392\u5e8f\uff0c\u4f7f\u5f97\u6574\u4e2a\u6570\u7ec4\u6709\u5e8f\u7684\u4ee3\u4ef7\u4e4b\u548c\u3002</p> <p>\u6c42 \\(\\{a_i\\}\\) \u7684\u6240\u6709\u5b50\u6bb5\u6392\u5e8f\u7684\u4ee3\u4ef7\u4e4b\u548c\u3002</p> <p>Easy Version \\(n \\le 5 \\times 10^3\\)</p> <p>Hard Version \\(n \\le 3 \\times 10^5\\)</p> <p>Solution</p> <p>\u6709\u70b9\u96be\u60f3\u3002</p> <p>\u4ed4\u7ec6\u89c2\u5bdf\u6837\u4f8b\uff0c\u4e0d\u96be\u53d1\u73b0\u4e00\u4e9b\u6027\u8d28\uff1a</p> <ul> <li>\u64cd\u4f5c\u533a\u95f4\u4e00\u5b9a\u662f\u4e0d\u91cd\u53e0\u7684\uff0c\u4e0d\u7136\u76f4\u63a5\u5bf9\u6574\u4e2a\u533a\u95f4\u64cd\u4f5c\u66f4\u4f18\u3002</li> <li>\u5c3d\u53ef\u80fd\u591a\u533a\u95f4\u64cd\u4f5c\u4f1a\u4f7f\u7b54\u6848\u66f4\u4f18\u3002</li> <li>\u66f4\u5206\u6210\u4e24\u4e2a\u533a\u95f4\u64cd\u4f5c\u5219\u4e00\u5b9a\u6ee1\u8db3\u524d\u4e00\u4e2a\u533a\u95f4\u7684\u6700\u5927\u503c\u5c0f\u4e8e\u540e\u4e00\u4e2a\u533a\u95f4\u7684\u6700\u5c0f\u503c\u3002</li> </ul> <p>\u90a3\u4e48\u57fa\u4e8e\u4ee5\u4e0a\u6027\u8d28\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u641e\u51fa \\(O(n^3)\\) \u66b4\u529b\uff1a\u679a\u4e3e\u533a\u95f4\u5de6\u53f3\u7aef\u70b9\uff0c\u679a\u4e3e\u4e2d\u95f4\u95f4\u9694\u70b9\uff0c\u63d0\u524d\u7528 st\u8868 \u9884\u5904\u7406\u51fa\u533a\u95f4\u6700\u5927\u6700\u5c0f\u503c\u7136\u540e\u6765\u6c42\uff0c\u4f46\u662f\u8fd9\u6837\u53d1\u73b0\u8fde Easy Version \u90fd\u8fc7\u4e0d\u4e86\uff0c\u6545\u6211\u4eec\u53ef\u4ee5\u6765\u7a0d\u6539\u8fdb\u4e00\u4e0b\u601d\u8def\u3002</p> <p>\u5bf9\u4e8e Easy Version\uff0c\u6211\u4eec\u53ef\u4ee5\u56fa\u5b9a\u5de6\u7aef\u70b9\uff0c\u6bcf\u6b21\u679a\u4e3e\u53f3\u7aef\u70b9\uff0c\u6bcf\u6b21\u5411\u540e\u52a0\u5165\u4e00\u4e2a\u65b0\u7684\u6570\u65f6\uff0c\u6211\u4eec\u8981\u91cd\u65b0\u8ba1\u7b97\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u6211\u4eec\u7b97 \\([l, r]\\) \u533a\u95f4\u7684\u7b54\u6848\u5c31\u662f\u533a\u95f4\u957f\u5ea6\u51cf\u53bb\u6700\u591a\u53ef\u62c6\u5206\u533a\u95f4\u6570\uff0c\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86 \\([l, r - 1]\\) \u533a\u95f4\u7684\u7b54\u6848\u4ee5\u53ca\u5212\u5206\u533a\u95f4\uff0c\u52a0\u5165 \\(a_r\\) \u6570\u540e\uff0c\u6211\u4eec\u5176\u5b9e\u5c31\u662f\u8981\u628a\u8fd9\u4e2a\u6570\u548c\u67d0\u4e2a\u533a\u95f4\u5408\u5e76\uff0c\u6ee1\u8db3\u5408\u5e76\u540e\u7684\u533a\u95f4\u7684\u6700\u5c0f\u503c\u4f9d\u7136\u5927\u4e8e\u524d\u9762\u533a\u95f4\u7684\u6700\u5927\u503c\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u4e4b\u524d\u51e0\u4e2a\u5212\u5206\u533a\u95f4\u7684\u6700\u5927\u503c\uff0c\u7136\u540e\u4e0d\u65ad\u5411\u524d\u8df3\uff0c\u770b \\(a_r\\) \u53ef\u4ee5\u548c\u54ea\u51e0\u4e2a\u533a\u95f4\u5408\u5e76\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u5408\u5e76\u7684\u533a\u95f4\u5c31\u76f4\u63a5\u5408\u5e76\uff0c\u8fd9\u6837\u4e00\u5b9a\u662f\u6700\u4f18\u7684\u3002\u5408\u5e76\u5b8c\u4e4b\u540e\u66f4\u65b0\u65b0\u7684\u62c6\u5206\u533a\u95f4\uff0c\u7b54\u6848\u4e5f\u6bd4\u8f83\u597d\u7edf\u8ba1\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n^2)\\)\u3002</p> <p>\u5bf9\u4e8e Hard Vesion\uff0c\u6211\u4eec\u53d1\u73b0\u5f88\u96be\u4ece Easy Version \u4e0a\u518d\u7ee7\u7eed\u4f18\u5316\uff0c\u6211\u4eec\u6362\u53e6\u4e00\u4e2a\u601d\u8def\u3002\u80fd\u8fc7 \\(3 \\times 10^5\\) \u7684\u505a\u6cd5\u5e94\u8be5\u662f \\(O(nlogn)\\) \u6216 \\(O(n)\\) \u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u627e\u5230\u8fd9\u4e2a\u590d\u6742\u5ea6\u7684\u7b97\u6cd5\u5e94\u8be5\u662f\u7b97\u6bcf\u4e2a\u4f4d\u7f6e\u6240\u80fd\u505a\u51fa\u7684\u8d21\u732e\u3002\u6211\u4eec\u5148\u7b97\u6700\u574f\u60c5\u51b5\u4e0b\u4e00\u5171\u7684\u4ee3\u4ef7\u4e3a \\(\\sum_{i = 2}^{n}(i - 1)(n - i + 1)\\)\uff0c\u7136\u540e\u6211\u4eec\u518d\u7b97\u6bcf\u4e2a\u4f4d\u7f6e\u5bf9\u4ee3\u4ef7\u80fd\u51cf\u5c11\u7684\u8d21\u732e\u3002\u82e5\u80fd\u5bf9\u7b54\u6848\u4ea7\u751f\u51cf\u5c11\u7684\u8d21\u732e\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5927\u533a\u95f4\uff0c\u6211\u4eec\u4e00\u5b9a\u53ef\u4ee5\u62c6\u5206\u6210\u4e24\u4e2a\u5c0f\u533a\u95f4\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\uff0c\u6211\u4eec\u4e0d\u59a8\u5047\u8bbe\u8fd9\u4e2a\u4f4d\u7f6e \\(i\\) \u4e0a\u7684\u6570\u662f\u540e\u4e00\u4e2a\u533a\u95f4\u7684\u6700\u5c0f\u503c\u3002\u7136\u540e\u6211\u4eec\u5f80\u540e\u627e\u5230\u7b2c\u4e00\u4e2a\u5c0f\u4e8e \\(a_i\\) \u7684\u6570\u7684\u4f4d\u7f6e \\(r_i\\)\uff08\u8fd9\u91cc\u6c42\u201c\u7b2c\u4e00\u4e2a\u5c0f\u4e8e\u201c\u8fd9\u6837\u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u6765\u6c42\uff09\uff0c\u7136\u540e\u518d\u5f80\u524d\u627e\u7b2c\u4e00\u4e2a\u5c0f\u4e8e \\(a_i\\) \u7684\u6570\u7684\u4f4d\u7f6e \\(l_i\\)\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u540e\u4e00\u4e2a\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u662f \\((l_i + 1)\\)\uff0c\u53f3\u7aef\u70b9\u662f\u5728 \\(i \\sim (r_i - 1)\\) \u91cc\u9009\u3002\u7136\u540e\u524d\u4e00\u4e2a\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u662f \\(l_i\\)\uff0c\u6700\u540e\u53ea\u7528\u786e\u5b9a\u524d\u4e00\u4e2a\u533a\u95f4\u7684\u5de6\u7aef\u70b9\uff0c\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u7528 st\u8868 \u5148\u6c42\u51fa\u533a\u95f4\u6700\u5927\u503c\uff0c\u7136\u540e\u4e0d\u65ad\u8df3\u8868\u6765\u6c42\u51fa\u5de6\u7aef\u70b9 \\(kdl\\)\u3002\u7136\u540e\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6570\u5bf9\u7b54\u6848\u51cf\u5c11\u7684\u8d21\u732e\u4e3a \\((r_i - i)\\times(l_i - kdl + 1)\\)\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(nlogn)\\)\u3002</p> <p>Code (Easy Version)</p> <p>Code (Hard Version)</p>"},{"location":"acm/cf/cf1811/#e-palindrome-partition","title":"E. Palindrome Partition","text":"<p>Description</p> <p>\u79f0\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u597d\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a\u5076\u6570\u7684\u56de\u6587\u4e32\u6216\u7531\u82e5\u5e72\u957f\u5ea6\u4e3a\u5076\u6570\u7684\u56de\u6587\u4e32\u62fc\u63a5\u800c\u6210\u3002</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u5b57\u7b26\u4e32 \\(s\\)\uff0c\u6c42\u6709\u591a\u5c11 \\(s\\) \u7684\u5b50\u4e32\u662f\u597d\u7684\u3002</p> <p>\\(1\u2264n\u22645\u00d710^5\\)\uff0c\\(s\\) \u4ec5\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002</p> <p>Solution</p> <p>\u6839\u636e\u6570\u636e\u8303\u56f4\u53ef\u4ee5\u5f97\u51fa\u6b63\u89e3\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u8be5\u662f \\(O(n)\\) \u6216 \\(O(nlogn)\\) \u7684\u3002</p> <p>\u672c\u9898\u91c7\u7528\u52a8\u6001\u89c4\u5212\uff0c\u53ef\u4ee5\u4ee4 \\(g[i]\\) \u8868\u793a\u4ee5 \\(i\\) \u7ed3\u5c3e\u7684\u597d\u4e32\u4e2a\u6570\uff0c\u90a3\u4e48\u663e\u7136\u7b54\u6848\u5c31\u662f \\(\\sum_{i = 1}^n g[i]\\) \u3002\u90a3\u4e48\u600e\u4e48\u6c42 \\(g[i]\\) \u5462\uff0c\u6211\u4eec\u8003\u8651\u5230\u5bf9\u4e8e\u4e00\u4e2a\u56de\u6587\u4e32\uff0c\u6211\u4eec\u628a\u5b83\u5c3d\u53ef\u80fd\u591a\u5206\u4e3a\u7531\u82e5\u5e72\u56de\u6587\u5b57\u4e32\u7ec4\u6210\uff0c\u5206\u5230\u4e0d\u80fd\u5206\u4e3a\u6b62\u3002\u8fd9\u6837\u5206\u89e3\u51fa\u6765\u7684\u6bcf\u4e00\u4e2a\u56de\u6587\u4e32\u91cc\u4e00\u5b9a\u4e0d\u4f1a\u5305\u542b\u56de\u6587\u524d\u7f00 / \u540e\u7f00\uff08\u56e0\u4e3a\u8981\u662f\u5305\u542b\u7684\u8bdd\u5c31\u53c8\u53ef\u4ee5\u5206\u89e3\u4e86\uff09\u3002\u8fd9\u6837\u5206\u89e3\u4e4b\u540e\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u597d\u7684\u5b57\u7b26\u4e32\uff0c\u4e00\u5b9a\u662f\u7531\u82e5\u5e72\u5c0f\u7684\u4e0d\u53ef\u5206\u89e3\u7684\u56de\u6587\u4e32\u7ec4\u6210\u3002\u800c\u4e14\u663e\u7136\u8fd9\u79cd\u5206\u89e3\u65b9\u6cd5\u662f\u552f\u4e00\u7684\u3002\u8bf4\u660e\u8fd9\u6837\u7684\u8bdd\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u597d\u7684\u5b57\u7b26\u4e32\u800c\u8a00\u6211\u4eec\u53ea\u7b97\u4e86\u4e00\u6b21\uff0c\u6b63\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002\u57fa\u4e8e\u8fd9\u4e2a\u601d\u8def\uff0c\u6211\u4eec\u518d\u5f15\u5165\u4e00\u4e2a\u65b0\u7684\u6570\u7ec4 \\(f[i]\\)\uff0c\\(f[i]\\) \u8868\u793a\u4ee5 \\(i\\) \u7ed3\u5c3e\u7684\u56de\u6587\u4e32\u7684\u6700\u5c0f\u957f\u5ea6\uff0c\u56e0\u4e3a\u4ee5 \\(i\\) \u7ed3\u5c3e\u7684\u5b57\u4e32\u4e00\u5b9a\u662f\u5305\u542b\u4ee5 \\(i\\) \u7ed3\u5c3e\u7684\u6700\u5c0f\u56de\u6587\u4e32\u7684\uff0c\u800c\u4e14\u57fa\u4e8e\u4e4b\u524d\u7684\u5206\u89e3\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 \\(g[i] = g[i - f[i]] + 1(f[i] \\ne 0)\\)\uff0c\u5f53 \\(f[i] = 0\\) \u65f6\uff0c\\(g[i] = 0\\)\u3002\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\u5982\u4f55\u6c42 \\(f[i]\\)\uff0c\u6211\u4eec\u5148\u8fdb\u884c\u4e00\u904d Manacher \u7b97\u6cd5\uff0c\u6c42\u51fa\u4ee5\u6bcf\u4e00\u4f4d\u4e3a\u5bf9\u79f0\u8f74\u7684\u6700\u5927\u56de\u6587\u534a\u5f84\uff0c\u7531\u4e8e\u8981\u6c42\u662f\u5076\u56de\u6587\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8003\u8651\u4ee5\u4e24\u4e2a\u4f4d\u7f6e\u4e2d\u95f4\u4e3a\u8f74\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u82e5\u4ee5\u7b2c \\(i\\) \u4f4d\u4e3a\u8f74\uff0c\u90a3\u4e48 \\([i + 1, i + len[i]]\\) \u8fd9\u4e2a\u8303\u56f4\u5185\u662f\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u56de\u6587\u7ed3\u5c3e\u7684\uff0c\u53ef\u4ee5\u88ab \\(i\\) \u8986\u76d6\u3002\u800c\u60f3\u8981\u8ba9\u56de\u6587\u6700\u5c0f\uff0c\u5c31\u662f\u4ece\u540e\u5411\u524d\u626b\u4e00\u904d\uff0c\u5982\u679c\u5148\u88ab\u4ee5 \\(i\\) \u8986\u76d6\u7684\uff0c\u4e00\u5b9a\u6ee1\u8db3\u4ee5 \\(i\\) \u4e3a\u8f74\u56de\u6587\u6700\u5c0f\uff0c\u6211\u4eec\u77e5\u9053\u4e86\u53f3\u7aef\u70b9\u548c\u56de\u6587\u8f74\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u56de\u6587\u957f\u5ea6\u4e86\uff0c\u4e5f\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa \\(f[i]\\) \u4e86\uff0c\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u533a\u95f4\u4e2d\u4e00\u90e8\u5206\u70b9\u88ab\u4e4b\u524d\u7684\u5bf9\u79f0\u8f74\u8986\u76d6\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u88ab\u4e4b\u540e\u5bf9\u79f0\u8f74\u8986\u76d6\u65f6\u8981\u8df3\u8fc7\u8fd9\u51e0\u4e2a\u70b9\uff0c\u53ef\u4ee5\u7528\u53cc\u5411\u94fe\u8868\u6765\u7ef4\u62a4\u3002</p> <p>Code</p>"},{"location":"acm/cf/cf1811/#f-two-centroids","title":"F. Two Centroids","text":"<p>Description</p> <p>Solution</p>"},{"location":"acm/cf/cf1811/#1829-codeforces-round-871-div-4","title":"1829. Codeforces Round 871 (Div. 4)","text":""},{"location":"acm/cf/cf1811/#g-hits-different","title":"G. Hits Different","text":"<p>Description</p> <p></p> <p>\u82e5\u5e72\u5757\u4ee5\u91d1\u5b57\u5854\u72b6\u6446\u653e\uff0c\u7528\u7403\u51fb\u5012\u4e0b\u65b9\u7684\uff0c\u4e0a\u65b9\u4e5f\u4f1a\u5012\u4e0b\uff0c\u7b2c \\(n\\) \u5757\u5206\u6570 \\(n^2\\)\uff0c\u95ee\u7528\u7403\u6253\u7b2c \\(n\\) \u5757\u80fd\u5f97\u591a\u5c11\u5206</p> <p>Solution</p> <p>\u65b9\u6cd5\u4e00\uff1a</p> <p>\u200b   \u52a8\u6001\u89c4\u5212\uff0c \\(f[i]\\) \u8868\u793a\u51fb\u6253\u7b2c \\(i\\) \u5757\u80fd\u5f97\u7684\u5206\u6570\uff0c\\(f[i] = f[\u5de6\u4e0a] + f[\u53f3\u4e0a] - f[\u516c\u5171]\\)\uff0c\u56e0\u4e3a\u5de6\u4e0a\u548c\u53f3\u4e0a\u662f\u6709\u516c\u5171\u90e8\u5206\u4f1a\u591a\u7b97\uff0c\u6240\u4ee5\u7b80\u5355\u5bb9\u65a5\u4e00\u4e0b</p> <p>\u65b9\u6cd5\u4e8c\uff1a</p> <p>\u200b   \u8fd8\u662f\u52a8\u6001\u89c4\u5212\uff0c\u5148\u628a\u56fe\u503e\u659c \\(45\u00b0\\)</p> <p>\u200b   </p> <p>\u200b   \u611f\u89c9\u53d8\u597d\u770b\u4e86\u4e00\u70b9\uff08\uff1f\uff09</p> <p>\u200b   \u518d\u8f6c45\u00b0</p> <p></p> <p>\u200b   \u55ef\uff0c\u53d8\u6210\u4e00\u4e2a\u7b80\u5355\u4e8c\u7ef4DP\u5c31\u80fd\u89e3\u51b3\u7684\u95ee\u9898\u4e86</p> <p>Code (Method I)</p> <p>Code (Method II)</p>"},{"location":"acm/cf/cf1821/","title":"1821 ~ 1830","text":"<p>\u5343\u91cc\u4e4b\u884c\uff0c\u59cb\u4e8e\u8db3\u4e0b\u3002</p> <p>Abstract</p> <ul> <li> 1826. Codeforces Round 870 (Div. 2)<ul> <li>E. Walk the Runway</li> <li>F. Fading into Fog</li> </ul> </li> <li> 1828. Codeforces Round 873 (Div. 2)<ul> <li>D2. Range Sorting (Hard Version)</li> <li>E. Palindrome Partition</li> <li>F. Two Centroids</li> </ul> </li> <li> 1829. Codeforces Round 871 (Div. 4)<ul> <li>G. Hits Different</li> </ul> </li> <li> 1837. Educational Codeforces Round 149 (Rated for Div. 2)<ul> <li>E. Playoff Fixing</li> <li>F. Editorial for Two</li> </ul> </li> <li> 1840. Codeforces Round 878 (Div. 3)<ul> <li>F. Railguns</li> <li>G2. In Search of Truth (Hard Version) </li> </ul> </li> <li> 1848. Codeforces Round 885 (Div. 2)<ul> <li>C. Vika and Price Tags</li> <li>D. Vika and Bonuses</li> <li>F. Vika and Wiki</li> </ul> </li> <li> 1850. Codeforces Round 886 (Div. 4)<ul> <li>F. We Were Both Children</li> <li>H. The Third Letter   </li> </ul> </li> </ul>"},{"location":"acm/cf/cf1821/#1826-codeforces-round-870-div-2","title":"1826. Codeforces Round 870 (Div. 2)","text":""},{"location":"acm/cf/cf1821/#e-walk-the-runway","title":"E. Walk the Runway","text":"<p>Description</p> <p>\\(n\\) \u4e2a\u4eba\u6bcf\u4e2a\u4eba\u90fd\u6709\u4e00\u4e2a\u4ef7\u503c \\(p_i\\)\uff0c\u7136\u540e\u8fd9 \\(n\\) \u4e2a\u4eba\u6709 \\(m\\) \u7ef4\u6570\u503c\uff0c\u8981\u6c42\u4f60\u4ece\u4e2d\u9009\u53d6\u82e5\u5e72\u4e2a\u4eba\u5e76\u4e14\u53ef\u4ee5\u4efb\u610f\u8c03\u6574\u9009\u7684\u4eba\u7684\u987a\u5e8f\uff0c\u8981\u6c42\u9009\u7684\u4eba\u6ee1\u8db3 \\(m\\) \u7ef4\u4e2d\u6bcf\u4e00\u7ef4\u91cc\u9009\u7684\u4eba\u7684\u6570\u503c\u90fd\u4e25\u683c\u9012\u589e\u3002</p> <p>\\(n \\le 5000,m \\le 500\\)\u3002</p> <p>Solution</p> <p>\u5982\u679c\u6211\u4eec\u5df2\u77e5\u4e24\u4e2a\u4eba\u4e4b\u95f4\u7684\u504f\u5e8f\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e24\u4e2a\u4eba\u4e4b\u95f4\u8fde\u4e00\u6761\u6709\u5411\u8fb9\uff08\u6216\u4e0d\u8fde\uff09\uff0c\u6545\u8fd9 \\(n\\) \u4e2a\u4eba\u7684\u5173\u7cfb\u53ef\u4ee5\u7528\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\u6765\u8868\u793a\uff0c\u5728\u56fe\u4e0a\u8dd1 dfs\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(n^2)\\)\uff0c\u662f\u5b8c\u5168\u591f\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u7814\u7a76\u5982\u4f55\u6c42\u4efb\u610f\u4e24\u4e2a\u4eba\u4e4b\u95f4\u504f\u5e8f\u5173\u7cfb\u3002</p> <p>\u76f4\u63a5\u66b4\u529b\u6c42\u504f\u5e8f\u5173\u7cfb\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(n^2m)\\)\uff0c\u663e\u7136\u662f\u4f1a T \u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528 bitset \u6765\u4f18\u5316\u3002\u5bf9\u6bcf\u4e00\u7ef4\u6392\u5b8c\u5e8f\u540e\u524d\u9762\u7684\u80af\u5b9a\u4e0d\u4f1a\u6392\u5728\u8fd9\u4e2a\u6570\u7684\u540e\u9762\uff0c\u6545\u6bcf\u6b21\u7528 bitset \u7684 &amp; \u8fd0\u7b97\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(\\dfrac{m}{w})\\)\uff0c\u5176\u4e2d \\(w\\) \u7b49\u4e8e \\(64\\)\u3002</p> <p>Code</p>"},{"location":"acm/cf/cf1821/#f-fading-into-fog","title":"F. Fading into Fog","text":"<p>Description</p> <p>\u4ea4\u4e92\u9898</p> <p>\u6709 \\(n\\) \u4e2a\u9690\u85cf\u70b9\uff0c\u6bcf\u6b21\u4f60\u53ef\u4ee5\u7ed9\u51fa \\(a\\)\uff0c\\(b\\)\uff0c\\(c\\)\uff0c\u8be2\u95ee\u4e00\u6761\u5f62\u5982 \\(ax+by+c=0\\) \u7684\u76f4\u7ebf\uff0c\u4ea4\u4e92\u5e93\u4f1a\u4ee5\u4efb\u610f\u987a\u5e8f\u544a\u8bc9\u4f60\u6bcf\u4e2a\u70b9\u5728\u76f4\u7ebf\u4e0a\u7684\u6295\u5f71\uff08\u4fdd\u8bc1\u6bcf\u4e2a\u8fd4\u56de\u7684\u6295\u5f71\u70b9\u4e0e\u771f\u5b9e\u6295\u5f71\u70b9\u7684\u8ddd\u79bb\u4e0d\u8d85\u8fc7 \\(10^{-4}\\)\uff09\u3002</p> <p>\u8bf7\u7528\u6700\u5c11\u7684\u8be2\u95ee\u6c42\u51fa\u8fd9\u4e9b\u9690\u85cf\u70b9\u7684\u4f4d\u7f6e\uff0c\u7cbe\u5ea6\u76f8\u5dee \\(10^{-3}\\) \u5373\u53ef\u3002</p> <p>\u4fdd\u8bc1\u6bcf\u4e2a\u9690\u85cf\u70b9\u7684\u4e0e\u5176\u4ed6\u9690\u85cf\u70b9\u7684 \\(x\\) \u5750\u6807\u548c \\(y\\) \u5750\u6807\u90fd\u81f3\u5c11\u76f8\u5dee \\(1\\)\uff0c\u6bcf\u6b21\u8be2\u95ee\u7684 \\(\u2223a\u2223+\u2223b\u2223\u22650.1\\)\u3002</p> <p>Solution</p> <p>\u901a\u8fc7\u753b\u56fe\u89c2\u5bdf\u4e0d\u96be\u53d1\u73b0\uff0c\u5176\u5b9e\u6700\u591a\u4e09\u6b21\u8be2\u95ee\u5c31\u53ef\u4ee5\u786e\u5b9a\u8fd9 \\(n\\) \u4e2a\u70b9\u4e86\uff0c\u6240\u4ee5\u9898\u76ee\u5c31\u53d8\u4e3a\u4e0d\u8d85\u8fc7\u4e09\u6b21\u8be2\u95ee\u6c42\u51fa \\(n\\) \u70b9\uff0c\u4e00\u6761\u5e73\u884c \\(x\\) \u8f74\uff0c\u4e00\u6761\u5e73\u884c \\(y\\) \u8f74\uff0c\u4e00\u6761\u659c\u7740\u7684\u8fb9\uff08\u4f46\u662f\u5f88\u8d34\u8fd1 \\(x\\) \u8f74\uff09\uff0c\u524d\u4e24\u4e2a\u5c31\u53ef\u4ee5\u786e\u5b9a\u8fd9 \\(n\\) \u4e2a\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\uff0c\u7b2c\u4e09\u4e2a\u5b8c\u5168\u786e\u5b9a\u8fd9 \\(n\\) \u4e2a\u70b9\u3002</p> <p>\u4e3a\u4ec0\u4e48\u7b2c\u4e09\u6761\u7ebf\u8981\u8d34\u8fd1 \\(x\\) \u8f74\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u7684\u5904\u7406\u65b9\u6cd5\u662f\u5bf9\u7b2c\u4e00\uff0c\u4e09\u6761\u7ebf\u5f97\u5230\u7684 \\(n\\) \u4e2a\u6295\u5f71\u70b9\u6309\u6a2a\u5750\u6807\u6392\u5e8f\uff0c\u9009\u4e00\u6761\u8d34\u8fd1 \\(x\\) \u8f74\u7684\u7ebf\u4fdd\u8bc1\u8fd9 \\(n\\) \u4e2a\u70b9\u548c\u7b2c\u4e00\u6761\u7ebf\u7684 \\(n\\) \u4e2a\u70b9\u987a\u5e8f\u4e00\u81f4\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u53ef\u4ee5\u7b97\u51fa\u6bcf\u4e2a\u70b9\u7eb5\u5750\u6807\u7684\u503c\uff0c\u4f46\u4e0d\u51c6\u786e\u53ef\u80fd\u4f1a\u6709\u8bef\u5dee\uff0c\u4f46\u662f\u6211\u4eec\u77e5\u9053\u6bcf\u4e2a\u70b9\u7684\u7eb5\u5750\u6807\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u627e\u7eb5\u5750\u6807\u548c\u6211\u4eec\u8ba1\u7b97\u7684\u4f30\u8ba1\u503c\u4e2d\u6700\u8d34\u8fd1\u7684\u503c\u6765\u66ff\u6362\u3002</p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u672c\u9898\u5bf9\u7cbe\u5ea6\u8981\u6c42\u8f83\u9ad8\uff0c\u5e94\u7528 <code>long double</code> \u6765\u5b58\u50a8</p> <p>Code</p>"},{"location":"acm/cf/cf1821/#1828-codeforces-round-873-div-2","title":"1828. Codeforces Round 873 (Div. 2)","text":""},{"location":"acm/cf/cf1821/#d2-range-sorting-hard-version","title":"D2. Range Sorting (Hard Version)","text":"<p>Description</p> <p>\u5bf9\u4e00\u4e2a\u6570\u7ec4 \\(\\{p_i\\}\\) \u7684\u4e00\u6bb5\u533a\u95f4 \\([l,r]\\) \u6392\u5e8f\u7684\u4ee3\u4ef7\u4e3a \\(r\u2212l\\) \uff0c\u5bf9\u6574\u4e2a\u6570\u7ec4 \\(p_i\\) \u6392\u5e8f\u7684\u4ee3\u4ef7\u4e3a\u9009\u5b9a\u82e5\u5e72\u533a\u95f4\u5e76\u6392\u5e8f\uff0c\u4f7f\u5f97\u6574\u4e2a\u6570\u7ec4\u6709\u5e8f\u7684\u4ee3\u4ef7\u4e4b\u548c\u3002</p> <p>\u6c42 \\(\\{a_i\\}\\) \u7684\u6240\u6709\u5b50\u6bb5\u6392\u5e8f\u7684\u4ee3\u4ef7\u4e4b\u548c\u3002</p> <p>Easy Version \\(n \\le 5 \\times 10^3\\)</p> <p>Hard Version \\(n \\le 3 \\times 10^5\\)</p> <p>Solution</p> <p>\u6709\u70b9\u96be\u60f3\u3002</p> <p>\u4ed4\u7ec6\u89c2\u5bdf\u6837\u4f8b\uff0c\u4e0d\u96be\u53d1\u73b0\u4e00\u4e9b\u6027\u8d28\uff1a</p> <ul> <li>\u64cd\u4f5c\u533a\u95f4\u4e00\u5b9a\u662f\u4e0d\u91cd\u53e0\u7684\uff0c\u4e0d\u7136\u76f4\u63a5\u5bf9\u6574\u4e2a\u533a\u95f4\u64cd\u4f5c\u66f4\u4f18\u3002</li> <li>\u5c3d\u53ef\u80fd\u591a\u533a\u95f4\u64cd\u4f5c\u4f1a\u4f7f\u7b54\u6848\u66f4\u4f18\u3002</li> <li>\u66f4\u5206\u6210\u4e24\u4e2a\u533a\u95f4\u64cd\u4f5c\u5219\u4e00\u5b9a\u6ee1\u8db3\u524d\u4e00\u4e2a\u533a\u95f4\u7684\u6700\u5927\u503c\u5c0f\u4e8e\u540e\u4e00\u4e2a\u533a\u95f4\u7684\u6700\u5c0f\u503c\u3002</li> </ul> <p>\u90a3\u4e48\u57fa\u4e8e\u4ee5\u4e0a\u6027\u8d28\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u641e\u51fa \\(O(n^3)\\) \u66b4\u529b\uff1a\u679a\u4e3e\u533a\u95f4\u5de6\u53f3\u7aef\u70b9\uff0c\u679a\u4e3e\u4e2d\u95f4\u95f4\u9694\u70b9\uff0c\u63d0\u524d\u7528 st\u8868 \u9884\u5904\u7406\u51fa\u533a\u95f4\u6700\u5927\u6700\u5c0f\u503c\u7136\u540e\u6765\u6c42\uff0c\u4f46\u662f\u8fd9\u6837\u53d1\u73b0\u8fde Easy Version \u90fd\u8fc7\u4e0d\u4e86\uff0c\u6545\u6211\u4eec\u53ef\u4ee5\u6765\u7a0d\u6539\u8fdb\u4e00\u4e0b\u601d\u8def\u3002</p> <p>\u5bf9\u4e8e Easy Version\uff0c\u6211\u4eec\u53ef\u4ee5\u56fa\u5b9a\u5de6\u7aef\u70b9\uff0c\u6bcf\u6b21\u679a\u4e3e\u53f3\u7aef\u70b9\uff0c\u6bcf\u6b21\u5411\u540e\u52a0\u5165\u4e00\u4e2a\u65b0\u7684\u6570\u65f6\uff0c\u6211\u4eec\u8981\u91cd\u65b0\u8ba1\u7b97\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u6211\u4eec\u7b97 \\([l, r]\\) \u533a\u95f4\u7684\u7b54\u6848\u5c31\u662f\u533a\u95f4\u957f\u5ea6\u51cf\u53bb\u6700\u591a\u53ef\u62c6\u5206\u533a\u95f4\u6570\uff0c\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86 \\([l, r - 1]\\) \u533a\u95f4\u7684\u7b54\u6848\u4ee5\u53ca\u5212\u5206\u533a\u95f4\uff0c\u52a0\u5165 \\(a_r\\) \u6570\u540e\uff0c\u6211\u4eec\u5176\u5b9e\u5c31\u662f\u8981\u628a\u8fd9\u4e2a\u6570\u548c\u67d0\u4e2a\u533a\u95f4\u5408\u5e76\uff0c\u6ee1\u8db3\u5408\u5e76\u540e\u7684\u533a\u95f4\u7684\u6700\u5c0f\u503c\u4f9d\u7136\u5927\u4e8e\u524d\u9762\u533a\u95f4\u7684\u6700\u5927\u503c\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u4e4b\u524d\u51e0\u4e2a\u5212\u5206\u533a\u95f4\u7684\u6700\u5927\u503c\uff0c\u7136\u540e\u4e0d\u65ad\u5411\u524d\u8df3\uff0c\u770b \\(a_r\\) \u53ef\u4ee5\u548c\u54ea\u51e0\u4e2a\u533a\u95f4\u5408\u5e76\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u5408\u5e76\u7684\u533a\u95f4\u5c31\u76f4\u63a5\u5408\u5e76\uff0c\u8fd9\u6837\u4e00\u5b9a\u662f\u6700\u4f18\u7684\u3002\u5408\u5e76\u5b8c\u4e4b\u540e\u66f4\u65b0\u65b0\u7684\u62c6\u5206\u533a\u95f4\uff0c\u7b54\u6848\u4e5f\u6bd4\u8f83\u597d\u7edf\u8ba1\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n^2)\\)\u3002</p> <p>\u5bf9\u4e8e Hard Vesion\uff0c\u6211\u4eec\u53d1\u73b0\u5f88\u96be\u4ece Easy Version \u4e0a\u518d\u7ee7\u7eed\u4f18\u5316\uff0c\u6211\u4eec\u6362\u53e6\u4e00\u4e2a\u601d\u8def\u3002\u80fd\u8fc7 \\(3 \\times 10^5\\) \u7684\u505a\u6cd5\u5e94\u8be5\u662f \\(O(nlogn)\\) \u6216 \\(O(n)\\) \u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u627e\u5230\u8fd9\u4e2a\u590d\u6742\u5ea6\u7684\u7b97\u6cd5\u5e94\u8be5\u662f\u7b97\u6bcf\u4e2a\u4f4d\u7f6e\u6240\u80fd\u505a\u51fa\u7684\u8d21\u732e\u3002\u6211\u4eec\u5148\u7b97\u6700\u574f\u60c5\u51b5\u4e0b\u4e00\u5171\u7684\u4ee3\u4ef7\u4e3a \\(\\sum_{i = 2}^{n}(i - 1)(n - i + 1)\\)\uff0c\u7136\u540e\u6211\u4eec\u518d\u7b97\u6bcf\u4e2a\u4f4d\u7f6e\u5bf9\u4ee3\u4ef7\u80fd\u51cf\u5c11\u7684\u8d21\u732e\u3002\u82e5\u80fd\u5bf9\u7b54\u6848\u4ea7\u751f\u51cf\u5c11\u7684\u8d21\u732e\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5927\u533a\u95f4\uff0c\u6211\u4eec\u4e00\u5b9a\u53ef\u4ee5\u62c6\u5206\u6210\u4e24\u4e2a\u5c0f\u533a\u95f4\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\uff0c\u6211\u4eec\u4e0d\u59a8\u5047\u8bbe\u8fd9\u4e2a\u4f4d\u7f6e \\(i\\) \u4e0a\u7684\u6570\u662f\u540e\u4e00\u4e2a\u533a\u95f4\u7684\u6700\u5c0f\u503c\u3002\u7136\u540e\u6211\u4eec\u5f80\u540e\u627e\u5230\u7b2c\u4e00\u4e2a\u5c0f\u4e8e \\(a_i\\) \u7684\u6570\u7684\u4f4d\u7f6e \\(r_i\\)\uff08\u8fd9\u91cc\u6c42\u201c\u7b2c\u4e00\u4e2a\u5c0f\u4e8e\u201c\u8fd9\u6837\u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u6765\u6c42\uff09\uff0c\u7136\u540e\u518d\u5f80\u524d\u627e\u7b2c\u4e00\u4e2a\u5c0f\u4e8e \\(a_i\\) \u7684\u6570\u7684\u4f4d\u7f6e \\(l_i\\)\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u540e\u4e00\u4e2a\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u662f \\((l_i + 1)\\)\uff0c\u53f3\u7aef\u70b9\u662f\u5728 \\(i \\sim (r_i - 1)\\) \u91cc\u9009\u3002\u7136\u540e\u524d\u4e00\u4e2a\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u662f \\(l_i\\)\uff0c\u6700\u540e\u53ea\u7528\u786e\u5b9a\u524d\u4e00\u4e2a\u533a\u95f4\u7684\u5de6\u7aef\u70b9\uff0c\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u7528 st\u8868 \u5148\u6c42\u51fa\u533a\u95f4\u6700\u5927\u503c\uff0c\u7136\u540e\u4e0d\u65ad\u8df3\u8868\u6765\u6c42\u51fa\u5de6\u7aef\u70b9 \\(kdl\\)\u3002\u7136\u540e\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6570\u5bf9\u7b54\u6848\u51cf\u5c11\u7684\u8d21\u732e\u4e3a \\((r_i - i)\\times(l_i - kdl + 1)\\)\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(nlogn)\\)\u3002</p> <p>Code (Easy Version)</p> <p>Code (Hard Version)</p>"},{"location":"acm/cf/cf1821/#e-palindrome-partition","title":"E. Palindrome Partition","text":"<p>Description</p> <p>\u79f0\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u597d\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a\u5076\u6570\u7684\u56de\u6587\u4e32\u6216\u7531\u82e5\u5e72\u957f\u5ea6\u4e3a\u5076\u6570\u7684\u56de\u6587\u4e32\u62fc\u63a5\u800c\u6210\u3002</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u5b57\u7b26\u4e32 \\(s\\)\uff0c\u6c42\u6709\u591a\u5c11 \\(s\\) \u7684\u5b50\u4e32\u662f\u597d\u7684\u3002</p> <p>\\(1\u2264n\u22645\u00d710^5\\)\uff0c\\(s\\) \u4ec5\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002</p> <p>Solution</p> <p>\u6839\u636e\u6570\u636e\u8303\u56f4\u53ef\u4ee5\u5f97\u51fa\u6b63\u89e3\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u8be5\u662f \\(O(n)\\) \u6216 \\(O(nlogn)\\) \u7684\u3002</p> <p>\u672c\u9898\u91c7\u7528\u52a8\u6001\u89c4\u5212\uff0c\u53ef\u4ee5\u4ee4 \\(g[i]\\) \u8868\u793a\u4ee5 \\(i\\) \u7ed3\u5c3e\u7684\u597d\u4e32\u4e2a\u6570\uff0c\u90a3\u4e48\u663e\u7136\u7b54\u6848\u5c31\u662f \\(\\sum_{i = 1}^n g[i]\\) \u3002\u90a3\u4e48\u600e\u4e48\u6c42 \\(g[i]\\) \u5462\uff0c\u6211\u4eec\u8003\u8651\u5230\u5bf9\u4e8e\u4e00\u4e2a\u56de\u6587\u4e32\uff0c\u6211\u4eec\u628a\u5b83\u5c3d\u53ef\u80fd\u591a\u5206\u4e3a\u7531\u82e5\u5e72\u56de\u6587\u5b57\u4e32\u7ec4\u6210\uff0c\u5206\u5230\u4e0d\u80fd\u5206\u4e3a\u6b62\u3002\u8fd9\u6837\u5206\u89e3\u51fa\u6765\u7684\u6bcf\u4e00\u4e2a\u56de\u6587\u4e32\u91cc\u4e00\u5b9a\u4e0d\u4f1a\u5305\u542b\u56de\u6587\u524d\u7f00 / \u540e\u7f00\uff08\u56e0\u4e3a\u8981\u662f\u5305\u542b\u7684\u8bdd\u5c31\u53c8\u53ef\u4ee5\u5206\u89e3\u4e86\uff09\u3002\u8fd9\u6837\u5206\u89e3\u4e4b\u540e\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u597d\u7684\u5b57\u7b26\u4e32\uff0c\u4e00\u5b9a\u662f\u7531\u82e5\u5e72\u5c0f\u7684\u4e0d\u53ef\u5206\u89e3\u7684\u56de\u6587\u4e32\u7ec4\u6210\u3002\u800c\u4e14\u663e\u7136\u8fd9\u79cd\u5206\u89e3\u65b9\u6cd5\u662f\u552f\u4e00\u7684\u3002\u8bf4\u660e\u8fd9\u6837\u7684\u8bdd\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u597d\u7684\u5b57\u7b26\u4e32\u800c\u8a00\u6211\u4eec\u53ea\u7b97\u4e86\u4e00\u6b21\uff0c\u6b63\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002\u57fa\u4e8e\u8fd9\u4e2a\u601d\u8def\uff0c\u6211\u4eec\u518d\u5f15\u5165\u4e00\u4e2a\u65b0\u7684\u6570\u7ec4 \\(f[i]\\)\uff0c\\(f[i]\\) \u8868\u793a\u4ee5 \\(i\\) \u7ed3\u5c3e\u7684\u56de\u6587\u4e32\u7684\u6700\u5c0f\u957f\u5ea6\uff0c\u56e0\u4e3a\u4ee5 \\(i\\) \u7ed3\u5c3e\u7684\u5b57\u4e32\u4e00\u5b9a\u662f\u5305\u542b\u4ee5 \\(i\\) \u7ed3\u5c3e\u7684\u6700\u5c0f\u56de\u6587\u4e32\u7684\uff0c\u800c\u4e14\u57fa\u4e8e\u4e4b\u524d\u7684\u5206\u89e3\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 \\(g[i] = g[i - f[i]] + 1(f[i] \\ne 0)\\)\uff0c\u5f53 \\(f[i] = 0\\) \u65f6\uff0c\\(g[i] = 0\\)\u3002\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\u5982\u4f55\u6c42 \\(f[i]\\)\uff0c\u6211\u4eec\u5148\u8fdb\u884c\u4e00\u904d Manacher \u7b97\u6cd5\uff0c\u6c42\u51fa\u4ee5\u6bcf\u4e00\u4f4d\u4e3a\u5bf9\u79f0\u8f74\u7684\u6700\u5927\u56de\u6587\u534a\u5f84\uff0c\u7531\u4e8e\u8981\u6c42\u662f\u5076\u56de\u6587\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8003\u8651\u4ee5\u4e24\u4e2a\u4f4d\u7f6e\u4e2d\u95f4\u4e3a\u8f74\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u82e5\u4ee5\u7b2c \\(i\\) \u4f4d\u4e3a\u8f74\uff0c\u90a3\u4e48 \\([i + 1, i + len[i]]\\) \u8fd9\u4e2a\u8303\u56f4\u5185\u662f\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u56de\u6587\u7ed3\u5c3e\u7684\uff0c\u53ef\u4ee5\u88ab \\(i\\) \u8986\u76d6\u3002\u800c\u60f3\u8981\u8ba9\u56de\u6587\u6700\u5c0f\uff0c\u5c31\u662f\u4ece\u540e\u5411\u524d\u626b\u4e00\u904d\uff0c\u5982\u679c\u5148\u88ab\u4ee5 \\(i\\) \u8986\u76d6\u7684\uff0c\u4e00\u5b9a\u6ee1\u8db3\u4ee5 \\(i\\) \u4e3a\u8f74\u56de\u6587\u6700\u5c0f\uff0c\u6211\u4eec\u77e5\u9053\u4e86\u53f3\u7aef\u70b9\u548c\u56de\u6587\u8f74\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u56de\u6587\u957f\u5ea6\u4e86\uff0c\u4e5f\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa \\(f[i]\\) \u4e86\uff0c\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u533a\u95f4\u4e2d\u4e00\u90e8\u5206\u70b9\u88ab\u4e4b\u524d\u7684\u5bf9\u79f0\u8f74\u8986\u76d6\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u88ab\u4e4b\u540e\u5bf9\u79f0\u8f74\u8986\u76d6\u65f6\u8981\u8df3\u8fc7\u8fd9\u51e0\u4e2a\u70b9\uff0c\u53ef\u4ee5\u7528\u53cc\u5411\u94fe\u8868\u6765\u7ef4\u62a4\u3002</p> <p>Code</p>"},{"location":"acm/cf/cf1821/#f-two-centroids","title":"F. Two Centroids","text":"<p>Description</p> <p>Solution</p>"},{"location":"acm/cf/cf1821/#1829-codeforces-round-871-div-4","title":"1829. Codeforces Round 871 (Div. 4)","text":""},{"location":"acm/cf/cf1821/#g-hits-different","title":"G. Hits Different","text":"<p>Description</p> <p></p> <p>\u82e5\u5e72\u5757\u4ee5\u91d1\u5b57\u5854\u72b6\u6446\u653e\uff0c\u7528\u7403\u51fb\u5012\u4e0b\u65b9\u7684\uff0c\u4e0a\u65b9\u4e5f\u4f1a\u5012\u4e0b\uff0c\u7b2c \\(n\\) \u5757\u5206\u6570 \\(n^2\\)\uff0c\u95ee\u7528\u7403\u6253\u7b2c \\(n\\) \u5757\u80fd\u5f97\u591a\u5c11\u5206</p> <p>Solution</p> <p>\u65b9\u6cd5\u4e00\uff1a</p> <p>\u200b   \u52a8\u6001\u89c4\u5212\uff0c \\(f[i]\\) \u8868\u793a\u51fb\u6253\u7b2c \\(i\\) \u5757\u80fd\u5f97\u7684\u5206\u6570\uff0c\\(f[i] = f[\u5de6\u4e0a] + f[\u53f3\u4e0a] - f[\u516c\u5171]\\)\uff0c\u56e0\u4e3a\u5de6\u4e0a\u548c\u53f3\u4e0a\u662f\u6709\u516c\u5171\u90e8\u5206\u4f1a\u591a\u7b97\uff0c\u6240\u4ee5\u7b80\u5355\u5bb9\u65a5\u4e00\u4e0b</p> <p>\u65b9\u6cd5\u4e8c\uff1a</p> <p>\u200b   \u8fd8\u662f\u52a8\u6001\u89c4\u5212\uff0c\u5148\u628a\u56fe\u503e\u659c \\(45\u00b0\\)</p> <p>\u200b   </p> <p>\u200b   \u611f\u89c9\u53d8\u597d\u770b\u4e86\u4e00\u70b9\uff08\uff1f\uff09</p> <p>\u200b   \u518d\u8f6c45\u00b0</p> <p></p> <p>\u200b   \u55ef\uff0c\u53d8\u6210\u4e00\u4e2a\u7b80\u5355\u4e8c\u7ef4DP\u5c31\u80fd\u89e3\u51b3\u7684\u95ee\u9898\u4e86</p> <p>Code (Method I)</p> <p>Code (Method II)</p>"},{"location":"acm/cf/cf1831/","title":"1831 ~ 1840","text":""},{"location":"acm/cf/cf1831/#1837-educational-codeforces-round-149-rated-for-div-2","title":"1837. Educational Codeforces Round 149 (Rated for Div. 2)","text":""},{"location":"acm/cf/cf1831/#e-playoff-fixing","title":"E. Playoff Fixing","text":"<p>Description</p> <p>\u7ed9\u5b9a\u6570 \\(k\\)\uff0c\u4e00\u5171\u6709 \\(2^k\\) \u4e2a\u4eba\u53c2\u52a0\u6bd4\u8d5b\uff0c\u5e8f\u53f7\u8d8a\u5c0f\u7684\u5b9e\u529b\u8d8a\u5f3a\u3002\u6bcf\u8f6e\u7b2c \\(2i\\) \u548c \\(2i-1\\) \u8fdb\u884c\u6bd4\u8d5b\uff0c\u4e00\u5171\u8fdb\u884c \\(k\\) \u8f6e\uff0c\u6700\u540e\u8981\u6c42\u5e8f\u53f7\u4e3a \\(1\\) \u7684\u4e00\u76f4\u7559\u5230\u6700\u540e\u4e00\u8f6e\uff0c\u5e8f\u53f7\u4e3a \\(2\\) \u7684\u7559\u5230\u5012\u6570\u7b2c\u4e8c\u8f6e\uff0c\u5e8f\u53f7\u4e3a \\(3 \\sim 4\\) \u7684\u7559\u5230\u5012\u6570\u7b2c\u4e09\u8f6e\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5e8f\u53f7 \\(2^{k - 1} + 1\\) \u5230 \\(2^k\\) \u7684\u4eba\u8981\u6c42\u7b2c\u4e00\u8f6e\u6dd8\u6c70\uff0c\u7ed9\u5b9a\u90e8\u5206\u4eba\u5f53\u524d\u4f4d\u7f6e\uff0c\u5982\u679c\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u8fd8\u6ca1\u786e\u5b9a\u9009\u624b\u5c31\u7528 \\(-1\\) \u8868\u793a\uff0c\u95ee\u4e00\u5171\u53c8\u6709\u591a\u5c11\u79cd\u8868\u793a\u5408\u6cd5\u65b9\u6848</p> <p>Solution</p> <p>\u7b2c\u4e00\u8f6e\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u5e8f\u53f7 \\(2^{k - 1} + 1\\) \u5230 \\(2^k\\) \u7684\u4eba\u53ef\u4ee5\u5b89\u6392\u5728\u54ea\u91cc\uff0c\u4e00\u5b9a\u662f\u5728 \\(\\{1,2\\}\\)\uff0c\\(\\{3,4\\},\\cdots, \\{2^k - 1,2^k\\}\\) \u4e2d\u5404\u9009\u4e00\u4e2a\uff0c\u5982\u679c\u4e24\u4e2a\u90fd\u6ca1\u9009\u5219\u4e24\u4e2a\u4f4d\u7f6e\u90fd\u53ef\u4ee5\u653e\uff0c\u8bb0\u4e00\u4e0b\u8fd9\u79cd\u60c5\u51b5\u7684\u4e2a\u6570\u662f \\(cnt1\\)\uff0c\u5982\u679c\u4e00\u4e2a\u4f4d\u7f6e\u653e\u4e86\u5c0f\u4e8e \\(2^{k-1}\\) \u7684\u5e8f\u53f7\uff0c\u90a3\u4e48\u53ea\u80fd\u9009\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u653e\uff0c\u5982\u679c\u4e24\u4e2a\u4f4d\u7f6e\u90fd\u88ab\u9009\u4e86\u4e14\u4e0d\u5408\u6cd5\uff0c\u90a3\u4e48\u5c31\u8fd4\u56de \\(0\\)\uff0c\u8bbe\u4e00\u5171\u6709 \\(cnt2\\) \u4e2a\u53ef\u4ee5\u653e\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u8fd9\u8f6e\u65b9\u6848\u6570\u662f \\(2^{cnt1} \\times cnt1 !\\) \u800c\u4e14\u8fd9\u4e00\u8f6e\u653e\u7f6e\u7684\u4eba\u4e0b\u4e00\u8f6e\u90fd\u88ab\u6dd8\u6c70\u4e86\uff0c\u6240\u4ee5\u65e0\u540e\u6548\u6027\uff0c\u7136\u540e\u4e0b\u4e00\u8f6e\u5176\u5b9e\u5c31\u53d8\u4e3a\u89c4\u6a21\u6298\u534a\u7684\u5b50\u95ee\u9898\uff0c\u4e0d\u65ad\u8fed\u4ee3\u8ba1\u7b97\u5373\u53ef</p> <p>Code</p>"},{"location":"acm/cf/cf1831/#f-editorial-for-two","title":"F. Editorial for Two","text":"<p>Description</p> <p>\\(n\\) \u4e2a\u6570\u4e2d\u9009 \\(k\\) \u4e2a\u6570\uff08\u4e0d\u6539\u53d8\u5728\u539f\u5e8f\u5217\u4e2d\u987a\u5e8f\uff09\uff0c\u8981\u6c42\u8fd9 \\(k\\) \u4e2a\u6570\u5206\u4e3a\u524d\u540e\u4e24\u534a\u540e\uff0c\u8fd9\u524d\u540e\u4e24\u90e8\u5206\u548c\u7684\u6700\u5927\u503c\u5c3d\u53ef\u80fd\u5c0f\u3002</p> <p>Solution</p> <p>\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u4e8c\u5206\u6765\u505a\uff0c\u5bf9\u4e8e\u4e8c\u5206\u503c \\(lim\\)\uff0c\u5148\u6b63\u7740\u626b\u4e00\u904d\uff0c\u518d\u5012\u7740\u626b\u4e00\u904d\uff0c\u626b\u5230\u7b2c \\(i\\) \u4f4d\u7f6e\u65f6\uff0c\u6211\u4eec\u53ea\u8981\u7b97\u4e00\u4e0b\u524d \\(i - 1\\) \u4f4d\u7f6e\u4e2d \u548c\u4e0d\u8d85\u8fc7 \\(lim\\) \u7684\u6700\u591a\u53ef\u4ee5\u9009\u7684\u6570\u7684\u4e2a\u6570 + \u540e \\(i\\) \u5230 \\(n\\) \u4f4d\u7f6e\u4e2d \u548c\u4e0d\u8d85\u8fc7 \\(k\\) \u7684\u6700\u591a\u53ef\u4ee5\u9009\u7684\u6570\u7684\u4e2a\u6570\u4e4b\u548c\u662f\u4e0d\u662f\u5927\u4e8e \\(k\\) \u5373\u53ef\u3002</p> <p>Code</p>"},{"location":"acm/cf/cf1831/#1840-codeforces-round-878-div-3","title":"1840. Codeforces Round 878 (Div. 3)","text":""},{"location":"acm/cf/cf1831/#f-railguns","title":"F. Railguns","text":"<p>Description</p> <p>Tema \u5728 \\(n\u22c5m\\) \u7684\u7f51\u683c\u5185\u8981\u4ece \\((0,0)\\) \u8d70\u5230 \\(n\u22c5m\\)\u3002\u7b2c \\(0\\) \u79d2\u672b Tema \u4f4d\u4e8e \\((0,0)\\)\u3002</p> <p>\u6bcf\u6b21\u884c\u52a8 Tema \u53ef\u4ee5\u9009\u62e9\u5411\u4e0b\u8d70\uff0c\u5411\u53f3\u8d70\u6216\u4e0d\u52a8\u3002</p> <p>\u673a\u5668\u4eba\u4f1a\u53d1\u5c04 \\(r\\) \u6b21\u6fc0\u5149\u70ae\u4ee5\u963b\u6320\u4ed6\u524d\u8fdb\uff0c\u5177\u4f53\u4e3a\u5728\u7b2c \\(t\\) \u79d2\uff0c\u5411\u7b2c \\(x\\) \u884c\u6216\u7b2c \\(x\\) \u5217\u53d1\u5c04\u6fc0\u5149\u70ae\uff0c\u4e00\u6574\u5217\u6216\u4e00\u6574\u884c\u90fd\u4f1a\u53d7\u5230\u70ae\u51fb\u3002\u82e5 Tema \u5728\u7b2c \\(t\\) \u79d2\u672b\u8fd8\u505c\u7559\u5728\u88ab\u70ae\u51fb\u7684\u5355\u5143\u683c\u5185\u5219\u4f1a\u88ab\u51fb\u6bc1\u3002\u6c42 Tema \u4ece \\((0,0)\\) \u5230\u8fbe \\((n,m)\\) \u7684\u6700\u77ed\u65f6\u95f4\uff0c\u82e5\u65e0\u6cd5\u62b5\u8fbe\uff0c\u5219\u8f93\u51fa \\(\u22121\\)\u3002</p> <p>\\(r\\) \u6b21\u70ae\u51fb\u683c\u5f0f\u4e3a \\(t\\)\uff0c\\(d\\)\uff0c\\(coord\\) \uff0c\\(t\\) \u8868\u793a\u70ae\u51fb\u53d1\u751f\u7684\u65f6\u95f4\uff0c\\(d\\) \u8868\u793a\u70ae\u51fb\u65b9\u5f0f ( \\(d=1\\) \u65f6\u653b\u51fb\u4e00\u6574\u884c\uff0c\\(d=2\\) \u65f6\u653b\u51fb\u4e00\u6574\u5217)\uff0c\\(coord\\) \u8868\u793a\u653b\u51fb\u7684\u662f\u5177\u4f53\u54ea\u4e00\u884c/\u5217\uff09</p> <p>Solution</p> <p>\u8bbe \\(f[i][j][k]\\) \u8868\u793a\u5728 \\(k\\) \u65f6\u523b\u5230\u7b2c \\(i\\) \u884c\u7b2c \\(j\\) \u5217\u662f\u5426\u5408\u6cd5\uff0c\u7531\u4e8e\u6211\u4eec\u53d1\u73b0\u65f6\u95f4 \\(t\\) \u7684\u8303\u56f4\u662f\u5230 \\(10^9\\) \u4e14\u5230\u8fbe\u67d0\u4f4d\u7f6e\u7684\u65f6\u95f4 \\(t\\) \u53ea\u548c \\(i\\)\uff0c\\(j\\)\uff0c\u548c\u505c\u4e0b\u8eb2\u907f\u4e86\u51e0\u6b21\u6709\u5173\uff0c\u800c\u4e14\u8eb2\u907f\u7684\u6b21\u6570\u6700\u591a\u4e0d\u8d85\u8fc7 \\(100\\) \u6b21\uff0c\u6240\u4ee5 \\(k\\) \u53ef\u4ee5\u7528\u505c\u4e0b\u8eb2\u907f\u7684\u6b21\u6570\u6765\u8868\u793a\uff0c\u8fd9\u6837\u8f6c\u79fb\u65b9\u7a0b\u5c31\u5f88\u7b80\u5355\u4e86  \\(f[i][j][k] = f[i - 1][j][k] | f[i][j - 1][k] | f[i][j][k - 1]\\) \u3002</p> <p>Code</p>"},{"location":"acm/cf/cf1831/#g2-in-search-of-truth-hard-version","title":"G2. In Search of Truth (Hard Version)","text":"<p>Description</p> <p>\u4ea4\u4e92\u9898</p> <p>\u4e00\u4e2a\u8f6c\u76d8\u5171 \\(n\\)\uff08 \\(n\\) \u672a\u77e5 \uff09\u4e2a\u683c\u5b50\uff0c\u683c\u5b50 \\(1\\) \u5230 \\(n\\) \u4e71\u5e8f\u7f16\u53f7\uff0c\u4f60\u6bcf\u6b21\u53ef\u4ee5\u987a/\u9006\u65f6\u9488\u65cb\u8f6c \\(k\\) \u4e2a\u683c\u5b50\uff0c\u8f93\u51fa\u987a/\u9006\u65f6\u9488\uff08\u5206\u522b\u7528\u201c+\u201d\u3001\u201c-\u201d\u8868\u793a\uff09\u548c \\(k\\)\u3002\u9700\u8981\u8bfb\u53d6\u8d77\u59cb\u683c\u5b50\u7684\u7f16\u53f7\u548c\u6bcf\u6b21\u65cb\u8f6c\u540e\u683c\u5b50\u7684\u7f16\u53f7\uff0c\u6c42 \\(n\\)\u3002</p> <p>Easy Version \u4e2d\u65cb\u8f6c\u6b21\u6570\u4e0d\u5927\u4e8e \\(2023\\) \u3002</p> <p>Hard Version \u4e2d\u65cb\u8f6c\u6b21\u6570\u4e0d\u5927\u4e8e \\(1000\\) \u3002</p> <p>\\(n\u22641\u00d710^6,\u221210^9\u2264k\u226410^9\\) \u3002</p> <p>Solution</p> <p>\u5f88\u4e0d\u9519\u7684\u4e00\u9053\u9898</p> <p>\u5bf9\u4e8e Easy Version\uff0c\u53c2\u8003 BSGS \u7b97\u6cd5\uff0c\u5148\u8fde\u7eed 999 \u6b21 +1\uff0c\u7136\u540e\u6bcf\u6b21 +1000\uff0c\u8fd9\u6837\u6700\u591a 1000 \u6b21\u5c31\u53ef\u4ee5\u5faa\u73af\u5b8c\u4e00\u5708\uff0c\u7136\u540e\u8d70\u5b8c\u4e00\u5708\u540e\u5fc5\u5b9a\u4f1a\u843d\u5728\u6700\u521d\u8fde\u7eed\u7684\u524d 1000 \u4e2a\u683c\u5b50\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8f6c\u4e86\u591a\u5c11\u6b63\u597d\u53ef\u4ee5\u8d70\u4e00\u5708\u6765\u63a8\u7b97 n \u7684\u5927\u5c0f\uff0c\u6700\u591a\u8be2\u95ee 999 + 1000 \u6b21\u3002</p> <p>\u5bf9\u4e8e Hard Version\uff0c\u6211\u4eec\u5728 Easy Version \u57fa\u7840\u4e0a\u7a0d\u52a0\u6539\u8fdb\uff0c\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a \\(n\\)\uff0c\u53ef\u4ee5\u5148\u8f6c \\(n_0\\)\uff0c\u7136\u540e\u518d\u6309 G1 \u7684\u65b9\u6cd5\u53bb\u8f6c\uff0c\u5148\u8fde\u7eed\u8f6c \\(d\\) \u4e2a \\(+1\\)\uff0c\u518d\u4e00\u76f4 \\(+d\\) \u76f4\u5230\u8f6c\u5b8c\u4e00\u5708\u4e3a\u6b62\uff0c\u4f46\u662f\u8fd9\u4e2a \\(n_0\\) \u548c \\(d\\) \u5982\u4f55\u786e\u5b9a\u5462\u3002\u6211\u4eec\u53ef\u4ee5\u5148\u968f\u673a \\(k\\) \u6b21\uff0c\u7136\u540e\u53bb\u8fd9 \\(k\\) \u6b21\u4e2d\u5f97\u5230\u7684\u6700\u5927\u7684\u6570\u9009\u4e3a \\(n_0\\)\uff0c\u56e0\u4e3a\u5982\u679c\u76f4\u63a5\u9009\u7684\u8bdd\uff0c\u9009\u7684\u6570\u53ef\u80fd\u8fc7\u5927\u6216\u8fc7\u5c0f\uff0c\u82e5\u662f\u4e0d\u968f\u673a\u9009 \\(k\\) \u4e2a\u6570\u800c\u662f\u8fde\u7eed\u9009 \\(k\\) \u4e2a\u6216\u95f4\u9694\u9009 \\(k\\) \u4e2a\u5219\u5bb9\u6613\u88ab\u5361\u6389\u3002\u4e0d\u8fc7\u8fd9\u4e2a\u7b97\u6cd5\u7531\u4e8e\u662f\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u968f\u673a\u6570\u7684\uff0c\u6240\u4ee5\u4e0d\u4e00\u5b9a\u5b8c\u5168\u6b63\u786e\uff0c\u5f53 \\(n\\) \u5927\u4e8e \\(n_0 + d^2\\) \u65f6\uff0c\u5c31\u65e0\u6cd5\u8f6c\u5230\u4e00\u5708\uff0c\u6b64\u65f6\u4e0d\u5bf9\u3002\u6240\u4ee5 \\(k\\) \u6b21\u7b97\u51fa\u7684\u6570\u5fc5\u987b\u6709\u4e00\u4e2a\u8981\u5927\u4e8e \\(n - d^2\\)\uff0c\u51fa\u9519\u7684\u6982\u7387\u4e3a \\(P(A) = (\\frac{n - d^2 - 1}{n})^k,(k + 2d = 1000)\\)\uff0c\u4e0d\u96be\u53d1\u73b0\u901a\u8fc7\u6539\u53d8 \\(n\\) \u548c \\(k\\) \u5927\u5c0f\u662f\u53ef\u4ee5\u6539\u53d8\u51fa\u9519\u6982\u7387\u7684\uff0c\u5f53\u9009\u62e9 \\(k = 400, d = 300\\) \u65f6\uff0c\u5373\u4f7f\u662f\u5728 \\(n = 10^6\\) \u60c5\u51b5\u4e0b \\(P(A)\\) \u7684\u6570\u91cf\u7ea7\u624d\u662f \\(10^{-17}\\)\uff0c\u8fdc\u8fdc\u5c0f\u4e8e \\(1\\)\uff0c\u6545\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002</p> <p>Code (Easy Version)</p> <p>Code (Hard Version)</p>"},{"location":"acm/cf/cf1841/","title":"1841 ~ 1850","text":""},{"location":"acm/cf/cf1841/#1845-educational-codeforces-round-151-rated-for-div-2","title":"1845. Educational Codeforces Round 151 (Rated for Div. 2)","text":""},{"location":"acm/cf/cf1841/#d-rating-system","title":"D. Rating System","text":"<p>Solution:</p> <p>For the answer, only the last partition of the array is related to the answer.</p> <p>So how can we determine the position of the beginning of the last partition?</p> <p>We can just enumerate it. For the position i, if it's the beginning of the last partition, the answer is \\(k + S_n - S_i\\).</p> <p>Number \\(k\\) denotes the maximum number in the first i numbers. Array \\(S\\) denotes the prefix sum of array \\(A\\).</p> <p>So the answer must be the maximum element of the n numbers.</p>"},{"location":"acm/cf/cf1841/#1848-codeforces-round-885-div-2","title":"1848. Codeforces Round 885 (Div. 2)","text":""},{"location":"acm/cf/cf1841/#c-vika-and-price-tags","title":"C. Vika and Price Tags","text":"<p>Description</p> <p>\u6709 \\(a\\), \\(b\\) \u4e24\u4e2a\u957f\u5ea6\u5747\u4e3a \\(n\\) \u5e8f\u5217\uff0c \u4e00\u6b21\u53d8\u6362\u8bb0\u4e3a $a_i \\to b_i, b_i \\to \\left | a_i - b_i \\right | $\uff0c\u95ee\u662f\u5426\u53ef\u4ee5\u7ecf\u8fc7\u82e5\u5e72\u6b21\u53d8\u6362\u4f7f\u5f97 \\(a\\) \u4e2d\u6240\u6709\u5143\u7d20\u5168\u90e8\u53d8\u6210 \\(0\\)\u3002</p> <p>Solution</p> <p>\u4e0d\u96be\u53d1\u73b0\uff0c\u82e5 \\((a_i, b_i)\\) \u4e2d\u6709\u4e00\u4e2a\u5143\u7d20\u53d8\u4e3a \\(0\\)\uff08\u4e0d\u662f \\((0, 0)\\) \u60c5\u51b5\uff09\uff0c\u5219 \\((a_i, b_i)\\) \u5219\u4f1a\u7ecf\u5386 \\((0, x) \\to (x, 0) \\to, (x, x) \\to(0, x)\\) \u4ee5 \\(3\\) \u4e3a\u5468\u671f\u7684\u53d8\u6362\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u8981\u6c42\u7684\u662f\u6bcf\u4e2a\u5143\u7d20\u53d8\u4e3a \\((x, 0)\\) \u7684\u6b21\u6570\u6a21 \\(3\\) \u7684\u4f59\u6570\u3002</p> <p>\u4e0d\u59a8\u8bbe \\(a &gt;&gt; b\\)\uff0c\u5219\u53d8\u6362\u7ecf\u5386 \\((a, b) \\to (b, a - b) \\to (a - b, a - 2b) \\to (a - 2b, b)\\) \u3002\u4e0d\u96be\u53d1\u73b0\u6bcf\u4e09\u6b21\u4f1a\u7ecf\u5386\u4e00\u6b21\u5468\u671f\uff0c\u6bcf\u6b21 \\(a \\to a - 2b\\)\u3002\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u8f97\u8f6c\u76f8\u9664\u6cd5\u6765\u6c42\u4e86\u3002</p> <p>Code</p>"},{"location":"acm/cf/cf1841/#d-vika-and-bonuses","title":"D. Vika and Bonuses","text":"<p>Description</p> <p>\u521d\u59cb\u6709\u4e00\u4e2a\u6570 \\(s\\)\uff0c\u6bcf\u6b21\u53ef\u4ee5\u8fdb\u884c\u4e24\u79cd\u64cd\u4f5c\uff0c\u83b7\u5f97\u4ef7\u503c\u4e3a \\(s\\) \u7684\u5229\u6da6\u6216\u8ba9 \\(s \\to s + (s \\mod 10)\\)\uff0c\u4f60\u53ef\u4ee5\u8fdb\u884c \\(k\\) \u6b21\uff0c\u95ee \\(k\\) \u6b21\u4e4b\u540e\u7684\u6700\u5927\u4ef7\u503c\u3002</p> <p>Solution</p> <p>\u4e0d\u96be\u53d1\u73b0\uff0c\u4e2a\u4f4d\u662f \\(5\\) / \\(0\\) \u7684\u8bdd\uff0c\u6700\u591a\u53ea\u80fd\u64cd\u4f5c\u4e00\u6b21\u3002</p> <p>\u4e2a\u4f4d\u662f \\(1\\) / \\(3\\) / \\(7\\) / \\(9\\) \u7684\u8bdd\uff0c\u64cd\u4f5c\u4e00\u6b21\u540e\u53d8\u4e3a \\(2\\) / \\(6\\) / \\(4\\) / \\(8\\)\u3002</p> <p>\u800c\u4e2a\u4f4d\u5982\u679c\u662f \\(2\\) / \\(4\\) / \\(6\\) / \\(8\\) \u7684\u8bdd\uff0c\u5219\u4f1a\u6709 \\(2 \\to 4 \\to 8 \\to 6\\) \u7684\u5faa\u73af\uff0c\u6211\u4eec\u8bb0 \\(4\\) \u6b21\u64cd\u4f5c\u4e3a\u4e00\u4e2a\u5468\u671f\uff0c\u4e00\u4e2a\u5468\u671f\u53ef\u4ee5\u8ba9 \\(s \\to s + 20\\)\u3002</p> <p>\u5219\u9898\u76ee\u53d8\u4e3a\u6c42\u5468\u671f\u6570 \\(x\\)\uff0c\u4f7f \\((s + 20 \\times x) \\times (k - 4 \\times x)\\) \u6700\u5927\uff0c\u4f46\u662f\u6ce8\u610f\uff0c\u8fd9\u4e2a\u5468\u671f\u7684\u5f00\u5934\u6211\u4eec\u8fd8\u8981\u679a\u4e3e\uff0c\u56e0\u4e3a\u672b\u5c3e\u53ef\u80fd\u662f \\(2\\) / \\(4\\) / \\(6\\) / \\(8\\) \u4e2d\u4efb\u4e00\u6570\u3002</p> <p>Code </p>"},{"location":"acm/cf/cf1841/#f-vika-and-wiki","title":"F. Vika and Wiki","text":"<p>Description</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u6570\u7ec4 \\(a\\)\uff08\u5176\u4e2d \\(n\\) \u4e3a \\(2\\) \u7684\u5e42\u6b21\uff09\uff0c\u8bb0\u4e00\u6b21\u53d8\u6362\u4e3a\u5c06\u6574\u4e2a\u6570\u7ec4 \\(a_i \\to a_i \\oplus a_{(i + 1) \\mod n}\\)\u3002 </p> <p>Solution</p> <p>\u624b\u52a8\u6a21\u62df\u82e5\u5e72\u6b21\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u5f53\u8fdb\u884c \\(2^n - 1\\) \u6b21\u540e\uff0c\u6570\u7ec4\u6bcf\u4e2a\u5143\u7d20 \\(a_i \\to \\oplus_{j = 0}^{2^n}a_{i + j(\\mod n)}\\)\uff0c\u5229\u7528\u8fd9\u4e2a\u6027\u8d28\u6211\u4eec\u53ef\u4ee5\u5148\u8fdb\u884c \\(2 ^n - 1\\) \u6b21\u7136\u540e\u518d\u8fdb\u884c \\(1\\) \u6b21\u3002\u8fd9\u6837\u5c31\u8fdb\u884c\u4e86 \\(2^k\\) \u6b21\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(nlogn)\\)\u3002</p> <p>Code</p>"},{"location":"acm/cf/cf1841/#1850-codeforces-round-886-div-4","title":"1850. Codeforces Round 886 (Div. 4)","text":""},{"location":"acm/cf/cf1841/#f-we-were-both-children","title":"F. We Were Both Children","text":"<p>Description</p> <p>\\(n\\) \u53ea\u9752\u86d9\uff0c\u6bcf\u6b21\u53ea\u6311 \\(a_i\\) \u7684\u500d\u6570\u7684\u683c\u5b50\uff0c\u8981\u4f60\u518d\u524d \\(n\\) \u683c\u5185\u653e\u7f6e\u4e00\u4e2a\u9677\u9631\uff0c\u4f7f\u5c3d\u53ef\u80fd\u591a\u7684\u9752\u86d9\u8df3\u8fdb\u53bb\u3002</p> <p>\\(n \\le 10^5\\) \u3002</p> <p>Solution</p> <p>\u5982\u679c\u77e5\u9053\u7b2c \\(i\\) \u4e2a\u683c\u5b50\u80fd\u8df3 \\(f_i\\) \u53ea\u9752\u86d9\uff0c\u5219\u53ef\u4ee5\u5c06\u6240\u6709 \\(i\\) \u500d\u6570\u683c\u5b50\u5168\u90e8\u52a0\u4e0a \\(f_i\\) \u3002</p> <p>\u6545\u4e24\u5c42\u5faa\u73af\u679a\u4e3e\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(\\sum_{i = 1}^n \\dfrac{n}{i}) \\approx O(nlnn)\\) \u3002</p> <p>Code</p>"},{"location":"acm/cf/cf1841/#h-the-third-letter","title":"H. The Third Letter","text":"<p>Description</p> <p>\u82e5\u5e72\u70b9\u5206\u5e03\u5728\u4e00\u7cfb\u5217 \\(x\\) \u8f74\u4e0a\uff0c\u544a\u8bc9\u4f60\u82e5\u5e72\u70b9\u4e4b\u95f4\u7684\u7ea6\u675f\u6761\u4ef6\uff08\u5728 \u5de6 / \u53f3 xx \u7684\u4f4d\u7f6e\u5904\uff09\u3002\u7136\u540e\u95ee\u4f60\u8fd9\u4e00\u7cfb\u5217\u6761\u4ef6\u662f\u5426\u5408\u7406\u3002</p> <p>Solution</p> <p>\u672c\u9898\u7684\u6a21\u578b\u53ef\u4ee5\u62bd\u8c61\u6210\u4e00\u4e2a\u6709\u5411\u56fe\u3002\u4f46\u662f\u8fd9 \\(n\\) \u4e2a\u70b9\u53ef\u80fd\u662f\u82e5\u5e72\u8fde\u901a\u5757\uff0c\u4e0d\u4e00\u5b9a\u5168\u662f\u8fde\u901a\u7684\u3002</p> <p>\u6bcf\u6b21\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\uff0c\u8bbe\u8fd9\u4e2a\u70b9\u7684\u4f4d\u7f6e\u662f \\(0\\)\uff0c\u7136\u540e\u6807\u8bb0\u51fa\u6240\u6709\u548c\u8fd9\u4e2a\u70b9\u76f8\u5173\u7684\u70b9\u7684\u5750\u6807\u3002</p> <p>\u6700\u540e\u518d\u628a\u8fd9\u4e9b\u7ea6\u675f\u5173\u7cfb\u4e00\u4e00\u67e5\u8be2\uff0c\u770b\u6700\u540e\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\u3002</p> <p>Code</p>"},{"location":"acm/cf/cf1851/","title":"1851 ~ 1860","text":"<p>Abstract</p> <ul> <li> 1860. Educational Codeforces Round 153 (Rated for Div. 2)<ul> <li>A. Not a Substring  </li> </ul> </li> <li> 1861. Educational Codeforces Round 154 (Rated for Div. 2)<ul> <li>E. Non-Intersecting Subpermutations</li> </ul> </li> <li> 1862. Codeforces Round 894 (Div. 3)<ul> <li>E. Kolya and Movie Theatre</li> <li>F. Magic Will Save the World</li> <li>G. The Great Equalizer</li> </ul> </li> </ul>"},{"location":"acm/cf/cf1851/#1859-codeforces-round-892-div-2","title":"1859. Codeforces Round 892 (Div. 2)","text":""},{"location":"acm/cf/cf1851/#andrey-and-escape-from-capygrad","title":"Andrey and Escape from Capygrad","text":"<p>Solution:</p> <p>Good problem.</p> <p>First we should observe that we'd better move to \\(b_i\\).</p> <p>The proof seems to be obvious, if a segment don't cover \\(b_i\\), then it's right point must be less than \\(b_i\\).</p> <p>\\(kdl_i\\) denote that the optimum answer starting from the segment \\(i\\).</p> <p>For every query \\(x_i\\), \\(ans_i = \\max\\{x_i, \\max_{j = 1}^{n}kdl_j|l_j \\le x_i \\le r_j\\}\\).</p> <p>So we can use scanline method from the end to solve this problem, for each query, we just should teleport to the max available \\(b_i\\).</p>"},{"location":"acm/cf/cf1851/#1860-educational-codeforces-round-153-rated-for-div-2","title":"1860. Educational Codeforces Round 153 (Rated for Div. 2)","text":""},{"location":"acm/cf/cf1851/#a-not-a-substring","title":"A. Not a Substring","text":"<p>Description</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u7531 <code>(</code> \u548c <code>)</code> \u7ec4\u6210\u7684\u5e8f\u5217\uff0c\u95ee\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(2n\\) \u7684\u5e8f\u5217\uff0c\u4f7f\u5f97\u65b0\u5e8f\u5217\u4e0d\u5305\u542b\u539f\u5e8f\u5217\u3002</p> <p>Solution</p> <p>\u6c34\u9898\uff0c\u4e3b\u8981\u719f\u6089\u4e00\u4e0b stl \u91cc string \u7528\u6cd5\u3002\u770b <code>((()))</code> \u548c <code>()()()</code> \u8fd9\u6837\u7684\u8c01\u7b26\u5408\uff0c\u90fd\u4e0d\u7b26\u5408\u5c31\u662f <code>NO</code>\u3002</p> <p>string \u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 <code>+</code> \u6765\u5728\u5c3e\u90e8\u63d2\u5165\u5b57\u7b26\uff0c<code>\"()\"</code> \u4e5f\u53ef\u4ee5\u8868\u793a\u4e00\u4e2a\u5e38\u91cf\u6570\u7ec4\uff0c\u4e5f\u53ef\u4ee5\u7528 <code>a.find(s) == string::npos</code> \u6765\u5224\u65ad s \u662f\u5426\u5728 a \u4e2d\u51fa\u73b0\u3002</p> <p>Code</p>"},{"location":"acm/cf/cf1861/","title":"1861 ~ 1870","text":""},{"location":"acm/cf/cf1861/#1861-educational-codeforces-round-154-rated-for-div-2","title":"1861. Educational Codeforces Round 154 (Rated for Div. 2)","text":""},{"location":"acm/cf/cf1861/#e-non-intersecting-subpermutations","title":"E. Non-Intersecting Subpermutations","text":"<p>Description</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u5e8f\u5217\uff0c\u53d6\u82e5\u5e72\u4e2a\u957f\u5ea6\u4e3a \\(k\\) \u7684\u5b50\u5e8f\u5217\uff0c\u6ee1\u8db3\u8fd9\u4e9b\u5b50\u5e8f\u5217\u4e92\u4e0d\u76f8\u4ea4\u4e14\u5305\u542b \\(1 \\sim k\\) \u5168\u90e8\u5143\u7d20\uff0c\u5b9a\u4e49\u8fd9\u4e2a\u5e8f\u5217\u7684\u4ef7\u503c\u5c31\u662f\u5b50\u5e8f\u5217\u4e2a\u6570\u7684\u6700\u5927\u503c\u3002</p> <p>\u7ed9\u5b9a\u5e8f\u5217\u957f\u5ea6 \\(n\\)\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u7531 \\(1 \\sim k\\) \u7ec4\u6210\uff0c\u95ee\u6240\u7ec4\u6210\u5e8f\u5217\u7684\u4ef7\u503c\u603b\u548c\u662f\u591a\u5c11\u3002</p> <p>Solution</p> <p>\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a\u65e2\u5b9a\u7684\u5e8f\u5217\uff0c\u8981\u6c42\u51fa\u4ed6\u7684\u5b50\u5e8f\u5217\u4e2a\u6570\u7684\u65b9\u6cd5\u662f\u7528\u8d2a\u5fc3\uff0c\u4f7f\u5e8f\u5217\u7684\u53f3\u7aef\u70b9\u5c3d\u53ef\u80fd\u9760\u5de6\u3002</p> <p>\u6211\u4eec\u8bbe \\(f_i\\) \u8868\u793a\u6700\u540e\u4e00\u4e2a\u5e8f\u5217\u53f3\u7aef\u70b9\u5728 \\(i\\) \u5904\u7684\u65b9\u6848\u6570\uff08\u6ce8\u610f\u8fd9\u91cc\u662f\u65b9\u6848\u6570\uff0c\u5e76\u4e0d\u662f\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u6570\uff09\uff0c\u90a3\u4e48\u5f53\u524d\u6700\u540e\u4e00\u4e2a\u5e8f\u5217\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f \\(f_i \\times k^{n - i}\\)\u3002\uff08\u8fd9\u91cc\u7684\u60f3\u6cd5\u76f8\u5f53\u4e8e\u6211\u4eec\u6bcf\u6b21\u53ea\u7b97\u4e00\u4e2a\u4f4d\u7f6e \\([i - k + 1, i]\\) \u4e0a\u7684\u5e8f\u5217\u5bf9\u603b\u7b54\u6848\u7684\u5f71\u54cd\uff09</p> <p>\u5bf9\u4e8e\u65b9\u6848\u8f6c\u79fb\uff0c\u6211\u4eec\u679a\u4e3e\u4e0a\u4e00\u4e2a\u5e8f\u5217\u7684\u53f3\u7aef\u70b9 \\(j\\)\uff0c\u90a3\u4e48\u8fd9\u91cc\u6709 \\(j \\in [0, i - k]\\)\uff08\\(j = 0\\) \u8868\u793a\u6ca1\u6709\u4e0a\u4e00\u4e2a\u5e8f\u5217\uff09\u3002</p> <p>\u6211\u4eec\u518d\u5f15\u5165 \\(g_i\\) \u8868\u793a\u5bf9\u4e8e\u957f\u5ea6\u662f \\(i\\) \u7684\u4e00\u6bb5\u5e8f\u5217\uff0c\u7b2c\u4e00\u4e2a\u5408\u6cd5\u5b50\u5e8f\u5217\u51fa\u73b0\u7684\u4f4d\u7f6e\u662f \\([i - k + 1, i]\\) \u7684\u65b9\u6848\u6570\u3002</p> <p>\u6545\u4e0d\u96be\u7406\u89e3 \\(f_i = \\sum f_j \\times g_{i - j}\\)\u3002\u7136\u540e\u95ee\u9898\u8f6c\u5316\u4e3a\u5982\u4f55\u6c42 \\(g_i\\) \u6570\u7ec4\u3002</p> <p>\u5bf9\u4e8e \\(g_i\\) \u800c\u8a00\uff0c\u6700\u540e \\(k\\) \u4e2a\u4f4d\u7f6e\u4e00\u5b9a\u662f \\(1 \\sim k\\)\uff0c\u524d \\(i - k\\) \u4f4d\u7f6e\u4efb\u610f\u9009\uff0c\u6545\u6709 \\(k^{i - k} \\times k!\\) \u7684\u65b9\u6848\u6570\u3002</p> <p>\u4f46\u662f\u4f1a\u6709\u4e0d\u5408\u6cd5\u7684\u65b9\u6848\u7b97\u5728\u5185\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u5b50\u5e8f\u5217\u5148\u4e8e \\([i - k + 1, i]\\) \u4f4d\u7f6e\u51fa\u73b0\u3002</p> <p>\u5206\u7c7b\u8ba8\u8bba\uff0c\u679a\u4e3e\u53ef\u80fd\u5148\u4e8e\u51fa\u73b0\u7684\u4f4d\u7f6e \\([j - k + 1, j]\\)\uff0c\u82e5 \\(i - j &lt;= k\\) \uff0c\u90a3\u4e48\u4e0d\u5408\u6cd5\u7684\u65b9\u6848\u6570\u76f8\u5f53\u4e8e\u662f \\(g_j \\times (i - j)!\\)\uff0c\u56e0\u4e3a\u5728\u6700\u540e \\(i - j\\) \u4e2a\u4f4d\u7f6e\u4e0a\uff0c\u76f8\u5f53\u4e8e\u6bcf\u4e2a\u6570\u90fd\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\u3002\u82e5 \\(i - j &gt; k\\)\uff0c\u90a3\u4e48\u4e0d\u5408\u6cd5\u7684\u65b9\u6848\u6570\u76f8\u5f53\u4e8e\u662f \\(g_j \\times k! \\times k^{i - j - k}\\)\u3002\u6700\u540e \\(k\\) \u4e2a\u4f4d\u7f6e\u4e0a \\(k\\) \u4e2a\u6570\u5404\u51fa\u73b0\u4e00\u6b21\uff0c\\([j + 1, i - k]\\) \u4f4d\u7f6e\u4e0a\u7684\u6570\u5b57\u968f\u4fbf\u9009\u3002\u6700\u540e\u628a\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\u90fd\u51cf\u6389\u5373\u53ef\u3002</p> <p>Code</p>"},{"location":"acm/cf/cf1861/#1862-codeforces-round-894-div-3","title":"1862. Codeforces Round 894 (Div. 3)","text":""},{"location":"acm/cf/cf1861/#e-kolya-and-movie-theatre","title":"E. Kolya and Movie Theatre","text":"<p>Description</p> <p>\u4e00\u6bb5\u957f\u4e3a \\(n\\) \u7684\u5e8f\u5217 \\(a\\)\uff0c\u4f60\u4ece\u4e2d\u81f3\u591a\u9009 \\(m\\) \u4e2a\u6570\u3002\u8bbe\u4f60\u9009\u7684\u6570\u4e2d\u4e0b\u6807\u6700\u5927\u7684\u4e3a \\(x\\)\uff0c\u90a3\u4e48\u4f60\u9009\u7684\u7b54\u6848\u8981\u51cf\u53bb \\(x \\times d\\)\u3002\u95ee\u8be5\u600e\u4e48\u9009\u662f\u7b54\u6848\u6700\u5927\u3002</p> <p>Solution</p> <p>\u4ece\u524d\u5f80\u540e\u626b\u4e00\u904d\uff0c\u8bbe\u4e0b\u6807\u6700\u5927\u7684\u4e3a \\(i\\)\uff0c\u7ef4\u62a4\u524d \\(k\\) \u5927\u7684\u5e8f\u5217\u4ee5\u53ca\u548c\uff0c\u7b97\u7b54\u6848\u7684\u65f6\u5019\u76f4\u63a5\u51cf\u53bb \\(i \\times d\\) \u5373\u53ef\u3002</p> <p>\u6ce8\uff1a\u4e07\u4e00\u63d2\u5165\u7684\u7b2c \\(i\\) \u53f7\u5143\u7d20\u6392\u4e0d\u5230\u524d \\(k\\) \u5927\uff0c\u7b97\u7b54\u6848\u65f6\u4e0d\u5e94\u8be5\u51cf \\(i \\times d\\) \u3002\u4f46\u5176\u5b9e\u4e0d\u7528\u8003\u8651\uff0c\u56e0\u4e3a\u8fd9\u79cd\u60c5\u51b5\u4e00\u5b9a\u4e0d\u662f\u6700\u4f18\uff0c\u5f53\u6700\u5927\u4e0b\u6807\u503c\u5c0f\u4e8e \\(i\\) \u7684\u65f6\u5019\u4e00\u5b9a\u4f1a\u6709\u4e00\u4e2a\u7b54\u6848\uff0c\u524d \\(k\\) \u5927\u503c\u548c\u5f53\u524d\u4e00\u6837\uff0c\u4f46\u51cf\u53bb\u7684\u6570\u8981\u5c0f\u4e00\u4e9b\uff0c\u6240\u4ee5\u4e0d\u4f1a\u66f4\u65b0\u7b54\u6848\u3002</p> <p>Code</p>"},{"location":"acm/cf/cf1861/#f-magic-will-save-the-world","title":"F. Magic Will Save the World","text":"<p>Description</p> <p>\u82e5\u5e72\u5c0f\u602a\uff0c\u6bcf\u4e2a\u5c0f\u602a\u8840\u91cf \\(s_i\\)\uff0c\u4f60\u53ef\u4ee5\u7528 \u6c34 \u6216 \u706b \u5143\u7d20\u653b\u51fb\uff0c\u6d88\u8017\u7b49\u91cf\u7684 \u6c34 \u6216 \u706b \u5143\u7d20\u3002\u4f60\u6bcf\u79d2\u53ef\u4ee5\u589e\u52a0 \\(w\\) \u6c34\u5143\u7d20 \u548c \\(f\\) \u706b\u5143\u7d20\uff0c\u95ee\u6700\u5feb\u8981\u51e0\u79d2\u6d88\u706d\u5168\u90e8\u5c0f\u602a\u3002</p> <p>Solution</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u5c0f\u602a\uff0c\u8981\u4e48\u88ab\u706b\u6d88\u706d\uff0c\u8981\u4e48\u88ab\u6c34\u6d88\u706d\uff0c\u4e0d\u96be\u53d1\u73b0\u5c0f\u602a\u603b\u8840\u91cf\u6bd4\u8f83\u4f4e\uff0c\u6240\u4ee5\u53ef\u4ee5\u5229\u7528 \\(01\\) \u80cc\u5305\u601d\u60f3\u89e3\u51b3\u3002</p> <p>Code</p>"},{"location":"acm/cf/cf1861/#g-the-great-equalizer","title":"G. The Great Equalizer","text":"<p>Description</p> <p>\u521d\u59cb\u6709\u4e00\u6bb5\u957f\u5ea6\u4e3a \\(n\\) \u7684\u5e8f\u5217\uff0c\u8bb0\u4e00\u6b21\u64cd\u4f5c\u4e3a\u5c06\u5e8f\u5217\u6309\u5347\u5e8f\u6392\u5217\u7136\u540e\u9664\u53bb\u76f8\u7b49\u7684\u5143\u7d20\u3002\u7136\u540e\u8bbe\u65b0\u5e8f\u5217\u5143\u7d20\u957f\u5ea6 \\(n'\\)\uff0c\u5c06\u7b2c\u4e00\u4e2a\u5143\u7d20\u52a0\u4e0a \\(n'\\)\uff0c\u7b2c\u4e8c\u4e2a\u52a0\u4e0a \\(n' - 1\\)\uff0c\u7b2c\u4e09\u4e2a\u52a0\u4e0a \\(n' - 2\\) \u4ee5\u6b64\u7c7b\u63a8\u3002</p> <p>\u95ee\u6700\u540e\u53ea\u5269\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u503c\u3002</p> <p>Solution</p> <p>\u6211\u4eec\u53d1\u73b0\u4e24\u4e2a\u6027\u8d28\uff0c\u7b2c\u4e00\uff0c\u6bcf\u4e2a\u5143\u7d20\u4e4b\u95f4\u7684\u76f8\u5bf9\u5927\u5c0f\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u7b2c\u4e8c\uff0c\u8bbe\u4e24\u4e24\u76f8\u90bb\u5143\u7d20\u4e4b\u95f4\u7684\u6700\u5927\u5143\u7d20\u4e3a \\(max\\_gap\\)\uff0c\u5219\u6bcf\u6b21\u64cd\u4f5c\u540e \\(max\\_gap\\) \u90fd\u4f1a\u51cf\u4e00\u3002\u90a3\u4e48\u6700\u540e\u5269\u4e0b\u7684\u90a3\u4e2a\u5143\u7d20\u7684\u503c\u4e3a \u539f\u5e8f\u5217\u4e2d\u6700\u5927\u7684\u5143\u7d20\u52a0\u4e0a\u64cd\u4f5c\u6b21\u6570\uff08\u5373 \\(max\\_gap\\)\uff09\u3002</p> <p>Code</p>"},{"location":"acm/cf/cf1891/","title":"1891 ~ 1900","text":"<p>Abstract</p> <ul> <li> 1894. Codeforces Round 908 (Div. 2)<ul> <li>D. Neutral Tonality</li> <li>E. Freedom of Choice</li> </ul> </li> <li> 1895. Educational Codeforces Round 157 (Rated for Div. 2)<ul> <li>D. XOR Construction\uff1a\u5f02\u6216</li> <li>E. Infinite Card Game\uff1a\u535a\u5f08\u8bba\uff1b\u62d3\u6251\u5e8f</li> </ul> </li> </ul>"},{"location":"acm/cf/cf1891/#1894-codeforces-round-908-div-2","title":"1894. Codeforces Round 908 (Div. 2)","text":""},{"location":"acm/cf/cf1891/#d-neutral-tonality","title":"D. Neutral Tonality","text":"<p>Description</p> <p>\u7ed9\u5b9a\u4e24\u4e2a\u5e8f\u5217 \\(\\{a_n\\}\\) \u548c \\(\\{b_m\\}\\)\uff0c\u4f60\u53ef\u4ee5\u5c06 \\(\\{b_m\\}\\) \u4ee5\u4efb\u610f\u987a\u5e8f\u63d2\u5165\u5230 \\(\\{a_n\\}\\) \u4e2d\u7684\u4efb\u610f\u4f4d\u7f6e\uff0c\u6c42\u8be5\u5982\u4f55\u63d2\u5165\u4f7f\u5f97\u83b7\u5f97\u7684\u65b0\u5e8f\u5217 \\(\\{c_{n + m}\\}\\) \u4e2d\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\u6700\u5c0f\u3002</p> <p>Solution</p> <p>\u8bbe \\(\\{a_n\\}\\) \u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\u4e3a \\(S\\)\uff0c\u4ed4\u7ec6\u601d\u8003\u4e4b\u540e\u53d1\u73b0 \\(\\{c_{n + m}\\}\\) \u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\u4e00\u5b9a\u662f\u5927\u4e8e\u7b49\u4e8e \\(S\\)\uff0c\u5c0f\u4e8e\u7b49\u4e8e \\(S + 1\\) \u7684\u3002\u4e3a\u4ec0\u4e48\u5c0f\u4e8e\u7b49\u4e8e \\(S + 1\\) \u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u628a \\(\\{b_m\\}\\) \u5e8f\u5217\u964d\u5e8f\u6392\u5217\u540e\u63d2\u5165 \\(\\{a_n\\}\\) \u4e2d\uff0c\u5728 \\(\\{c_{n + m}\\}\\) \u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u4e2d\uff0c\\(\\{b_m\\}\\) \u4e2d\u7684\u5143\u7d20\u6700\u591a\u53ea\u4f1a\u51fa\u73b0\u4e00\u6b21\uff0c\u6545\u957f\u5ea6\u4e00\u5b9a\u662f\u5c0f\u4e8e\u7b49\u4e8e \\(S + 1\\) \u7684\u3002</p> <p>\u90a3\u4e48\u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u628a\u957f\u5ea6\u53d8\u4e3a \\(S\\) \u5462\uff0c\u4e8b\u5b9e\u4e0a\u662f\u4e00\u5b9a\u80fd\u53d8\u4e3a \\(S\\) \u7684\u3002\u6211\u4eec\u628a \\(\\{b_m\\}\\) \u5e8f\u5217\u964d\u5e8f\u6392\u5217\uff0c\u7136\u540e\u8003\u8651\u82e5\u957f\u5ea6\u53ef\u4ee5\u53d8\u4e3a \\(S + 1\\) \u65f6\uff0c\u90a3\u4e48\u4e00\u5b9a\u5728\u539f\u6709\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u67d0\u4e24\u4e2a \\(a_i\\)\uff0c\\(a_{i + 1}\\) \u4e2d\u95f4\u53ef\u4ee5\u518d\u9009\u4e00\u4e2a \\(b_j\\) \u653e\u8fdb\u53bb\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8ba9\u6bd4 \\(a_i\\) \u5927\u7684\u6570\u90fd\u5728 \\(a_i\\) \u4e4b\u524d\u653e\u8fdb\u53bb\uff0c\u6bd4 \\(a_i\\) \u5c0f\u7684\u6570\u90fd\u5728 \\(a_i\\) \u4e4b\u540e\u653e\u8fdb\u53bb\u3002\u5bf9\u4e8e \\(\\{a_n\\}\\) \u4e2d\u7684\u67d0\u4e2a\u4e0a\u5347\u5e8f\u5217\u6765\u8bf4\uff0c\u6211\u4eec\u867d\u7136\u4e0d\u80fd\u4fdd\u8bc1 \\(a_i\\) \u524d\u9762\u7684\u5143\u7d20\u90fd\u6bd4\u5b83\u5927\uff0c\u4f46\u80fd\u4fdd\u8bc1\u540e\u9762\u7684\u5143\u7d20\u90fd\u6bd4\u5b83\u5c0f\u3002\u6545\u4e0d\u80fd\u5728 \\(a_i\\)\uff0c\\(a_{i + 1}\\) \u4e2d\u95f4\u518d\u63d2\u5165 \\(\\{b_m\\}\\) \u4e2d\u5143\u7d20\u3002</p> <p>\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u7528\u53cc\u6307\u9488\uff0c\u6bcf\u6b21\u5c06 \\(\\{a_n\\}\\) \u548c \\(\\{b_m\\}\\) \u4e2d\u8f83\u5927\u7684\u5143\u7d20\u63d2\u5165 \\(\\{c_{n + m}\\}\\) \u4e2d\u5373\u53ef\u3002</p> <p>Code</p>"},{"location":"acm/cf/cf1891/#e-freedom-of-choice","title":"E. Freedom of Choice","text":"<p>Description</p> <p>\u7ed9\u5b9a \\(m\\) \u4e2a\u53ef\u91cd\u96c6\uff0c\u7b2c \\(i\\) \u4e2a\u53ef\u91cd\u96c6\u4e2d\u6709 \\(n_i\\) \u4e2a\u5143\u7d20\uff0c\u5bf9\u4e8e\u7b2c \\(i\\) \u4e2a\u53ef\u91cd\u96c6\u4f60\u53ef\u4ee5\u9009\u62e9\u5176\u4e2d\u82e5\u5e72\u5143\u7d20\uff0c\u9009\u62e9\u7684\u5143\u7d20\u4e2a\u6570\u4ecb\u4e8e \\(l_i\\) \u5230 \\(r_i\\) \u4e4b\u95f4\u3002\u6700\u540e\u628a \\(m\\) \u6b21\u9009\u62e9\u7684\u5143\u7d20\u5408\u5728\u4e00\u8d77\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u53ef\u91cd\u96c6\uff0c\u8bbe\u91cc\u9762\u5143\u7d20\u4e2a\u6570\u4e3a \\(len\\)\uff0c\u95ee\u5982\u4f55\u9009\u62e9\u4f7f\u5f97\u5f97\u5230\u7684\u53ef\u91cd\u96c6\u4e2d \\(len\\) \u8fd9\u4e2a\u6570\u51fa\u73b0\u6b21\u6570\u6700\u5c11\uff0c\u6c42\u51fa\u5176\u51fa\u73b0\u6b21\u6570\u3002</p> <p>Solution</p> <p>\u82e5 \\(\\sum r_i - \\sum r_i &gt; \\sum n_i\\)\uff0c\u90a3\u4e48\u6211\u4eec\u4e00\u5b9a\u53ef\u4ee5\u51d1\u51fa\u67d0\u4e00\u4e2a\u6570 \\(x\\)\uff0c\u4f7f\u5f97\u5b83\u4ecb\u4e8e \\(l_i\\) \u5230 \\(r_i\\) \u4e4b\u95f4\u4e14\u4e0d\u7b49\u4e8e \\(m\\) \u4e2a\u53ef\u91cd\u96c6\u4e2d\u4efb\u4e00\u5143\u7d20\uff0c\u6545\u6b64\u65f6\u7b54\u6848\u4e00\u5b9a\u4e3a \\(0\\)\u3002\u63a5\u4e0b\u6765\u4e3b\u8981\u8003\u8651 \\(\\sum r_i - \\sum r_i \\le \\sum n_i\\) \u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u6700\u540e\u8981\u9009\u7684\u4e2a\u6570 \\(x\\)\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u53ef\u91cd\u96c6\uff0c\u5982\u679c\u91cc\u9762\u6ca1\u6709 \\(x\\) \u5143\u7d20\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53d6 \\(r_i\\) \u4e2a\uff0c\u5982\u679c\u6709 \\(x\\) \u5143\u7d20\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5206\u60c5\u51b5\u8ba8\u8bba\u4e00\u4e0b\uff0c\u5148\u628a\u5176\u4e2d\u7684 \\(x\\) \u9664\u6389\uff0c\u7136\u540e\u628a\u5269\u4e0b\u7684\u90fd\u9009\u4e0a\uff0c\u8981\u662f\u628a\u9664\u4e86 \\(x\\) \u4e4b\u5916\u7684\u5143\u7d20\u90fd\u9664\u53bb\u4e86\u8fd8\u662f\u9009\u4e0d\u5230 \\(l_i\\) \u4e2a\uff0c\u5c31\u9009 \\(x\\) \u5143\u7d20\u8865\u5230 \\(l_i\\) \u4e2a\uff1b\u8981\u662f\u628a\u9664\u4e86 \\(x\\) \u4e4b\u5916\u7684\u5143\u7d20\u90fd\u9664\u53bb\u4e86\u4e4b\u540e\u8d85\u8fc7 \\(l_i\\) \u4e2a\u4e86\uff0c\u5c31\u5c3d\u91cf\u5728\u4e0d\u8d85\u8fc7 \\(r_i\\) \u7684\u60c5\u51b5\u4e0b\u591a\u9009\u3002</p> <p>\u8fd9\u6837\u505a\u6240\u5f97\u5230\u7684\u4e00\u5b9a\u662f\u6700\u4f18\u7684\u3002\u56e0\u4e3a\u6211\u4eec\u4f1a\u53d1\u73b0\u9009\u62e9 \\(x\\) \u5143\u7d20\u53ea\u6709\u4e24\u79cd\u539f\u56e0\uff1a\u4e00\u662f\u67d0\u4e2a\u53ef\u91cd\u96c6\u5c11\u4e8e \\(l_i\\) \u4e0d\u5f97\u4e0d\u9009\uff0c\u4e8c\u662f\u603b\u4f53\u4e00\u5171\u9009\u7684\u5c0f\u4e8e \\(x\\) \u4e2a\u4e86\u6240\u4ee5\u8981\u9009 \\(x\\) \u8865\u5145\u3002\u5bf9\u4e8e\u524d\u8005\u663e\u7136\u662f\u628a\u5176\u4ed6\u80fd\u9009\u7684\u90fd\u9009\u4e0a\uff0c\u82e5\u6ca1\u5230 \\(l_i\\) \u9009 \\(x\\) \u6765\u8865\u5145\uff1b\u5bf9\u4e8e\u540e\u8005\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9\u201c\u6709\u4f59\u529b\u201d\u7684\u96c6\u5408\u5c3d\u91cf\u591a\u9009\uff0c\u4e5f\u5c31\u662f\u9009 \\(r_i\\) \u4e2a\uff0c\u663e\u7136\u4e0a\u8ff0\u505a\u6cd5\u90fd\u662f\u6ee1\u8db3\u7684\u3002</p> <p>\u5982\u679c\u524d\u9762\u9009\u7684\u591a\u4e86\u5bfc\u81f4\u6700\u540e\u51e0\u4e2a\u53ef\u91cd\u96c6\u6ca1\u9009\u5230 \\(l_i\\) \u5c31\u8fbe\u5230 \\(x\\) \u4f1a\u600e\u4e48\u6837\uff1f\u4e8b\u5b9e\u4e0a\u4e0d\u7528\u62c5\u5fc3\u8fd9\u79cd\u60c5\u51b5\uff0c\u56e0\u4e3a\u53ef\u4ee5\u8ba9\u524d\u9762\u90a3\u4e9b\u9009\u62e9\u8d85\u8fc7 \\(l_i\\) \u7684\u53ef\u91cd\u96c6\u9009\u62e9\u4e2a\u6570\u51cf\u5c11\uff0c\u800c\u4e14\u90a3\u4e9b\u9009\u62e9\u8d85\u8fc7 \\(l_i\\) \u7684\u53ef\u91cd\u96c6\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\u4e00\u5b9a\u90fd\u662f \\(0\\)\uff0c\u6240\u4ee5\u4e0d\u4f1a\u6709\u5f71\u54cd\uff0c\u5e76\u4e14\u7531\u4e8e \\(x \\ge \\sum l_i\\)\uff0c\u6240\u4ee5\u8ba9\u524d\u9762\u51cf\u5c11\u7684\u8fc7\u7a0b\u4e2d\u4e00\u5b9a\u4f1a\u6709\u4e00\u4e2a\u96f6\u754c\u70b9\u4f7f\u5f97\u6240\u9009\u4e2a\u6570\u4e4b\u548c\u4e3a \\(x\\)\u3002</p> <p>Code</p>"},{"location":"acm/cf/cf1891/#1895-educational-codeforces-round-157-rated-for-div-2","title":"1895. Educational Codeforces Round 157 (Rated for Div. 2)","text":""},{"location":"acm/cf/cf1891/#d-xor-construction","title":"D. XOR Construction","text":"<p>Description</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n - 1\\) \u7684\u5e8f\u5217 \\(\\{a_n\\}\\)\uff0c\u8981\u6c42\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u5e8f\u5217 \\(\\{b_n\\}\\)\uff0c\u4f7f\u5f97 \\(0 \\sim n - 1\\) \u6bcf\u4e2a\u6570\u90fd\u5728 \\(\\{b_n\\}\\) \u4e2d\u6070\u597d\u51fa\u73b0\u4e86\u4e00\u6b21\uff0c\u5e76\u4e14\u6ee1\u8db3 \\(b_i \\oplus b_{i + 1} = a_i\\)\uff0c\u8bd5\u6c42\u51fa\u8fd9\u6837\u7684 \\(\\{b_n\\}\\) \u5e8f\u5217\u3002</p> <p>Solution</p> <p>\u7a0d\u4f5c\u5316\u7b80\u6211\u4eec\u4e0d\u96be\u53d1\u73b0</p> \\[\\begin{align*} &amp;b_1 = b_1 \\\\ &amp;b_2 = b_1 \\oplus a_1 \\\\ &amp;b_3 = b_1 \\oplus a_1 \\oplus a_2 \\\\ &amp; \\dots \\\\ &amp;b_n = b_1 \\oplus a_1 \\oplus \\cdots \\oplus a_{n - 1} \\end{align*}\\] <p>\u5bf9\u4e8e\u5f02\u6216\u7684\u9898\u76ee\u8981\u591a\u5f80\u62c6\u4f4d\u65b9\u9762\u4e0a\u53bb\u60f3\uff0c\u6211\u4eec\u53ef\u4ee5\u628a \\(b_1\\) \u62c6\u6210\u4e00\u4f4d\u4f4d\u5206\u522b\u53bb\u6c42\u3002\u6211\u4eec\u8bbe\u524d\u7f00\u548c\u6570\u7ec4 \\(\\{c_n\\}\\)\uff0c\u5176\u4e2d \\(c_i\\) \u8868\u793a\u524d \\(i\\) \u4e2a \\(a_i\\) \u7684\u5f02\u6216\u548c\u3002\u82e5\u60f3\u5224\u65ad\u4e00\u4e0b \\(b_i\\) \u7b2c \\(i\\) \u4f4d\u4e0a\u662f\u4e0d\u662f \\(1\\)\uff0c\u6211\u4eec\u53ea\u7528\u6bd4\u8f83\u4e00\u4e0b\u5168\u90e8 \\(\\{c_n\\}\\) \u4e2d\u7b2c \\(i\\) \u4f4d\u4e0a \\(1\\) \u7684\u4e2a\u6570\u548c\u524d \\(n - 1\\) \u4e2a\u6570\u7684\u7b2c \\(i\\) \u4f4d\u4e0a \\(1\\) \u7684\u4e2a\u6570\u603b\u548c\u662f\u5426\u76f8\u7b49\uff0c\u82e5\u76f8\u7b49\u5219\u8bf4\u660e \\(b_1\\) \u7b2c \\(i\\) \u4f4d\u662f \\(0\\)\uff0c\u53cd\u4e4b\u8bf4\u660e\u662f \\(1\\)\u3002</p> <p>Code</p>"},{"location":"acm/cf/cf1891/#e-infinite-card-game","title":"E. Infinite Card Game","text":"<p>Description</p> <p>\u6709 A \u548c B \u4e24\u540d\u73a9\u5bb6\uff0cA \u73a9\u5bb6\u6709 \\(n\\) \u5f20\u724c\uff0cB \u73a9\u5bb6\u6709 \\(m\\) \u5f20\u724c\u3002\u6bcf\u5f20\u724c\u90fd\u6709\u4e00\u4e2a\u653b\u51fb\u503c\u548c\u9632\u5fa1\u503c\uff0c\u9996\u5148\u7531 A \u73a9\u5bb6\u4f7f\u7528\u4e00\u5f20\u724c\uff0c\u63a5\u7740\u7531 B \u73a9\u5bb6\u51fa\u724c\uff0c\u4e14\u51fa\u7684\u724c\u5fc5\u987b\u653b\u51fb\u503c\u5927\u4e8e A \u7684\u724c\u7684\u9632\u5fa1\u503c\uff0c\u88ab\u51fb\u8d25\u7684\u724c\u5c06\u9000\u56de\u539f\u73a9\u5bb6\u624b\u4e2d\uff0c\u4e24\u4eba\u4f9d\u6b21\u51fa\u724c\uff0c\u6700\u540e\u8c01\u51fa\u4e0d\u4e86\u6015\u724c\u5c31\u8f93\u6389\u6bd4\u8d5b\u3002</p> <p>\u6bd4\u8d5b\u8fc7\u7a0b\u4e2d\u4e24\u4eba\u5747\u6309\u7167\u6700\u4f18\u89e3\u51fa\u724c\uff0c\u8bf7\u95ee A \u7684 \\(n\\) \u5f20\u724c\u4e2d\uff0c\u6709\u51e0\u5f20\u724c A \u7b2c\u4e00\u6b21\u51fa\u4f1a\u4f7f A \u8d62\u5f97\u6bd4\u8d5b\uff0c\u6709\u51e0\u5f20\u724c A \u7b2c\u4e00\u6b21\u51fa\u4f1a\u4f7f\u6bd4\u8d5b\u5e73\u5c40\uff0c\u6709\u51e0\u5f20\u724c A \u7b2c\u4e00\u6b21\u51fa\u4f1a\u4f7f A \u8f93\u6389\u6bd4\u8d5b\u3002</p> <p>Solution</p> <p>\u6211\u4eec\u53d1\u73b0\u4e00\u65e6\u53ef\u4ee5\u628a\u724c\u51fb\u8d25\u4e4b\u540e\uff0c\u573a\u4e0a\u724c\u7684\u653b\u51fb\u503c\u5c31\u4e0d\u91cd\u8981\u4e86\uff0c\u53ea\u6709\u9632\u5fa1\u503c\u91cd\u8981\uff0c\u4e14\u8d8a\u5927\u8d8a\u597d\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7528\u8d2a\u5fc3\u601d\u8def\uff0c\u6bcf\u6b21\u5728\u80fd\u51fb\u8d25\u7684\u57fa\u7840\u4e0a\u9009\u9632\u5fa1\u503c\u6700\u5927\u7684\u724c\u3002\u6240\u4ee5\u4e00\u65e6\u524d\u9762\u7684\u724c\u56fa\u5b9a\u4e0b\u6765\u4e4b\u540e\uff0c\u540e\u9762\u7684\u51fa\u724c\u4e00\u5b9a\u4e5f\u662f\u56fa\u5b9a\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u5f20\u724c\u548c\u8fd9\u5f20\u724c\u7684\u5e94\u5bf9\u724c\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\uff0c\u6700\u540e\u8dd1\u4e00\u4e0b\u62d3\u6251\u6392\u5e8f\u5373\u53ef\u6c42\u51fa\u6bcf\u4e2a\u724c\u6700\u540e\u5bf9\u5e94\u7684\u72b6\u6001\u3002\u7279\u522b\u8bf4\u660e\u4e00\u4e0b\uff0c\u5982\u679c\u6700\u540e\u662f\u5e73\u5c40\u8bf4\u660e\u51fa\u73b0\u4e86\u73af\uff0c\u5224\u65ad\u4e00\u4e0b\u5165\u5ea6\u4e2a\u6570\u5373\u53ef\u3002</p> <p>Code</p>"},{"location":"acm/cf/cf1921/","title":"1921 ~ 1930","text":""},{"location":"acm/cf/cf1921/#1923-educational-codeforces-round-162-rated-for-div-2","title":"1923. Educational Codeforces Round 162 (Rated for Div. 2)","text":""},{"location":"acm/cf/cf1921/#e-count-paths","title":"E. Count Paths","text":"<p>Solution:</p> <p>For each node, we just need to count the contribution it can match except the nodes in its subtree.</p> <p>\\(cnt_{c_i}\\) denotes the numbers that \\(c_i\\) can match except i's subtree.</p> <p>When we dfs the subtree, \\(cnt_{c_i}\\) initially is \\(1\\), when we iterate other subtress, it becomes the previous \\(cnt_{c_i}\\) plus \\(1\\).</p>"},{"location":"acm/cf/cf1921/#1930-think-cell-round-1","title":"1930. think-cell Round 1","text":""},{"location":"acm/cf/cf1921/#d2-sum-over-all-substrings-hard-version","title":"D2. Sum over all Substrings (Hard Version)","text":"<p>Solution:</p> <p>Good problem.</p> <p>Suppose <code>dp[i][j]</code> denotes <code>f(s[i, j])</code>.</p> <p>For a fixed 01-string, we should put 1s greedily. In other word, if we put a <code>1</code>, then it should be <code>0101</code>. And not hard to find that this tragedy of putting 1 is most optimal.</p> <p>So the transition may be:</p> <pre><code>if(s[i] == '1') dp[i][j] = 1 + dp[i + 3][j] (i, i + 1, i + 2 should be '010')\nelse dp[i][j] = dp[i + 1][j]\n</code></pre> <p>But the complexity is \\(O(n^2)\\).To we need further optimization.</p> <p>Suppose <code>F[i]</code> denotes \\(\\sum dp[i][j]\\).</p> <p>If <code>s[i] = '0'</code>:</p> \\[ \\begin{align}   F[i] = \\sum_{j = i}^{n} dp[i][j] &amp;= dp[i][i] + \\sum_{j = i}^{n}dp[i][j] \\newline       &amp;= dp[i][i] + \\sum_{j = i + 1}^{n} dp[i][j] \\newline       &amp;= dp[i][i] + \\sum_{j = i + 1}^{n} dp[i + 1][j] \\newline       &amp;= 0 + F[i + 1] = F[i + 1] \\end{align} \\] <p>If <code>s[i] = '1'</code>:</p> \\[ \\begin{align} F[i] = \\sum_{j = i}^{n} 1 + dp[i + 3][j] &amp;= n - i + 1 + \\sum_{j = i}^{n} dp[i + 3][j] \\newline     &amp;= n - i + 1 + \\sum_{j = i + 3}^{n} dp[i + 3][j] \\newline     &amp;= n - i + 1 + F[i + 3] \\end{align} \\] <p>So we can solve the problem with the complexity of \\(O(n)\\).</p>"},{"location":"acm/cf/cf1941/","title":"1941 ~ 1950","text":""},{"location":"acm/cf/cf1941/#1942-codeton-round-8-div-1-div-2-rated-prizes","title":"1942. CodeTON Round 8 (Div. 1 + Div. 2, Rated, Prizes!)","text":""},{"location":"acm/cf/cf1941/#c2-bessies-birthday-cake-hard-version","title":"C2. Bessie's Birthday Cake (Hard Version)","text":"<p>Solution:</p> <p>Observing carefully, we can find out the most optimized strategy is to choose the point alternatively.</p> <p>And we set the point we used black, the others white.</p> <p>We count number of the single white point between black points is \\(k_1\\), the number of black points is \\(k_2\\), so the answer is \\(k_1 + k_2 - 2\\).</p> <p>For two black points, if the white points between them is \\(d\\), the maximum of the contribution is \\(\\left \\lceil \\dfrac{d}{2} \\right \\rceil\\).</p> <p>So we should choose the white points alternatively to maximize the answer with steps no more than y.</p> <p>But we can find that for the \\(d\\) which is odd, it can make more contributions than \\(d\\) which is even with the same steps.</p> <p>And for two ds which are both odd or both even, the smaller d is better.</p> <p>So we can find out all the ds, and sort them by the rules above. Then we can implement the strategy greedily.</p>"},{"location":"acm/cf/cf1941/#d-learning-to-paint","title":"D. Learning to Paint","text":"<p>Solution:</p> <p>Good problem.</p> <p>We can use DP to solve the problem. </p> <p>And cause we want to solve the largest k values, so \\(f_i\\) denotes the largest k status where the latest choosed pattern isn't bigger than i.</p> <p>When need to transform the \\(f_i\\), we should choose the \\(j \\in [1, i - 2]\\). And there's a gap between \\(i\\) and \\(j\\).   So \\(f_i = \\max \\{f[j] + a[j + 2][i]\\}\\).</p> <p>But we can know that there're \\(k\\) statutes in \\(f_i\\). So we can use the <code>priority_queue</code> to note it.</p> <p>Note</p> <p>\\(f_i\\) is a two-dimension array.</p> <p>But to simplified, I write down the transformation above denotes that for all \\(j \\in [1, k]\\), \\(f[i][j] = \\max \\{f[j] + a[j + 2][i]\\}\\)</p> <p>We can put the first \\(i - 2\\) of f array's top to the priority queue Q.</p> <p>Then we should repeat the performance below for k times:</p> <ol> <li>pop the top of Q, and find where the top element belong to.</li> <li>put the adjacent element of the top in that f array.</li> </ol> <p>Finally, the answer is the first element in \\(f_n\\).</p> <p>We can find all the status can be covered in our transformations, so the dp is correct.</p>"},{"location":"acm/cf/cf1941/#e-farm-game","title":"E. Farm Game","text":"<p>Solution:</p> <p>Good problem.</p> <p>Game theory + combinatorics</p> <p>Let's suppose \\(a_1 &lt; b_1 &lt; a_2 &lt; b_2 &lt; ... &lt; a_n &lt; b_n\\).</p> <p>(\\(b_1 &lt; a_1 &lt; b_2 &lt; a_2 &lt; ... &lt; b_n &lt; a_n\\) can be the same.)</p> <p>Observing carefully, we can find the first hand will lose if all \\(b_i - a_i - 1 \\equiv 0 \\pmod{2}\\) </p> <p>So the winning planning is all planning substract losing planning.</p> <p>But how to get losing planning? We set \\(\\sum (b_j - a_j - 1) = i\\).</p> <p>Then we can find how many choices to fix \\(a_j\\), it's \\(\\binom{l - n - i}{n}\\).</p> <p>And for the length of each \\(b_i - a_i\\), it's like put the partition in balls, where can be empty during two partitions.   The answer is \\(\\binom{n - 1 + i / 2}{n - 1}\\).</p> <p>Tip</p> <p>\\(i / 2\\) can satisfied that every number between partitions is even.</p> <p>And the total losing planning is \\(\\sum \\binom{n - 1 + i}{n - 1} \\times \\binom{l - n - i}{n}\\).</p>"},{"location":"acm/cf/cf1941/#1943-codeforces-round-934-div-1","title":"1943. Codeforces Round 934 (Div. 1)","text":""},{"location":"acm/cf/cf1941/#b-non-palindromic-substring","title":"B. Non-Palindromic Substring","text":"<p>Solution:</p> <p>If a string is not k-th good, the all substring of length k is palindromic.</p> <p>So [i ... j] and [i + 1 ... j + 1] is palindromic.</p> <p>And in that case, if k is odd, we can know that </p> <p>$$     a_i = a_{i + 1} = a_{i + 2} = ... = a_j   $$</p> <p>If k is even, we can know that,</p> <p>\\begin{align}     a_i = a_{i + 2} = a_{i + 4} = ... \\newline     a_{i + 1} = a_{i + 3} = a_{i + 5} = ...   \\end{align}</p> <p>So we can find out that:</p> <ol> <li>k = 1: never possible</li> <li>1 &lt; k &lt; n, odd: not an alternating string</li> <li>1 &lt; k &lt; n, even: not all characters same</li> <li>k = n: non-palindromic string</li> </ol>"},{"location":"acm/cf/cf1941/#c-tree-compass","title":"C. Tree Compass","text":"<p>Solution:</p> <p>We can find out that we can only color two nodes of a line at a time.</p> <p>And we may think that if we can color the longer line, then the shorter line can also be satisfied.</p> <p>And after simulation by hands, we can find out, if we choose the centre node in the diameter,    after coloring the whole diameter, the other lines in the tree can also be colored.</p> <p>So we can turn the problem into coloring the diameter.</p> <p>If the diameter is odd, we can choose the center node, and choose the distance between \\([0, \\dfrac{len + 1}{2})\\).</p> <p>If the diameter is even, we find out that for len = 2 and len = 4, the answer is both 2.   So we divide it into two conditions:</p> <ol> <li><code>len % 4 == 2</code>: if the center is between \\([m_1, m_2]\\), then we can choose \\([m_1, d \\in [0, \\dfrac{len}{2})]\\) and \\([m_2, \\dfrac{len}{2}]\\).   And we can find that all the nodes in the tree can be convered.</li> <li><code>len % 4 == 0</code>: if the center is between \\([m_1, m_2]\\), then we can choose \\([m_1, d \\in [1, \\dfrac{len}{2}) \\wedge (d \\mod 2 = 0)]\\) and \\([m_2, d \\in [1, \\dfrac{len}{2}) \\wedge (d \\mod 2 = 0)]\\).   And we can find that all the nodes in the tree can be convered.</li> </ol>"},{"location":"acm/cf/cf1941/#1946-codeforces-round-936-div-2","title":"1946. Codeforces Round 936 (Div. 2)","text":""},{"location":"acm/cf/cf1941/#c-tree-cutting","title":"C. Tree Cutting","text":"<p>Solution:</p> <p>We can binarily search the answer.</p> <p>And to judge the answer, we can greedily cut the tree.   So soon as the size of subtree is greater or equal to the answer, then we cut it.</p> <p>The time complexity is O(nlogn).</p>"},{"location":"acm/cf/cf1941/#d-birthday-gift","title":"D. Birthday Gift","text":"<p>Solution:</p> <p>We can deal with <code>x</code> and array <code>a</code> bit by bit.</p> <p>For the i-th bit, we count all the numbers in the array <code>a</code> whose i-th bit is 1, and marks the number as <code>cnt</code>. </p> <ol> <li>If <code>(x &gt;&gt; i &amp; 1) == 1</code> and <code>(cnt &amp; 1) == 1</code> : we don't need to split the array cause no matter how we split it, the i-th bit is always 1.</li> <li> <p>If <code>(x &gt;&gt; i &amp; 1) == 1</code> and <code>(cnt &amp; 1) == 0</code> : </p> <ol> <li>we can make this bit 0, and we don't need to consider the lower bit. We just need to merge the adcent two element of set <code>s</code>(s is the set contains every element whose i-th bit is 1). So we can calculate the answer in this condition. </li> <li>we can make this bit 1, so we don't need to split it. </li> </ol> </li> <li> <p>If <code>(x &gt;&gt; i &amp; 1) == 0</code> and <code>(cnt &amp; 1) == 1</code> : no answer.</p> </li> <li>If <code>(x &gt;&gt; i &amp; 1) == 0</code> and <code>(cnt &amp; 1) == 0</code> : the same as <code>2.a</code>.</li> </ol>"},{"location":"acm/cf/cf1941/#e-girl-permutation","title":"E. Girl Permutation","text":"<p>Solution:</p> <p>The condition is invalid only when \\(a_1 \\ne 1\\) or \\(b_{m_2} \\ne n\\) or \\(a_{m_1} \\ne b_{1}\\).</p> <p>And for the whole array, we can only determine where is \\(n\\). It's position must be \\(a_{m_1}\\). </p> <p>But for the part before \\(n\\), and the part after \\(n\\), we only care about the relative difference in one part.</p> <p>We can choose \\(a_{m_1} - 1\\) numbers from left \\(n - 1\\) numbers. And the quantity of choice is \\(C_{n - 1}^{a_{m_1} - 1}\\).   And for the front part, the biggest element is determined, and it must be on the position of \\(a_{m - 1}\\), so we need to choose \\(a_{m_1 - 1} - 1\\) numbers in the front of \\(a_{m - 1}\\).   The quantity of choices is \\(C_{m_1 - 2}^{a_{m_1 - 1} - 1}\\), we also find that the quantity of order between \\(a_{m_1 - 1}\\) and \\(a_{m_1}\\) is \\((a_{m_1} - a_{m_1 - 1} - 1)!\\).</p> <p>And we can do similarly to the left set.</p>"},{"location":"acm/cf/cf1951/","title":"1951 ~ 1960","text":""},{"location":"acm/cf/cf1951/#1951-codeforces-global-round-25","title":"1951. Codeforces Global Round 25","text":""},{"location":"acm/cf/cf1951/#d-buying-jewels","title":"D. Buying Jewels","text":"<p>Solution:</p> <p>If \\(n - k + 1 &gt; k - 1\\), we can buy one jewel in the first stall, and \\(k - 1\\) in the second.   And the first price is \\(n - k + 1\\), the second is \\(1\\).</p> <p>If \\(n - k + 1 \\le k - 1\\), then \\(n \\le 2k - 2\\). So \\(n &lt; 2k\\).    So we can only set the price of stall to be \\(1\\), and in this condition, only when <code>n == k</code> can have the answer.</p>"},{"location":"acm/cf/cf1951/#e-no-palindromes","title":"E. No Palindromes","text":"<p>Solution:</p> <p>If there is a solution, we can split the string into \\(1\\) or \\(2\\) partitions.</p> <p>Otherwise, there's no answer.</p> <p>Just understand sensitively. :)</p> <p>Proof</p>"},{"location":"acm/cf/cf1951/#1954-educational-codeforces-round-164-rated-for-div-2","title":"1954. Educational Codeforces Round 164 (Rated for Div. 2)","text":""},{"location":"acm/cf/cf1951/#d-colored-balls","title":"D. Colored Balls","text":"<p>Solution:</p> <p>Let \\(f_{ij}\\) be the total kinds of conditions when we use some of first i colored balls, and the sum of balls we used is j.</p> <p>Let's denote the max balls of all we used is k. If \\(k \\ge j\\), the contribution to the answer is j.   Otherwise is \\(\\left \\lceil \\dfrac{j}{2} \\right \\rceil\\).</p> <p>In order to find the max number, we can sort the array a. And when we deal with the i-th balls, the max number must be \\(a_i\\).</p> <p>If \\(a_i \\ge j - a_i\\), \\(answer += f_{i - 1, j - a_i} + a_i\\).</p> <p>Otherwise \\(answer += f_{i - 1, j - a_i} + \\left \\lceil \\dfrac{j}{2} \\right \\rceil\\).</p> <p>And simultaneously, \\(f_{ij} += f_{i - 1, j - a_i}\\).</p> <p>Finally we can optimize the first dimension, the time complexity is O(\\(n \\times \\sum a_i\\)).</p>"},{"location":"acm/cf/cf1951/#e-chain-reaction","title":"E. Chain Reaction","text":"<p>Solution:</p> <p>Good problem.</p> <p>We can find that the answer depend on the mountain of the array.</p> <p>For the mountain of the subarray, how do we calculate the contribution to the answer?</p> <p>Let's denote \\(\\left \\lceil \\dfrac{a_i}{k} \\right \\rceil\\) be x. And we can find that either \\(x \\le \\sqrt{a_i}\\) or \\(k \\le \\sqrt{a_i}\\).   So the x can be no more than \\(2\\sqrt{a_i}\\). Hence we can solve the problem with the complexity of \\(O(n \\times \\sqrt{A})\\).</p> <p>And consider that for many ks, they share the same answer. So we can use a difference array to note the contribution to the answer.   That is, for each x, we can find the \\(k_l\\) and \\(k_r\\), and modify the whole segment \\([k_l, k_r]\\) by adding x.</p> <p>But we can also find that we calculate the answer twice when we deal with the adjacent mount. So we should also sub the contribution of bottom.   And the method is the same as above(just change the signal).</p> <p>Don't forget that, for each bottom and mountain, they can a difference for any k which is bigger than them.</p>"},{"location":"acm/cf/cf1951/#1956-codeforces-round-939-div-2","title":"1956. Codeforces Round 939 (Div. 2)","text":""},{"location":"acm/cf/cf1951/#c-nenes-magical-matrix","title":"C. Nene's Magical Matrix","text":"<p>Solution:</p> <p>We can find the answer is like</p> <pre><code>  n = 3\n\n  1 2 3\n  2 2 3\n  3 3 3\n\n  n = 4\n\n  1 2 3 4\n  2 2 3 4\n  3 3 3 4\n  4 4 4 4\n\n  n = 5\n\n  1 2 3 4 5\n  2 2 3 4 5\n  3 3 3 4 5\n  4 4 4 4 5\n  5 5 5 5 5\n  ...\n</code></pre> <p>And it's not hard to find the rule. So we can solve it.</p>"},{"location":"acm/cf/cf1951/#d-nene-and-the-mex-operator","title":"D. Nene and the Mex Operator","text":"<p>Solution:</p> <p>We can use DP to find the answer and track from the end to the front to figure how to split the array.</p> <p>Once we knew the division, we can use divide and conquer to print the answer.</p>"},{"location":"acm/cf/cf1951/#1957-codeforces-round-940-div-2-and-codecraft-23","title":"1957. Codeforces Round 940 (Div. 2) and CodeCraft-23","text":""},{"location":"acm/cf/cf1951/#c-how-does-the-rook-move","title":"C. How Does the Rook Move?","text":"<p>Solution:</p> <p>Fucking counting problem. Too stupid to solve it. QwQ</p> <p>Let \\(f_n\\) denote the answer when there are n rows and n columns available.</p> <p>Because there must be rooks in the first column and first row, so we can only consider how to choose for first column and first row to avoid repeat.</p> <p>If we choose \\((1, 1)\\), then the answer equates to \\(f_{n - 1}\\).</p> <p>Otherwise, we can choose any position in the first row and first column except \\((1, 1)\\).    And there are \\(2n - 2\\) choices.</p> <p>So \\(\\forall n &gt; 1, f_n = f_{n - 1} + (2n - 2)f_{n - 2}\\).</p> <p>And don't forget \\(f_0 = f_1 = 1\\).</p>"},{"location":"acm/cf/cf1951/#d-a-bit-of-an-inequality","title":"D. A BIT of an Inequality","text":"<p>Solution:</p> <p>Let \\(S_i = a_1 \\oplus a_2 \\oplus ... \\oplus a_i\\), so the problem is \\(S_z \\oplus S_{x - 1} \\oplus a_y &gt; S_z \\oplus S_{x - 1}\\).</p> <p>If the highest bit of \\(a_i\\) is k, then we can know that \\(S_z \\oplus S_{x - 1} &gt;&gt; k\\) must be \\(0\\).</p> <p>So either \\(S_{z} &gt;&gt; k = 1 \\wedge S_{x - 1} &gt;&gt; k = 1\\) or \\(S_{z} &gt;&gt; k = 0 \\wedge S_{x - 1} &gt;&gt; k = 0\\),   and we just need to write down how many 1s in the prefix array \\(S\\) at the bit of k.</p>"},{"location":"acm/cf/cf1961/","title":"1961 ~ 1970","text":""},{"location":"acm/cf/cf1961/#1965-codeforces-round-941-div-1","title":"1965. Codeforces Round 941 (Div. 1)","text":""},{"location":"acm/cf/cf1961/#c-folding-strip","title":"C. Folding Strip","text":"<p>Solution:</p> <p>Good problem.</p> <p>Statement: If two adjacent numbers are equal, then we are supposed to fold it.</p> <p>Proof</p> <p>The final answer must be <code>010101010101...</code> or <code>1010101010...</code></p> <p>Put the beginning of the string at the position \\(0\\), then simulate the folding procession and write down the maximum and minimum position.</p> <p>The answer is <code>maximum - minimum + 1</code>.</p>"},{"location":"acm/cf/cf1961/#1967-codeforces-round-942-div-1","title":"1967. Codeforces Round 942 (Div. 1)","text":""},{"location":"acm/cf/cf1961/#c-fenwick-tree","title":"C. Fenwick Tree","text":"<p>Solution:</p> <p>Once f function can convert \\(\\{a_i\\}\\) into \\(\\{c_i\\}\\).(\\(c_i\\) is the fenwick tree array of \\(a_i\\))</p> <p>For a position u, we should figure out which positions it contributes to.</p> <p>In the fenwick tree, if v is d-th ancestor of u, then \\(b_u\\) can contribute to \\(b_v\\). </p> <p>The number of contribution which u dose to v is \\(\\binom{d + k - 1}{k - 1} \\times b_u\\), cause every option we can go forward any steps (even \\(0\\)). So \\(b_v\\) should minus \\(\\binom{d + k - 1}{k - 1} \\times b_u\\).</p> <p>For every position, \\(b_i\\) minus all the number other positions contribute to before should be the answer.</p>"},{"location":"acm/cf/cf1961/#1968-codeforces-round-943-div-3","title":"1968. Codeforces Round 943 (Div. 3)","text":""},{"location":"acm/cf/cf1961/#e-cells-arrangement","title":"E. Cells Arrangement","text":"<p>Solution:</p> <p>For \\(n \\le 3\\), we can easily find the answer.</p> <p>And for \\(n = 4\\), the answer is:</p> <p></p> <p>for \\(n = 4\\), the answer is:</p> <p></p> <p>So we can generate the following patterns by putting cells at the top left position. </p>"},{"location":"acm/cf/cf1961/#f-equal-xor-segments","title":"F. Equal XOR Segments","text":"<p>Solution:</p> <p>If \\(a_l \\oplus a_{l + 1} \\oplus ... \\oplus a_r = 0\\), then there must be answers.</p> <p>If \\(a_l \\oplus a_{l + 1} \\oplus ... \\oplus a_r = k\\), find a position \\(i\\) satisfying that \\(s_i = s_r\\) and a position \\(j\\) satisfying that \\(s_j = s_{l - 1}\\), and if \\(i &lt; j\\) then there must be answers. (\\(s_i = a_1 \\oplus ... \\oplus a_i\\))</p>"},{"location":"acm/cf/cf1961/#1969-educational-codeforces-round-165-rated-for-div-2","title":"1969. Educational Codeforces Round 165 (Rated for Div. 2)","text":""},{"location":"acm/cf/cf1961/#e-unique-array","title":"E. Unique Array","text":"<p>Solution:</p> <p>Greedy + Segment Tree</p> <p>We use the greedy tragedy, deal with each position from front to the end,  if when we deal with i-th position, the prefix array can't safisfy the condition,  then we should translate the i-th number into one which has never occurred before.</p> <p>How to judge it is illegal? We can use segment tree to maintain the array.  we can know that the right point of the illegal part is i, then we should find the left point.</p> <p>\\(C_j\\) denotes the different kinds of number in the segment whose left point is j and right point is i. If \\(C_j\\) is zero, then the segment is illegal. So we should find the minimum of the \\(C_j\\).  To update, it's an segment modify operation. So we can use segment tree to deal with these two operations.</p>"},{"location":"acm/cf/cf1971/","title":"1971 ~ 1980","text":""},{"location":"acm/cf/cf1971/#1971-codeforces-round-944-div-4","title":"1971. Codeforces Round 944 (Div. 4)","text":""},{"location":"acm/cf/cf1971/#h-1","title":"H. \u00b11","text":"<p>Solution:</p> <p>We can use 2-SAT tech to solve it.</p> <p>If in a column, there are \\(-a, b\\) and \\(c\\).</p> <p>Then we can know that </p> <ol> <li>if \\(a\\) is \\(1\\), \\(b\\) must be \\(1\\), \\(c\\) must be \\(1\\).</li> <li>if \\(b\\) is \\(-1\\), \\(a\\) must be \\(-1\\), \\(c\\) must be \\(1\\).</li> <li>if \\(c\\) is \\(-1\\), \\(b\\) must be \\(1\\), \\(a\\) must be \\(-1\\).</li> </ol> <p>So we can get that: $$ \\begin{align}     a \\to b \\text{  and   } a \\to c \\newline     \\neg b \\to \\neg a \\text{  and   } \\neg b \\to c \\newline     \\neg c \\to b \\text{  and   } \\neg c \\to \\neg a \\newline \\end{align} $$</p> <p>And for one single node we can split it into two nodes, recognized as \\(i\\) and \\(i + n\\).</p> <p>So we can construct a graph demonstrate the logical relationship.  If \\(i + n\\) and \\(i\\) are in the same SCC, then the answer is \"NO\", otherwise is \"YES\".</p>"},{"location":"acm/cf/cf1971/#1980-codeforces-round-950-div-3","title":"1980. Codeforces Round 950 (Div. 3)","text":""},{"location":"acm/cf/cf1971/#g-yasya-and-the-mysterious-tree","title":"G. Yasya and the Mysterious Tree","text":"<p>Solution:</p> <p>For each query, \\(ans = f_{x, y} \\oplus val = f_{x, root} \\oplus f_{root, y} \\oplus val\\)</p> <p>So we should the max \\(f_{x, root}\\), and we can use 01-trie to solve the problem.</p> <p>For the modify operation, cause it changes all the edges, so only the node with odd distances can be changed.</p> <p>We can maintain two 01-trie trees. One for the odd-distances nodes, the other for even-distances nodes.</p>"},{"location":"acm/cf/cf2001/","title":"2001 ~ 2010","text":""},{"location":"acm/cf/cf2001/#1971-codeforces-round-944-div-4","title":"1971. Codeforces Round 944 (Div. 4)","text":""},{"location":"acm/cf/cf2001/#h-1","title":"H. \u00b11","text":"<p>Solution:</p>"},{"location":"acm/cf/cf2011/","title":"2011 ~ 2020","text":""},{"location":"acm/cf/cf2011/#2018-2019-codeforces-round-975-div-1-div-2","title":"2018. / 2019. Codeforces Round 975 (Div. 1 + Div. 2)","text":""},{"location":"acm/cf/cf2011/#a-cards-partition","title":"A. Cards Partition","text":"<p>Solution:</p>"},{"location":"acm/cf/cf2011/#b-speedbreaker","title":"B. Speedbreaker","text":"<p>Solution:</p>"},{"location":"acm/cf/cf2011/#c-tree-pruning","title":"C. Tree Pruning","text":"<p>Solution:</p>"},{"location":"acm/cf/cf2011/#d-max-plus-min-plus-size","title":"D. Max Plus Min Plus Size","text":"<p>Solution:</p>"},{"location":"acm/cf/cf2011/#2020-codeforces-round-976-div-2-and-divide-by-zero-90","title":"2020. Codeforces Round 976 (Div. 2) and Divide By Zero 9.0","text":""},{"location":"acm/cf/cf2011/#d-connect-the-dots","title":"D. Connect the Dots","text":"<p>Solution:</p>"},{"location":"acm/cf/cf2021/","title":"2021 ~ 2030","text":""},{"location":"acm/cf/cf2021/#2021-codeforces-round-977-div-2-based-on-compfest-16-final-round","title":"2021. Codeforces Round 977 (Div. 2, based on COMPFEST 16 - Final Round)","text":""},{"location":"acm/cf/cf2021/#c2-adjust-the-presentation-hard-version","title":"C2. Adjust The Presentation (Hard Version)","text":"<p>Solution:</p>"},{"location":"acm/cf/cf2021/#d-boss-thirsty","title":"D. Boss, Thirsty","text":"<p>Solution:</p>"},{"location":"acm/cf/cf2021/#e2-digital-village-hard-version","title":"E2. Digital Village (Hard Version)","text":"<p>Solution:</p>"},{"location":"acm/cf/cf2021/#e3-digital-village-extreme-version","title":"E3. Digital Village (Extreme Version)","text":"<p>Solution:</p>"},{"location":"acm/hdu/2023/contest01/","title":"Day 1","text":""},{"location":"acm/hdu/2023/contest01/#1001-hide-and-seek-game","title":"1001. Hide-And-Seek Game","text":""},{"location":"acm/hdu/2023/contest01/#description","title":"Description","text":"<p>\u4e24\u4e2a\u4eba\u90fd\u5728\u4e00\u68f5\u6811\u4e0a\uff0c\u6cbf\u7740\u6811\u7684\u8fb9\u8d70\uff0c\u4e00\u6b21\u8d70\u4e00\u6761\u8fb9\uff0c\u4e00\u4e2a\u4eba\u4ece \\(S_a\\) \u51fa\u53d1\uff0c\u524d\u5f80 \\(T_a\\)\uff0c\u5230\u8fbe \\(T_a\\) \u540e\u5c31\u8fd4\u56de\u5411 \\(S_a\\) \u8d70\uff0c\u5982\u6b64\u5f80\u590d\u3002\u53e6\u4e00\u4e2a\u4eba\u5728 \\(S_b\\) \u548c  \\(T_b\\) \u4e4b\u95f4\u8d70\uff0c\u95ee\u6700\u65e9\u5728\u90a3\u4e2a\u70b9\u80fd\u76f8\u9047\uff0c\u82e5\u4e0d\u76f8\u9047\uff0c\u5219\u8f93\u51fa <code>-1</code> \u3002\\(t\\) \u7ec4\u6570\u636e\uff0c\u6bcf\u7ec4\u6570\u636e \\(n\\) \u4e2a\u7ed3\u70b9\uff0c\\(m\\) \u6b21\u8be2\u95ee\u3002</p>"},{"location":"acm/hdu/2023/contest01/#solution","title":"Solution","text":"<p>\u672c\u9898 \\(n\\) \u548c \\(m\\) \u90fd\u8f83\u5c0f\uff08 \\(n, m \\le 300\\)\uff09\uff0c\u6240\u4ee5\u53ef\u4ee5\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u76f8\u9047\u7684\u70b9\u3002\u5224\u65ad\u70b9 \\(i\\) \u662f\u5426\u5728 \\((S_a, T_a)\\) \u8def\u7ebf\u4e0a\u7684\u65b9\u6cd5\u662f\u5224\u65ad \\(dist(i, S_a) + dist(i, T_a) == dist(S_a, T_a)\\)\u3002\u6ce8\u610f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 \\(i\\)\uff0c\u76f8\u9047\u7684\u65f6\u95f4\u8282\u70b9\u53ef\u80fd\u662f \\(2k \\times dist(S_a, T_a) + dist(S_a, i)\\) \u6216 \\(2k \\times dist(S_a, T_a) + 2 \\times dist(S_a, T_a) - dist(i, S_a)\\) \u3002\u53e6\u4e00\u4e2a\u4eba\u7684\u65f6\u95f4\u540c\u7406\uff0c\u6240\u4ee5\u8fd9\u5c31\u76f8\u5f53\u4e8e\u89e3\u4e8c\u5143\u4e00\u6b21\u65b9\u7a0b\u3002\uff08\u4e0d\u4e86\u89e3\u4e8c\u5143\u4e00\u6b21\u65b9\u7a0b\u7ec4\u7684\u53ef\u4ee5\u5148\u505a P5656 \u3010\u6a21\u677f\u3011\u4e8c\u5143\u4e00\u6b21\u4e0d\u5b9a\u65b9\u7a0b (exgcd)\uff09</p> <p>\u6ce8\u610f\u4e00\u4e0b\uff0c\u8fd9\u91cc\u7b97\u4e24\u70b9\u95f4\u8ddd\u79bb\u5229\u7528 LCA \u6765\u6c42\uff0c\u4f46\u4e0d\u80fd\u76f4\u63a5\u7528\u500d\u589e\u53bb\u6c42\uff08\u56e0\u4e3a\u8fd9\u6837\u4f1a\u8d85\u65f6\uff09\uff0c\u8981\u7528 dfs \u5e8f\u6765\u6c42 LCA\uff08\u65f6\u95f4\u590d\u6742\u5ea6\u8981\u4f18\u5316\u5f88\u591a\uff09\u3002 </p> <p>Code</p>"},{"location":"acm/hdu/2023/contest01/#1002-city-upgrading","title":"1002. City Upgrading","text":""},{"location":"acm/hdu/2023/contest01/#description_1","title":"Description","text":"<p>\u4e00\u68f5\u6811\uff0c\u6bcf\u4e2a\u70b9\u90fd\u6709\u6743\u503c\uff0c\u9009\u4e2d\u4e00\u4e2a\u70b9\u7684\u8bdd\uff0c\u8fd9\u4e2a\u70b9\u76f8\u8fde\u7684\u8282\u70b9\u4e5f\u4f1a\u88ab\u9009\u4e2d\uff0c\u8981\u6c42\u82b1\u8d39\u6700\u5c0f\u8ba9\u6574\u68f5\u6811\u5168\u90e8\u70b9\u90fd\u88ab\u9009\u4e2d\u3002</p>"},{"location":"acm/hdu/2023/contest01/#solution_1","title":"Solution","text":"<p>\u6811\u5f62DP\uff0c\u6211\u4eec\u4ee4 \\(f[i][0]\\) \u8868\u793a\u5728 \\(i\\) \u4f4d\u7f6e\u9009\uff0c\\(f[i][1]\\) \u8868\u793a\u5728 \\(i\\) \u7684\u513f\u5b50\u4f4d\u7f6e\u5904\u9009\uff0c\u8ba9 \\(i\\) \u88ab\u513f\u5b50\u8986\u76d6\uff0c \\(f[i][2]\\) \u8868\u793a\u5728 \\(i\\) \u7684\u7236\u4eb2\u4f4d\u7f6e\u5904\u9009\uff0c\u8ba9 \\(i\\) \u88ab\u7236\u4eb2\u8986\u76d6\u3002</p> <p>\u5982\u679c\u9009 \\(i\\) \u4f4d\u7f6e\uff0c\u90a3\u4e48\u4e0d\u96be\u5f97\u51fa \\(f[i][1] = a[i] + \\sum \\min\\{f[son][0], f[son][1], f[son][2]\\}\\) \uff0c\u56e0\u4e3a\u8fd9\u65f6\u5019\u513f\u5b50 \\(son\\) \u600e\u4e48\u9009\u90fd\u53ef\u4ee5\u3002</p> <p>\u5982\u679c\u9009 \\(i\\) \u7236\u4eb2\u4f4d\u7f6e\uff0c\u90a3\u4e48 \\(f[i][2] = \\sum \\min\\{f[son][1], f[son][2]\\}\\)\uff0c\u8fd9\u4e2a\u65f6\u5019\u513f\u5b50 \\(son\\) \u8981\u4e48\u81ea\u5df1\u9009\uff0c\u8981\u4e48\u88ab son \u7684\u513f\u5b50\u8986\u76d6\u3002</p> <p>\u5982\u679c\u9009 \\(i\\) \u513f\u5b50\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u65f6\u5019\u6709\u70b9\u590d\u6742\uff0c\u56e0\u4e3a\u8981\u51b3\u5b9a \\(i\\) \u5e94\u8be5\u88ab\u54ea\u4e2a\u513f\u5b50\u8986\u76d6\uff0c\u5e94\u8be5\u7531\u82b1\u8d39\u6700\u5c0f\u7684\u513f\u5b50\u8986\u76d6\uff0c\u8bbe\u8fd9\u4e2a\u513f\u5b50\u4e3a \\(chosen\\_son\\) \uff0c\u90a3\u4e48\u8fd9\u4e2a\u513f\u5b50\u4e00\u5b9a\u662f\u8981\u9009\u7684\uff0c\u6240\u4ee5\u4ee3\u4ef7\u662f \\(f[chosen\\_son][0] + \\sum_{son \\ne chosen\\_son} \\min\\{f[son][0], f[son][1]\\}\\)\uff0c\u800c\u4e14\u4e00\u5b9a\u6709\u5176\u4ed6\u513f\u5b50 \\(son'\\) \u6ee1\u8db3 \\(f[chosen\\_son][0] + \\sum_{son \\ne chosen\\_son} \\min\\{f[son][0], f[son][1]\\} &lt; f[son'][0] + \\sum_{son \\ne son'} \\min\\{f[son][0], f[son][1]\\}\\)\uff0c\u4e24\u8fb9\u540c\u7c7b\u9879\u62b5\u6d88\u540e\uff0c\u5c31\u662f\u8981\u9009 \\(f[son][0] - \\min\\{f[son][0], f[son][1]\\}\\) \u6700\u5c0f\u7684\u513f\u5b50\u4f5c\u4e3a\u8fd9\u4e2a \\(chosen\\_son\\)\uff0c\u5728\u5411\u4e0b\u641c\u7d22\u65f6\u627e\u5230\u8fd9\u4e2a\u513f\u5b50\uff0c\u5269\u4e0b\u5c31\u597d\u89e3\u51b3\u4e86\u3002</p> <p>Code</p>"},{"location":"acm/hdu/2023/contest01/#1003-mr-liang-play-card-game","title":"1003. Mr. Liang play Card Game","text":""},{"location":"acm/hdu/2023/contest01/#description_2","title":"Description","text":"<p>\u684c\u4e0a\u6709 \\(n\\) \u5f20\u724c\uff0c\u7b2c \\(i\\) \u5f20\u724c\u7684\u7c7b\u578b\u662f \\(a_i\\)\uff0c\u7136\u540e\u53c8\u544a\u8bc9\u4f60\u6bcf\u79cd\u724c\u7684\u4ef7\u503c \\(v_i\\)\uff0c\u6bcf\u5f20\u724c\u521d\u59cb\u7b49\u7ea7\u4e3a \\(1\\) \u7ea7\uff0c\u4f60\u6bcf\u6b21\u53ef\u4ee5\u8fdb\u884c\u4e24\u79cd\u64cd\u4f5c\uff0c\u7b2c\u4e00\u79cd\u64cd\u4f5c\u662f\u5c06\u67d0\u5f20\u724c\u6253\u51fa\u53bb\uff0c\u82e5\u7b49\u7ea7\u4e3a \\(k\\)\uff0c\u5219\u83b7\u5f97 \\(p^{k - 1} \\times v[a[i]]\\) \u7684\u4ef7\u503c\uff0c\u7b2c\u4e8c\u79cd\u64cd\u4f5c\u662f\u5c06\u76f8\u90bb\u7684\u4e24\u5f20\u540c\u7c7b\u578b\u540c\u7b49\u7ea7\u7684\u724c\u5408\u5e76\uff0c\u7b49\u7ea7\u4e3a\u5408\u5e76\u524d\u7b49\u7ea7 \\(+1\\)\u3002\u95ee\u5168\u90e8\u51fa\u5b8c\u724c\u4e4b\u540e\u7684\u6700\u5927\u4ef7\u503c\u3002 </p>"},{"location":"acm/hdu/2023/contest01/#solution_2","title":"Solution","text":"<p>\u4e00\u9053\u8f83\u4e3a\u57fa\u7840\u7684\u533a\u95f4 DP\uff0c\u60f3\u5230 \\(f\\) \u6570\u7ec4\u7684\u72b6\u6001\u5c31\u6bd4\u8f83\u597d\u8f6c\u79fb\u4e86\u3002</p> <p>\\(f[l][r][type][level]\\) \u8868\u793a\u5c06 \\([l, r]\\) \u533a\u95f4\u5168\u90e8\u5408\u5e76\u5b8c\uff0c\u53ea\u5269\u4e0b\u4e00\u5f20 \\(type\\) \u7c7b\u578b\u7b49\u7ea7 \\(level\\) \u7684\u724c\u6240\u83b7\u5f97\u7684\u6700\u5927\u4ef7\u503c\u3002</p> <p>\\(g[l][r]\\) \u8868\u793a\u5c06 \\([l, r]\\) \u533a\u95f4\u5185\u724c\u5168\u90e8\u6253\u51fa\u53bb\u6240\u83b7\u5f97\u7684\u6700\u5927\u4ef7\u503c\u3002</p> <p>\u6bcf\u6b21\u679a\u4e3e \\(l, r, type, level\\)\uff0c\u4e0d\u96be\u63a8\u51fa\uff1a $$ \\begin{gather} g[l][r] = \\max {g[l][r], g[l][mid] + g[mid + 1][r]}; \\ f[l][r][t][1] =\\max {f[l][r][t][1], f[l][mid][t][1] + g[mid + 1][r], f[mid + 1][r][t][1] + g[l][mid]}; \\ f[l][r][t][lev] = \\max {f[l][r][t][lev], f[l][mid][t][lev - 1] + f[mid + 1][r][t][lev - 1]} (len &gt; 1) \\end{gather} $$ \u66f4\u65b0\u5b8c \\(f\\) \u6570\u7ec4\u540e\u518d\u66f4\u65b0 \\(g\\) \u6570\u7ec4\u3002 $$ g[l][r] = \\max {g[l][r], f[l][r][t][lev] + v[t] \\times c[lev] }; $$ Code</p>"},{"location":"acm/hdu/2023/contest01/#1009-assertion","title":"1009. Assertion","text":""},{"location":"acm/hdu/2023/contest01/#description_3","title":"Description","text":"<p>\u628a \\(m\\) \u4e2a\u7269\u54c1\u653e\u8fdb \\(n\\) \u4e2a\u67dc\u5b50\uff0c\u95ee\u662f\u5426\u81f3\u5c11\u6709\u4e00\u4e2a\u91cc\u9762\u7269\u54c1\u6570\u5927\u4e8e\u7b49\u4e8e \\(d\\)\u3002</p>"},{"location":"acm/hdu/2023/contest01/#solution_3","title":"Solution","text":"<p>\u7b7e\u5230\u9898\uff0c\u5224\u65ad \\(d\\) \u548c \\(\\left \\lfloor \\dfrac{m - 1}{n} \\right \\rfloor + 1\\) \u5373\u53ef\u3002</p> <p>Code</p>"},{"location":"acm/hdu/2023/contest02/","title":"Day 2","text":""},{"location":"acm/hdu/2023/contest02/#1001-alice-game","title":"1001. Alice Game","text":""},{"location":"acm/hdu/2023/contest02/#1002-binary-number","title":"1002. Binary Number","text":""},{"location":"acm/hdu/2023/contest02/#description","title":"Description","text":"<p>\u5bf9\u4e8c\u8fdb\u5236\u6570\u505a \\(k\\) \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u4efb\u53d6\u4e00\u6bb5 \\([l,r]\\) \u505a \\(01\\) \u7ffb\u6298\uff0c\u95ee \\(k\\) \u6b21\u4e4b\u540e\u83b7\u5f97\u7684\u6700\u5927\u6570\u3002</p>"},{"location":"acm/hdu/2023/contest02/#solution","title":"Solution","text":"<p>\u603b\u4f53\u601d\u8def\u662f\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\uff0c\u628a\u6700\u9ad8\u4f4d\u8fde\u7eed\u7684 \\(0\\) \u53d8 \\(1\\)\uff0c\u6b21\u6570\u591a\u7684\u4e5f\u4e0d\u7528\u62c5\u5fc3\uff0c\u6b21\u6570\u5982\u679c\u591a\u4e8e\u8fde\u7eed \\(0\\) \u7684\u6bb5\u6570\u5219\u5168\u4e3a \\(1\\)\u3002\u8fd9\u91cc\u6709\u4e24\u4e2a\u7279\u5224\uff0c\u4e00\u4e2a\u662f\u53ea\u7ed9\u5b9a\u4e00\u4f4d\u4e8c\u8fdb\u5236\uff0c\u90a3\u4e48\u4e00\u5b9a\u662f \\(1\\)\uff0c\u7b54\u6848\u4e0e \\(k\\) \u7684\u5947\u5076\u76f8\u5173\u3002\u8fd8\u6709\u4e00\u79cd\u60c5\u51b5\u662f\u7ed9\u5b9a\u5168\u662f \\(1\\)\uff0c\\(k = 1\\)\uff0c\u8fd9\u65f6\u5019\u662f \\(111\\dots 10\\) \u3002</p> <p>Code</p>"},{"location":"acm/hdu/2023/contest02/#1007-foreverlasting-and-fried-chicken","title":"1007. foreverlasting and fried-chicken","text":""},{"location":"acm/hdu/2023/contest02/#description_1","title":"Description","text":"<p>\u7ed9\u5b9a\u4e00\u5f20\u56fe\uff0c\u627e\u51fa\u56fe\u4e2d\u6709\u591a\u5c11\u4e2a\u5b50\u56fe\uff0c\u6784\u9020\u5982\u4e0b\u3002</p> <p></p>"},{"location":"acm/hdu/2023/contest02/#solution_1","title":"Solution","text":"<p>\u5173\u952e\u662f\u627e\u5230\u4e2d\u95f4\u7684\u4e24\u4e2a\u84dd\u8272\u548c\u9ec4\u8272\u7684\u70b9\u3002</p> <p></p> <p>\u628a\u70b9\u4e4b\u95f4\u7684\u8fde\u63a5\u5173\u7cfb\u7528 <code>bitset</code> \u5b58\u50a8\u597d\uff0c\u679a\u4e3e\u84dd\u70b9\u548c\u9ec4\u70b9\u3002\u4e2d\u95f4\u5171\u6709\u7684\u56db\u4e2a\u70b9\u7528 <code>&amp;</code> \u64cd\u4f5c\u76f4\u63a5\u6c42\u51fa\uff0c\u5269\u4e0b\u7684\u70b9\u7684\u4e2a\u6570\u4e5f\u597d\u6c42\u51fa\uff0c\u6700\u540e\u7b54\u6848\u662f \\(\\sum C_n^2 \\times C_m^4\\)\u3002</p> <p>Code</p>"},{"location":"acm/hdu/2023/contest02/#1009-string-problem","title":"1009. String Problem","text":""},{"location":"acm/hdu/2023/contest02/#description_2","title":"Description","text":"<p>\u5c06\u5b57\u7b26\u4e32\u62c6\u6210\u5c3d\u53ef\u80fd\u5c11\u7684\u6bb5\uff0c\u4f7f\u5f97\u6bcf\u6bb5\u53ea\u5305\u542b\u4e00\u79cd\u5b57\u6bcd\u3002\u6bcf\u6bb5\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a\u957f\u5ea6\u51cf\u4e00\u3002</p>"},{"location":"acm/hdu/2023/contest02/#solution_2","title":"Solution","text":"<p>\u7b7e\u5230\u9898\u3002</p> <p>Code</p>"},{"location":"acm/hdu/2023/hdu/","title":"\u7b97\u6cd5\u7ade\u8d5b | \u676d\u7535\u591a\u6821\u8bad\u7ec3","text":"<p>\u6d45\u8bb0\u5f55\u4e00\u4e0b\u6691\u5047 10 \u6b21 \u5750\u7262 \u6bd4\u8d5b\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u8bad\u7ec3\u5408\u96c6"]},{"location":"acm/hdu/2023/hdu/#day-6","title":"Day 6","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u8bad\u7ec3\u5408\u96c6"]},{"location":"acm/hdu/2023/hdu/#1001","title":"1001.","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u8bad\u7ec3\u5408\u96c6"]},{"location":"acm/hdu/2023/hdu/#description","title":"Description","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u8bad\u7ec3\u5408\u96c6"]},{"location":"acm/hdu/2023/hdu/#solution","title":"Solution","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u8bad\u7ec3\u5408\u96c6"]},{"location":"acm/hdu/2023/hdu/#1006","title":"1006.","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u8bad\u7ec3\u5408\u96c6"]},{"location":"acm/hdu/2023/hdu/#description_1","title":"Description","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u8bad\u7ec3\u5408\u96c6"]},{"location":"acm/hdu/2023/hdu/#solution_1","title":"Solution","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u8bad\u7ec3\u5408\u96c6"]},{"location":"acm/hdu/2023/hdu/#day-7","title":"Day 7","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u8bad\u7ec3\u5408\u96c6"]},{"location":"acm/hdu/2023/hdu/#1002","title":"1002.","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u8bad\u7ec3\u5408\u96c6"]},{"location":"acm/hdu/2023/hdu/#description_2","title":"Description","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u8bad\u7ec3\u5408\u96c6"]},{"location":"acm/hdu/2023/hdu/#solution_2","title":"Solution","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u8bad\u7ec3\u5408\u96c6"]},{"location":"acm/hdu/2023/hdu/#1011","title":"1011.","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u8bad\u7ec3\u5408\u96c6"]},{"location":"acm/hdu/2023/hdu/#description_3","title":"Description","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u8bad\u7ec3\u5408\u96c6"]},{"location":"acm/hdu/2023/hdu/#solution_3","title":"Solution","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u8bad\u7ec3\u5408\u96c6"]},{"location":"acm/hdu/2023/hdu/#1013","title":"1013.","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u8bad\u7ec3\u5408\u96c6"]},{"location":"acm/hdu/2023/hdu/#description_4","title":"Description","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u8bad\u7ec3\u5408\u96c6"]},{"location":"acm/hdu/2023/hdu/#solution_4","title":"Solution","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u8bad\u7ec3\u5408\u96c6"]},{"location":"acm/hdu/2023/hdu/#day-9","title":"Day 9","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u8bad\u7ec3\u5408\u96c6"]},{"location":"acm/hdu/2023/hdu/#1002-inference","title":"1002. Inference","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u8bad\u7ec3\u5408\u96c6"]},{"location":"acm/hdu/2023/hdu/#description_5","title":"Description","text":"<p>\u6709 \\(m\\) \u4e2a\u7279\u5f81\uff0c\u8fd9\u4e9b\u7279\u5f81\u4e4b\u95f4\u5b58\u5728 \\(k\\) \u4e2a\u4f9d\u8d56\u5173\u7cfb\uff0c\u8fd9\u4e9b\u4f9d\u8d56\u5173\u7cfb\u7ec4\u6210\u4e86\u4e00\u5f20\u6709\u5411\u65e0\u73af\u56fe\u3002\u7ed9\u5b9a\u51fa \\(n\\) \u7ec4\u6570\u636e\u4ee5\u53ca\u4e00\u4e2a\u63a8\u65ad\u516c\u5f0f\uff0c\u7136\u540e\u6839\u636e\u8fd9 \\(n\\) \u7ec4\u6570\u636e\u63a8\u65ad\u4e00\u7ec4\u65b0\u7684\u6570\u636e\u91cc\u7b2c \\(m\\) \u4e2a\u7279\u5f81\u503c\u6700\u6709\u53ef\u80fd\u662f\u591a\u5c11\uff1f\uff08\\(0\\) / \\(1\\) / \\(2\\)\uff09</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u8bad\u7ec3\u5408\u96c6"]},{"location":"acm/hdu/2023/hdu/#solution_5","title":"Solution","text":"<p>\u672c\u9898\u9898\u610f\u8f83\u4e3a\u590d\u6742\uff0c\u4f46\u5b9e\u9645\u6bd4\u8f83\u7b80\u5355\u3002</p> <p>\u7a0d\u5fae\u8bb2\u89e3\u4e0b\u9898\u610f\u3002</p> <p>\\(\\pi(x_i)\\) \u8868\u793a\u7684\u662f\u6307\u5411 \\(x_i\\) \u7684\u70b9\uff0c\u5373 \\(x_i\\) \u6240\u4f9d\u8d56\u7684\u7279\u5f81\u3002</p> <p>\u5728\u516c\u5f0f $$ P(x_m | x_1, \\dots, x_{m - 1}) = \\prod_{i = 1}^m P(x_i|\\pi(x_i)) $$ \u4e2d\uff0c\u5bf9\u4e8e \\(P(x_i | \\pi(x_i)) = \\dfrac{P(\\pi(x_i), x_i)}{P(\\pi(x_i))}\\)\uff0c\u8fd9\u4e2a\u516c\u5f0f\u5176\u5b9e\u5c31\u662f\u6761\u4ef6\u6982\u7387\u516c\u5f0f\u3002\u6240\u6c42\u7684\u662f\u5728 \\(n\\) \u7ec4\u6570\u636e\u4e2d\u6ee1\u8db3 \\(\\pi(x_i)\\) \u7684\u884c\u4e2d\u540c\u65f6\u6ee1\u8db3 \\(x_i\\) \u7684\u6982\u7387\u3002</p> <p>\u6bd4\u5982 \\(P(x_1 = 1)\\) \u5c31\u662f\u6c42\u8fd9 \\(n\\) \u7ec4\u4e2d \\(x_1 = 1\\) \u7684\u6982\u7387\uff0c\\(P(x_2 = 1 | x_1 = 0)\\) \u5219\u662f\u8868\u793a\u8fd9 \\(n\\) \u7ec4\u4e2d\u6ee1\u8db3 \\(x_1 = 0\\) \u7684\u884c\u91cc\uff0c\\(x_2 = 1\\) \u7684\u6982\u7387\u3002</p> <p>\u9898\u76ee\u6700\u540e\u6c42\u7684\u662f \\(x_m\\) \u6700\u6709\u53ef\u80fd\u7b49\u4e8e \\(1 / 2 / 0\\) \u4e2d\u7684\u54ea\u4e00\u4e2a\u6570\uff0c\u6211\u4eec\u76f4\u63a5\u628a\u516c\u5f0f\u5957\u8fdb\u53bb\u6bd4\u8f83\u3002\u9898\u76ee\u6ee1\u8db3\u4e00\u5b9a\u4f1a\u6709\u4e00\u4e2a\u6982\u7387\u6bd4\u53e6\u5916\u4e24\u4e2a\u5927\uff0c\u540c\u65f6\uff0c\u6211\u4eec\u89c2\u5bdf\u53d1\u73b0\uff0c\u4ee3\u5165\u516c\u5f0f\u65f6\uff0c\u8fd9\u4e09\u4e2a\u5f0f\u5b50\u524d \\(m - 1\\) \u9879\u90fd\u662f\u4e00\u6837\u7684\uff08\u56e0\u4e3a \\(x_m\\) \u7684\u53d6\u503c\u4e0d\u5f71\u54cd\u524d\u9762\u7684 \\(P(x_i | \\pi(x_i))\\)\uff09\uff0c\u6240\u4ee5\u53ea\u6bd4\u8f83\u7b2c \\(m\\) \u9879\uff0c\u6240\u4ee5\u9898\u76ee\u53d8\u6210\u4e86\uff0c\u6c42\u6ee1\u8db3 \\(\\pi(x_i)\\) \u7684\u884c\u91cc\uff0c\\(x_m\\) \u5728 \\(0 / 1 / 2\\) \u4e2d\u54ea\u4e2a\u6570\u6b21\u6570\u51fa\u73b0\u7684\u6700\u591a\u3002 \u7136\u540e\u9898\u76ee\u53c8\u8bf4\u4e86 \\(\\pi(x) \\le 5\\)\uff0c\u6545\u7ebf\u6027\u626b\u4e00\u904d\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n)\\)\u3002</p> <p>Code</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u8bad\u7ec3\u5408\u96c6"]},{"location":"acm/template/ds/datastructure/","title":"\u6570\u636e\u7ed3\u6784","text":""},{"location":"acm/template/ds/datastructure/#st","title":"ST \u8868","text":"<ul> <li>\u4e8c\u7ef4</li> </ul> <pre><code>int f[maxn][maxn][10][10];\ninline int highbit(int x) { return 31 - __builtin_clz(x); }\ninline int calc(int x, int y, int xx, int yy, int p, int q) {\n    return max(\n        max(f[x][y][p][q], f[xx - (1 &lt;&lt; p) + 1][yy - (1 &lt;&lt; q) + 1][p][q]),\n        max(f[xx - (1 &lt;&lt; p) + 1][y][p][q], f[x][yy - (1 &lt;&lt; q) + 1][p][q])\n    );\n}\nvoid init() {\n    FOR (x, 0, highbit(n) + 1)\n    FOR (y, 0, highbit(m) + 1)\n        FOR (i, 0, n - (1 &lt;&lt; x) + 1)\n        FOR (j, 0, m - (1 &lt;&lt; y) + 1) {\n            if (!x &amp;&amp; !y) { f[i][j][x][y] = a[i][j]; continue; }\n            f[i][j][x][y] = calc(\n                i, j,\n                i + (1 &lt;&lt; x) - 1, j + (1 &lt;&lt; y) - 1,\n                max(x - 1, 0), max(y - 1, 0)\n            );\n        }\n}\ninline int get_max(int x, int y, int xx, int yy) {\n    return calc(x, y, xx, yy, highbit(xx - x + 1), highbit(yy - y + 1));\n}\n</code></pre> <ul> <li>\u4e00\u7ef4</li> </ul> <pre><code>struct RMQ {\n    int f[22][M];\n    inline int highbit(int x) { return 31 - __builtin_clz(x); }\n    void init(int* v, int n) {\n        FOR (i, 0, n) f[0][i] = v[i];\n        FOR (x, 1, highbit(n) + 1)\n            FOR (i, 0, n - (1 &lt;&lt; x) + 1)\n                f[x][i] = min(f[x - 1][i], f[x - 1][i + (1 &lt;&lt; (x - 1))]);\n    }\n    int get_min(int l, int r) {\n        assert(l &lt;= r);\n        int t = highbit(r - l + 1);\n        return min(f[t][l], f[t][r - (1 &lt;&lt; t) + 1]);\n    }\n} rmq;\n</code></pre>"},{"location":"acm/template/ds/datastructure/#segmenttree","title":"SegmentTree","text":"<ul> <li>no lazy tag, SegmentTree + biosection method </li> </ul> <pre><code>const int INF = 1e9;\nstruct Info {\n    i64 sum = 0; int lmx = -INF, rmx = -INF, ans = -INF;\n};\n\nInfo operator+(const Info &amp;a, const Info &amp;b){\n    Info ret;\n    ret.sum = a.sum + b.sum;\n    ret.lmx = std::max(1LL * a.lmx, a.sum + b.lmx);\n    ret.rmx = std::max(1LL * b.rmx, b.sum + a.rmx);\n    ret.ans = std::max({a.ans, b.ans, a.rmx + b.lmx});\n    return ret;\n}\n\ntemplate&lt;class Info&gt;\nstruct SegmentTree{\n    int n;\n    std::vector&lt;Info&gt; info;\n\n    SegmentTree() {}\n\n    SegmentTree(int n, Info _init = Info()){\n        init(std::vector&lt;Info&gt;(n, _init));\n    }\n\n    SegmentTree(const std::vector&lt;Info&gt; &amp;_init){\n        init(_init);\n    }\n\n    void init(const std::vector&lt;Info&gt; &amp;_init){\n        n = (int)_init.size();\n        info.assign((n &lt;&lt; 2) + 1, Info());\n        std::function&lt;void(int, int, int)&gt; build = [&amp;](int p, int l, int r){\n            if (l == r){\n                info[p] = _init[l - 1];\n                return;\n            }\n            int m = (l + r) / 2;\n            build(2 * p, l, m);\n            build(2 * p + 1, m + 1, r);\n            pull(p);\n        };\n        build(1, 1, n);\n    }\n\n    void pull(int p){\n        info[p] = info[2 * p] + info[2 * p + 1];\n    }\n\n    void modify(int p, int l, int r, int x, const Info &amp;v){\n        if (l == r){\n            info[p] = v;\n            return;\n        }\n        int m = (l + r) / 2;\n        if (x &lt;= m){\n            modify(2 * p, l, m, x, v);\n        } \n        else{\n            modify(2 * p + 1, m + 1, r, x, v);\n        }\n        pull(p);\n    }\n\n    void modify(int p, const Info &amp;v){\n        modify(1, 1, n, p, v);\n    }\n\n    Info query(int p, int l, int r, int x, int y){\n        if (l &gt; y || r &lt; x){\n            return Info();\n        }\n        if (l &gt;= x &amp;&amp; r &lt;= y){\n            return info[p];\n        }\n        int m = (l + r) / 2;\n        return query(2 * p, l, m, x, y) + query(2 * p + 1, m + 1, r, x, y);\n    }\n\n    Info query(int l, int r){\n        return query(1, 1, n, l, r);\n    }\n\n    int find_first(int p, int l, int r, int L, int R, const std::function&lt;bool(const Info&amp;)&gt; &amp;f, Info &amp;pre){\n        if (l &gt; R || r &lt; L){\n            return r + 1;\n        }\n        if (l &gt;= L &amp;&amp; r &lt;= R){\n            if (!f(pre + info[p])){\n                pre = pre + info[p];\n                return r + 1;\n            }\n            if (l == r) return r;\n            int m = (l + r) / 2;\n            int res;\n            if (f(pre + info[2 * p])){\n                res = find_first(2 * p, l, m, L, R, f, pre);\n            }\n            else{\n                pre = pre + info[2 * p];\n                res = find_first(2 * p + 1, m + 1, r, L, R, f, pre);\n            }\n            return res;\n        }\n        int m = (l + r) / 2;\n        int res = m + 1;\n        if (L &lt;= m){\n            res = find_first(2 * p, l, m, L, R, f, pre);\n        }\n        if (R &gt; m &amp;&amp; res == m + 1){\n            res = find_first(2 * p + 1, m + 1, r, L, R, f, pre);\n        }\n        return res;\n    }\n\n    int find_first(int l, int r, const std::function&lt;bool(const Info&amp;)&gt; &amp;f){\n        Info pre = Info();\n        return find_first(1, 1, n, l, r, f, pre);\n    }\n\n    int find_last(int p, int l, int r, int L, int R, const std::function&lt;bool(const Info&amp;)&gt; &amp;f, Info &amp;suf){\n        if (l &gt; R || r &lt; L){\n            return l - 1;\n        }\n        if (l &gt;= L &amp;&amp; r &lt;= R){\n            if (!f(info[p] + suf)){\n                suf = info[p] + suf;\n                return l - 1;\n            }\n            if (l == r) return r;\n            int m = (l + r) / 2;\n            int res;\n            if (f(info[2 * p + 1] + suf)){\n                res = find_last(2 * p + 1, m + 1, r, L, R, f, suf);\n            }\n            else{\n                suf = info[2 * p + 1] + suf;\n                res = find_last(2 * p, l, m, L, R, f, suf);\n            }\n            return res;\n        }\n        int m = (l + r) / 2;\n        int res = m;\n        if (R &gt; m){\n            res = find_last(2 * p + 1, m + 1, r, L, R, f, suf);\n        }\n        if (L &lt;= m &amp;&amp; res == m){\n            res = find_last(2 * p, l, m, L, R, f, suf);\n        }\n        return res;        \n    }\n\n    int find_last(int l, int r, const std::function&lt;bool(const Info&amp;)&gt; &amp;f){\n        Info suf = Info();\n        return find_last(1, 1, n, l, r, f, suf);\n    }\n};\n</code></pre> <ul> <li>\u666e\u9002</li> </ul> <pre><code>namespace sg {\n    struct Q {\n        LL setv;\n        explicit Q(LL setv = -1): setv(setv) {}\n        void operator += (const Q&amp; q) { if (q.setv != -1) setv = q.setv; }\n    };\n    struct P {\n        LL min;\n        explicit P(LL min = INF): min(min) {}\n        void up(Q&amp; q) { if (q.setv != -1) min = q.setv; }\n    };\n    template&lt;typename T&gt;\n    P operator &amp; (T&amp;&amp; a, T&amp;&amp; b) {\n        return P(min(a.min, b.min));\n    }\n    P p[maxn &lt;&lt; 2];\n    Q q[maxn &lt;&lt; 2];\n#define lson o * 2, l, (l + r) / 2\n#define rson o * 2 + 1, (l + r) / 2 + 1, r\n    void up(int o, int l, int r) {\n        if (l == r) p[o] = P();\n        else p[o] = p[o * 2] &amp; p[o * 2 + 1];\n        p[o].up(q[o]);\n    }\n    void down(int o, int l, int r) {\n        q[o * 2] += q[o]; q[o * 2 + 1] += q[o];\n        q[o] = Q();\n        up(lson); up(rson);\n    }\n    template&lt;typename T&gt;\n    void build(T&amp;&amp; f, int o = 1, int l = 1, int r = n) {\n        if (l == r) q[o] = f(l);\n        else { build(f, lson); build(f, rson); q[o] = Q(); }\n        up(o, l, r);\n    }\n    P query(int ql, int qr, int o = 1, int l = 1, int r = n) {\n        if (ql &gt; r || l &gt; qr) return P();\n        if (ql &lt;= l &amp;&amp; r &lt;= qr) return p[o];\n        down(o, l, r);\n        return query(ql, qr, lson) &amp; query(ql, qr, rson);\n    }\n    void update(int ql, int qr, const Q&amp; v, int o = 1, int l = 1, int r = n) {\n        if (ql &gt; r || l &gt; qr) return;\n        if (ql &lt;= l &amp;&amp; r &lt;= qr) q[o] += v;\n        else {\n            down(o, l, r);\n            update(ql, qr, v, lson); update(ql, qr, v, rson);\n        }\n        up(o, l, r);\n    }\n}\n</code></pre> <ul> <li>SET + ADD</li> </ul> <pre><code>struct IntervalTree {\n#define ls o * 2, l, m\n#define rs o * 2 + 1, m + 1, r\n    static const LL M = maxn * 4, RS = 1E18 - 1;\n    LL addv[M], setv[M], minv[M], maxv[M], sumv[M];\n    void init() {\n        memset(addv, 0, sizeof addv);\n        fill(setv, setv + M, RS);\n        memset(minv, 0, sizeof minv);\n        memset(maxv, 0, sizeof maxv);\n        memset(sumv, 0, sizeof sumv);\n    }\n    void maintain(LL o, LL l, LL r) {\n        if (l &lt; r) {\n            LL lc = o * 2, rc = o * 2 + 1;\n            sumv[o] = sumv[lc] + sumv[rc];\n            minv[o] = min(minv[lc], minv[rc]);\n            maxv[o] = max(maxv[lc], maxv[rc]);\n        } else sumv[o] = minv[o] = maxv[o] = 0;\n        if (setv[o] != RS) { minv[o] = maxv[o] = setv[o]; sumv[o] = setv[o] * (r - l + 1); }\n        if (addv[o]) { minv[o] += addv[o]; maxv[o] += addv[o]; sumv[o] += addv[o] * (r - l + 1); }\n    }\n    void build(LL o, LL l, LL r) {\n        if (l == r) addv[o] = a[l];\n        else {\n            LL m = (l + r) / 2;\n            build(ls); build(rs);\n        }\n        maintain(o, l, r);\n    }\n    void pushdown(LL o) {\n        LL lc = o * 2, rc = o * 2 + 1;\n        if (setv[o] != RS) {\n            setv[lc] = setv[rc] = setv[o];\n            addv[lc] = addv[rc] = 0;\n            setv[o] = RS;\n        }\n        if (addv[o]) {\n            addv[lc] += addv[o]; addv[rc] += addv[o];\n            addv[o] = 0;\n        }\n    }\n    void update(LL p, LL q, LL o, LL l, LL r, LL v, LL op) {\n        if (p &lt;= r &amp;&amp; l &lt;= q)\n        if (p &lt;= l &amp;&amp; r &lt;= q) {\n            if (op == 2) { setv[o] = v; addv[o] = 0; }\n            else addv[o] += v;\n        } else {\n            pushdown(o);\n            LL m = (l + r) / 2;\n            update(p, q, ls, v, op); update(p, q, rs, v, op);\n        }\n        maintain(o, l, r);\n    }\n    void query(LL p, LL q, LL o, LL l, LL r, LL add, LL&amp; ssum, LL&amp; smin, LL&amp; smax) {\n        if (p &gt; r || l &gt; q) return;\n        if (setv[o] != RS) {\n            LL v = setv[o] + add + addv[o];\n            ssum += v * (min(r, q) - max(l, p) + 1);\n            smin = min(smin, v);\n            smax = max(smax, v);\n        } else if (p &lt;= l &amp;&amp; r &lt;= q) {\n            ssum += sumv[o] + add * (r - l + 1);\n            smin = min(smin, minv[o] + add);\n            smax = max(smax, maxv[o] + add);\n        } else {\n            LL m = (l + r) / 2;\n            query(p, q, ls, add + addv[o], ssum, smin, smax);\n            query(p, q, rs, add + addv[o], ssum, smin, smax);\n        }\n    }\n} IT;\n</code></pre>"},{"location":"acm/template/ds/datastructure/#_2","title":"\u5747\u644a\u590d\u6742\u5ea6\u7ebf\u6bb5\u6811","text":"<ul> <li>\u533a\u95f4\u53d6 min\uff0c\u533a\u95f4\u6c42\u548c\u3002</li> </ul> <pre><code>namespace R {\n#define lson o * 2, l, (l + r) / 2\n#define rson o * 2 + 1, (l + r) / 2 + 1, r\n    int m1[N], m2[N], cm1[N];\n    LL sum[N];\n    void up(int o) {\n        int lc = o * 2, rc = lc + 1;\n        m1[o] = max(m1[lc], m1[rc]);\n        sum[o] = sum[lc] + sum[rc];\n        if (m1[lc] == m1[rc]) {\n            cm1[o] = cm1[lc] + cm1[rc];\n            m2[o] = max(m2[lc], m2[rc]);\n        } else {\n            cm1[o] = m1[lc] &gt; m1[rc] ? cm1[lc] : cm1[rc];\n            m2[o] = max(min(m1[lc], m1[rc]), max(m2[lc], m2[rc]));\n        }\n    }\n    void mod(int o, int x) {\n        if (x &gt;= m1[o]) return;\n        assert(x &gt; m2[o]);\n        sum[o] -= 1LL * (m1[o] - x) * cm1[o];\n        m1[o] = x;\n    }\n    void down(int o) {\n        int lc = o * 2, rc = lc + 1;\n        mod(lc, m1[o]); mod(rc, m1[o]);\n    }\n    void build(int o, int l, int r) {\n        if (l == r) { int t; read(t); sum[o] = m1[o] = t; m2[o] = -INF; cm1[o] = 1; }\n        else { build(lson); build(rson); up(o); }\n    }\n    void update(int ql, int qr, int x, int o, int l, int r) {\n        if (r &lt; ql || qr &lt; l || m1[o] &lt;= x) return;\n        if (ql &lt;= l &amp;&amp; r &lt;= qr &amp;&amp; m2[o] &lt; x) { mod(o, x); return; }\n        down(o);\n        update(ql, qr, x, lson); update(ql, qr, x, rson);\n        up(o);\n    }\n    int qmax(int ql, int qr, int o, int l, int r) {\n        if (r &lt; ql || qr &lt; l) return -INF;\n        if (ql &lt;= l &amp;&amp; r &lt;= qr) return m1[o];\n        down(o);\n        return max(qmax(ql, qr, lson), qmax(ql, qr, rson));\n    }\n    LL qsum(int ql, int qr, int o, int l, int r) {\n        if (r &lt; ql || qr &lt; l) return 0;\n        if (ql &lt;= l &amp;&amp; r &lt;= qr) return sum[o];\n        down(o);\n        return qsum(ql, qr, lson) + qsum(ql, qr, rson);\n    }\n}\n</code></pre>"},{"location":"acm/template/ds/datastructure/#_3","title":"\u6301\u4e45\u5316\u7ebf\u6bb5\u6811","text":"<ul> <li>ADD</li> </ul> <pre><code>namespace tree {\n#define mid ((l + r) &gt;&gt; 1)\n#define lson ql, qr, l, mid\n#define rson ql, qr, mid + 1, r\n    struct P {\n        LL add, sum;\n        int ls, rs;\n    } tr[maxn * 45 * 2];\n    int sz = 1;\n    int N(LL add, int l, int r, int ls, int rs) {\n        tr[sz] = {add, tr[ls].sum + tr[rs].sum + add * (len[r] - len[l - 1]), ls, rs};\n        return sz++;\n    }\n    int update(int o, int ql, int qr, int l, int r, LL add) {\n        if (ql &gt; r || l &gt; qr) return o;\n        const P&amp; t = tr[o];\n        if (ql &lt;= l &amp;&amp; r &lt;= qr) return N(add + t.add, l, r, t.ls, t.rs);\n        return N(t.add, l, r, update(t.ls, lson, add), update(t.rs, rson, add));\n    }\n    LL query(int o, int ql, int qr, int l, int r, LL add = 0) {\n        if (ql &gt; r || l &gt; qr) return 0;\n        const P&amp; t = tr[o];\n        if (ql &lt;= l &amp;&amp; r &lt;= qr) return add * (len[r] - len[l - 1]) + t.sum;\n        return query(t.ls, lson, add + t.add) + query(t.rs, rson, add + t.add);\n    }\n}\n</code></pre>"},{"location":"acm/template/ds/datastructure/#k-d-tree","title":"K-D Tree","text":"<p>\u6700\u4f18\u5316\u95ee\u9898\u4e00\u5b9a\u8981\u7528\u5168\u5c40\u53d8\u91cf\u5927\u529b\u526a\u679d\uff0c\u800c\u4e14\u5de6\u53f3\u513f\u5b50\u5148\u9012\u5f52\u6f5c\u529b\u5927\u7684</p> <ul> <li>\u7ef4\u62a4\u4fe1\u606f</li> <li>\u5e26\u91cd\u6784\uff08\u9002\u5408\u5728\u7ebf\uff09</li> <li>\u63d2\u5165\u65f6\u5de6\u53f3\u513f\u5b50\u8981\u6807\u8bb0\u4e3a <code>null</code>\u3002</li> </ul> <pre><code>namespace kd {\n    const int K = 2, inf = 1E9, M = N;\n    const double lim = 0.7;\n    struct P {\n        int d[K], l[K], r[K], sz, val;\n        LL sum;\n        P *ls, *rs;\n        P* up() {\n            sz = ls-&gt;sz + rs-&gt;sz + 1;\n            sum = ls-&gt;sum + rs-&gt;sum + val;\n            FOR (i, 0, K) {\n                l[i] = min(d[i], min(ls-&gt;l[i], rs-&gt;l[i]));\n                r[i] = max(d[i], max(ls-&gt;r[i], rs-&gt;r[i]));\n            }\n            return this;\n        }\n    } pool[M], *null = new P, *pit = pool;\n    static P *tmp[M], **pt;\n    void init() {\n        null-&gt;ls = null-&gt;rs = null;\n        FOR (i, 0, K) null-&gt;l[i] = inf, null-&gt;r[i] = -inf;\n        null-&gt;sum = null-&gt;val = 0;\n        null-&gt;sz = 0;\n    }\n\n    P* build(P** l, P** r, int d = 0) { // [l, r)\n        if (d == K) d = 0;\n        if (l &gt;= r) return null;\n        P** m = l + (r - l) / 2; assert(l &lt;= m &amp;&amp; m &lt; r);\n        nth_element(l, m, r, [&amp;](const P* a, const P* b){\n            return a-&gt;d[d] &lt; b-&gt;d[d];\n        });\n        P* o = *m;\n        o-&gt;ls = build(l, m, d + 1); o-&gt;rs = build(m + 1, r, d + 1);\n        return o-&gt;up();\n    }\n    P* Build() {\n        pt = tmp; FOR (it, pool, pit) *pt++ = it;\n        return build(tmp, pt);\n    }\n    inline bool inside(int p[], int q[], int l[], int r[]) {\n        FOR (i, 0, K) if (r[i] &lt; q[i] || p[i] &lt; l[i]) return false;\n        return true;\n    }\n    LL query(P* o, int l[], int r[]) {\n        if (o == null) return 0;\n        FOR (i, 0, K) if (o-&gt;r[i] &lt; l[i] || r[i] &lt; o-&gt;l[i]) return 0;\n        if (inside(o-&gt;l, o-&gt;r, l, r)) return o-&gt;sum;\n        return query(o-&gt;ls, l, r) + query(o-&gt;rs, l, r) +\n               (inside(o-&gt;d, o-&gt;d, l, r) ? o-&gt;val : 0);\n    }\n    void dfs(P* o) {\n        if (o == null) return;\n        *pt++ = o; dfs(o-&gt;ls); dfs(o-&gt;rs);\n    }\n    P* ins(P* o, P* x, int d = 0) {\n        if (d == K) d = 0;\n        if (o == null) return x-&gt;up();\n        P*&amp; oo = x-&gt;d[d] &lt;= o-&gt;d[d] ? o-&gt;ls : o-&gt;rs;\n        if (oo-&gt;sz &gt; o-&gt;sz * lim) {\n            pt = tmp; dfs(o); *pt++ = x;\n            return build(tmp, pt, d);\n        }\n        oo = ins(oo, x, d + 1);\n        return o-&gt;up();\n    }\n}\n</code></pre> <ul> <li>\u7ef4\u62a4\u4fe1\u606f</li> <li>\u5e26\u4fee\u6539\uff08\u9002\u5408\u79bb\u7ebf\uff09</li> </ul> <pre><code>namespace kd {\n    const int K = 3, inf = 1E9, M = N &lt;&lt; 3;\n    extern struct P* null;\n    struct P {\n        int d[K], l[K], r[K], val;\n        int Max;\n        P *ls, *rs, *fa;\n        P* up() {\n            Max = max(val, max(ls-&gt;Max, rs-&gt;Max));\n            FOR (i, 0, K) {\n                l[i] = min(d[i], min(ls-&gt;l[i], rs-&gt;l[i]));\n                r[i] = max(d[i], max(ls-&gt;r[i], rs-&gt;r[i]));\n            }\n            return ls-&gt;fa = rs-&gt;fa = this;\n        }\n    } pool[M], *null = new P, *pit = pool;\n    void upd(P* o, int val) {\n        o-&gt;val = val;\n        for (; o != null; o = o-&gt;fa)\n            o-&gt;Max = max(o-&gt;Max, val);\n    }\n    static P *tmp[M], **pt;\n    void init() {\n        null-&gt;ls = null-&gt;rs = null;\n        FOR (i, 0, K) null-&gt;l[i] = inf, null-&gt;r[i] = -inf;\n        null-&gt;Max = null-&gt;val = 0;\n    }\n    P* build(P** l, P** r, int d = 0) { // [l, r)\n        if (d == K) d = 0;\n        if (l &gt;= r) return null;\n        P** m = l + (r - l) / 2; assert(l &lt;= m &amp;&amp; m &lt; r);\n        nth_element(l, m, r, [&amp;](const P* a, const P* b){\n            return a-&gt;d[d] &lt; b-&gt;d[d];\n        });\n        P* o = *m;\n        o-&gt;ls = build(l, m, d + 1); o-&gt;rs = build(m + 1, r, d + 1);\n        return o-&gt;up();\n    }\n    P* Build() {\n        pt = tmp; FOR (it, pool, pit) *pt++ = it;\n        P* ret = build(tmp, pt); ret-&gt;fa = null;\n        return ret;\n    }\n    inline bool inside(int p[], int q[], int l[], int r[]) {\n        FOR (i, 0, K) if (r[i] &lt; q[i] || p[i] &lt; l[i]) return false;\n        return true;\n    }\n    int query(P* o, int l[], int r[]) {\n        if (o == null) return 0;\n        FOR (i, 0, K) if (o-&gt;r[i] &lt; l[i] || r[i] &lt; o-&gt;l[i]) return 0;\n        if (inside(o-&gt;l, o-&gt;r, l, r)) return o-&gt;Max;\n        int ret = 0;\n        if (o-&gt;val &gt; ret &amp;&amp; inside(o-&gt;d, o-&gt;d, l, r)) ret = max(ret, o-&gt;val);\n        if (o-&gt;ls-&gt;Max &gt; ret) ret = max(ret, query(o-&gt;ls, l, r));\n        if (o-&gt;rs-&gt;Max &gt; ret) ret = max(ret, query(o-&gt;rs, l, r));\n        return ret;\n    }\n}\n</code></pre> <ul> <li>\u6700\u8fd1\u70b9\u5bf9</li> <li>\u8981\u7528\u5168\u5c40\u53d8\u91cf\u5927\u529b\u526a\u679d</li> </ul> <pre><code>namespace kd {\n    const int K = 3;\n    const int M = N;\n    const int inf = 1E9 + 100;\n    struct P {\n        int d[K];\n        int l[K], r[K];\n        P *ls, *rs;\n        P* up() {\n            FOR (i, 0, K) {\n                l[i] = min(d[i], min(ls-&gt;l[i], rs-&gt;l[i]));\n                r[i] = max(d[i], max(ls-&gt;r[i], rs-&gt;r[i]));\n            }\n            return this;\n        }\n    } pool[M], *null = new P, *pit = pool;\n    static P *tmp[M], **pt;\n    void init() {\n        null-&gt;ls = null-&gt;rs = null;\n        FOR (i, 0, K) null-&gt;l[i] = inf, null-&gt;r[i] = -inf;\n    }\n    P* build(P** l, P** r, int d = 0) { // [l, r)\n        if (d == K) d = 0;\n        if (l &gt;= r) return null;\n        P** m = l + (r - l) / 2;\n        nth_element(l, m, r, [&amp;](const P* a, const P* b){\n            return a-&gt;d[d] &lt; b-&gt;d[d];\n        });\n        P* o = *m;\n        o-&gt;ls = build(l, m, d + 1); o-&gt;rs = build(m + 1, r, d + 1);\n        return o-&gt;up();\n    }\n    LL eval(P* o, int d[]) {\n        // ...\n    }\n    LL dist(int d1[], int d2[]) {\n        // ...\n    }\n    LL S;\n    LL query(P* o, int d[]) {\n        if (o == null) return 0;\n        S = max(S, dist(o-&gt;d, d));\n        LL mdl = eval(o-&gt;ls, d), mdr = eval(o-&gt;rs, d);\n        if (mdl &lt; mdr) {\n            if (S &gt; mdl) S = max(S, query(o-&gt;ls, d));\n            if (S &gt; mdr) S = max(S, query(o-&gt;rs, d));\n        } else {\n            if (S &gt; mdr) S = max(S, query(o-&gt;rs, d));\n            if (S &gt; mdl) S = max(S, query(o-&gt;ls, d));\n        }\n        return S;\n    }\n    P* Build() {\n        pt = tmp; FOR (it, pool, pit) *pt++ = it;\n        return build(tmp, pt);\n    }\n}\n</code></pre>"},{"location":"acm/template/ds/datastructure/#_4","title":"\u6811\u72b6\u6570\u7ec4","text":"<pre><code>struct BIT {\n    static constexpr int M = 1e5 + 5;\n    int c[M];\n\n    int lowbit(int x) {\n        return x &amp; (-x);\n    }\n\n    void add(int x, int y) {\n        for (int i = x; i &lt; M; i += lowbit(i)) c[i] += y;\n    }\n\n    int query(int x) {\n        int num = 0;\n        for (int i = x; i; i -= lowbit(i)) num += c[i]; \n        return num;\n    }\n\n    int query(int L, int R) {\n        return query(R) - query(L - 1); \n    }\n} bit;\n</code></pre> <ul> <li>\u6ce8\u610f\uff1a0 \u662f\u65e0\u6548\u4e0b\u6807</li> </ul> <pre><code>const int M = 1e5 + 5;\nnamespace bit {\n    i64 c[M];\n    inline int lowbit(int x) { return x &amp; -x; }\n    void add(int x, i64 v) {\n        for (int i = x; i &lt; M; i += lowbit(i))\n            c[i] += v;\n    }\n    i64 sum(int x) {\n        i64 ret = 0;\n        for (int i = x; i &gt; 0; i -= lowbit(i))\n            ret += c[i];\n        return ret;\n    }\n    int kth(i64 k) {\n        int p = 0;\n        for (int lim = 1 &lt;&lt; 20; lim; lim /= 2)\n            if (p + lim &lt; M &amp;&amp; c[p + lim] &lt; k) {\n                p += lim;\n                k -= c[p];\n            }\n        return p + 1;\n    }\n    i64 sum(int l, int r) { return sum(r) - sum(l - 1); }\n    void add(int l, int r, i64 v) { add(l, v); add(r + 1, -v); }\n}\n</code></pre> <ul> <li>\u533a\u95f4\u4fee\u6539 &amp; \u533a\u95f4\u67e5\u8be2\uff08\u5355\u70b9\u4fee\u6539\uff0c\u67e5\u8be2\u524d\u7f00\u548c\u7684\u524d\u7f00\u548c\uff09</li> </ul> <pre><code>namespace bit {\n    int c[maxn], cc[maxn];\n    inline int lowbit(int x) { return x &amp; -x; }\n    void add(int x, int v) {\n        for (int i = x; i &lt;= n; i += lowbit(i)) {\n            c[i] += v; cc[i] += x * v;\n        }\n    }\n    void add(int l, int r, int v) { add(l, v); add(r + 1, -v); }\n    int sum(int x) {\n        int ret = 0;\n        for (int i = x; i &gt; 0; i -= lowbit(i))\n            ret += (x + 1) * c[i] - cc[i];\n        return ret;\n    }\n    int sum(int l, int r) { return sum(r) - sum(l - 1); }\n}\n</code></pre> <ul> <li>\u4e09\u7ef4</li> </ul> <pre><code>inline int lowbit(int x) { return x &amp; -x; }\nvoid update(int x, int y, int z, int d) {\n    for (int i = x; i &lt;= n; i += lowbit(i))\n        for (int j = y; j &lt;= n; j += lowbit(j))\n            for (int k = z; k &lt;= n; k += lowbit(k))\n                c[i][j][k] += d;\n}\nLL query(int x, int y, int z) {\n    LL ret = 0;\n    for (int i = x; i &gt; 0; i -= lowbit(i))\n        for (int j = y; j &gt; 0; j -= lowbit(j))\n            for (int k = z; k &gt; 0; k -= lowbit(k))\n                ret += c[i][j][k];\n    return ret;\n}\nLL solve(int x, int y, int z, int xx, int yy, int zz) {\n    return    query(xx, yy, zz)\n            - query(xx, yy, z - 1)\n            - query(xx, y - 1, zz)\n            - query(x - 1, yy, zz)\n            + query(xx, y - 1, z - 1)\n            + query(x - 1, yy, z - 1)\n            + query(x - 1, y - 1, zz)\n            - query(x - 1, y - 1, z - 1);\n</code></pre>"},{"location":"acm/template/ds/datastructure/#_5","title":"\u4e3b\u5e2d\u6811","text":"<ul> <li>\u6b63\u5e38\u4e3b\u5e2d\u6811</li> </ul> <pre><code>namespace tree {\n#define mid ((l + r) &gt;&gt; 1)\n#define lson l, mid\n#define rson mid + 1, r\n    const int MAGIC = M * 30;\n    struct P {\n        int sum, ls, rs;\n    } tr[MAGIC] = {{0, 0, 0}};\n    int sz = 1;\n    int N(int sum, int ls, int rs) {\n        if (sz == MAGIC) assert(0);\n        tr[sz] = {sum, ls, rs};\n        return sz++;\n    }\n    int ins(int o, int x, int v, int l = 1, int r = ls) {\n        if (x &lt; l || x &gt; r) return o;\n        const P&amp; t = tr[o];\n        if (l == r) return N(t.sum + v, 0, 0);\n        return N(t.sum + v, ins(t.ls, x, v, lson), ins(t.rs, x, v, rson));\n    }\n    int query(int o, int ql, int qr, int l = 1, int r = ls) {\n        if (ql &gt; r || l &gt; qr) return 0;\n        const P&amp; t = tr[o];\n        if (ql &lt;= l &amp;&amp; r &lt;= qr) return t.sum;\n        return query(t.ls, ql, qr, lson) + query(t.rs, ql, qr, rson);\n    }\n}\n</code></pre> <ul> <li>\u7b2c k \u5927</li> </ul> <pre><code>struct TREE {\n#define mid ((l + r) &gt;&gt; 1)\n#define lson l, mid\n#define rson mid + 1, r\n    struct P {\n        int w, ls, rs;\n    } tr[maxn * 20];\n    int sz = 1;\n    TREE() { tr[0] = {0, 0, 0}; }\n    int N(int w, int ls, int rs) {\n        tr[sz] = {w, ls, rs};\n        return sz++;\n    }\n    int ins(int tt, int l, int r, int x) {\n        if (x &lt; l || r &lt; x) return tt;\n        const P&amp; t = tr[tt];\n        if (l == r) return N(t.w + 1, 0, 0);\n        return N(t.w + 1, ins(t.ls, lson, x), ins(t.rs, rson, x));\n    }\n    int query(int pp, int qq, int l, int r, int k) { // (pp, qq]\n        if (l == r) return l;\n        const P &amp;p = tr[pp], &amp;q = tr[qq];\n        int w = tr[q.ls].w - tr[p.ls].w;\n        if (k &lt;= w) return query(p.ls, q.ls, lson, k);\n        else return query(p.rs, q.rs, rson, k - w);\n    }\n} tree;\n</code></pre> <ul> <li>\u6811\u72b6\u6570\u7ec4\u5957\u4e3b\u5e2d\u6811</li> </ul> <pre><code>typedef vector&lt;int&gt; VI;\nstruct TREE {\n#define mid ((l + r) &gt;&gt; 1)\n#define lson l, mid\n#define rson mid + 1, r\n    struct P {\n        int w, ls, rs;\n    } tr[maxn * 20 * 20];\n    int sz = 1;\n    TREE() { tr[0] = {0, 0, 0}; }\n    int N(int w, int ls, int rs) {\n        tr[sz] = {w, ls, rs};\n        return sz++;\n    }\n    int add(int tt, int l, int r, int x, int d) {\n        if (x &lt; l || r &lt; x) return tt;\n        const P&amp; t = tr[tt];\n        if (l == r) return N(t.w + d, 0, 0);\n        return N(t.w + d, add(t.ls, lson, x, d), add(t.rs, rson, x, d));\n    }\n    int ls_sum(const VI&amp; rt) {\n        int ret = 0;\n        FOR (i, 0, rt.size())\n            ret += tr[tr[rt[i]].ls].w;\n        return ret;\n    }\n    inline void ls(VI&amp; rt) { transform(rt.begin(), rt.end(), rt.begin(), [&amp;](int x)-&gt;int{ return tr[x].ls; }); }\n    inline void rs(VI&amp; rt) { transform(rt.begin(), rt.end(), rt.begin(), [&amp;](int x)-&gt;int{ return tr[x].rs; }); }\n    int query(VI&amp; p, VI&amp; q, int l, int r, int k) {\n        if (l == r) return l;\n        int w = ls_sum(q) - ls_sum(p);\n        if (k &lt;= w) {\n            ls(p); ls(q);\n            return query(p, q, lson, k);\n        }\n        else {\n            rs(p); rs(q);\n            return query(p, q, rson, k - w);\n        }\n    }\n} tree;\nstruct BIT {\n    int root[maxn];\n    void init() { memset(root, 0, sizeof root); }\n    inline int lowbit(int x) { return x &amp; -x; }\n    void update(int p, int x, int d) {\n        for (int i = p; i &lt;= m; i += lowbit(i))\n            root[i] = tree.add(root[i], 1, m, x, d);\n    }\n    int query(int l, int r, int k) {\n        VI p, q;\n        for (int i = l - 1; i &gt; 0; i -= lowbit(i)) p.push_back(root[i]);\n        for (int i = r; i &gt; 0; i -= lowbit(i)) q.push_back(root[i]);\n        return tree.query(p, q, 1, m, k);\n    }\n} bit;\n\nvoid init() {\n    m = 10000;\n    tree.sz = 1;\n    bit.init();\n    FOR (i, 1, m + 1)\n        bit.update(i, a[i], 1);\n}\n</code></pre>"},{"location":"acm/template/ds/datastructure/#_6","title":"\u5de6\u504f\u6811","text":"<pre><code>namespace LTree {\n    extern struct P* null, *pit;\n    queue&lt;P*&gt; trash;\n    const int M = 1E5 + 100;\n    struct P {\n        P *ls, *rs;\n        LL v;\n        int d;\n        void operator delete (void* ptr) {\n            trash.push((P*)ptr);\n        }\n        void* operator new(size_t size) {\n            if (trash.empty()) return pit++;\n            void* ret = trash.front(); trash.pop(); return ret;\n        }\n\n        void prt() {\n            if (this == null) return;\n            cout &lt;&lt; v &lt;&lt; ' ';\n            ls-&gt;prt(); rs-&gt;prt();\n        }\n    } pool[M], *pit = pool, *null = new P{0, 0, -1, -1};\n    P* N(LL v) {\n        return new P{null, null, v, 0};\n    }\n    P* merge(P* a, P* b) {\n        if (a == null) return b;\n        if (b == null) return a;\n        if (a-&gt;v &gt; b-&gt;v) swap(a, b);\n        a-&gt;rs = merge(a-&gt;rs, b);\n        if (a-&gt;ls-&gt;d &lt; a-&gt;rs-&gt;d) swap(a-&gt;ls, a-&gt;rs);\n        a-&gt;d = a-&gt;rs-&gt;d + 1;\n        return a;\n    }\n\n    LL pop(P*&amp; o) {\n        LL ret = o-&gt;v;\n        P* t = o;\n        o = merge(o-&gt;ls, o-&gt;rs);\n        delete t;\n        return ret;\n    }\n}\n</code></pre> <p>\u53ef\u6301\u4e45\u5316</p> <pre><code>namespace LTree {\n    extern struct P* null, *pit;\n    queue&lt;P*&gt; trash;\n    const int M = 1E6 + 100;\n    struct P {\n        P *ls, *rs;\n        LL v;\n        int d;\n        void operator delete (void* ptr) {\n            trash.push((P*)ptr);\n        }\n        void* operator new(size_t size) {\n            if (trash.empty()) return pit++;\n            void* ret = trash.front(); trash.pop(); return ret;\n        }\n    } pool[M], *pit = pool, *null = new P{0, 0, -1, -1};\n    P* N(LL v, P* ls = null, P* rs = null) {\n        if (ls-&gt;d &lt; rs-&gt;d) swap(ls, rs);\n        return new P{ls, rs, v, rs-&gt;d + 1};\n    }\n    P* merge(P* a, P* b) {\n        if (a == null) return b;\n        if (b == null) return a;\n        if (a-&gt;v &lt; b-&gt;v)\n            return N(a-&gt;v, a-&gt;ls, merge(a-&gt;rs, b));\n        else\n            return N(b-&gt;v, b-&gt;ls, merge(b-&gt;rs, a));\n    }\n\n    LL pop(P*&amp; o) {\n        LL ret = o-&gt;v;\n        o = merge(o-&gt;ls, o-&gt;rs);\n        return ret;\n    }\n}\n</code></pre>"},{"location":"acm/template/ds/datastructure/#treap","title":"Treap","text":"<ul> <li>\u975e\u65cb Treap</li> <li>v \u5c0f\u6839\u5806</li> <li>\u6a21\u677f\u9898 bzoj 3224</li> <li>lower \u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e\u7684\u662f\u7b2c\u51e0\u4e2a (0-based)</li> <li>upper \u7b2c\u4e00\u4e2a\u5927\u4e8e\u7684\u662f\u7b2c\u51e0\u4e2a (0-based)</li> <li>split \u5de6\u4fa7\u5206\u5272\u51fa rk \u4e2a\u5143\u7d20</li> <li>\u6811\u5957\u6811 \u7565</li> </ul> <pre><code>namespace treap {\n    const int M = maxn * 17;\n    extern struct P* const null;\n    struct P {\n        P *ls, *rs;\n        int v, sz;\n        unsigned rd;\n        P(int v): ls(null), rs(null), v(v), sz(1), rd(rnd()) {}\n        P(): sz(0) {}\n\n        P* up() { sz = ls-&gt;sz + rs-&gt;sz + 1; return this; }\n        int lower(int v) {\n            if (this == null) return 0;\n            return this-&gt;v &gt;= v ? ls-&gt;lower(v) : rs-&gt;lower(v) + ls-&gt;sz + 1;\n        }\n        int upper(int v) {\n            if (this == null) return 0;\n            return this-&gt;v &gt; v ? ls-&gt;upper(v) : rs-&gt;upper(v) + ls-&gt;sz + 1;\n        }\n    } *const null = new P, pool[M], *pit = pool;\n\n    P* merge(P* l, P* r) {\n        if (l == null) return r; if (r == null) return l;\n        if (l-&gt;rd &lt; r-&gt;rd) { l-&gt;rs = merge(l-&gt;rs, r); return l-&gt;up(); }\n        else { r-&gt;ls = merge(l, r-&gt;ls); return r-&gt;up(); }\n    }\n\n    void split(P* o, int rk, P*&amp; l, P*&amp; r) {\n        if (o == null) { l = r = null; return; }\n        if (o-&gt;ls-&gt;sz &gt;= rk) { split(o-&gt;ls, rk, l, o-&gt;ls); r = o-&gt;up(); }\n        else { split(o-&gt;rs, rk - o-&gt;ls-&gt;sz - 1, o-&gt;rs, r); l = o-&gt;up(); }\n    }\n}\n</code></pre> <ul> <li>\u6301\u4e45\u5316 Treap</li> </ul> <pre><code>namespace treap {\n    const int M = maxn * 17 * 12;\n    extern struct P* const null, *pit;\n    struct P {\n        P *ls, *rs;\n        int v, sz;\n        LL sum;\n        P(P* ls, P* rs, int v): ls(ls), rs(rs), v(v), sz(ls-&gt;sz + rs-&gt;sz + 1),\n                                                     sum(ls-&gt;sum + rs-&gt;sum + v) {}\n        P() {}\n\n        void* operator new(size_t _) { return pit++; }\n        template&lt;typename T&gt;\n        int rk(int v, T&amp;&amp; cmp) {\n            if (this == null) return 0;\n            return cmp(this-&gt;v, v) ? ls-&gt;rk(v, cmp) : rs-&gt;rk(v, cmp) + ls-&gt;sz + 1;\n        }\n        int lower(int v) { return rk(v, greater_equal&lt;int&gt;()); }\n        int upper(int v) { return rk(v, greater&lt;int&gt;()); }\n    } pool[M], *pit = pool, *const null = new P;\n    P* merge(P* l, P* r) {\n        if (l == null) return r; if (r == null) return l;\n        if (rnd() % (l-&gt;sz + r-&gt;sz) &lt; l-&gt;sz) return new P{l-&gt;ls, merge(l-&gt;rs, r), l-&gt;v};\n        else return new P{merge(l, r-&gt;ls), r-&gt;rs, r-&gt;v};\n    }\n    void split(P* o, int rk, P*&amp; l, P*&amp; r) {\n        if (o == null) { l = r = null; return; }\n        if (o-&gt;ls-&gt;sz &gt;= rk) { split(o-&gt;ls, rk, l, r); r = new P{r, o-&gt;rs, o-&gt;v}; }\n        else { split(o-&gt;rs, rk - o-&gt;ls-&gt;sz - 1, l, r); l = new P{o-&gt;ls, l, o-&gt;v}; }\n    }\n}\n</code></pre> <ul> <li>\u5e26 pushdown \u7684\u6301\u4e45\u5316 Treap</li> <li>\u6ce8\u610f\u4efb\u4f55\u4fee\u6539\u64cd\u4f5c\u524d\u4e00\u5b9a\u8981 FIX</li> </ul> <pre><code>int now;\nnamespace Treap {\n    const int M = 10000000;\n    extern struct P* const null, *pit;\n    struct P {\n        P *ls, *rs;\n        int sz, time;\n        LL cnt, sc, pos, add;\n        bool rev;\n\n        P* up() { sz = ls-&gt;sz + rs-&gt;sz + 1; sc = ls-&gt;sc + rs-&gt;sc + cnt; return this; } // MOD\n        P* check() {\n            if (time == now) return this;\n            P* t = new(pit++) P; *t = *this; t-&gt;time = now; return t;\n        };\n        P* _do_rev() { rev ^= 1; add *= -1; pos *= -1; swap(ls, rs); return this; } // MOD\n        P* _do_add(LL v) { add += v; pos += v; return this; } // MOD\n        P* do_rev() { if (this == null) return this; return check()-&gt;_do_rev(); } // FIX &amp; MOD\n        P* do_add(LL v) { if (this == null) return this; return check()-&gt;_do_add(v); } // FIX &amp; MOD\n        P* _down() { // MOD\n            if (rev) { ls = ls-&gt;do_rev(); rs = rs-&gt;do_rev(); rev = 0; }\n            if (add) { ls = ls-&gt;do_add(add); rs = rs-&gt;do_add(add); add = 0; }\n            return this;\n        }\n        P* down() { return check()-&gt;_down(); } // FIX &amp; MOD\n        void _split(LL p, P*&amp; l, P*&amp; r) { // MOD\n            if (pos &gt;= p) { ls-&gt;split(p, l, r); ls = r; r = up(); }\n            else          { rs-&gt;split(p, l, r); rs = l; l = up(); }\n        }\n        void split(LL p, P*&amp; l, P*&amp; r) { // FIX &amp; MOD\n            if (this == null) l = r = null;\n            else down()-&gt;_split(p, l, r);\n        }\n    } pool[M], *pit = pool, *const null = new P;\n    P* merge(P* a, P* b) {\n        if (a == null) return b; if (b == null) return a;\n        if (rand() % (a-&gt;sz + b-&gt;sz) &lt; a-&gt;sz) { a = a-&gt;down(); a-&gt;rs = merge(a-&gt;rs, b); return a-&gt;up(); }\n        else                                 { b = b-&gt;down(); b-&gt;ls = merge(a, b-&gt;ls); return b-&gt;up(); }\n    }\n}\n</code></pre>"},{"location":"acm/template/ds/datastructure/#treap-","title":"Treap-\u5e8f\u5217","text":"<ul> <li>\u533a\u95f4 ADD\uff0cSUM</li> </ul> <pre><code>namespace treap {\n    const int M = 8E5 + 100;\n    extern struct P*const null;\n    struct P {\n        P *ls, *rs;\n        int sz, val, add, sum;\n        P(int v, P* ls = null, P* rs = null): ls(ls), rs(rs), sz(1), val(v), add(0), sum(v) {}\n        P(): sz(0), val(0), add(0), sum(0) {}\n\n        P* up() {\n            assert(this != null);\n            sz = ls-&gt;sz + rs-&gt;sz + 1;\n            sum = ls-&gt;sum + rs-&gt;sum + val + add * sz;\n            return this;\n        }\n        void upd(int v) {\n            if (this == null) return;\n            add += v;\n            sum += sz * v;\n        }\n        P* down() {\n            if (add) {\n                ls-&gt;upd(add); rs-&gt;upd(add);\n                val += add;\n                add = 0;\n            }\n            return this;\n        }\n\n        P* select(int rk) {\n            if (rk == ls-&gt;sz + 1) return this;\n            return ls-&gt;sz &gt;= rk ? ls-&gt;select(rk) : rs-&gt;select(rk - ls-&gt;sz - 1);\n        }\n    } pool[M], *pit = pool, *const null = new P, *rt = null;\n\n    P* merge(P* a, P* b) {\n        if (a == null) return b-&gt;up();\n        if (b == null) return a-&gt;up();\n        if (rand() % (a-&gt;sz + b-&gt;sz) &lt; a-&gt;sz) {\n            a-&gt;down()-&gt;rs = merge(a-&gt;rs, b);\n            return a-&gt;up();\n        } else {\n            b-&gt;down()-&gt;ls = merge(a, b-&gt;ls);\n            return b-&gt;up();\n        }\n    }\n\n    void split(P* o, int rk, P*&amp; l, P*&amp; r) {\n        if (o == null) { l = r = null; return; }\n        o-&gt;down();\n        if (o-&gt;ls-&gt;sz &gt;= rk) {\n            split(o-&gt;ls, rk, l, o-&gt;ls);\n            r = o-&gt;up();\n        } else {\n            split(o-&gt;rs, rk - o-&gt;ls-&gt;sz - 1, o-&gt;rs, r);\n            l = o-&gt;up();\n        }\n    }\n\n    inline void insert(int k, int v) {\n        P *l, *r;\n        split(rt, k - 1, l, r);\n        rt = merge(merge(l, new (pit++) P(v)), r);\n    }\n\n    inline void erase(int k) {\n        P *l, *r, *_, *t;\n        split(rt, k - 1, l, t);\n        split(t, 1, _, r);\n        rt = merge(l, r);\n    }\n\n    P* build(int l, int r, int* a) {\n        if (l &gt; r) return null;\n        if (l == r) return new(pit++) P(a[l]);\n        int m = (l + r) / 2;\n        return (new(pit++) P(a[m], build(l, m - 1, a), build(m + 1, r, a)))-&gt;up();\n    }\n};\n</code></pre> <ul> <li>\u533a\u95f4 REVERSE\uff0cADD\uff0cMIN</li> </ul> <pre><code>namespace treap {\n    extern struct P*const null;\n    struct P {\n        P *ls, *rs;\n        int sz, v, add, m;\n        bool flip;\n        P(int v, P* ls = null, P* rs = null): ls(ls), rs(rs), sz(1), v(v), add(0), m(v), flip(0) {}\n        P(): sz(0), v(INF), m(INF) {}\n\n        void upd(int v) {\n            if (this == null) return;\n            add += v; m += v;\n        }\n        void rev() {\n            if (this == null) return;\n            swap(ls, rs);\n            flip ^= 1;\n        }\n        P* up() {\n            assert(this != null);\n            sz = ls-&gt;sz + rs-&gt;sz + 1;\n            m = min(min(ls-&gt;m, rs-&gt;m), v) + add;\n            return this;\n        }\n        P* down() {\n            if (add) {\n                ls-&gt;upd(add); rs-&gt;upd(add);\n                v += add;\n                add = 0;\n            }\n            if (flip) {\n                ls-&gt;rev(); rs-&gt;rev();\n                flip = 0;\n            }\n            return this;\n        }\n\n        P* select(int k) {\n            if (ls-&gt;sz + 1 == k) return this;\n            if (ls-&gt;sz &gt;= k) return ls-&gt;select(k);\n            return rs-&gt;select(k - ls-&gt;sz - 1);\n        }\n\n    } pool[M], *const null = new P, *pit = pool, *rt = null;\n\n    P* merge(P* a, P* b) {\n        if (a == null) return b;\n        if (b == null) return a;\n        if (rnd() % (a-&gt;sz + b-&gt;sz) &lt; a-&gt;sz) {\n            a-&gt;down()-&gt;rs = merge(a-&gt;rs, b);\n            return a-&gt;up();\n        } else {\n            b-&gt;down()-&gt;ls = merge(a, b-&gt;ls);\n            return b-&gt;up();\n        }\n    }\n\n    void split(P* o, int k, P*&amp; l, P*&amp; r) {\n        if (o == null) { l = r = null; return; }\n        o-&gt;down();\n        if (o-&gt;ls-&gt;sz &gt;= k) {\n            split(o-&gt;ls, k, l, o-&gt;ls);\n            r = o-&gt;up();\n        } else {\n            split(o-&gt;rs, k - o-&gt;ls-&gt;sz - 1, o-&gt;rs, r);\n            l = o-&gt;up();\n        }\n    }\n\n    P* build(int l, int r, int* v) {\n        if (l &gt; r) return null;\n        int m = (l + r) &gt;&gt; 1;\n        return (new (pit++) P(v[m], build(l, m - 1, v), build(m + 1, r, v)))-&gt;up();\n    }\n\n    void go(int x, int y, void f(P*&amp;)) {\n        P *l, *m, *r;\n        split(rt, y, l, r);\n        split(l, x - 1, l, m);\n        f(m);\n        rt = merge(merge(l, m), r);\n    }\n}\nusing namespace treap;\nint a[maxn], n, x, y, Q, v, k, d;\nchar s[100];\n\nint main() {\n    cin &gt;&gt; n;\n    FOR (i, 1, n + 1) scanf(\"%d\", &amp;a[i]);\n    rt = build(1, n, a);\n    cin &gt;&gt; Q;\n    while (Q--) {\n        scanf(\"%s\", s);\n        if (s[0] == 'A') {\n            scanf(\"%d%d%d\", &amp;x, &amp;y, &amp;v);\n            go(x, y, [](P*&amp; o){ o-&gt;upd(v); });\n        } else if (s[0] == 'R' &amp;&amp; s[3] == 'E') {\n            scanf(\"%d%d\", &amp;x, &amp;y);\n            go(x, y, [](P*&amp; o){ o-&gt;rev(); });\n        } else if (s[0] == 'R' &amp;&amp; s[3] == 'O') {\n            scanf(\"%d%d%d\", &amp;x, &amp;y, &amp;d);\n            d %= y - x + 1;\n            go(x, y, [](P*&amp; o){\n                P *l, *r;\n                split(o, o-&gt;sz - d, l, r);\n                o = merge(r, l);\n            });\n        } else if (s[0] == 'I') {\n            scanf(\"%d%d\", &amp;k, &amp;v);\n            go(k + 1, k, [](P*&amp; o){ o = new (pit++) P(v); });\n        } else if (s[0] == 'D') {\n            scanf(\"%d\", &amp;k);\n            go(k, k, [](P*&amp; o){ o = null; });\n        } else if (s[0] == 'M') {\n            scanf(\"%d%d\", &amp;x, &amp;y);\n            go(x, y, [](P*&amp; o) {\n                printf(\"%d\\n\", o-&gt;m);\n            });\n        }\n    }\n}\n</code></pre> <ul> <li>\u6301\u4e45\u5316</li> </ul> <pre><code>namespace treap {\n    struct P;\n    extern P*const null;\n    P* N(P* ls, P* rs, LL v, bool fill);\n    struct P {\n        P *const ls, *const rs;\n        const int sz, v;\n        const LL sum;\n        bool fill;\n        int cnt;\n\n        void split(int k, P*&amp; l, P*&amp; r) {\n            if (this == null) { l = r = null; return; }\n            if (ls-&gt;sz &gt;= k) {\n                ls-&gt;split(k, l, r);\n                r = N(r, rs, v, fill);\n            } else {\n                rs-&gt;split(k - ls-&gt;sz - fill, l, r);\n                l = N(ls, l, v, fill);\n            }\n        }\n\n\n    } *const null = new P{0, 0, 0, 0, 0, 0, 1};\n\n    P* N(P* ls, P* rs, LL v, bool fill) {\n        ls-&gt;cnt++; rs-&gt;cnt++;\n        return new P{ls, rs, ls-&gt;sz + rs-&gt;sz + fill, v, ls-&gt;sum + rs-&gt;sum + v, fill, 1};\n    }\n\n    P* merge(P* a, P* b) {\n        if (a == null) return b;\n        if (b == null) return a;\n        if (rand() % (a-&gt;sz + b-&gt;sz) &lt; a-&gt;sz)\n            return N(a-&gt;ls, merge(a-&gt;rs, b), a-&gt;v, a-&gt;fill);\n        else\n            return N(merge(a, b-&gt;ls), b-&gt;rs, b-&gt;v, b-&gt;fill);\n    }\n\n    void go(P* o, int x, int y, P*&amp; l, P*&amp; m, P*&amp; r) {\n        o-&gt;split(y, l, r);\n        l-&gt;split(x - 1, l, m);\n    }\n}\n</code></pre>"},{"location":"acm/template/ds/datastructure/#_7","title":"\u53ef\u56de\u6eda\u5e76\u67e5\u96c6","text":"<ul> <li>\u6ce8\u610f\u8fd9\u4e2a\u4e0d\u662f\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6</li> <li>\u67e5\u627e\u65f6\u4e0d\u8fdb\u884c\u8def\u5f84\u538b\u7f29</li> <li>\u590d\u6742\u5ea6\u9760\u6309\u79e9\u5408\u5e76\u89e3\u51b3</li> </ul> <pre><code>namespace uf {\n    int fa[maxn], sz[maxn];\n    int undo[maxn], top;\n    void init() { memset(fa, -1, sizeof fa); memset(sz, 0, sizeof sz); top = 0; }\n    int findset(int x) { while (fa[x] != -1) x = fa[x]; return x; }\n    bool join(int x, int y) {\n        x = findset(x); y = findset(y);\n        if (x == y) return false;\n        if (sz[x] &gt; sz[y]) swap(x, y);\n        undo[top++] = x;\n        fa[x] = y;\n        sz[y] += sz[x] + 1;\n        return true;\n    }\n    inline int checkpoint() { return top; }\n    void rewind(int t) {\n        while (top &gt; t) {\n            int x = undo[--top];\n            sz[fa[x]] -= sz[x] + 1;\n            fa[x] = -1;\n        }\n    }\n}\n</code></pre>"},{"location":"acm/template/ds/datastructure/#_8","title":"\u821e\u8e48\u94fe","text":"<ul> <li>\u6ce8\u610f link \u7684 y \u7684\u8303\u56f4\u662f [1, n]</li> <li> <p>\u6ce8\u610f\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u66ff\u6362\u6389 memset</p> </li> <li> <p>\u7cbe\u786e\u8986\u76d6</p> </li> </ul> <pre><code>struct P {\n    P *L, *R, *U, *D;\n    int x, y;\n};\n\nconst int INF = 1E9;\n\nstruct DLX {\n#define TR(i, D, s) for (P* i = s-&gt;D; i != s; i = i-&gt;D)\n    static const int M = 2E5;\n    P pool[M], *h[M], *r[M], *pit;\n    int sz[M];\n    bool solved;\n    stack&lt;int&gt; ans;\n    void init(int n) {\n        pit = pool;\n        ++n;\n        solved = false;\n        while (!ans.empty()) ans.pop();\n        memset(r, 0, sizeof r);\n        memset(sz, 0, sizeof sz);\n        FOR (i, 0, n)\n            h[i] = new (pit++) P;\n        FOR (i, 0, n) {\n            h[i]-&gt;L = h[(i + n - 1) % n];\n            h[i]-&gt;R = h[(i + 1) % n];\n            h[i]-&gt;U = h[i]-&gt;D = h[i];\n            h[i]-&gt;y = i;\n        }\n    }\n\n    void link(int x, int y) {\n        sz[y]++;\n        auto p = new (pit++) P;\n        p-&gt;x = x; p-&gt;y = y;\n        p-&gt;U = h[y]-&gt;U; p-&gt;D = h[y];\n        p-&gt;D-&gt;U = p-&gt;U-&gt;D = p;\n        if (!r[x]) r[x] = p-&gt;L = p-&gt;R = p;\n        else {\n            p-&gt;L = r[x]; p-&gt;R = r[x]-&gt;R;\n            p-&gt;L-&gt;R = p-&gt;R-&gt;L = p;\n        }\n    }\n\n    void remove(P* p) {\n        p-&gt;L-&gt;R = p-&gt;R; p-&gt;R-&gt;L = p-&gt;L;\n        TR (i, D, p)\n            TR (j, R, i) {\n                j-&gt;D-&gt;U = j-&gt;U; j-&gt;U-&gt;D = j-&gt;D;\n                sz[j-&gt;y]--;\n            }\n    }\n\n    void recall(P* p) {\n        p-&gt;L-&gt;R = p-&gt;R-&gt;L = p;\n        TR (i, U, p)\n            TR (j, L, i) {\n                j-&gt;D-&gt;U = j-&gt;U-&gt;D = j;\n                sz[j-&gt;y]++;\n            }\n    }\n\n    bool dfs(int d) {\n        if (solved) return true;\n        if (h[0]-&gt;R == h[0]) return solved = true;\n        int m = INF;\n        P* c;\n        TR (i, R, h[0])\n            if (sz[i-&gt;y] &lt; m) { m = sz[i-&gt;y]; c = i; }\n        remove(c);\n        TR (i, D, c) {\n            ans.push(i-&gt;x);\n            TR (j, R, i) remove(h[j-&gt;y]);\n            if (dfs(d + 1)) return true;\n            TR (j, L, i) recall(h[j-&gt;y]);\n            ans.pop();\n        }\n        recall(c);\n        return false;\n    }\n} dlx;\n</code></pre> <ul> <li>\u53ef\u91cd\u590d\u8986\u76d6</li> </ul> <pre><code>struct P {\n    P *L, *R, *U, *D;\n    int x, y;\n};\n\nconst int INF = 1E9;\n\nstruct DLX {\n#define TR(i, D, s) for (P* i = s-&gt;D; i != s; i = i-&gt;D)\n    static const int M = 2E5;\n    P pool[M], *h[M], *r[M], *pit;\n    int sz[M], vis[M], ans, clk;\n    void init(int n) {\n        clk = 0;\n        ans = INF;\n        pit = pool;\n        ++n;\n        memset(r, 0, sizeof r);\n        memset(sz, 0, sizeof sz);\n        memset(vis, -1, sizeof vis);\n        FOR (i, 0, n)\n            h[i] = new (pit++) P;\n        FOR (i, 0, n) {\n            h[i]-&gt;L = h[(i + n - 1) % n];\n            h[i]-&gt;R = h[(i + 1) % n];\n            h[i]-&gt;U = h[i]-&gt;D = h[i];\n            h[i]-&gt;y = i;\n        }\n    }\n\n    void link(int x, int y) {\n        sz[y]++;\n        auto p = new (pit++) P;\n        p-&gt;x = x; p-&gt;y = y;\n        p-&gt;U = h[y]-&gt;U; p-&gt;D = h[y];\n        p-&gt;D-&gt;U = p-&gt;U-&gt;D = p;\n        if (!r[x]) r[x] = p-&gt;L = p-&gt;R = p;\n        else {\n            p-&gt;L = r[x]; p-&gt;R = r[x]-&gt;R;\n            p-&gt;L-&gt;R = p-&gt;R-&gt;L = p;\n        }\n    }\n\n    void remove(P* p) {\n        TR (i, D, p) {\n            i-&gt;L-&gt;R = i-&gt;R;\n            i-&gt;R-&gt;L = i-&gt;L;\n        }\n    }\n\n    void recall(P* p) {\n        TR (i, U, p)\n            i-&gt;L-&gt;R = i-&gt;R-&gt;L = i;\n    }\n\n    int eval() {\n        ++clk;\n        int ret = 0;\n        TR (i, R, h[0])\n            if (vis[i-&gt;y] != clk) {\n                ++ret;\n                vis[i-&gt;y] = clk;\n                TR (j, D, i)\n                    TR (k, R, j)\n                        vis[k-&gt;y] = clk;\n            }\n        return ret;\n    }\n\n    void dfs(int d) {\n        if (h[0]-&gt;R == h[0]) { ans = min(ans, d); return; }\n        if (eval() + d &gt;= ans) return;\n        P* c;\n        int m = INF;\n        TR (i, R, h[0])\n            if (sz[i-&gt;y] &lt; m) { m = sz[i-&gt;y]; c = i; }\n        TR (i, D, c) {\n            remove(i);\n            TR (j, R, i) remove(j);\n            dfs(d + 1);\n            TR (j, L, i) recall(j);\n            recall(i);\n        }\n    }\n} dlx;\n</code></pre>"},{"location":"acm/template/ds/datastructure/#cdq","title":"CDQ \u5206\u6cbb","text":"<pre><code>const int maxn = 2E5 + 100;\nstruct P {\n    int x, y;\n    int* f;\n    bool d1, d2;\n} a[maxn], b[maxn], c[maxn];\nint f[maxn];\n\nvoid go2(int l, int r) {\n    if (l + 1 == r) return;\n    int m = (l + r) &gt;&gt; 1;\n    go2(l, m); go2(m, r);\n    FOR (i, l, m) b[i].d2 = 0;\n    FOR (i, m, r) b[i].d2 = 1;\n    merge(b + l, b + m, b + m, b + r, c + l, [](const P&amp; a, const P&amp; b)-&gt;bool {\n            if (a.y != b.y) return a.y &lt; b.y;\n            return a.d2 &gt; b.d2;\n        });\n    int mx = -1;\n    FOR (i, l, r) {\n        if (c[i].d1 &amp;&amp; c[i].d2) *c[i].f = max(*c[i].f, mx + 1);\n        if (!c[i].d1 &amp;&amp; !c[i].d2) mx = max(mx, *c[i].f);\n    }\n    FOR (i, l, r) b[i] = c[i];\n}\n\nvoid go1(int l, int r) { // [l, r)\n    if (l + 1 == r) return;\n    int m = (l + r) &gt;&gt; 1;\n    go1(l, m);\n    FOR (i, l, m) a[i].d1 = 0;\n    FOR (i, m, r) a[i].d1 = 1;\n    copy(a + l, a + r, b + l);\n    sort(b + l, b + r, [](const P&amp; a, const P&amp; b)-&gt;bool {\n            if (a.x != b.x) return a.x &lt; b.x;\n            return a.d1 &gt; b.d1;\n        });\n    go2(l, r);\n    go1(m, r);\n}\n</code></pre> <ul> <li>k \u7ef4 LIS </li> </ul> <pre><code>struct P {\n    int v[K];\n    LL f;\n    bool d[K];\n} o[N &lt;&lt; 10];\nP* a[K][N &lt;&lt; 10];\nint k;\nvoid go(int now, int l, int r) {\n    if (now == 0) {\n        if (l + 1 == r) return;\n        int m = (l + r) / 2;\n        go(now, l, m);\n        FOR (i, l, m) a[now][i]-&gt;d[now] = 0;\n        FOR (i, m, r) a[now][i]-&gt;d[now] = 1;\n        copy(a[now] + l, a[now] + r, a[now + 1] + l);\n        sort(a[now + 1] + l, a[now + 1] + r, [now](const P* a, const P* b){\n            if (a-&gt;v[now] != b-&gt;v[now]) return a-&gt;v[now] &lt; b-&gt;v[now];\n            return a-&gt;d[now] &gt; b-&gt;d[now];\n        });\n        go(now + 1, l, r);\n        go(now, m, r);\n    } else {\n        if (l + 1 == r) return;\n        int m = (l + r) / 2;\n        go(now, l, m); go(now, m, r);\n        FOR (i, l, m) a[now][i]-&gt;d[now] = 0;\n        FOR (i, m, r) a[now][i]-&gt;d[now] = 1;\n        merge(a[now] + l, a[now] + m, a[now] + m, a[now] + r, a[now + 1] + l, [now](const P* a, const P* b){\n            if (a-&gt;v[now] != b-&gt;v[now]) return a-&gt;v[now] &lt; b-&gt;v[now];\n            return a-&gt;d[now] &gt; b-&gt;d[now];\n        });\n        copy(a[now + 1] + l, a[now + 1] + r, a[now] + l);\n        if (now &lt; k - 2) {\n            go(now + 1, l, r);\n        } else {\n            LL sum = 0;\n            FOR (i, l, r) {\n                dbg(a[now][i]-&gt;v[0], a[now][i]-&gt;v[1], a[now][i]-&gt;f,\n                                  a[now][i]-&gt;d[0], a[now][i]-&gt;d[1]);\n                int cnt = 0;\n                FOR (j, 0, now + 1) cnt += a[now][i]-&gt;d[j];\n                if (cnt == 0) {\n                    sum += a[now][i]-&gt;f;\n                } else if (cnt == now + 1) {\n                    a[now][i]-&gt;f = (a[now][i]-&gt;f + sum) % MOD;\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"acm/template/ds/datastructure/#_9","title":"\u7b1b\u5361\u5c14\u6811","text":"<pre><code>void build(const vector&lt;int&gt;&amp; a) {\n    static P *stack[M], *x, *last;\n    int p = 0;\n    FOR (i, 0, a.size()) {\n        x = new P(i + 1, a[i]);\n        last = null;\n        while (p &amp;&amp; stack[p - 1]-&gt;v &gt; x-&gt;v) {\n            stack[p - 1]-&gt;maintain();\n            last = stack[--p];\n        }\n        if (p) stack[p - 1]-&gt;rs = x;\n        x-&gt;ls = last;\n        stack[p++] = x;\n    }\n    while (p)\n        stack[--p]-&gt;maintain();\n    rt = stack[0];\n}\n</code></pre> <pre><code>void build() {\n    static int s[N], last;\n    int p = 0;\n    FOR (x, 1, n + 1) {\n        last = 0;\n        while (p &amp;&amp; val[s[p - 1]] &gt; val[x]) last = s[--p];\n        if (p) G[s[p - 1]][1] = x;\n        if (last) G[x][0] = last;\n        s[p++] = x;\n    }\n    rt = s[0];\n}\n</code></pre>"},{"location":"acm/template/ds/datastructure/#trie","title":"Trie","text":"<ul> <li>\u4e8c\u8fdb\u5236 Trie</li> </ul> <pre><code>namespace trie {\n    const int M = 31;\n    int ch[N * M][2], sz;\n    void init() { memset(ch, 0, sizeof ch); sz = 2; }\n    void ins(LL x) {\n        int u = 1;\n        FORD (i, M, -1) {\n            bool b = x &amp; (1LL &lt;&lt; i);\n            if (!ch[u][b]) ch[u][b] = sz++;\n            u = ch[u][b];\n        }\n    }\n}\n</code></pre> <ul> <li>\u6301\u4e45\u5316\u4e8c\u8fdb\u5236 Trie</li> <li><code>sz=1</code></li> </ul> <pre><code>struct P { int w, ls, rs; };\nP tr[M] = {{0, 0, 0}};\nint sz;\n\nint _new(int w, int ls, int rs) { tr[sz] = {w, ls, rs}; return sz++; }\nint ins(int oo, int v, int d = 30) {\n    P&amp; o = tr[oo];\n    if (d == -1) return _new(o.w + 1, 0, 0);\n    bool u = v &amp; (1 &lt;&lt; d);\n    return _new(o.w + 1, u == 0 ? ins(o.ls, v, d - 1) : o.ls, u == 1 ? ins(o.rs, v, d - 1) : o.rs);\n}\nint query(int pp, int qq, int v, int d = 30) {\n    if (d == -1) return 0;\n    bool u = v &amp; (1 &lt;&lt; d);\n    P &amp;p = tr[pp], &amp;q = tr[qq];\n    int lw = tr[q.ls].w - tr[p.ls].w;\n    int rw = tr[q.rs].w - tr[p.rs].w;\n\n    int ret = 0;\n    if (u == 0) {\n        if (rw) { ret += 1 &lt;&lt; d; ret += query(p.rs, q.rs, v, d - 1); }\n        else ret += query(p.ls, q.ls, v, d - 1);\n    } else {\n        if (lw) { ret += 1 &lt;&lt; d; ret += query(p.ls, q.ls, v, d - 1); }\n        else ret += query(p.rs, q.rs, v, d - 1);\n    }\n    return ret;\n}\n</code></pre>"},{"location":"acm/template/ds/datastructure/#exstl","title":"exSTL","text":""},{"location":"acm/template/ds/datastructure/#_10","title":"\u4f18\u5148\u961f\u5217","text":"<ul> <li>binary_heap_tag</li> <li>pairing_heap_tag \u652f\u6301\u4fee\u6539</li> <li>thin_heap_tag \u5982\u679c\u4fee\u6539\u53ea\u6709 increase \u5219\u8f83\u5feb\uff0c\u4e0d\u652f\u6301 join</li> </ul> <pre><code>#include&lt;ext/pb_ds/priority_queue.hpp&gt;\nusing namespace __gnu_pbds;\n\ntypedef __gnu_pbds::priority_queue&lt;LL, less&lt;LL&gt;, pairing_heap_tag&gt; PQ;\n__gnu_pbds::priority_queue&lt;int, cmp, pairing_heap_tag&gt;::point_iterator it;\nPQ pq, pq2;\n\nint main() {\n    auto it = pq.push(2);\n    pq.push(3);\n    assert(pq.top() == 3);\n    pq.modify(it, 4);\n    assert(pq.top() == 4);\n    pq2.push(5);\n    pq.join(pq2);\n    assert(pq.top() == 5);\n}\n</code></pre>"},{"location":"acm/template/ds/datastructure/#_11","title":"\u5e73\u8861\u6811","text":"<ul> <li>ov_tree_tag</li> <li>rb_tree_tag</li> <li> <p>splay_tree_tag</p> </li> <li> <p>mapped: null_type \u6216 null_mapped_type\uff08\u65e7\u7248\u672c\uff09 \u4e3a\u7a7a</p> </li> <li>Node_Update \u4e3a tree_order_statistics_node_update \u65f6\u624d\u53ef\u4ee5 find_by_order &amp; order_of_key</li> <li>find_by_order \u627e order + 1 \u5c0f\u7684\u5143\u7d20 \uff08\u5176\u5b9e\u90fd\u662f\u4ece 0 \u5f00\u59cb\u8ba1\u6570\uff09\uff0c\u6216\u8005\u6709 order \u4e2a\u5143\u7d20\u6bd4\u5b83\u5c0f\u7684 key</li> <li>order_of_key \u6709\u591a\u5c11\u4e2a\u6bd4 r_key \u5c0f\u7684\u5143\u7d20</li> <li>join &amp; split</li> </ul> <pre><code>#include &lt;ext/pb_ds/assoc_container.hpp&gt;\nusing namespace __gnu_pbds;\nusing Tree = tree&lt;int, null_type, less&lt;int&gt;, rb_tree_tag, tree_order_statistics_node_update&gt;;\nTree t;\n</code></pre>"},{"location":"acm/template/ds/datastructure/#_12","title":"\u6301\u4e45\u5316\u5e73\u8861\u6811","text":"<pre><code>#include &lt;ext/rope&gt;\nusing namespace __gnu_cxx;\nrope&lt;int&gt; s;\n\nint main() {\n    FOR (i, 0, 5) s.push_back(i); // 0 1 2 3 4\n    s.replace(1, 2, s); // 0 (0 1 2 3 4) 3 4\n    auto ss = s.substr(2, 2); // 1 2\u3001\n    s.erase(2, 2); // 0 1 4\n    s.insert(2, s); // equal to s.replace(2, 0, s)\n    assert(s[2] == s.at(2)); // 2\n}\n</code></pre>"},{"location":"acm/template/ds/datastructure/#_13","title":"\u54c8\u5e0c\u8868","text":"<pre><code>#include&lt;ext/pb_ds/assoc_container.hpp&gt;\n#include&lt;ext/pb_ds/hash_policy.hpp&gt;\nusing namespace __gnu_pbds;\n\ngp_hash_table&lt;int, int&gt; mp;\ncc_hash_table&lt;int, int&gt; mp;\n</code></pre>"},{"location":"acm/template/ds/datastructure/#link-cut-tree","title":"Link-Cut Tree","text":"<ul> <li>\u56fe\u4e2d\u76f8\u90bb\u7684\u7ed3\u70b9\u5728\u4f38\u5c55\u6811\u4e2d\u4e0d\u4e00\u5b9a\u662f\u7236\u5b50\u5173\u7cfb</li> <li>\u9047\u4e8b\u4e0d\u51b3 <code>make_root</code></li> <li>\u8dd1\u5de6\u53f3\u513f\u5b50\u7684\u65f6\u5019\u4e0d\u8981\u5fd8\u8bb0 <code>down</code></li> </ul> <pre><code>namespace lct {\n    extern struct P *const null;\n    const int M = N;\n    struct P {\n        P *fa, *ls, *rs;\n        int v, maxv;\n        bool rev;\n\n        bool has_fa() { return fa-&gt;ls == this || fa-&gt;rs == this; }\n        bool d() { return fa-&gt;ls == this; }\n        P*&amp; c(bool x) { return x ? ls : rs; }\n        void do_rev() {\n            if (this == null) return;\n            rev ^= 1;\n            swap(ls, rs);\n        }\n        P* up() {\n            maxv = max(v, max(ls-&gt;maxv, rs-&gt;maxv));\n            return this;\n        }\n        void down() {\n            if (rev) {\n                rev = 0;\n                ls-&gt;do_rev(); rs-&gt;do_rev();\n            }\n        }\n        void all_down() { if (has_fa()) fa-&gt;all_down(); down(); }\n    } *const null = new P{0, 0, 0, 0, 0, 0}, pool[M], *pit = pool;\n\n    void rot(P* o) {\n        bool dd = o-&gt;d();\n        P *f = o-&gt;fa, *t = o-&gt;c(!dd);\n        if (f-&gt;has_fa()) f-&gt;fa-&gt;c(f-&gt;d()) = o; o-&gt;fa = f-&gt;fa;\n        if (t != null) t-&gt;fa = f; f-&gt;c(dd) = t;\n        o-&gt;c(!dd) = f-&gt;up(); f-&gt;fa = o;\n    }\n    void splay(P* o) {\n        o-&gt;all_down();\n        while (o-&gt;has_fa()) {\n            if (o-&gt;fa-&gt;has_fa())\n                rot(o-&gt;d() ^ o-&gt;fa-&gt;d() ? o : o-&gt;fa);\n            rot(o);\n        }\n        o-&gt;up();\n    }\n    void access(P* u, P* v = null) {\n        if (u == null) return;\n        splay(u); u-&gt;rs = v;\n        access(u-&gt;up()-&gt;fa, u);\n    }\n    void make_root(P* o) {\n        access(o); splay(o); o-&gt;do_rev();\n    }\n    void split(P* o, P* u) {\n        make_root(o); access(u); splay(u);\n    }\n    void link(P* u, P* v) {\n        make_root(u); u-&gt;fa = v;\n    }\n    void cut(P* u, P* v) {\n        split(u, v);\n        u-&gt;fa = v-&gt;ls = null; v-&gt;up();\n    }\n    bool adj(P* u, P* v) {\n        split(u, v);\n        return v-&gt;ls == u &amp;&amp; u-&gt;ls == null &amp;&amp; u-&gt;rs == null;\n    }\n    bool linked(P* u, P* v) {\n        split(u, v);\n        return u == v || u-&gt;fa != null;\n    }\n    P* findrt(P* o) {\n        access(o); splay(o);\n        while (o-&gt;ls != null) o = o-&gt;ls;\n        return o;\n    }\n    P* findfa(P* rt, P* u) {\n        split(rt, u);\n        u = u-&gt;ls;\n        while (u-&gt;rs != null) {\n            u = u-&gt;rs;\n            u-&gt;down();\n        }\n        return u;\n    }\n}\n</code></pre> <ul> <li>\u7ef4\u62a4\u5b50\u6811\u5927\u5c0f</li> </ul> <pre><code>P* up() {\n    sz = ls-&gt;sz + rs-&gt;sz + _sz + 1;\n    return this;\n}\nvoid access(P* u, P* v = null) {\n    if (u == null) return;\n    splay(u);\n    u-&gt;_sz += u-&gt;rs-&gt;sz - v-&gt;sz;\n    u-&gt;rs = v;\n    access(u-&gt;up()-&gt;fa, u);\n}\nvoid link(P* u, P* v) {\n    split(u, v);\n    u-&gt;fa = v; v-&gt;_sz += u-&gt;sz;\n    v-&gt;up();\n}\n</code></pre>"},{"location":"acm/template/ds/datastructure/#_14","title":"\u83ab\u961f","text":"<ul> <li>[l, r)</li> </ul> <pre><code>while (l &gt; q.l) mv(--l, 1);\nwhile (r &lt; q.r) mv(r++, 1);\nwhile (l &lt; q.l) mv(l++, -1);\nwhile (r &gt; q.r) mv(--r, -1);\n</code></pre> <ul> <li>\u6811\u4e0a\u83ab\u961f</li> <li>\u6ce8\u610f\u521d\u59cb\u72b6\u6001 u = v = 1, flip(1)</li> </ul> <pre><code>struct Q {\n    int u, v, idx;\n    bool operator &lt; (const Q&amp; b) const {\n        const Q&amp; a = *this;\n        return blk[a.u] &lt; blk[b.u] || (blk[a.u] == blk[b.u] &amp;&amp; in[a.v] &lt; in[b.v]);\n    }\n};\n\nvoid dfs(int u = 1, int d = 0) {\n    static int S[maxn], sz = 0, blk_cnt = 0, clk = 0;\n    in[u] = clk++;\n    dep[u] = d;\n    int btm = sz;\n    for (int v: G[u]) {\n        if (v == fa[u]) continue;\n        fa[v] = u;\n        dfs(v, d + 1);\n        if (sz - btm &gt;= B) {\n            while (sz &gt; btm) blk[S[--sz]] = blk_cnt;\n            ++blk_cnt;\n        }\n    }\n    S[sz++] = u;\n    if (u == 1) while (sz) blk[S[--sz]] = blk_cnt - 1;\n}\n\nvoid flip(int k) {\n    dbg(k);\n    if (vis[k]) {\n        // ...\n    } else {\n        // ...\n    }\n    vis[k] ^= 1;\n}\n\nvoid go(int&amp; k) {\n    if (bug == -1) {\n        if (vis[k] &amp;&amp; !vis[fa[k]]) bug = k;\n        if (!vis[k] &amp;&amp; vis[fa[k]]) bug = fa[k];\n    }\n    flip(k);\n    k = fa[k];\n}\n\nvoid mv(int a, int b) {\n    bug = -1;\n    if (vis[b]) bug = b;\n    if (dep[a] &lt; dep[b]) swap(a, b);\n    while (dep[a] &gt; dep[b]) go(a);\n    while (a != b) {\n        go(a); go(b);\n    }\n    go(a); go(bug);\n}\n\nfor (Q&amp; q: query) {\n    mv(u, q.u); u = q.u;\n    mv(v, q.v); v = q.v;\n    ans[q.idx] = Ans;\n}\n</code></pre>"},{"location":"acm/template/geometry/geometry/","title":"\u8ba1\u7b97\u51e0\u4f55","text":""},{"location":"acm/template/geometry/geometry/#_2","title":"\u4e8c\u7ef4\u51e0\u4f55\uff1a\u70b9\u4e0e\u5411\u91cf","text":"<pre><code>#define y1 yy1\n#define nxt(i) ((i + 1) % s.size())\ntypedef double LD;\nconst LD PI = 3.14159265358979323846;\nconst LD eps = 1E-10;\nint sgn(LD x) { return fabs(x) &lt; eps ? 0 : (x &gt; 0 ? 1 : -1); }\nstruct L;\nstruct P;\ntypedef P V;\nstruct P {\n    LD x, y;\n    explicit P(LD x = 0, LD y = 0): x(x), y(y) {}\n    explicit P(const L&amp; l);\n};\nstruct L {\n    P s, t;\n    L() {}\n    L(P s, P t): s(s), t(t) {}\n};\n\nusing S = std::vector&lt;P&gt;;\n\nP operator + (const P&amp; a, const P&amp; b) { return P(a.x + b.x, a.y + b.y); }\nP operator - (const P&amp; a, const P&amp; b) { return P(a.x - b.x, a.y - b.y); }\nP operator * (const P&amp; a, LD k) { return P(a.x * k, a.y * k); }\nP operator / (const P&amp; a, LD k) { return P(a.x / k, a.y / k); }\ninline bool operator &lt; (const P&amp; a, const P&amp; b) {\n    return sgn(a.x - b.x) &lt; 0 || (sgn(a.x - b.x) == 0 &amp;&amp; sgn(a.y - b.y) &lt; 0);\n}\nbool operator == (const P&amp; a, const P&amp; b) { return !sgn(a.x - b.x) &amp;&amp; !sgn(a.y - b.y); }\nP::P(const L&amp; l) { *this = l.t - l.s; }\nstd::ostream &amp;operator &lt;&lt; (std::ostream &amp;os, const P &amp;p) {\n    return (os &lt;&lt; \"(\" &lt;&lt; p.x &lt;&lt; \",\" &lt;&lt; p.y &lt;&lt; \")\");\n}\nstd::istream &amp;operator &gt;&gt; (std::istream &amp;is, P &amp;p) {\n    return (is &gt;&gt; p.x &gt;&gt; p.y);\n}\n\nLD dist(const P&amp; p) { return sqrt(p.x * p.x + p.y * p.y); }\nLD dot(const V&amp; a, const V&amp; b) { return a.x * b.x + a.y * b.y; }\nLD det(const V&amp; a, const V&amp; b) { return a.x * b.y - a.y * b.x; }\nLD cross(const P&amp; s, const P&amp; t, const P&amp; o = P()) { return det(s - o, t - o); }\n// --------------------------------------------\n</code></pre>"},{"location":"acm/template/geometry/geometry/#_3","title":"\u8c61\u9650","text":"<pre><code>// \u8c61\u9650\nint quad(P p) {\n    int x = sgn(p.x), y = sgn(p.y);\n    if (x &gt; 0 &amp;&amp; y &gt;= 0) return 1;\n    if (x &lt;= 0 &amp;&amp; y &gt; 0) return 2;\n    if (x &lt; 0 &amp;&amp; y &lt;= 0) return 3;\n    if (x &gt;= 0 &amp;&amp; y &lt; 0) return 4;\n    assert(0);\n}\n\n// \u4ec5\u9002\u7528\u4e8e\u53c2\u7167\u70b9\u5728\u6240\u6709\u70b9\u4e00\u4fa7\u7684\u60c5\u51b5\nstruct cmp_angle {\n    P p;\n    bool operator () (const P&amp; a, const P&amp; b) {\n//        int qa = quad(a - p), qb = quad(b - p);\n//        if (qa != qb) return qa &lt; qb;\n        int d = sgn(cross(a, b, p));\n        if (d) return d &gt; 0;\n        return dist(a - p) &lt; dist(b - p);\n    }\n};\n</code></pre>"},{"location":"acm/template/geometry/geometry/#_4","title":"\u7ebf","text":"<pre><code>// \u662f\u5426\u5e73\u884c\nbool parallel(const L&amp; a, const L&amp; b) {\n    return !sgn(det(P(a), P(b)));\n}\n// \u76f4\u7ebf\u662f\u5426\u76f8\u7b49\nbool l_eq(const L&amp; a, const L&amp; b) {\n    return parallel(a, b) &amp;&amp; parallel(L(a.s, b.t), L(b.s, a.t));\n}\n// \u9006\u65f6\u9488\u65cb\u8f6c r \u5f27\u5ea6\nP rotation(const P&amp; p, const LD&amp; r) { return P(p.x * cos(r) - p.y * sin(r), p.x * sin(r) + p.y * cos(r)); }\nP RotateCCW90(const P&amp; p) { return P(-p.y, p.x); }\nP RotateCW90(const P&amp; p) { return P(p.y, -p.x); }\n// \u5355\u4f4d\u6cd5\u5411\u91cf\nV normal(const V&amp; v) { return V(-v.y, v.x) / dist(v); }\n</code></pre>"},{"location":"acm/template/geometry/geometry/#_5","title":"\u70b9\u4e0e\u7ebf","text":"<pre><code>// \u70b9\u5728\u7ebf\u6bb5\u4e0a  &lt;= 0\u5305\u542b\u7aef\u70b9 &lt; 0 \u5219\u4e0d\u5305\u542b\nbool p_on_seg(const P&amp; p, const L&amp; seg) {\n    P a = seg.s, b = seg.t;\n    return !sgn(det(p - a, b - a)) &amp;&amp; sgn(dot(p - a, p - b)) &lt;= 0;\n}\n// \u70b9\u5230\u76f4\u7ebf\u8ddd\u79bb\nLD dist_to_line(const P&amp; p, const L&amp; l) {\n    return fabs(cross(l.s, l.t, p)) / dist(l);\n}\n// \u70b9\u5230\u7ebf\u6bb5\u8ddd\u79bb\nLD dist_to_seg(const P&amp; p, const L&amp; l) {\n    if (l.s == l.t) return dist(p - l);\n    V vs = p - l.s, vt = p - l.t;\n    if (sgn(dot(l, vs)) &lt; 0) return dist(vs);\n    else if (sgn(dot(l, vt)) &gt; 0) return dist(vt);\n    else return dist_to_line(p, l);\n}\n</code></pre>"},{"location":"acm/template/geometry/geometry/#_6","title":"\u7ebf\u4e0e\u7ebf","text":"<pre><code>// \u6c42\u76f4\u7ebf\u4ea4 \u9700\u8981\u4e8b\u5148\u4fdd\u8bc1\u6709\u754c\nP l_intersection(const L&amp; a, const L&amp; b) {\n    LD s1 = det(P(a), b.s - a.s), s2 = det(P(a), b.t - a.s);\n    return (b.s * s2 - b.t * s1) / (s2 - s1);\n}\n// \u5411\u91cf\u5939\u89d2\u7684\u5f27\u5ea6\nLD angle(const V&amp; a, const V&amp; b) {\n    LD r = asin(fabs(det(a, b)) / dist(a) / dist(b));\n    if (sgn(dot(a, b)) &lt; 0) r = PI - r;\n    return r;\n}\n// \u7ebf\u6bb5\u548c\u76f4\u7ebf\u662f\u5426\u6709\u4ea4   1 = \u89c4\u8303\uff0c2 = \u4e0d\u89c4\u8303\nint s_l_cross(const L&amp; seg, const L&amp; line) {\n    int d1 = sgn(cross(line.s, line.t, seg.s));\n    int d2 = sgn(cross(line.s, line.t, seg.t));\n    if ((d1 ^ d2) == -2) return 1; // proper\n    if (d1 == 0 || d2 == 0) return 2;\n    return 0;\n}\n// \u7ebf\u6bb5\u7684\u4ea4   1 = \u89c4\u8303\uff0c2 = \u4e0d\u89c4\u8303\nint s_cross(const L&amp; a, const L&amp; b, P&amp; p) {\n    int d1 = sgn(cross(a.t, b.s, a.s)), d2 = sgn(cross(a.t, b.t, a.s));\n    int d3 = sgn(cross(b.t, a.s, b.s)), d4 = sgn(cross(b.t, a.t, b.s));\n    if ((d1 ^ d2) == -2 &amp;&amp; (d3 ^ d4) == -2) { p = l_intersection(a, b); return 1; }\n    if (!d1 &amp;&amp; p_on_seg(b.s, a)) { p = b.s; return 2; }\n    if (!d2 &amp;&amp; p_on_seg(b.t, a)) { p = b.t; return 2; }\n    if (!d3 &amp;&amp; p_on_seg(a.s, b)) { p = a.s; return 2; }\n    if (!d4 &amp;&amp; p_on_seg(a.t, b)) { p = a.t; return 2; }\n    return 0;\n}\n</code></pre>"},{"location":"acm/template/geometry/geometry/#_7","title":"\u591a\u8fb9\u5f62","text":""},{"location":"acm/template/geometry/geometry/#_8","title":"\u9762\u79ef\u3001\u51f8\u5305","text":"<pre><code>typedef std::vector&lt;P&gt; S;\n\n// \u70b9\u662f\u5426\u5728\u591a\u8fb9\u5f62\u4e2d 0 = \u5728\u5916\u90e8 1 = \u5728\u5185\u90e8 -1 = \u5728\u8fb9\u754c\u4e0a\nint inside(const S&amp; s, const P&amp; p) {\n    int cnt = 0;\n    for (int i = 0; i &lt; s.size(); i++) {\n        P a = s[i], b = s[nxt(i)];\n        if (p_on_seg(p, L(a, b))) return -1;\n        if (sgn(a.y - b.y) &lt;= 0) std::swap(a, b);\n        if (sgn(p.y - a.y) &gt; 0) continue;\n        if (sgn(p.y - b.y) &lt;= 0) continue;\n        cnt += sgn(cross(b, a, p)) &gt; 0;\n    }\n    return bool(cnt &amp; 1);\n}\n// \u591a\u8fb9\u5f62\u9762\u79ef\uff0c\u6709\u5411\u9762\u79ef\u53ef\u80fd\u4e3a\u8d1f\nLD polygon_area(const S&amp; s) {\n    LD ret = 0;\n    for (int i = 1; i &lt; (i64)s.size() - 1; i++)\n        ret += cross(s[i], s[i + 1], s[0]);\n    return ret / 2;\n}\n// \u6784\u5efa\u51f8\u5305 \u70b9\u4e0d\u53ef\u4ee5\u91cd\u590d &lt; 0 \u8fb9\u4e0a\u53ef\u4ee5\u6709\u70b9\uff0c &lt;= 0 \u5219\u4e0d\u80fd\n// \u4f1a\u6539\u53d8\u8f93\u5165\u70b9\u7684\u987a\u5e8f\nconst int MAX_N = 1000;\nS convex_hull(S&amp; s) {\n//    assert(s.size() &gt;= 3);\n    sort(s.begin(), s.end());\n    S ret(MAX_N * 2);\n    int sz = 0;\n    for (int i = 0; i &lt; s.size(); i++) {\n        while (sz &gt; 1 &amp;&amp; sgn(cross(ret[sz - 1], s[i], ret[sz - 2])) &lt;= 0) --sz;\n        ret[sz++] = s[i];\n    }\n    int k = sz;\n    for (int i = (i64)s.size() - 2; i &gt;= 0; i--) {\n        while (sz &gt; k &amp;&amp; sgn(cross(ret[sz - 1], s[i], ret[sz - 2])) &lt;= 0) --sz;\n        ret[sz++] = s[i];\n    }\n    ret.resize(sz - (s.size() &gt; 1));\n    return ret;\n}\n\nP compute_centroid(const std::vector&lt;P&gt; &amp;p) {\n    P c(0, 0);\n    LD scale = 6.0 * polygon_area(p);\n    for (unsigned i = 0; i &lt; p.size(); i++) {\n        unsigned j = (i + 1) % p.size();\n        c = c + (p[i] + p[j]) * (p[i].x * p[j].y - p[j].x * p[i].y);\n    }\n    return c / scale;\n}\n</code></pre>"},{"location":"acm/template/geometry/geometry/#_9","title":"\u65cb\u8f6c\u5361\u58f3","text":"<pre><code>LD rotating_Calipers(std::vector&lt;P&gt;&amp; qs) {\n    int n = qs.size();\n    if (n == 2)\n        return dist(qs[0] - qs[1]);\n    LD res = 0;\n    for (int i = 0, j = 2; i &lt; n; i++) {\n        res = std::max(res, dist(qs[i + 1] - qs[i]));\n        while (cross(qs[i + 1], qs[j], qs[i]) &lt; cross(qs[i + 1], qs[(j + 1) % n], qs[i])) j = (j + 1) % n;\n        res = std::max(res, std::max(dist(qs[i] - qs[j]), dist(qs[i + 1] - qs[j])));\n    }\n    return res;\n}\n\nint main() {\n    int n;\n    std::cin &gt;&gt; n;\n    S v(n);\n    for (int i = 0; i &lt; n; i++) std::cin &gt;&gt; v[i].x &gt;&gt; v[i].y;\n    v = convex_hull(v);\n    printf(\"%d\\n\", rotatingCalipers(v));\n}\n</code></pre>"},{"location":"acm/template/geometry/geometry/#_10","title":"\u534a\u5e73\u9762\u4ea4","text":"<pre><code>struct LV {\n    P p, v; LD ang;\n    LV() {}\n    LV(P s, P t): p(s), v(t - s) { ang = atan2(v.y, v.x); }\n};  // \u53e6\u4e00\u79cd\u5411\u91cf\u8868\u793a\n\nbool operator &lt; (const LV &amp;a, const LV&amp; b) { return a.ang &lt; b.ang; }\nbool on_left(const LV&amp; l, const P&amp; p) { return sgn(cross(l.v, p - l.p)) &gt;= 0; }\nP l_intersection(const LV&amp; a, const LV&amp; b) {\n    P u = a.p - b.p; LD t = cross(b.v, u) / cross(a.v, b.v);\n    return a.p + a.v * t;\n}\n\nS half_plane_intersection(std::vector&lt;LV&gt;&amp; L) {\n    int n = L.size(), fi, la;\n    sort(L.begin(), L.end());\n    S p(n); std::vector&lt;LV&gt; q(n);\n    q[fi = la = 0] = L[0];\n    for (int i = 1; i &lt; n; i++) {\n        while (fi &lt; la &amp;&amp; !on_left(L[i], p[la - 1])) la--;\n        while (fi &lt; la &amp;&amp; !on_left(L[i], p[fi])) fi++;\n        q[++la] = L[i];\n        if (sgn(cross(q[la].v, q[la - 1].v)) == 0) {\n            la--;\n            if (on_left(q[la], L[i].p)) q[la] = L[i];\n        }\n        if (fi &lt; la) p[la - 1] = l_intersection(q[la - 1], q[la]);\n    }\n    while (fi &lt; la &amp;&amp; !on_left(q[fi], p[la - 1])) la--;\n    if (la - fi &lt;= 1) return S();\n    p[la] = l_intersection(q[la], q[fi]);\n    return S(p.begin() + fi, p.begin() + la + 1);\n}\n\nS convex_intersection(const S &amp;v1, const S &amp;v2) {\n    std::vector&lt;LV&gt; h; int n = v1.size(), m = v2.size();\n    for (int i = 0; i &lt; n; i++) h.push_back(LV(v1[i], v1[(i + 1) % n]));\n    for (int i = 0; i &lt; m; i++) h.push_back(LV(v2[i], v2[(i + 1) % m]));\n    return half_plane_intersection(h);\n}\n\nLD intersection_size(S v) {\n    LD tmp = 0;\n    for (int i = 1; i &lt; v.size(); i++) {\n        tmp += fabs(cross(v[i], v[(i + 1) % v.size()], v[0]) / 2);\n    }\n    return tmp;\n}\n</code></pre>"},{"location":"acm/template/geometry/geometry/#_11","title":"\u5706","text":"<pre><code>struct C {\n    P p; LD r;\n    C(LD x = 0, LD y = 0, LD r = 0): p(x, y), r(r) {}\n    C(P p, LD r): p(p), r(r) {}\n};\n</code></pre>"},{"location":"acm/template/geometry/geometry/#_12","title":"\u4e09\u70b9\u6c42\u5706\u5fc3","text":"<pre><code>P compute_circle_center(P a, P b, P c) {\n    b = (a + b) / 2;\n    c = (a + c) / 2;\n    return l_intersection({b, b + RotateCW90(a - b)}, {c , c + RotateCW90(a - c)});\n}\n</code></pre>"},{"location":"acm/template/geometry/geometry/#_13","title":"\u5706\u7ebf\u4ea4\u70b9\u3001\u5706\u5706\u4ea4\u70b9","text":"<ul> <li>\u5706\u548c\u7ebf\u7684\u4ea4\u70b9\u5173\u4e8e\u5706\u5fc3\u662f\u987a\u65f6\u9488\u7684</li> </ul> <pre><code>std::vector&lt;P&gt; c_l_intersection(const L&amp; l, const C&amp; c) {\n    std::vector&lt;P&gt; ret;\n    P b(l), a = l.s - c.p;\n    LD x = dot(b, b), y = dot(a, b), z = dot(a, a) - c.r * c.r;\n    LD D = y * y - x * z;\n    if (sgn(D) &lt; 0) return ret;\n    ret.push_back(c.p + a + b * (-y + sqrt(D + eps)) / x);\n    if (sgn(D) &gt; 0) ret.push_back(c.p + a + b * (-y - sqrt(D)) / x);\n    return ret;\n}\n\nvector&lt;P&gt; c_c_intersection(C a, C b) {\n    vector&lt;P&gt; ret;\n    LD d = dist(a.p - b.p);\n    if (sgn(d) == 0 || sgn(d - (a.r + b.r)) &gt; 0 || sgn(d + min(a.r, b.r) - max(a.r, b.r)) &lt; 0)\n        return ret;\n    LD x = (d * d - b.r * b.r + a.r * a.r) / (2 * d);\n    LD y = sqrt(a.r * a.r - x * x);\n    P v = (b.p - a.p) / d;\n    ret.push_back(a.p + v * x + RotateCCW90(v) * y);\n    if (sgn(y) &gt; 0) ret.push_back(a.p + v * x - RotateCCW90(v) * y);\n    return ret;\n}\n</code></pre>"},{"location":"acm/template/geometry/geometry/#_14","title":"\u5706\u5706\u4f4d\u7f6e\u5173\u7cfb","text":"<pre><code>// 1:\u5185\u542b 2:\u5185\u5207 3:\u76f8\u4ea4 4:\u5916\u5207 5:\u76f8\u79bb\nint c_c_relation(const C&amp; a, const C&amp; v) {\n    LD d = dist(a.p - v.p);\n    if (sgn(d - a.r - v.r) &gt; 0) return 5;\n    if (sgn(d - a.r - v.r) == 0) return 4;\n    LD l = fabs(a.r - v.r);\n    if (sgn(d - l) &gt; 0) return 3;\n    if (sgn(d - l) == 0) return 2;\n    if (sgn(d - l) &lt; 0) return 1;\n}\n</code></pre>"},{"location":"acm/template/geometry/geometry/#_15","title":"\u5706\u4e0e\u591a\u8fb9\u5f62\u4ea4","text":"<ul> <li>HDU 5130</li> <li>\u6ce8\u610f\u987a\u65f6\u9488\u9006\u65f6\u9488\uff08\u53ef\u80fd\u8981\u53d6\u7edd\u5bf9\u503c\uff09</li> </ul> <pre><code>LD sector_area(const P&amp; a, const P&amp; b, LD r) {\n    LD th = atan2(a.y, a.x) - atan2(b.y, b.x);\n    while (th &lt;= 0) th += 2 * PI;\n    while (th &gt; 2 * PI) th -= 2 * PI;\n    th = min(th, 2 * PI - th);\n    return r * r * th / 2;\n}\n\nLD c_tri_area(P a, P b, P center, LD r) {\n    a = a - center; b = b - center;\n    int ina = sgn(dist(a) - r) &lt; 0, inb = sgn(dist(b) - r) &lt; 0;\n    // dbg(a, b, ina, inb);\n    if (ina &amp;&amp; inb) {\n        return fabs(cross(a, b)) / 2;\n    } else {\n        auto p = c_l_intersection(L(a, b), C(0, 0, r));\n        if (ina ^ inb) {\n            auto cr = p_on_seg(p[0], L(a, b)) ? p[0] : p[1];\n            if (ina) return sector_area(b, cr, r) + fabs(cross(a, cr)) / 2;\n            else return sector_area(a, cr, r) + fabs(cross(b, cr)) / 2;\n        } else {\n            if ((int) p.size() == 2 &amp;&amp; p_on_seg(p[0], L(a, b))) {\n                if (dist(p[0] - a) &gt; dist(p[1] - a)) swap(p[0], p[1]);\n                return sector_area(a, p[0], r) + sector_area(p[1], b, r)\n                    + fabs(cross(p[0], p[1])) / 2;\n            } else return sector_area(a, b, r);\n        }\n    }\n}\n\ntypedef vector&lt;P&gt; S;\nLD c_poly_area(S poly, const C&amp; c) {\n    LD ret = 0; int n = poly.size();\n    FOR (i, 0, n) {\n        int t = sgn(cross(poly[i] - c.p, poly[(i + 1) % n] - c.p));\n        if (t) ret += t * c_tri_area(poly[i], poly[(i + 1) % n], c.p, c.r);\n    }\n    return ret;\n}\n</code></pre>"},{"location":"acm/template/geometry/geometry/#_16","title":"\u5706\u7684\u79bb\u6563\u5316\u3001\u9762\u79ef\u5e76","text":"<p>SPOJ: CIRU, EOJ: 284</p> <ul> <li>\u7248\u672c 1\uff1a\u590d\u6742\u5ea6 \\(O(n^3 \\log n)\\)\u3002\u867d\u7136\u5e38\u6570\u5c0f\uff0c\u4f46\u8fd8\u662f\u96be\u4ee5\u63a5\u53d7\u3002</li> <li>\u4f18\u70b9\uff1f\u60f3\u4e0d\u51fa\u6765\u3002</li> <li>\u539f\u7406\u4e0a\u662f\u7528\u7ad6\u7ebf\u8fdb\u884c\u5207\u5206\uff0c\u7136\u540e\u5bf9\u6bcf\u4e00\u4e2a\u5207\u7247\u5206\u522b\u8ba1\u7b97\u3002</li> <li>\u626b\u63cf\u7ebf\u90e8\u5206\u53ef\u4ee5\u9b54\u6539\uff0c\u6c42\u5404\u79cd\u4e1c\u897f\u3002</li> </ul> <pre><code>inline LD rt(LD x) { return sgn(x) == 0 ? 0 : sqrt(x); }\ninline LD sq(LD x) { return x * x; }\n\n// \u5706\u5f27\n// \u5982\u679c\u6309\u7167 x \u79bb\u6563\u5316\uff0c\u5706\u5f27\u662f \"\u6a2a\u7740\u7684\"\n// \u8bb0\u5f55\u5706\u5f27\u7684\u5de6\u7aef\u70b9\u3001\u53f3\u7aef\u70b9\u3001\u4e2d\u70b9\u7684\u5750\u6807\uff0c\u548c\u5706\u5f27\u6240\u5728\u7684\u5706\n// \u8c03\u7528\u6784\u9020\u8981\u4fdd\u8bc1 c.x - x.r &lt;= xl &lt; xr &lt;= c.y + x.r\n// t = 1 \u4e0b\u5706\u5f27 t = -1 \u4e0a\u5706\u5f27\nstruct CV {\n    LD yl, yr, ym; C o; int type;\n    CV() {}\n    CV(LD yl, LD yr, LD ym, C c, int t)\n        : yl(yl), yr(yr), ym(ym), type(t), o(c) {}\n};\n\n// \u8f85\u52a9\u51fd\u6570 \u6c42\u5706\u4e0a\u7eb5\u5750\u6807\npair&lt;LD, LD&gt; c_point_eval(const C&amp; c, LD x) {\n    LD d = fabs(c.p.x - x), h = rt(sq(c.r) - sq(d));\n    return {c.p.y - h, c.p.y + h};\n}\n// \u6784\u9020\u4e0a\u4e0b\u5706\u5f27\npair&lt;CV, CV&gt; pairwise_curves(const C&amp; c, LD xl, LD xr) {\n    LD yl1, yl2, yr1, yr2, ym1, ym2;\n    tie(yl1, yl2) = c_point_eval(c, xl);\n    tie(ym1, ym2) = c_point_eval(c, (xl + xr) / 2);\n    tie(yr1, yr2) = c_point_eval(c, xr);\n    return {CV(yl1, yr1, ym1, c, 1), CV(yl2, yr2, ym2, c, -1)};\n}\n\n// \u79bb\u6563\u5316\u4e4b\u540e\u540c\u4e00\u5207\u7247\u5185\u7684\u5706\u5f27\u5e94\u8be5\u662f\u4e0d\u76f8\u4ea4\u7684\nbool operator &lt; (const CV&amp; a, const CV&amp; b) { return a.ym &lt; b.ym; }\n// \u8ba1\u7b97\u5706\u5f27\u548c\u8fde\u63a5\u5706\u5f27\u7aef\u70b9\u7684\u7ebf\u6bb5\u6784\u6210\u7684\u5c01\u95ed\u56fe\u5f62\u7684\u9762\u79ef\nLD cv_area(const CV&amp; v, LD xl, LD xr) {\n    LD l = rt(sq(xr - xl) + sq(v.yr - v.yl));\n    LD d = rt(sq(v.o.r) - sq(l / 2));\n    LD ang = atan(l / d / 2);\n    return ang * sq(v.o.r) - d * l / 2;\n}\n\nLD circle_union(const std::vector&lt;C&gt;&amp; cs) {\n    int n = cs.size();\n    vector&lt;LD&gt; xs;\n    FOR (i, 0, n) {\n        xs.push_back(cs[i].p.x - cs[i].r);\n        xs.push_back(cs[i].p.x);\n        xs.push_back(cs[i].p.x + cs[i].r);\n        FOR (j, i + 1, n) {\n            auto pts = c_c_intersection(cs[i], cs[j]);\n            for (auto&amp; p: pts) xs.push_back(p.x);\n        }\n    }\n    sort(xs.begin(), xs.end());\n    xs.erase(unique(xs.begin(), xs.end(), [](LD x, LD y) { return sgn(x - y) == 0; }), xs.end());\n    LD ans = 0;\n    FOR (i, 0, (int) xs.size() - 1) {\n        LD xl = xs[i], xr = xs[i + 1];\n        vector&lt;CV&gt; intv;\n        FOR (k, 0, n) {\n            auto&amp; c = cs[k];\n            if (sgn(c.p.x - c.r - xl) &lt;= 0 &amp;&amp; sgn(c.p.x + c.r - xr) &gt;= 0) {\n                auto t = pairwise_curves(c, xl, xr);\n                intv.push_back(t.first); intv.push_back(t.second);\n            }\n        }\n        sort(intv.begin(), intv.end());\n\n        vector&lt;LD&gt; areas(intv.size());\n        FOR (i, 0, intv.size()) areas[i] = cv_area(intv[i], xl, xr);\n\n        int cc = 0;\n        FOR (i, 0, intv.size()) {\n            if (cc &gt; 0) {\n                ans += (intv[i].yl - intv[i - 1].yl + intv[i].yr - intv[i - 1].yr) * (xr - xl) / 2;\n                ans += intv[i - 1].type * areas[i - 1];\n                ans -= intv[i].type * areas[i];\n            }\n            cc += intv[i].type;\n        }\n    }\n    return ans;\n}\n</code></pre> <ul> <li>\u7248\u672c 2\uff1a\u590d\u6742\u5ea6 \\(O(n^2 \\log n)\\)\u3002</li> <li>\u539f\u7406\u662f\uff1a\u8ba4\u4e3a\u6240\u6c42\u90e8\u5206\u662f\u4e00\u4e2a\u5947\u602a\u7684\u591a\u8fb9\u5f62 + \u82e5\u5e72\u5f13\u5f62\u3002\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u5706\u5206\u522b\u6c42\u8d21\u732e\u7684\u5f13\u5f62\uff0c\u5e76\u7d2f\u52a0\u591a\u8fb9\u5f62\u6709\u5411\u9762\u79ef\u3002</li> <li>\u540c\u6837\u53ef\u4ee5\u9b54\u6539\u626b\u63cf\u7ebf\u7684\u90e8\u5206\uff0c\u7528\u4e8e\u6c42\u5468\u957f\u3001\u81f3\u5c11\u8986\u76d6 \\(k\\) \u6b21\u7b49\u7b49\u3002</li> <li>\u5185\u542b\u3001\u5185\u5207\u3001\u540c\u4e00\u4e2a\u5706\u7684\u60c5\u51b5\uff0c\u901a\u5e38\u9700\u8981\u7279\u6b8a\u5904\u7406\u3002</li> <li>\u4e0b\u9762\u7684\u4ee3\u7801\u662f \\(k\\) \u5706\u8986\u76d6\u3002</li> </ul> <pre><code>inline LD angle(const P&amp; p) { return atan2(p.y, p.x); }\n\n// \u5706\u5f27\u4e0a\u7684\u70b9\n// p \u662f\u76f8\u5bf9\u4e8e\u5706\u5fc3\u7684\u5750\u6807\n// a \u662f\u5728\u5706\u4e0a\u7684 atan2 [-PI, PI]\nstruct CP {\n    P p; LD a; int t;\n    CP() {}\n    CP(P p, LD a, int t): p(p), a(a), t(t) {}\n};\nbool operator &lt; (const CP&amp; u, const CP&amp; v) { return u.a &lt; v.a; }\nLD cv_area(LD r, const CP&amp; q1, const CP&amp; q2) {\n    return (r * r * (q2.a - q1.a) - cross(q1.p, q2.p)) / 2;\n}\n\nLD ans[N];\nvoid circle_union(const vector&lt;C&gt;&amp; cs) {\n    int n = cs.size();\n    FOR (i, 0, n) {\n        // \u6709\u76f8\u540c\u7684\u5706\u7684\u8bdd\u53ea\u8003\u8651\u7b2c\u4e00\u6b21\u51fa\u73b0\n        bool ok = true;\n        FOR (j, 0, i)\n            if (sgn(cs[i].r - cs[j].r) == 0 &amp;&amp; cs[i].p == cs[j].p) {\n                ok = false;\n                break;\n            }\n        if (!ok) continue;\n        auto&amp; c = cs[i];\n        vector&lt;CP&gt; ev;\n        int belong_to = 0;\n        P bound = c.p + P(-c.r, 0);\n        ev.emplace_back(bound, -PI, 0);\n        ev.emplace_back(bound, PI, 0);\n        FOR (j, 0, n) {\n            if (i == j) continue;\n            if (c_c_relation(c, cs[j]) &lt;= 2) {\n                if (sgn(cs[j].r - c.r) &gt;= 0) // \u5b8c\u5168\u88ab\u53e6\u4e00\u4e2a\u5706\u5305\u542b\uff0c\u7b49\u4e8e\u8bf4\u53e0\u4e86\u4e00\u5c42\n                    belong_to++;\n                continue;\n            }\n            auto its = c_c_intersection(c, cs[j]);\n            if (its.size() == 2) {\n                P p = its[1] - c.p, q = its[0] - c.p;\n                LD a = angle(p), b = angle(q);\n                if (sgn(a - b) &gt; 0) {\n                    ev.emplace_back(p, a, 1);\n                    ev.emplace_back(bound, PI, -1);\n                    ev.emplace_back(bound, -PI, 1);\n                    ev.emplace_back(q, b, -1);\n                } else {\n                    ev.emplace_back(p, a, 1);\n                    ev.emplace_back(q, b, -1);\n                }\n            }\n        }\n        sort(ev.begin(), ev.end());\n        int cc = ev[0].t;\n        FOR (j, 1, ev.size()) {\n            int t = cc + belong_to;\n            ans[t] += cross(ev[j - 1].p + c.p, ev[j].p + c.p) / 2;\n            ans[t] += cv_area(c.r, ev[j - 1], ev[j]);\n            cc += ev[j].t;\n        }\n    }\n}\n</code></pre>"},{"location":"acm/template/geometry/geometry/#_17","title":"\u6700\u5c0f\u5706\u8986\u76d6","text":"<ul> <li>\u968f\u673a\u589e\u91cf\u3002\u671f\u671b\u590d\u6742\u5ea6 \\(O(n)\\)\u3002</li> </ul> <pre><code>P compute_circle_center(P a, P b) { return (a + b) / 2; }\nbool p_in_circle(const P&amp; p, const C&amp; c) {\n    return sgn(dist(p - c.p) - c.r) &lt;= 0;\n}\nC min_circle_cover(const std::vector&lt;P&gt; &amp;in) {\n    std::vector&lt;P&gt; a(in.begin(), in.end());\n    random_shuffle(a.begin(), a.end());\n    P c = a[0]; LD r = 0; int n = a.size();\n    for (int i = 1; i &lt; n; i++) if (!p_in_circle(a[i], {c, r})) {\n        c = a[i]; r = 0;\n        for (int j = 0; j &lt; i; j++) if (!p_in_circle(a[j], {c, r})) {\n            c = compute_circle_center(a[i], a[j]);\n            r = dist(a[j] - c);\n            for (int k = 0; k &lt; j; k++) if (!p_in_circle(a[k], {c, r})) {\n                c = compute_circle_center(a[i], a[j], a[k]);\n                r = dist(a[k] - c);\n            }\n        }\n    }\n    return {c, r};\n}\n</code></pre>"},{"location":"acm/template/geometry/geometry/#_18","title":"\u5706\u7684\u53cd\u6f14","text":"<pre><code>C inv(C c, const P&amp; o) {\n    LD d = dist(c.p - o);\n    assert(sgn(d) != 0);\n    LD a = 1 / (d - c.r);\n    LD b = 1 / (d + c.r);\n    c.r = (a - b) / 2 * R2;\n    c.p = o + (c.p - o) * ((a + b) * R2 / 2 / d);\n    return c;\n}\n</code></pre>"},{"location":"acm/template/geometry/geometry/#_19","title":"\u4e09\u7ef4\u8ba1\u7b97\u51e0\u4f55","text":"<pre><code>struct P;\nstruct L;\ntypedef P V;\n\nstruct P {\n    LD x, y, z;\n    explicit P(LD x = 0, LD y = 0, LD z = 0): x(x), y(y), z(z) {}\n    explicit P(const L&amp; l);\n};\n\nstruct L {\n    P s, t;\n    L() {}\n    L(P s, P t): s(s), t(t) {}\n};\n\nstruct F {\n    P a, b, c;\n    F() {}\n    F(P a, P b, P c): a(a), b(b), c(c) {}\n};\n\nP operator + (const P&amp; a, const P&amp; b) { return P(a.x + b.x, a.y + b.y, a.z + b.z); }\nP operator - (const P&amp; a, const P&amp; b) { return P(a.x - b.x, a.y - b.y, a.z - b.z); }\nP operator * (const P&amp; a, LD k) { return P(a.x * k, a.y * k, a.z * k); }\nP operator / (const P&amp; a, LD k) { return P(a.x / k, a.y / k, a.z / k); }\ninline int operator &lt; (const P&amp; a, const P&amp; b) {\n    return sgn(a.x - b.x) &lt; 0 || (sgn(a.x - b.x) == 0 &amp;&amp; (sgn(a.y - b.y) &lt; 0 ||\n                                  (sgn(a.y - b.y) == 0 &amp;&amp; sgn(a.z - b.z) &lt; 0)));\n}\nbool operator == (const P&amp; a, const P&amp; b) { return !sgn(a.x - b.x) &amp;&amp; !sgn(a.y - b.y) &amp;&amp; !sgn(a.z - b.z); }\nP::P(const L&amp; l) { *this = l.t - l.s; }\nostream &amp;operator &lt;&lt; (ostream &amp;os, const P &amp;p) {\n    return (os &lt;&lt; \"(\" &lt;&lt; p.x &lt;&lt; \",\" &lt;&lt; p.y &lt;&lt; \",\" &lt;&lt; p.z &lt;&lt; \")\");\n}\nistream &amp;operator &gt;&gt; (istream &amp;is, P &amp;p) {\n    return (is &gt;&gt; p.x &gt;&gt; p.y &gt;&gt; p.z);\n}\n\n// --------------------------------------------\nLD dist2(const P&amp; p) { return p.x * p.x + p.y * p.y + p.z * p.z; }\nLD dist(const P&amp; p) { return sqrt(dist2(p)); }\nLD dot(const V&amp; a, const V&amp; b) { return a.x * b.x + a.y * b.y + a.z * b.z; }\nP cross(const P&amp; v, const P&amp; w) {\n    return P(v.y * w.z - v.z * w.y, v.z * w.x - v.x * w.z, v.x * w.y - v.y * w.x);\n}\nLD mix(const V&amp; a, const V&amp; b, const V&amp; c) { return dot(a, cross(b, c)); }\n</code></pre>"},{"location":"acm/template/geometry/geometry/#_20","title":"\u65cb\u8f6c","text":"<pre><code>// \u9006\u65f6\u9488\u65cb\u8f6c r \u5f27\u5ea6\n// axis = 0 \u7ed5 x \u8f74\n// axis = 1 \u7ed5 y \u8f74\n// axis = 2 \u7ed5 z \u8f74\nP rotation(const P&amp; p, const LD&amp; r, int axis = 0) {\n    if (axis == 0)\n        return P(p.x, p.y * cos(r) - p.z * sin(r), p.y * sin(r) + p.z * cos(r));\n    else if (axis == 1)\n        return P(p.z * cos(r) - p.x * sin(r), p.y, p.z * sin(r) + p.x * cos(r));\n    else if (axis == 2)\n        return P(p.x * cos(r) - p.y * sin(r), p.x * sin(r) + p.y * cos(r), p.z);\n}\n// n \u662f\u5355\u4f4d\u5411\u91cf \u8868\u793a\u65cb\u8f6c\u8f74\n// \u6a21\u677f\u662f\u987a\u65f6\u9488\u7684\nP rotation(const P&amp; p, const LD&amp; r, const P&amp; n) {\n    LD c = cos(r), s = sin(r), x = n.x, y = n.y, z = n.z;\n    // dbg(c, s);\n    return P((x * x * (1 - c) + c) * p.x + (x * y * (1 - c) + z * s) * p.y + (x * z * (1 - c) - y * s) * p.z,\n             (x * y * (1 - c) - z * s) * p.x + (y * y * (1 - c) + c) * p.y + (y * z * (1 - c) + x * s) * p.z,\n             (x * z * (1 - c) + y * s) * p.x + (y * z * (1 - c) - x * s) * p.y + (z * z * (1 - c) + c) * p.z);\n}\n</code></pre>"},{"location":"acm/template/geometry/geometry/#_21","title":"\u7ebf\u3001\u9762","text":"<p>\u51fd\u6570\u76f8\u4e92\u4f9d\u8d56\uff0c\u6240\u4ee5\u4ea4\u7ec7\u5728\u4e00\u8d77\u4e86\u3002</p> <pre><code>// \u70b9\u5728\u7ebf\u6bb5\u4e0a  &lt;= 0\u5305\u542b\u7aef\u70b9 &lt; 0 \u5219\u4e0d\u5305\u542b\nbool p_on_seg(const P&amp; p, const L&amp; seg) {\n    P a = seg.s, b = seg.t;\n    return !sgn(dist2(cross(p - a, b - a))) &amp;&amp; sgn(dot(p - a, p - b)) &lt;= 0;\n}\n// \u70b9\u5230\u76f4\u7ebf\u8ddd\u79bb\nLD dist_to_line(const P&amp; p, const L&amp; l) {\n    return dist(cross(l.s - p, l.t - p)) / dist(l);\n}\n// \u70b9\u5230\u7ebf\u6bb5\u8ddd\u79bb\nLD dist_to_seg(const P&amp; p, const L&amp; l) {\n    if (l.s == l.t) return dist(p - l.s);\n    V vs = p - l.s, vt = p - l.t;\n    if (sgn(dot(l, vs)) &lt; 0) return dist(vs);\n    else if (sgn(dot(l, vt)) &gt; 0) return dist(vt);\n    else return dist_to_line(p, l);\n}\n\nP norm(const F&amp; f) { return cross(f.a - f.b, f.b - f.c); }\nint p_on_plane(const F&amp; f, const P&amp; p) { return sgn(dot(norm(f), p - f.a)) == 0; }\n\n// \u5224\u4e24\u70b9\u5728\u7ebf\u6bb5\u5f02\u4fa7 \u70b9\u5728\u7ebf\u6bb5\u4e0a\u8fd4\u56de 0 \u4e0d\u5171\u9762\u65e0\u610f\u4e49\nint opposite_side(const P&amp; u, const P&amp; v, const L&amp; l) {\n    return sgn(dot(cross(P(l), u - l.s), cross(P(l), v - l.s))) &lt; 0;\n}\n\nbool parallel(const L&amp; a, const L&amp; b) { return !sgn(dist2(cross(P(a), P(b)))); }\n// \u7ebf\u6bb5\u76f8\u4ea4\nint s_intersect(const L&amp; u, const L&amp; v) {\n    return p_on_plane(F(u.s, u.t, v.s), v.t) &amp;&amp;\n           opposite_side(u.s, u.t, v) &amp;&amp;\n           opposite_side(v.s, v.t, u);\n}\n</code></pre>"},{"location":"acm/template/geometry/geometry/#_22","title":"\u51f8\u5305","text":"<p>\u589e\u91cf\u6cd5\u3002\u5148\u5c06\u6240\u6709\u7684\u70b9\u6253\u4e71\u987a\u5e8f\uff0c\u7136\u540e\u9009\u62e9\u56db\u4e2a\u4e0d\u5171\u9762\u7684\u70b9\u7ec4\u6210\u4e00\u4e2a\u56db\u9762\u4f53\uff0c\u5982\u679c\u627e\u4e0d\u5230\u8bf4\u660e\u51f8\u5305\u4e0d\u5b58\u5728\u3002\u7136\u540e\u904d\u5386\u5269\u4f59\u7684\u70b9\uff0c\u4e0d\u65ad\u66f4\u65b0\u51f8\u5305\u3002\u5bf9\u904d\u5386\u5230\u7684\u70b9\u505a\u5982\u4e0b\u5904\u7406\u3002</p> <ol> <li>\u5982\u679c\u70b9\u5728\u51f8\u5305\u5185\uff0c\u5219\u4e0d\u66f4\u65b0\u3002</li> <li>\u5982\u679c\u70b9\u5728\u51f8\u5305\u5916\uff0c\u90a3\u4e48\u627e\u5230\u6240\u6709\u539f\u51f8\u5305\u4e0a\u6240\u6709\u5206\u9694\u4e86\u5bf9\u4e8e\u8fd9\u4e2a\u70b9\u53ef\u89c1\u9762\u548c\u4e0d\u53ef\u89c1\u9762\u7684\u8fb9\uff0c\u4ee5\u8fd9\u6837\u7684\u8fb9\u7684\u4e24\u4e2a\u70b9\u548c\u65b0\u7684\u70b9\u521b\u5efa\u65b0\u7684\u9762\u52a0\u5165\u51f8\u5305\u4e2d\u3002</li> </ol> <pre><code>struct FT {\n    int a, b, c;\n    FT() { }\n    FT(int a, int b, int c) : a(a), b(b), c(c) { }\n};\n\nbool p_on_line(const P&amp; p, const L&amp; l) {\n    return !sgn(dist2(cross(p - l.s, P(l))));\n}\n\nvector&lt;F&gt; convex_hull(vector&lt;P&gt; &amp;p) {\n    sort(p.begin(), p.end());\n    p.erase(unique(p.begin(), p.end()), p.end());\n    random_shuffle(p.begin(), p.end());\n    vector&lt;FT&gt; face;\n    FOR (i, 2, p.size()) {\n        if (p_on_line(p[i], L(p[0], p[1]))) continue;\n        swap(p[i], p[2]);\n        FOR (j, i + 1, p.size())\n            if (sgn(mix(p[1] - p[0], p[2] - p[1], p[j] - p[0]))) {\n                swap(p[j], p[3]);\n                face.emplace_back(0, 1, 2);\n                face.emplace_back(0, 2, 1);\n                goto found;\n            }\n    }\nfound:\n    vector&lt;vector&lt;int&gt;&gt; mk(p.size(), vector&lt;int&gt;(p.size()));\n    FOR (v, 3, p.size()) {\n        vector&lt;FT&gt; tmp;\n        FOR (i, 0, face.size()) {\n            int a = face[i].a, b = face[i].b, c = face[i].c;\n            if (sgn(mix(p[a] - p[v], p[b] - p[v], p[c] - p[v])) &lt; 0) {\n                mk[a][b] = mk[b][a] = v;\n                mk[b][c] = mk[c][b] = v;\n                mk[c][a] = mk[a][c] = v;\n            } else tmp.push_back(face[i]);\n        }\n        face = tmp;\n        FOR (i, 0, tmp.size()) {\n            int a = face[i].a, b = face[i].b, c = face[i].c;\n            if (mk[a][b] == v) face.emplace_back(b, a, v);\n            if (mk[b][c] == v) face.emplace_back(c, b, v);\n            if (mk[c][a] == v) face.emplace_back(a, c, v);\n        }\n    }\n    vector&lt;F&gt; out;\n    FOR (i, 0, face.size())\n        out.emplace_back(p[face[i].a], p[face[i].b], p[face[i].c]);\n    return out;\n}\n</code></pre>"},{"location":"acm/template/geometry/topic1/","title":"\u8ba1\u7b97\u51e0\u4f55\u521d\u6b65","text":"<p>Abstract</p> <ul> <li>\u4e8c\u7ef4\u51f8\u5305</li> </ul> <p>\u53c2\u8003\u6587\u732e\uff1aOI Wiki - \u8ba1\u7b97\u51e0\u4f55\u90e8\u5206\u7b80\u4ecb</p> <p>Attention</p> <ul> <li> <p>\u7531\u4e8e\u8ba1\u7b97\u51e0\u4f55\u7ecf\u5e38\u8fdb\u884c <code>double</code> \u7c7b\u578b\u7684\u6d6e\u70b9\u6570\u8ba1\u7b97\uff0c\u56e0\u6b64\u5e26\u6765\u4e86\u7cbe\u5ea6\u95ee\u9898\u548c\u65f6\u95f4\u95ee\u9898\u3002</p> </li> <li> <p>\u6709\u4e9b\u95ee\u9898\uff0c\u4f8b\u5982\u6c42\u70b9\u5750\u6807\u5747\u4e3a\u6574\u6570\u7684\u4e09\u89d2\u5f62\u9762\u79ef\uff0c\u53ef\u4ee5\u5229\u7528\u5176\u7279\u6b8a\u6027\u8fdb\u884c\u7eaf\u6574\u6570\u8ba1\u7b97\uff0c\u907f\u514d\u7528\u6d6e\u70b9\u6570\u5f71\u54cd\u7cbe\u5ea6\u3002</p> </li> <li> <p>\u7531\u4e8e\u6d6e\u70b9\u6570\u8ba1\u7b97\u6bd4\u6574\u6570\u8ba1\u7b97\u6162\uff0c\u6240\u4ee5\u9700\u8981\u6ce8\u610f\u7a0b\u5e8f\u7684\u5e38\u6570\u56e0\u5b50\u7ed9\u65f6\u95f4\u5e26\u6765\u7684\u5f71\u54cd\u3002</p> </li> </ul>"},{"location":"acm/template/geometry/topic1/#0","title":"0 \u524d\u7f6e\u77e5\u8bc6","text":""},{"location":"acm/template/geometry/topic1/#01","title":"0.1 \u4e8c\u7ef4\u8ba1\u7b97\u51e0\u4f55","text":"<ul> <li> <p>\u51f8\u591a\u8fb9\u5f62</p> <p>\u51f8\u591a\u8fb9\u5f62\u662f\u6307\u6240\u6709\u5185\u89d2\u5927\u5c0f\u90fd\u5728 \\([0, \\pi]\\) \u8303\u56f4\u5185\u7684 \u7b80\u5355\u591a\u8fb9\u5f62\u3002</p> </li> <li> <p>\u51f8\u5305</p> <p>\u5728\u5e73\u9762\u4e0a\u80fd\u5305\u542b\u6240\u6709\u7ed9\u5b9a\u70b9\u7684\u6700\u5c0f\u51f8\u591a\u8fb9\u5f62\u53eb\u505a\u51f8\u5305\u3002</p> </li> <li> <p>\u5224\u65ad\u4e00\u4e2a\u70b9\u5728\u76f4\u7ebf\u7684\u54ea\u8fb9</p> <p>\u6211\u4eec\u6709\u76f4\u7ebf\u4e0a\u7684\u4e00\u70b9 \\(P\\) \u7684\u76f4\u7ebf\u7684\u65b9\u5411\u5411\u91cf \\(\\mathbf v\\)\uff0c\u60f3\u77e5\u9053\u67d0\u4e2a\u70b9 \\(Q\\) \u5728\u76f4\u7ebf\u7684\u54ea\u8fb9\u3002</p> <p>\u6211\u4eec\u5229\u7528\u5411\u91cf\u79ef\u7684\u6027\u8d28\uff0c\u7b97\u51fa \\(\\overrightarrow {PQ}\\times \\mathbf v\\)\u3002\u5982\u679c\u5411\u91cf\u79ef\u4e3a\u8d1f\uff0c\u5219 \\(Q\\) \u5728\u76f4\u7ebf\u4e0a\u65b9\uff0c\u5982\u679c\u5411\u91cf\u79ef\u4e3a \\(0\\)\uff0c\u5219 \\(Q\\) \u5728\u76f4\u7ebf\u4e0a\uff0c\u5982\u679c\u5411\u91cf\u79ef\u4e3a\u6b63\uff0c\u5219 \\(Q\\) \u5728\u76f4\u7ebf\u4e0b\u65b9\u3002</p> </li> </ul>"},{"location":"acm/template/geometry/topic1/#02","title":"0.2 \u4e09\u7ef4\u8ba1\u7b97\u51e0\u4f55","text":""},{"location":"acm/template/geometry/topic1/#03","title":"0.3 \u8ddd\u79bb","text":"<ul> <li> <p>\u6b27\u6c0f\u8ddd\u79bb</p> <p>\u4e00\u822c\u4e5f\u79f0\u4f5c\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u3002\u5728\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u4e2d\uff0c\u8bbe\u70b9 \\(A,B\\) \u7684\u5750\u6807\u5206\u522b\u4e3a \\(A(x_1,y_1),B(x_2,y_2)\\)\uff0c\u5219\u4e24\u70b9\u95f4\u7684\u6b27\u6c0f\u8ddd\u79bb\u4e3a\uff1a</p> \\[   \\left | AB \\right | = \\sqrt{\\left ( x_2 - x_1 \\right )^2 + \\left ( y_2 - y_1 \\right )^2} \\] <p>\\(n\\) \u7ef4\u7a7a\u95f4\u4e2d\u6b27\u6c0f\u8ddd\u79bb\u7684\u8ddd\u79bb\u516c\u5f0f\uff1a\u5bf9\u4e8e \\(\\vec A(x_{11}, x_{12}, \\cdots,x_{1n}) ,~ \\vec B(x_{21}, x_{22}, \\cdots,x_{2n})\\)\uff0c\u6709</p> \\[   \\begin{aligned}   \\lVert\\overrightarrow{AB}\\rVert &amp;= \\sqrt{\\left ( x_{11} - x_{21} \\right )^2 + \\left ( x_{12} - x_{22} \\right )^2 + \\cdot \\cdot \\cdot +\\left ( x_{1n} - x_{2n} \\right )^2}\\\\   &amp;= \\sqrt{\\sum_{i = 1}^{n}(x_{1i} - x_{2i})^2}   \\end{aligned} \\] </li> <li> <p>\u66fc\u54c8\u987f\u8ddd\u79bb</p> <p>\u5728\u4e8c\u7ef4\u7a7a\u95f4\u5185\uff0c\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\uff08Manhattan distance\uff09\u4e3a\u5b83\u4eec\u6a2a\u5750\u6807\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u4e0e\u7eb5\u5750\u6807\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u4e4b\u548c\u3002\u8bbe\u70b9 \\(A(x_1,y_1),B(x_2,y_2)\\)\uff0c\u5219 \\(A,B\\) \u4e4b\u95f4\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u7528\u516c\u5f0f\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a</p> \\[   d(A,B) = |x_1 - x_2| + |y_1 - y_2| \\] <p>\\(n\\) \u7ef4\u7a7a\u95f4\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u516c\u5f0f\u4e3a\uff1a</p> \\[   \\begin{aligned}   d(A,B) &amp;= |x_1 - y_1| + |x_2 - y_2| + \\cdot \\cdot \\cdot + |x_n - y_n|\\\\   &amp;= \\sum_{i = 1}^{n}|x_i - y_i|   \\end{aligned} \\] </li> <li> <p>\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb</p> <p>\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\uff08Chebyshev distance\uff09\u662f\u5411\u91cf\u7a7a\u95f4\u4e2d\u7684\u4e00\u79cd\u5ea6\u91cf\uff0c\u4e8c\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u5b9a\u4e49\u4e3a\u5176\u5404\u5750\u6807\u6570\u503c\u5dee\u7684\u6700\u5927\u503c\u3002</p> <p>\u5728\u4e8c\u7ef4\u7a7a\u95f4\u5185\uff0c\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\u4e3a\u5b83\u4eec\u6a2a\u5750\u6807\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u4e0e\u7eb5\u5750\u6807\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u7684\u6700\u5927\u503c\u3002\u8bbe\u70b9 \\(A(x_1,y_1),B(x_2,y_2)\\)\uff0c\u5219 \\(A,B\\) \u4e4b\u95f4\u7684\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\u7528\u516c\u5f0f\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a</p> \\[   d(A,B) = \\max(|x_1 - x_2|, |y_1 - y_2|) \\] <p>\\(n\\) \u7ef4\u7a7a\u95f4\u4e2d\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\u7684\u8ddd\u79bb\u516c\u5f0f\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a</p> \\[   \\begin{aligned}   d(x,y) &amp;= \\max\\begin{Bmatrix} |x_1 - y_1|,|x_2 - y_2|,\\cdot \\cdot \\cdot,|x_n - y_n|\\end{Bmatrix} \\\\   &amp;= \\max\\begin{Bmatrix} |x_i - y_i|\\end{Bmatrix}(i \\in [1, n])\\end{aligned} \\] </li> </ul> <p>\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\u548c\u66fc\u54c8\u987f\u8ddd\u79bb\u4e4b\u95f4\u7684\u5173\u7cfb</p> <ul> <li>\u66fc\u54c8\u987f\u5750\u6807\u7cfb\u662f\u901a\u8fc7\u5207\u6bd4\u96ea\u592b\u5750\u6807\u7cfb\u65cb\u8f6c \\(45^\\circ\\) \u540e\uff0c\u518d\u7f29\u5c0f\u5230\u539f\u6765\u7684\u4e00\u534a\u5f97\u5230\u7684\u3002</li> <li>\u5c06\u4e00\u4e2a\u70b9 \\((x,y)\\) \u7684\u5750\u6807\u53d8\u4e3a \\((x + y, x - y)\\) \u540e\uff0c\u539f\u5750\u6807\u7cfb\u4e2d\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u7b49\u4e8e\u65b0\u5750\u6807\u7cfb\u4e2d\u7684\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\u3002</li> <li>\u5c06\u4e00\u4e2a\u70b9 \\((x,y)\\) \u7684\u5750\u6807\u53d8\u4e3a \\((\\dfrac{x + y}{2},\\dfrac{x - y}{2})\\) \u540e\uff0c\u539f\u5750\u6807\u7cfb\u4e2d\u7684\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\u7b49\u4e8e\u65b0\u5750\u6807\u7cfb\u4e2d\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u3002</li> </ul>"},{"location":"acm/template/geometry/topic1/#1","title":"1 \u4e8c\u7ef4\u51f8\u5305","text":"<p>\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7ed9\u5b9a\u82e5\u5e72\u70b9\uff0c\u6c42\u4e00\u4e2a\u6700\u5c0f\u7684\u51f8\u5305\u4f7f\u5f97\u80fd\u5305\u542b\u5168\u90e8\u7ed9\u5b9a\u70b9\u3002</p>"},{"location":"acm/template/geometry/topic1/#11-andrew","title":"1.1 Andrew \u7b97\u6cd5\u6c42\u51f8\u5305","text":"<ul> <li> <p>\u601d\u8def</p> <p>\u9996\u5148\u5c06\u6bcf\u4e2a\u70b9\u6309\u6a2a\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff08\u6a2a\u5750\u6807\u76f8\u540c\u5c31\u6309\u7eb5\u5750\u6807\uff09\uff0c\u7136\u540e\u5148\u6309\u5347\u5e8f\u679a\u4e3e\u51fa\u4e0b\u51f8\u58f3\uff0c\u7136\u540e\u518d\u6309\u964d\u5e8f\u6c42\u51fa\u4e0a\u51f8\u58f3\u3002</p> <p>\u5347\u5e8f\u679a\u4e3e\u7684\u65f6\u5019\uff0c\u6211\u4eec\u7528\u6808\u5b58\u50a8\u4e0b\u51f8\u58f3\u4e2d\u7684\u5143\u7d20\uff0c\u8bbe \\(S_1\\)\uff0c\\(S_2\\) \u662f\u6808\u9876\u7684\u4e24\u4e2a\u5143\u7d20\uff0c\u5176\u4e2d \\(S_1\\) \u662f\u6808\u9876\u3002\u9047\u5230\u4e00\u4e2a\u65b0\u7684\u70b9 \\(P(x, y)\\)\uff0c\u5f53 \\(\\vec {S_2S_1} \\times \\vec {S_1P} \\le 0\\) \u65f6\uff0c\u8bf4\u660e \\(S_1\\) \u4e0d\u5e94\u8be5\u662f\u4e0b\u51f8\u58f3\u4e2d\u7684\u70b9\uff0c\u5f39\u51fa \\(S_1\\)\uff0c\u7ee7\u7eed\u5224\u65ad\u3002\u76f4\u5230\u5f39\u4e0d\u51fa\u65f6\uff0c\u5c06 \\(P\\) \u63d2\u5165\u6808\u4e2d\u3002</p> <p>\u964d\u5e8f\u679a\u4e3e\u65f6\u540c\u7406\uff0c\u5224\u65ad\u4f9d\u636e\u4e5f\u662f \\(\\vec {S_2S_1} \\times \\vec {S_1P} \\le 0\\)\uff0c\u6240\u4ee5\u5c31\u662f\u76f8\u5f53\u4e8e\u5012\u7740\u8dd1\u4e00\u904d\uff0c\u5373\u53ef\u6c42\u51fa\u4e0a\u51f8\u58f3\u3002</p> </li> <li> <p>\u5b9e\u73b0</p> </li> </ul> <pre><code>struct Node {\n  double x, y;\n  Node operator - (Node a) { return {x - a.x, y - a.y}; }\n  double operator * (Node a) { return x * a.y - y * a.x; }\n};\nNode s[N];\ndouble len(double x, double y) {\n  return sqrt(x * x + y * y);\n}\n\nbool cmp(Node a, Node b) {\n  return (fabs(a.x - b.x) &lt; eps ? a.y &lt; b.y : a.x &lt; b.x);\n}\n\nint main(){\n  std::ios::sync_with_stdio(false);\n  std::cin.tie(nullptr);\n  int n;\n  cin &gt;&gt; n;\n  vector&lt;int&gt; q(n + 1);\n  for(int i = 1; i &lt;= n; i++) {\n    cin &gt;&gt; s[i].x &gt;&gt; s[i].y;\n  } \n  sort(s + 1, s + 1 + n, cmp);\n  int tmp = 0;\n  for(int i = 1; i &lt;= n; i++) {\n    while(tmp &gt;= 2 &amp;&amp; (s[q[tmp]] - s[q[tmp - 1]]) * (s[i] - s[q[tmp]]) &lt;= 0) tmp--;\n    q[++tmp] = i;\n  }\n  int kdl = tmp;\n  for(int i = n - 1; i &gt;= 1; i--) {\n    while(kdl &gt; tmp &amp;&amp; (s[q[kdl]] - s[q[kdl - 1]]) * (s[i] - s[q[kdl]]) &lt;= 0) kdl--;\n    q[++kdl] = i;\n  }\n  double ans = 0;\n  for(int i = 2; i &lt;= kdl; i++) {\n    ans += len(s[q[i]].x - s[q[i - 1]].x, s[q[i]].y - s[q[i - 1]].y);\n  }\n  cout &lt;&lt; fixed &lt;&lt; setprecision(2) &lt;&lt; ans &lt;&lt; endl; // \u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570\n  return 0;\n}\n</code></pre>"},{"location":"acm/template/geometry/topic1/#2","title":"2 \u65cb\u8f6c\u5361\u58f3","text":""},{"location":"acm/template/geometry/topic1/#3","title":"3 \u534a\u5e73\u9762\u4ea4","text":""},{"location":"acm/template/geometry/topic1/#4","title":"4 \u8f9b\u666e\u68ee\u7b97\u6cd5","text":""},{"location":"acm/template/graph/graph/","title":"\u56fe\u8bba","text":""},{"location":"acm/template/graph/graph/#lca","title":"LCA","text":"<ul> <li>\u500d\u589e</li> </ul> <pre><code>const int N = 3e5 + 5;\nstd::vector&lt;int&gt; E[N];\nint Fa[N][25], dep[N];\nvoid dfs(int u, int fa) {\n    Fa[u][0] = fa; dep[u] = dep[fa] + 1;\n    for (int i = 1; i &lt;= 20; i++) Fa[u][i] = Fa[Fa[u][i - 1]][i - 1];\n    for (int&amp; v: E[u]) {\n        if (v == fa) continue;\n        dfs(v, u);\n    }\n}\n\nint lca(int u, int v) {\n    if (dep[u] &lt; dep[v]) std::swap(u, v);\n    int t = dep[u] - dep[v];\n    for (int i = 0; i &lt;= 20; i++) if (t &amp; (1 &lt;&lt; i)) u = Fa[u][i];\n    for (int i = 20; i &gt;= 0; i--) {\n        int uu = Fa[u][i], vv = Fa[v][i];\n        if (uu != vv) { u = uu; v = vv; }\n    }\n    return u == v ? u : Fa[u][0];\n}\n</code></pre>"},{"location":"acm/template/graph/graph/#_2","title":"\u7f51\u7edc\u6d41","text":"<ul> <li>\u6700\u5927\u6d41</li> </ul> <pre><code>struct E {\n    int to, cp;\n    E(int to, int cp): to(to), cp(cp) {}\n};\n\nstruct Dinic {\n    static const int M = 1E5 * 5;\n    int m, s, t;\n    vector&lt;E&gt; edges;\n    vector&lt;int&gt; G[M];\n    int d[M];\n    int cur[M];\n\n    void init(int n, int s, int t) {\n        this-&gt;s = s; this-&gt;t = t;\n        for (int i = 0; i &lt;= n; i++) G[i].clear();\n        edges.clear(); m = 0;\n    }\n\n    void addedge(int u, int v, int cap) {\n        edges.emplace_back(v, cap);\n        edges.emplace_back(u, 0);\n        G[u].push_back(m++);\n        G[v].push_back(m++);\n    }\n\n    bool BFS() {\n        memset(d, 0, sizeof d);\n        queue&lt;int&gt; Q;\n        Q.push(s); d[s] = 1;\n        while (!Q.empty()) {\n            int x = Q.front(); Q.pop();\n            for (int&amp; i: G[x]) {\n                E &amp;e = edges[i];\n                if (!d[e.to] &amp;&amp; e.cp &gt; 0) {\n                    d[e.to] = d[x] + 1;\n                    Q.push(e.to);\n                }\n            }\n        }\n        return d[t];\n    }\n\n    int DFS(int u, int cp) {\n        if (u == t || !cp) return cp;\n        int tmp = cp, f;\n        for (int&amp; i = cur[u]; i &lt; G[u].size(); i++) {\n            E&amp; e = edges[G[u][i]];\n            if (d[u] + 1 == d[e.to]) {\n                f = DFS(e.to, min(cp, e.cp));\n                e.cp -= f;\n                edges[G[u][i] ^ 1].cp += f;\n                cp -= f;\n                if (!cp) break;\n            }\n        }\n        return tmp - cp;\n    }\n\n    int go() {\n        int flow = 0;\n        while (BFS()) {\n            memset(cur, 0, sizeof cur);\n            flow += DFS(s, INF);\n        }\n        return flow;\n    }\n} DC;\n</code></pre> <ul> <li>\u8d39\u7528\u6d41</li> </ul> <pre><code>struct E {\n    int from, to, cp, v;\n    E() {}\n    E(int f, int t, int cp, int v) : from(f), to(t), cp(cp), v(v) {}\n};\n\nstruct MCMF {\n    int n, m, s, t;\n    vector&lt;E&gt; edges;\n    vector&lt;int&gt; G[M];\n    bool inq[M];\n    int d[M], p[M], a[M];\n\n    void init(int _n, int _s, int _t) {\n        n = _n; s = _s; t = _t;\n        FOR (i, 0, n + 1) G[i].clear();\n        edges.clear(); m = 0;\n    }\n\n    void addedge(int from, int to, int cap, int cost) {\n        edges.emplace_back(from, to, cap, cost);\n        edges.emplace_back(to, from, 0, -cost);\n        G[from].push_back(m++);\n        G[to].push_back(m++);\n    }\n\n    bool BellmanFord(int &amp;flow, int &amp;cost) {\n        FOR (i, 0, n + 1) d[i] = INF;\n        memset(inq, 0, sizeof inq);\n        d[s] = 0, a[s] = INF, inq[s] = true;\n        queue&lt;int&gt; Q; Q.push(s);\n        while (!Q.empty()) {\n            int u = Q.front(); Q.pop();\n            inq[u] = false;\n            for (int&amp; idx: G[u]) {\n                E &amp;e = edges[idx];\n                if (e.cp &amp;&amp; d[e.to] &gt; d[u] + e.v) {\n                    d[e.to] = d[u] + e.v;\n                    p[e.to] = idx;\n                    a[e.to] = min(a[u], e.cp);\n                    if (!inq[e.to]) {\n                        Q.push(e.to);\n                        inq[e.to] = true;\n                    }\n                }\n            }\n        }\n        if (d[t] == INF) return false;\n        flow += a[t];\n        cost += a[t] * d[t];\n        int u = t;\n        while (u != s) {\n            edges[p[u]].cp -= a[t];\n            edges[p[u] ^ 1].cp += a[t];\n            u = edges[p[u]].from;\n        }\n        return true;\n    }\n\n    int go() {\n        int flow = 0, cost = 0;\n        while (BellmanFord(flow, cost));\n        return cost;\n    }\n} MM;\n</code></pre> <ul> <li>zkw \u8d39\u7528\u6d41\uff08\u4ee3\u7801\u957f\u5ea6\u6ca1\u6709\u4f18\u52bf\uff09</li> <li>\u4e0d\u5141\u8bb8\u6709\u8d1f\u6743\u8fb9</li> </ul> <pre><code>struct E {\n    int to, cp, v;\n    E() {}\n    E(int to, int cp, int v): to(to), cp(cp), v(v) {}\n};\n\nstruct MCMF {\n    int n, m, s, t, cost, D;\n    vector&lt;E&gt; edges;\n    vector&lt;int&gt; G[N];\n    bool vis[N];\n\n    void init(int _n, int _s, int _t) {\n        n = _n; s = _s; t = _t;\n        FOR (i, 0, n + 1) G[i].clear();\n        edges.clear(); m = 0;\n    }\n\n    void addedge(int from, int to, int cap, int cost) {\n        edges.emplace_back(to, cap, cost);\n        edges.emplace_back(from, 0, -cost);\n        G[from].push_back(m++);\n        G[to].push_back(m++);\n    }\n\n    int aug(int u, int cp) {\n        if (u == t) {\n            cost += D * cp;\n            return cp;\n        }\n        vis[u] = true;\n        int tmp = cp;\n        for (int idx: G[u]) {\n            E&amp; e = edges[idx];\n            if (e.cp &amp;&amp; !e.v &amp;&amp; !vis[e.to]) {\n                int f = aug(e.to, min(cp, e.cp));\n                e.cp -= f;\n                edges[idx ^ 1].cp += f;\n                cp -= f;\n                if (!cp) break;\n            }\n        }\n        return tmp - cp;\n    }\n\n    bool modlabel() {\n        int d = INF;\n        FOR (u, 0, n + 1)\n            if (vis[u])\n                for (int&amp; idx: G[u]) {\n                    E&amp; e = edges[idx];\n                    if (e.cp &amp;&amp; !vis[e.to]) d = min(d, e.v);\n                }\n        if (d == INF) return false;\n        FOR (u, 0, n + 1)\n            if (vis[u])\n                for (int&amp; idx: G[u]) {\n                    edges[idx].v -= d;\n                    edges[idx ^ 1].v += d;\n                }\n        D += d;\n        return true;\n    }\n\n    int go(int k) {\n        cost = D = 0;\n        int flow = 0;\n        while (true) {\n            memset(vis, 0, sizeof vis);\n            int t = aug(s, INF);\n            if (!t &amp;&amp; !modlabel()) break;\n            flow += t;\n        }\n        return cost;\n    }\n} MM;\n</code></pre> <ul> <li>\u5e26\u4e0b\u754c\u7f51\u7edc\u6d41\uff1a</li> <li>\u65e0\u6e90\u6c47\uff1a\\(u \\rightarrow v\\) \u8fb9\u5bb9\u91cf\u4e3a \\([l,r]\\)\uff0c\u8fde\u5bb9\u91cf \\(r-l\\)\uff0c\u865a\u62df\u6e90\u70b9\u5230 \\(v\\) \u8fde \\(l\\)\uff0c\\(u\\) \u5230\u865a\u62df\u6c47\u70b9\u8fde \\(l\\)\u3002</li> <li>\u6709\u6e90\u6c47\uff1a\u4e3a\u4e86\u8ba9\u6d41\u80fd\u5faa\u73af\u4f7f\u7528\uff0c\u8fde \\(T \\rightarrow S\\)\uff0c\u5bb9\u91cf \\(\\infty\\)\u3002</li> <li>\u6700\u5927\u6d41\uff1a\u8dd1\u5b8c\u53ef\u884c\u6d41\u540e\uff0c\u52a0 \\(S' \\rightarrow S\\)\uff0c\\(T \\rightarrow T'\\)\uff0c\u6700\u5927\u6d41\u5c31\u662f\u7b54\u6848\uff08\\(T \\rightarrow S\\) \u7684\u6d41\u91cf\u81ea\u52a8\u9000\u56de\u53bb\u4e86\uff0c\u8fd9\u4e00\u90e8\u5206\u5c31\u662f\u4e0b\u754c\u90e8\u5206\u7684\u6d41\u91cf\uff09\u3002</li> <li>\u6700\u5c0f\u6d41\uff1a\\(T\\) \u5230 \\(S\\) \u7684\u90a3\u6761\u8fb9\u7684\u5b9e\u9645\u6d41\u91cf\uff0c\u51cf\u53bb\u5220\u6389\u90a3\u6761\u8fb9\u540e \\(T\\) \u5230 \\(S\\) \u7684\u6700\u5927\u6d41\u3002</li> <li>\u7f51\u4e0a\u8bf4\u53ef\u80fd\u4f1a\u51cf\u6210\u8d1f\u7684\uff0c\u8fd8\u8981\u6709\u9650\u5730\u4f9b\u5e94 \\(S\\) \u4e4b\u540e\uff0c\u518d\u8dd1\u4e00\u904d \\(S\\) \u5230 \\(T\\) \u7684\u3002</li> <li>\u8d39\u7528\u6d41\uff1a\u5fc5\u8981\u7684\u90e8\u5206\uff08\u4e0b\u754c\u4ee5\u4e0b\u7684\uff09\u4e0d\u8981\u94b1\uff0c\u5269\u4e0b\u7684\u6309\u7167\u6700\u5927\u6d41\u3002</li> </ul>"},{"location":"acm/template/graph/graph/#_3","title":"\u6811\u4e0a\u8def\u5f84\u4ea4","text":"<pre><code>int intersection(int x, int y, int xx, int yy) {\n    int t[4] = {lca(x, xx), lca(x, yy), lca(y, xx), lca(y, yy)};\n    sort(t, t + 4);\n    int r = lca(x, y), rr = lca(xx, yy);\n    if (dep[t[0]] &lt; min(dep[r], dep[rr]) || dep[t[2]] &lt; max(dep[r], dep[rr]))\n        return 0;\n    int tt = lca(t[2], t[3]);\n    int ret = 1 + dep[t[2]] + dep[t[3]] - dep[tt] * 2;\n    return ret;\n}\n</code></pre>"},{"location":"acm/template/graph/graph/#_4","title":"\u6811\u4e0a\u70b9\u5206\u6cbb","text":"<pre><code>int get_rt(int u) {\n    static int q[N], fa[N], sz[N], mx[N];\n    int p = 0, cur = -1;\n    q[p++] = u; fa[u] = -1;\n    while (++cur &lt; p) {\n        u = q[cur]; mx[u] = 0; sz[u] = 1;\n        for (int&amp; v: G[u])\n            if (!vis[v] &amp;&amp; v != fa[u]) fa[q[p++] = v] = u;\n    }\n    FORD (i, p - 1, -1) {\n        u = q[i];\n        mx[u] = max(mx[u], p - sz[u]);\n        if (mx[u] * 2 &lt;= p) return u;\n        sz[fa[u]] += sz[u];\n        mx[fa[u]] = max(mx[fa[u]], sz[u]);\n    }\n    assert(0);\n}\n\nvoid dfs(int u) {\n    u = get_rt(u);\n    vis[u] = true;\n    get_dep(u, -1, 0);\n    // ...\n    for (E&amp; e: G[u]) {\n        int v = e.to;\n        if (vis[v]) continue;\n        // ...\n        dfs(v);\n    }\n}\n</code></pre> <ul> <li>\u52a8\u6001\u70b9\u5206\u6cbb</li> </ul> <pre><code>const int N = 15E4 + 100, INF = 1E9;\nstruct E {\n    int to, d;\n};\nvector&lt;E&gt; G[N];\nint n, Q, w[N];\nLL A, ans;\n\nbool vis[N];\nint sz[N];\n\nint get_rt(int u) {\n    static int q[N], fa[N], sz[N], mx[N];\n    int p = 0, cur = -1;\n    q[p++] = u; fa[u] = -1;\n    while (++cur &lt; p) {\n        u = q[cur]; mx[u] = 0; sz[u] = 1;\n        for (int&amp; v: G[u])\n            if (!vis[v] &amp;&amp; v != fa[u]) fa[q[p++] = v] = u;\n    }\n    FORD (i, p - 1, -1) {\n        u = q[i];\n        mx[u] = max(mx[u], p - sz[u]);\n        if (mx[u] * 2 &lt;= p) return u;\n        sz[fa[u]] += sz[u];\n        mx[fa[u]] = max(mx[fa[u]], sz[u]);\n    }\n    assert(0);\n}\n\nint dep[N], md[N];\nvoid get_dep(int u, int fa, int d) {\n    dep[u] = d; md[u] = 0;\n    for (E&amp; e: G[u]) {\n        int v = e.to;\n        if (vis[v] || v == fa) continue;\n        get_dep(v, u, d + e.d);\n        md[u] = max(md[u], md[v] + 1);\n    }\n}\n\nstruct P {\n    int w;\n    LL s;\n};\nusing VP = vector&lt;P&gt;;\nstruct R {\n    VP *rt, *rt2;\n    int dep;\n};\nVP pool[N &lt;&lt; 1], *pit = pool;\nvector&lt;R&gt; tr[N];\n\nvoid go(int u, int fa, VP* rt, VP* rt2) {\n    tr[u].push_back({rt, rt2, dep[u]});\n    for (E&amp; e: G[u]) {\n        int v = e.to;\n        if (v == fa || vis[v]) continue;\n        go(v, u, rt, rt2);\n    }\n}\n\nvoid dfs(int u) {\n    u = get_rt(u);\n    vis[u] = true;\n    get_dep(u, -1, 0);\n    VP* rt = pit++; tr[u].push_back({rt, nullptr, 0});\n    for (E&amp; e: G[u]) {\n        int v = e.to;\n        if (vis[v]) continue;\n        go(v, u, rt, pit++);\n        dfs(v);\n    }\n}\n\nbool cmp(const P&amp; a, const P&amp; b) { return a.w &lt; b.w; }\n\nLL query(VP&amp; p, int d, int l, int r) {\n    l = lower_bound(p.begin(), p.end(), P{l, -1}, cmp) - p.begin();\n    r = upper_bound(p.begin(), p.end(), P{r, -1}, cmp) - p.begin() - 1;\n    return p[r].s - p[l - 1].s + 1LL * (r - l + 1) * d;\n}\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; Q &gt;&gt; A;\n    FOR (i, 1, n + 1) scanf(\"%d\", &amp;w[i]);\n    FOR (_, 1, n) {\n        int u, v, d; scanf(\"%d%d%d\", &amp;u, &amp;v, &amp;d);\n        G[u].push_back({v, d}); G[v].push_back({u, d});\n    }\n    dfs(1);\n    FOR (i, 1, n + 1)\n        for (R&amp; x: tr[i]) {\n            x.rt-&gt;push_back({w[i], x.dep});\n            if (x.rt2) x.rt2-&gt;push_back({w[i], x.dep});\n        }\n    FOR (it, pool, pit) {\n        it-&gt;push_back({-INF, 0});\n        sort(it-&gt;begin(), it-&gt;end(), cmp);\n        FOR (i, 1, it-&gt;size())\n            (*it)[i].s += (*it)[i - 1].s;\n    }\n    while (Q--) {\n        int u; LL a, b; scanf(\"%d%lld%lld\", &amp;u, &amp;a, &amp;b);\n        a = (a + ans) % A; b = (b + ans) % A;\n        int l = min(a, b), r = max(a, b);\n        ans = 0;\n        for (R&amp; x: tr[u]) {\n            ans += query(*(x.rt), x.dep, l, r);\n            if (x.rt2) ans -= query(*(x.rt2), x.dep, l, r);\n        }\n        printf(\"%lld\\n\", ans);\n    }\n}\n</code></pre>"},{"location":"acm/template/graph/graph/#_5","title":"\u6811\u94fe\u5256\u5206","text":"<ul> <li>\u521d\u59cb\u5316\u9700\u8981\u6e05\u7a7a <code>clk</code></li> <li>\u4f7f\u7528 <code>hld::predfs(1, 1); hld::dfs(1, 1);</code></li> </ul> <pre><code>int fa[N], dep[N], idx[N], out[N], ridx[N];\nnamespace hld {\n    int sz[N], son[N], top[N], clk;\n    void predfs(int u, int d) {\n        dep[u] = d; sz[u] = 1;\n        int&amp; maxs = son[u] = -1;\n        for (int&amp; v: G[u]) {\n            if (v == fa[u]) continue;\n            fa[v] = u;\n            predfs(v, d + 1);\n            sz[u] += sz[v];\n            if (maxs == -1 || sz[v] &gt; sz[maxs]) maxs = v;\n        }\n    }\n    void dfs(int u, int tp) {\n        top[u] = tp; idx[u] = ++clk; ridx[clk] = u;\n        if (son[u] != -1) dfs(son[u], tp);\n        for (int&amp; v: G[u])\n            if (v != fa[u] &amp;&amp; v != son[u]) dfs(v, v);\n        out[u] = clk;\n    }\n    template&lt;typename T&gt;\n    int go(int u, int v, T&amp;&amp; f = [](int, int) {}) {\n        int uu = top[u], vv = top[v];\n        while (uu != vv) {\n            if (dep[uu] &lt; dep[vv]) { swap(uu, vv); swap(u, v); }\n            f(idx[uu], idx[u]);\n            u = fa[uu]; uu = top[u];\n        }\n        if (dep[u] &lt; dep[v]) swap(u, v);\n        // choose one\n        // f(idx[v], idx[u]);\n        // if (u != v) f(idx[v] + 1, idx[u]);\n        return v;\n    }\n    int up(int u, int d) {\n        while (d) {\n            if (dep[u] - dep[top[u]] &lt; d) {\n                d -= dep[u] - dep[top[u]];\n                u = top[u];\n            } else return ridx[idx[u] - d];\n            u = fa[u]; --d;\n        }\n        return u;\n    }\n    int finds(int u, int rt) { // \u627e u \u5728 rt \u7684\u54ea\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u4e2d\n        while (top[u] != top[rt]) {\n            u = top[u];\n            if (fa[u] == rt) return u;\n            u = fa[u];\n        }\n        return ridx[idx[rt] + 1];\n    }\n}\n</code></pre>"},{"location":"acm/template/graph/graph/#_6","title":"\u4e8c\u5206\u56fe\u5339\u914d","text":"<ul> <li>\u6700\u5c0f\u8986\u76d6\u6570 = \u6700\u5927\u5339\u914d\u6570</li> <li>\u6700\u5927\u72ec\u7acb\u96c6 = \u9876\u70b9\u6570 - \u4e8c\u5206\u56fe\u5339\u914d\u6570</li> <li>DAG \u6700\u5c0f\u8def\u5f84\u8986\u76d6\u6570 = \u7ed3\u70b9\u6570 - \u62c6\u70b9\u540e\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u6570</li> </ul> <pre><code>struct MaxMatch {\n    int n;\n    vector&lt;int&gt; G[N];\n    int vis[N], left[N], clk;\n\n    void init(int n) {\n        this-&gt;n = n;\n        FOR (i, 0, n + 1) G[i].clear();\n        memset(left, -1, sizeof left);\n        memset(vis, -1, sizeof vis);\n    }\n\n    bool dfs(int u) {\n        for (int v: G[u])\n            if (vis[v] != clk) {\n                vis[v] = clk;\n                if (left[v] == -1 || dfs(left[v])) {\n                    left[v] = u;\n                    return true;\n                }\n            }\n        return false;\n    }\n\n    int match() {\n        int ret = 0;\n        for (clk = 0; clk &lt;= n; ++clk)\n            if (dfs(clk)) ++ret;\n        return ret;\n    }\n} MM;\n</code></pre> <ul> <li>\u4e8c\u5206\u56fe\u6700\u5927\u6743\u5b8c\u7f8e\u5339\u914d KM (\\(O(n^3)\\))</li> </ul> <pre><code>namespace R {\n    const int M = 400 + 5;\n    const int INF = 2E9;\n    int n;\n    int w[M][M], kx[M], ky[M], py[M], vy[M], slk[M], pre[M];\n\n    LL KM() {\n        FOR (i, 1, n + 1)\n            FOR (j, 1, n + 1)\n                kx[i] = max(kx[i], w[i][j]);\n        FOR (i, 1, n + 1) {\n            fill(vy, vy + n + 1, 0);\n            fill(slk, slk + n + 1, INF);\n            fill(pre, pre + n + 1, 0);\n            int k = 0, p = -1;\n            for (py[k = 0] = i; py[k]; k = p) {\n                int d = INF;\n                vy[k] = 1;\n                int x = py[k];\n                FOR (j, 1, n + 1)\n                    if (!vy[j]) {\n                        int t = kx[x] + ky[j] - w[x][j];\n                        if (t &lt; slk[j]) { slk[j] = t; pre[j] = k; }\n                        if (slk[j] &lt; d) { d = slk[j]; p = j; }\n                    }\n                FOR (j, 0, n + 1)\n                    if (vy[j]) { kx[py[j]] -= d; ky[j] += d; }\n                    else slk[j] -= d;\n            }\n            for (; k; k = pre[k]) py[k] = py[pre[k]];\n        }\n        LL ans = 0;\n        FOR (i, 1, n + 1) ans += kx[i] + ky[i];\n        return ans;\n    }\n}\n</code></pre>"},{"location":"acm/template/graph/graph/#_7","title":"\u865a\u6811","text":"<pre><code>void go(vector&lt;int&gt;&amp; V, int&amp; k) {\n    int u = V[k]; f[u] = 0;\n    dbg(u, k);\n    for (auto&amp; e: G[u]) {\n        int v = e.to;\n        if (v == pa[u][0]) continue;\n        while (k + 1 &lt; V.size()) {\n            int to = V[k + 1];\n            if (in[to] &lt;= out[v]) {\n                go(V, ++k);\n                if (key[to]) f[u] += w[to];\n                else f[u] += min(f[to], (LL)w[to]);\n            } else break;\n        }\n    }\n    dbg(u, f[u]);\n}\ninline bool cmp(int a, int b) { return in[a] &lt; in[b]; }\nLL solve(vector&lt;int&gt;&amp; V) {\n    static vector&lt;int&gt; a; a.clear();\n    for (int&amp; x: V) a.push_back(x);\n    sort(a.begin(), a.end(), cmp);\n    FOR (i, 1, a.size())\n        a.push_back(lca(a[i], a[i - 1]));\n    a.push_back(1);\n    sort(a.begin(), a.end(), cmp);\n    a.erase(unique(a.begin(), a.end()), a.end());\n    dbg(a);\n    int tmp; go(a, tmp = 0);\n    return f[1];\n}\n</code></pre>"},{"location":"acm/template/graph/graph/#_8","title":"\u6b27\u62c9\u8def\u5f84","text":"<pre><code>int S[N &lt;&lt; 1], top;\nEdge edges[N &lt;&lt; 1];\nset&lt;int&gt; G[N];\n\nvoid DFS(int u) {\n    S[top++] = u;\n    for (int eid: G[u]) {\n        int v = edges[eid].get_other(u);\n        G[u].erase(eid);\n        G[v].erase(eid);\n        DFS(v);\n        return;\n    }\n}\n\nvoid fleury(int start) {\n    int u = start;\n    top = 0; path.clear();\n    S[top++] = u;\n    while (top) {\n        u = S[--top];\n        if (!G[u].empty())\n            DFS(u);\n        else path.push_back(u);\n    }\n}\n</code></pre>"},{"location":"acm/template/graph/graph/#2-sat","title":"\u5f3a\u8fde\u901a\u5206\u91cf\u4e0e 2-SAT","text":"<pre><code>int n, m;\nvector&lt;int&gt; G[N], rG[N], vs;\nint used[N], cmp[N];\n\nvoid add_edge(int from, int to) {\n    G[from].push_back(to);\n    rG[to].push_back(from);\n}\n\nvoid dfs(int v) {\n    used[v] = true;\n    for (int u: G[v]) {\n        if (!used[u])\n            dfs(u);\n    }\n    vs.push_back(v);\n}\n\nvoid rdfs(int v, int k) {\n    used[v] = true;\n    cmp[v] = k;\n    for (int u: rG[v])\n        if (!used[u])\n            rdfs(u, k);\n}\n\nint scc() {\n    memset(used, 0, sizeof(used));\n    vs.clear();\n    for (int v = 0; v &lt; n; ++v)\n        if (!used[v]) dfs(v);\n    memset(used, 0, sizeof(used));\n    int k = 0;\n    for (int i = (int) vs.size() - 1; i &gt;= 0; --i)\n        if (!used[vs[i]]) rdfs(vs[i], k++);\n    return k;\n}\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; m;\n    n *= 2;\n    for (int i = 0; i &lt; m; ++i) {\n        int a, b; cin &gt;&gt; a &gt;&gt; b;\n        add_edge(a - 1, (b - 1) ^ 1);\n        add_edge(b - 1, (a - 1) ^ 1);\n    }\n    scc();\n    for (int i = 0; i &lt; n; i += 2) {\n        if (cmp[i] == cmp[i + 1]) {\n            puts(\"NIE\");\n            return 0;\n        }\n    }\n    for (int i = 0; i &lt; n; i += 2) {\n        if (cmp[i] &gt; cmp[i + 1]) printf(\"%d\\n\", i + 1);\n        else printf(\"%d\\n\", i + 2);\n    }\n}\n</code></pre>"},{"location":"acm/template/graph/graph/#_9","title":"\u62d3\u6251\u6392\u5e8f","text":"<pre><code>vector&lt;int&gt; toporder(int n) {\n    vector&lt;int&gt; orders;\n    queue&lt;int&gt; q;\n    for (int i = 0; i &lt; n; i++)\n        if (!deg[i]) {\n            q.push(i);\n            orders.push_back(i);\n        }\n    while (!q.empty()) {\n        int u = q.front(); q.pop();\n        for (int v: G[u])\n            if (!--deg[v]) {\n                q.push(v);\n                orders.push_back(v);\n            }\n    }\n    return orders;\n}\n</code></pre>"},{"location":"acm/template/graph/graph/#_10","title":"\u4e00\u822c\u56fe\u5339\u914d","text":"<p>\u5e26\u82b1\u6811\u3002\u590d\u6742\u5ea6 \\(O(n^3)\\)\u3002</p> <pre><code>int n;\nvector&lt;int&gt; G[N];\nint fa[N], mt[N], pre[N], mk[N];\nint lca_clk, lca_mk[N];\npair&lt;int, int&gt; ce[N];\n\nvoid connect(int u, int v) {\n    mt[u] = v;\n    mt[v] = u;\n}\nint find(int x) { return x == fa[x] ? x : fa[x] = find(fa[x]); }\n\nvoid flip(int s, int u) {\n    if (s == u) return;\n    if (mk[u] == 2) {\n        int v1 = ce[u].first, v2 = ce[u].second;\n        flip(mt[u], v1);\n        flip(s, v2);\n        connect(v1, v2);\n    } else {\n        flip(s, pre[mt[u]]);\n        connect(pre[mt[u]], mt[u]);\n    }\n}\n\nint get_lca(int u, int v) {\n    lca_clk++;\n    for (u = find(u), v = find(v); ; u = find(pre[u]), v = find(pre[v])) {\n        if (u &amp;&amp; lca_mk[u] == lca_clk) return u;\n        lca_mk[u] = lca_clk;\n        if (v &amp;&amp; lca_mk[v] == lca_clk) return v;\n        lca_mk[v] = lca_clk;\n    }\n}\n\nvoid access(int u, int p, const pair&lt;int, int&gt;&amp; c, vector&lt;int&gt;&amp; q) {\n    for (u = find(u); u != p; u = find(pre[u])) {\n        if (mk[u] == 2) {\n            ce[u] = c;\n            q.push_back(u);\n        }\n        fa[find(u)] = find(p);\n    }\n}\n\nbool aug(int s) {\n    fill(mk, mk + n + 1, 0);\n    fill(pre, pre + n + 1, 0);\n    iota(fa, fa + n + 1, 0);\n    vector&lt;int&gt; q = {s};\n    mk[s] = 1;\n    int t = 0;\n    for (int t = 0; t &lt; (int) q.size(); ++t) {\n        // q size can be changed\n        int u = q[t];\n        for (int &amp;v: G[u]) {\n            if (find(v) == find(u)) continue;\n            if (!mk[v] &amp;&amp; !mt[v]) {\n                flip(s, u);\n                connect(u, v);\n                return true;\n            } else if (!mk[v]) {\n                int w = mt[v];\n                mk[v] = 2; mk[w] = 1;\n                pre[w] = v; pre[v] = u;\n                q.push_back(w);\n            } else if (mk[find(v)] == 1) {\n                int p = get_lca(u, v);\n                access(u, p, {u, v}, q);\n                access(v, p, {v, u}, q);\n            }\n        }\n    }\n    return false;\n}\n\nint match() {\n    fill(mt + 1, mt + n + 1, 0);\n    lca_clk = 0;\n    int ans = 0;\n    FOR (i, 1, n + 1)\n        if (!mt[i]) ans += aug(i);\n    return ans;\n}\n\nint main() {\n    int m; cin &gt;&gt; n &gt;&gt; m;\n    while (m--) {\n        int u, v; scanf(\"%d%d\", &amp;u, &amp;v);\n        G[u].push_back(v); G[v].push_back(u);\n    }\n    printf(\"%d\\n\", match());\n    FOR (i, 1, n + 1) printf(\"%d%c\", mt[i], i == _i - 1 ? '\\n' : ' ');\n    return 0;\n}\n</code></pre>"},{"location":"acm/template/graph/graph/#tarjan","title":"Tarjan","text":""},{"location":"acm/template/graph/graph/#_11","title":"\u5272\u70b9","text":"<ul> <li>\u5224\u65ad\u5272\u70b9</li> <li>\u6ce8\u610f\u539f\u56fe\u53ef\u80fd\u4e0d\u8fde\u901a</li> </ul> <pre><code>int dfn[N], low[N], clk;\nvoid init() { clk = 0; memset(dfn, 0, sizeof dfn); }\nvoid tarjan(int u, int fa) {\n    low[u] = dfn[u] = ++clk;\n    int cc = fa != -1;\n    for (int&amp; v: G[u]) {\n        if (v == fa) continue;\n        if (!dfn[v]) {\n            tarjan(v, u);\n            low[u] = min(low[u], low[v]);\n            cc += low[v] &gt;= dfn[u];\n        } else low[u] = min(low[u], dfn[v]);\n    }\n    if (cc &gt; 1) // ...\n}\n</code></pre>"},{"location":"acm/template/graph/graph/#_12","title":"\u6865","text":"<ul> <li>\u6ce8\u610f\u539f\u56fe\u4e0d\u8fde\u901a\u548c\u91cd\u8fb9</li> </ul> <pre><code>int dfn[N], low[N], clk;\nvoid init() { memset(dfn, 0, sizeof dfn); clk = 0; }\nvoid tarjan(int u, int fa) {\n    low[u] = dfn[u] = ++clk;\n    int _fst = 0;\n    for (E&amp; e: G[u]) {\n        int v = e.to; if (v == fa &amp;&amp; ++_fst == 1) continue;\n        if (!dfn[v]) {\n            tarjan(v, u);\n            if (low[v] &gt; dfn[u]) // ...\n            low[u] = min(low[u], low[v]);\n        } else low[u] = min(low[u], dfn[v]);\n    }\n}\n</code></pre>"},{"location":"acm/template/graph/graph/#_13","title":"\u5f3a\u8fde\u901a\u5206\u91cf\u7f29\u70b9","text":"<pre><code>int low[N], dfn[N], clk, B, bl[N];\nvector&lt;int&gt; bcc[N];\nvoid init() { B = clk = 0; memset(dfn, 0, sizeof dfn); }\nvoid tarjan(int u) {\n    static int st[N], p;\n    static bool in[N];\n    dfn[u] = low[u] = ++clk;\n    st[p++] = u; in[u] = true;\n    for (int&amp; v: G[u]) {\n        if (!dfn[v]) {\n            tarjan(v);\n            low[u] = min(low[u], low[v]);\n        } else if (in[v]) low[u] = min(low[u], dfn[v]);\n    }\n    if (dfn[u] == low[u]) {\n        while (1) {\n            int x = st[--p]; in[x] = false;\n            bl[x] = B; bcc[B].push_back(x);\n            if (x == u) break;\n        }\n        ++B;\n    }\n}\n</code></pre>"},{"location":"acm/template/graph/graph/#_14","title":"\u70b9\u53cc\u8fde\u901a\u5206\u91cf / \u5e7f\u4e49\u5706\u65b9\u6811","text":"<ul> <li>\u6570\u7ec4\u5f00\u4e24\u500d</li> <li>\u4e00\u6761\u8fb9\u4e5f\u88ab\u8ba1\u5165\u70b9\u53cc\u4e86\uff08\u9002\u5408\u62ff\u6765\u5efa\u5706\u65b9\u6811\uff09\uff0c\u53ef\u4ee5\u7528 \u70b9\u6570 &lt;= \u8fb9\u6570 \u8fc7\u6ee4</li> </ul> <pre><code>struct E { int to, nxt; } e[N];\nint hd[N], ecnt;\nvoid addedge(int u, int v) {\n    e[ecnt] = {v, hd[u]};\n    hd[u] = ecnt++;\n}\nint low[N], dfn[N], clk, B, bno[N];\nvector&lt;int&gt; bc[N], be[N];\nbool vise[N];\nvoid init() {\n    memset(vise, 0, sizeof vise);\n    memset(hd, -1, sizeof hd);\n    memset(dfn, 0, sizeof dfn);\n    memset(bno, -1, sizeof bno);\n    B = clk = ecnt = 0;\n}\n\nvoid tarjan(int u, int feid) {\n    static int st[N], p;\n    static auto add = [&amp;](int x) {\n        if (bno[x] != B) { bno[x] = B; bc[B].push_back(x); }\n    };\n    low[u] = dfn[u] = ++clk;\n    for (int i = hd[u]; ~i; i = e[i].nxt) {\n        if ((feid ^ i) == 1) continue;\n        if (!vise[i]) { st[p++] = i; vise[i] = vise[i ^ 1] = true; }\n        int v = e[i].to;\n        if (!dfn[v]) {\n            tarjan(v, i);\n            low[u] = min(low[u], low[v]);\n            if (low[v] &gt;= dfn[u]) {\n                bc[B].clear(); be[B].clear();\n                while (1) {\n                    int eid = st[--p];\n                    add(e[eid].to); add(e[eid ^ 1].to);\n                    be[B].push_back(eid);\n                    if ((eid ^ i) &lt;= 1) break;\n                }\n                ++B;\n            }\n        } else low[u] = min(low[u], dfn[v]);\n    }\n}\n</code></pre>"},{"location":"acm/template/graph/graph/#_15","title":"\u5706\u65b9\u6811","text":"<ul> <li>\u4ece\u4ed9\u4eba\u638c\u5efa\u5706\u65b9\u6811</li> <li>N \u81f3\u5c11\u8fb9\u6570 \u00d7 2</li> </ul> <pre><code>vector&lt;int&gt; G[N];\nint nn;\n\nstruct E { int to, nxt; };\nnamespace C {\n    E e[N * 2];\n    int hd[N], ecnt;\n    void addedge(int u, int v) {\n        e[ecnt] = {v, hd[u]};\n        hd[u] = ecnt++;\n    }\n    int idx[N], clk, fa[N];\n    bool ring[N];\n    void init() { ecnt = 0; memset(hd, -1, sizeof hd); clk = 0; }\n    void dfs(int u, int feid) {\n        idx[u] = ++clk;\n        for (int i = hd[u]; ~i; i = e[i].nxt) {\n            if ((i ^ feid) == 1) continue;\n            int v = e[i].to;\n            if (!idx[v]) {\n                fa[v] = u; ring[u] = false;\n                dfs(v, i);\n                if (!ring[u]) { G[u].push_back(v); G[v].push_back(u); }\n            } else if (idx[v] &lt; idx[u]) {\n                ++nn;\n                G[nn].push_back(v); G[v].push_back(nn); // \u5f3a\u884c\u628a\u73af\u7684\u6839\u653e\u5728\u6700\u524d\u9762\n                for (int x = u; x != v; x = fa[x]) {\n                    ring[x] = true;\n                    G[nn].push_back(x); G[x].push_back(nn);\n                }\n                ring[v] = true;\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"acm/template/graph/graph/#_16","title":"\u6700\u5c0f\u6811\u5f62\u56fe","text":"<p>\u4f1a\u7be1\u6539\u8fb9\u3002</p> <pre><code>vector&lt;E&gt; edges;\nint in[N], id[N], pre[N], vis[N];\n// a copy of n is needed\nLL zl_tree(int rt, int n) {\n    LL ans = 0;\n    int v, _n = n;\n    while (1) {\n        fill(in, in + n, INF);\n        for (E &amp;e: edges) {\n            if (e.u != e.v &amp;&amp; e.w &lt; in[e.v]) {\n                pre[e.v] = e.u;\n                in[e.v] = e.w;\n            }\n        }\n        FOR (i, 0, n) if (i != rt &amp;&amp; in[i] == INF) return -1;\n        int tn = 0;\n        fill(id, id + _n, -1); fill(vis, vis + _n, -1);\n        in[rt] = 0;\n        FOR (i, 0, n) {\n            ans += in[v = i];\n            while (vis[v] != i &amp;&amp; id[v] == -1 &amp;&amp; v != rt) {\n                vis[v] = i; v = pre[v];\n            }\n            if (v != rt &amp;&amp; id[v] == -1) {\n                for (int u = pre[v]; u != v; u = pre[u]) id[u] = tn;\n                id[v] = tn++;\n            }\n        }\n        if (tn == 0) break;\n        FOR (i, 0, n) if (id[i] == -1) id[i] = tn++;\n        for (int i = 0; i &lt; (int) edges.size(); ) {\n            auto &amp;e = edges[i];\n            v = e.v;\n            e.u = id[e.u]; e.v = id[e.v];\n            if (e.u != e.v) { e.w -= in[v]; i++; }\n            else { swap(e, edges.back()); edges.pop_back(); }\n        }\n        n = tn; rt = id[rt];\n    }\n    return ans;\n}\n</code></pre>"},{"location":"acm/template/graph/graph/#_17","title":"\u5dee\u5206\u7ea6\u675f","text":"<p>\u4e00\u4e2a\u7cfb\u7edf \\(n\\) \u4e2a\u53d8\u91cf\u548c \\(m\\) \u4e2a\u7ea6\u675f\u6761\u4ef6\u7ec4\u6210\uff0c\u6bcf\u4e2a\u7ea6\u675f\u6761\u4ef6\u5f62\u5982 \\(x_j-x_i \\le b_k\\)\u3002\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e2a\u7ea6\u675f\u6761\u4ef6\u90fd\u5f62\u5982\u6700\u77ed\u8def\u4e2d\u7684\u4e09\u89d2\u4e0d\u7b49\u5f0f \\(d_u-d_v \\le w_{u,v}\\)\u3002\u56e0\u6b64\u8fde\u4e00\u6761\u8fb9 \\((i,j,b_k)\\) \u5efa\u56fe\u3002</p> <p>\u82e5\u8981\u4f7f\u5f97\u6240\u6709\u91cf\u4e24\u4e24\u7684\u503c\u6700\u63a5\u8fd1\uff0c\u6e90\u70b9\u5230\u5404\u70b9\u7684\u8ddd\u79bb\u521d\u59cb\u6210 \\(0\\)\uff0c\u8dd1\u6700\u8fdc\u8def\u3002</p> <p>\u82e5\u8981\u4f7f\u5f97\u67d0\u4e00\u53d8\u91cf\u4e0e\u5176\u4ed6\u53d8\u91cf\u7684\u5dee\u5c3d\u53ef\u80fd\u5927\uff0c\u5219\u6e90\u70b9\u5230\u5404\u70b9\u8ddd\u79bb\u521d\u59cb\u5316\u6210 \\(\\infty\\)\uff0c\u8dd1\u6700\u77ed\u8def\u3002</p>"},{"location":"acm/template/graph/graph/#_18","title":"\u4e09\u5143\u73af\u3001\u56db\u5143\u73af","text":""},{"location":"acm/template/graph/graph/#_19","title":"\u56db\u5143\u73af","text":"<p>\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u56db\u5143\u73af\uff0c\u5c06\u7b54\u6848\u7edf\u8ba1\u5728\u5ea6\u6570\u6700\u5927\u7684\u70b9 \\(b\\) \u4e0a\u3002\u8003\u8651\u679a\u4e3e\u70b9 \\(u\\)\uff0c\u7136\u540e\u679a\u4e3e\u4e0e\u5176\u76f8\u90bb\u7684\u70b9 \\(v\\)\uff0c\u7136\u540e\u518d\u679a\u4e3e\u6240\u6709\u5ea6\u6570\u6bd4 \\(v\\) \u5927\u7684\u4e0e \\(v\\) \u76f8\u90bb\u7684\u70b9\uff0c\u8fd9\u4e9b\u70b9\u663e\u7136\u90fd\u53ef\u80fd\u4f5c\u4e3a \\(b\\) \u70b9\uff0c\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u8ba1\u6570\u5668\u6765\u8ba1\u7b97\u4e4b\u524d \\(b\\) \u88ab\u679a\u4e3e\u591a\u5c11\u6b21\uff0c\u7b54\u6848\u52a0\u4e0a\u8ba1\u6570\u5668\u7684\u503c\uff0c\u7136\u540e\u8ba1\u6570\u5668\u52a0\u4e00\u3002</p> <p>\u679a\u4e3e\u5b8c \\(u\\) \u4e4b\u540e\uff0c\u6211\u4eec\u7528\u548c\u679a\u4e3e\u65f6\u4e00\u6837\u7684\u65b9\u6cd5\u6765\u6e05\u7a7a\u8ba1\u6570\u5668\u5c31\u597d\u4e86\u3002 </p> <p>\u4efb\u4f55\u4e00\u4e2a\u70b9\uff0c\u4e0e\u5176\u76f4\u63a5\u76f8\u8fde\u7684\u5ea6\u6570\u5927\u4e8e\u7b49\u4e8e\u5b83\u7684\u70b9\u6700\u591a\u53ea\u6709 \\(\\sqrt{2m}\\) \u4e2a\u3002\u6240\u4ee5\u590d\u6742\u5ea6 \\(O(m \\sqrt{m})\\)\u3002</p> <pre><code>LL cycle4() {\n    LL ans = 0;\n    iota(kth, kth + n + 1, 0);\n    sort(kth, kth + n, [&amp;](int x, int y) { return deg[x] &lt; deg[y]; });\n    FOR (i, 1, n + 1) rk[kth[i]] = i;\n    FOR (u, 1, n + 1)\n        for (int v: G[u])\n            if (rk[v] &gt; rk[u]) key[u].push_back(v);\n    FOR (u, 1, n + 1) {\n        for (int v: G[u])\n            for (int w: key[v])\n                if (rk[w] &gt; rk[u]) ans += cnt[w]++;\n        for (int v: G[u])\n            for (int w: key[v])\n                if (rk[w] &gt; rk[u]) --cnt[w];\n    }\n    return ans;\n}\n</code></pre>"},{"location":"acm/template/graph/graph/#_20","title":"\u4e09\u5143\u73af","text":"<p>\u5c06\u70b9\u5206\u6210\u5ea6\u5165\u5c0f\u4e8e \\(\\sqrt{m}\\) \u548c\u8d85\u8fc7 \\(\\sqrt{m}\\) \u7684\u4e24\u7c7b\u3002\u73b0\u6c42\u5305\u542b\u7b2c\u4e00\u7c7b\u70b9\u7684\u4e09\u5143\u73af\u4e2a\u6570\u3002\u7531\u4e8e\u8fb9\u6570\u8f83\u5c11\uff0c\u76f4\u63a5\u679a\u4e3e\u4e24\u6761\u8fb9\u5373\u53ef\u3002\u7531\u4e8e\u4e00\u4e2a\u70b9\u5ea6\u6570\u4e0d\u8d85\u8fc7 \\(\\sqrt{m}\\)\uff0c\u6240\u4ee5\u4e00\u6761\u8fb9\u6700\u591a\u88ab\u679a\u4e3e \\(\\sqrt{m}\\) \u6b21\uff0c\u590d\u6742\u5ea6 \\(O(m \\sqrt{m})\\)\u3002\u518d\u6c42\u4e0d\u5305\u542b\u7b2c\u4e00\u7c7b\u70b9\u7684\u4e09\u5143\u73af\u4e2a\u6570\uff0c\u7531\u4e8e\u8fd9\u6837\u7684\u70b9\u4e0d\u8d85\u8fc7 \\(\\sqrt{m}\\) \u4e2a\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u4e5f\u662f \\(O(m \\sqrt{m})\\)\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u6761\u65e0\u5411\u8fb9 \\((u,v)\\)\uff0c\u5982\u679c \\(d_u &lt; d_v\\)\uff0c\u90a3\u4e48\u8fde\u6709\u5411\u8fb9 \\((u,v)\\)\uff0c\u5426\u5219\u6709\u5411\u8fb9 \\((v,u)\\)\u3002\u5ea6\u6570\u76f8\u7b49\u7684\u6309\u7b2c\u4e8c\u5173\u952e\u5b57\u5224\u65ad\u3002\u7136\u540e\u679a\u4e3e\u6bcf\u4e2a\u70b9 \\(x\\)\uff0c\u5047\u8bbe \\(x\\) \u662f\u4e09\u5143\u7ec4\u4e2d\u5ea6\u6570\u6700\u5c0f\u7684\u70b9\uff0c\u7136\u540e\u66b4\u529b\u5f80\u540e\u9762\u679a\u4e3e\u4e24\u6761\u8fb9\u627e\u5230 \\(y\\)\uff0c\u5224\u65ad \\((x,y)\\) \u662f\u5426\u6709\u8fb9\u5373\u53ef\u3002\u590d\u6742\u5ea6\u4e5f\u662f \\(O(m \\sqrt{m})\\)\u3002</p> <pre><code>int cycle3() {\n    int ans = 0;\n    for (E &amp;e: edges) { deg[e.u]++; deg[e.v]++; }\n    for (E &amp;e: edges) {\n        if (deg[e.u] &lt; deg[e.v] || (deg[e.u] == deg[e.v] &amp;&amp; e.u &lt; e.v))\n            G[e.u].push_back(e.v);\n        else G[e.v].push_back(e.u);\n    }\n    FOR (x, 1, n + 1) {\n        for (int y: G[x]) p[y] = x;\n        for (int y: G[x]) for (int z: G[y]) if (p[z] == x) ans++;\n    }\n    return ans;\n}\n</code></pre>"},{"location":"acm/template/graph/graph/#_21","title":"\u652f\u914d\u6811","text":"<ul> <li><code>semi[x]</code> \u534a\u5fc5\u7ecf\u70b9\uff08\u5c31\u662f \\(x\\) \u7684\u7956\u5148 \\(z\\) \u4e2d\uff0c\u80fd\u4e0d\u7ecf\u8fc7 \\(z\\) \u548c \\(x\\) \u4e4b\u95f4\u7684\u6811\u4e0a\u7684\u70b9\u800c\u5230\u8fbe \\(x\\) \u7684\u70b9\u4e2d\u6df1\u5ea6\u6700\u5c0f\u7684\uff09</li> <li><code>idom[x]</code> \u6700\u8fd1\u5fc5\u7ecf\u70b9\uff08\u5c31\u662f\u6df1\u5ea6\u6700\u5927\u7684\u6839\u5230 \\(x\\) \u7684\u5fc5\u7ecf\u70b9\uff09</li> </ul> <pre><code>vector&lt;int&gt; G[N], rG[N];\nvector&lt;int&gt; dt[N];\n\nnamespace tl{\n    int fa[N], idx[N], clk, ridx[N];\n    int c[N], best[N], semi[N], idom[N];\n    void init(int n) {\n        clk = 0;\n        fill(c, c + n + 1, -1);\n        FOR (i, 1, n + 1) dt[i].clear();\n        FOR (i, 1, n + 1) semi[i] = best[i] = i;\n        fill(idx, idx + n + 1, 0);\n    }\n    void dfs(int u) {\n        idx[u] = ++clk; ridx[clk] = u;\n        for (int&amp; v: G[u]) if (!idx[v]) { fa[v] = u; dfs(v); }\n    }\n    int fix(int x) {\n        if (c[x] == -1) return x;\n        int &amp;f = c[x], rt = fix(f);\n        if (idx[semi[best[x]]] &gt; idx[semi[best[f]]]) best[x] = best[f];\n        return f = rt;\n    }\n    void go(int rt) {\n        dfs(rt);\n        FORD (i, clk, 1) {\n            int x = ridx[i], mn = clk + 1;\n            for (int&amp; u: rG[x]) {\n                if (!idx[u]) continue;  // \u53ef\u80fd\u4e0d\u80fd\u5230\u8fbe\u6240\u6709\u70b9\n                fix(u); mn = min(mn, idx[semi[best[u]]]);\n            }\n            c[x] = fa[x];\n            dt[semi[x] = ridx[mn]].push_back(x);\n            x = ridx[i - 1];\n            for (int&amp; u: dt[x]) {\n                fix(u);\n                if (semi[best[u]] != x) idom[u] = best[u];\n                else idom[u] = x;\n            }\n            dt[x].clear();\n        }\n\n        FOR (i, 2, clk + 1) {\n            int u = ridx[i];\n            if (idom[u] != semi[u]) idom[u] = idom[idom[u]];\n            dt[idom[u]].push_back(u);\n        }\n    }\n}\n</code></pre>"},{"location":"acm/template/graph/topic3/","title":"Graph3","text":"<p>2-SAT</p>"},{"location":"acm/template/math/math/","title":"\u6570\u5b66","text":""},{"location":"acm/template/math/math/#_2","title":"\u77e9\u9635\u8fd0\u7b97","text":"<pre><code>using i64 = long long;\n\ni64 Mod;\n\nstruct Mat {\n    static const i64 M = 21;\n    i64 v[M][M];\n    Mat() { memset(v, 0, sizeof v); }\n    void eye() { for (i64 i = 0; i &lt; M; i++) v[i][i] = 1; }\n    i64* operator [] (i64 x) { return v[x]; }\n    const i64* operator [] (i64 x) const { return v[x]; }\n    Mat operator * (const Mat&amp; B) {\n        const Mat&amp; A = *this;\n        Mat ret;\n        for (i64 k = 0; k &lt; M; k++) {   \n            for (i64 i = 0; i &lt; M; i++) {\n                if (A[i][k]) {  \n                    for (i64 j = 0; j &lt; M; j++)     \n                        ret[i][j] = (ret[i][j] + A[i][k] * B[k][j]) % Mod;\n                }\n            }\n        }\n        return ret;\n    }\n    Mat pow(i64 n) const {\n        Mat A = *this, ret; ret.eye();\n        for (; n; n &gt;&gt;= 1, A = A * A)\n            if (n &amp; 1) ret = ret * A;\n        return ret;\n    }\n    Mat operator + (const Mat&amp; B) {\n        const Mat&amp; A = *this;\n        Mat ret;\n        for (int i = 0; i &lt; M; i++)\n            for (int j = 0; j &lt; M; j++)\n                 ret[i][j] = (A[i][j] + B[i][j]) % Mod;\n        return ret;\n    }\n    void prt() const {\n        for (int i = 0; i &lt; M; i++)\n            for (int j = 0; j &lt; M; j++)\n                std::cout &lt;&lt; (*this)[i][j] &lt;&lt; \" \\n\"[j == M - 1];\n    }\n} M;\n</code></pre>"},{"location":"acm/template/math/math/#_3","title":"\u7b5b","text":"<ul> <li>\u7ebf\u6027\u7b5b</li> </ul> <pre><code>const LL p_max = 1E6 + 100;\nLL pr[p_max], p_sz;\nvoid get_prime() {\n    static bool vis[p_max];\n    FOR (i, 2, p_max) {\n        if (!vis[i]) pr[p_sz++] = i;\n        FOR (j, 0, p_sz) {\n            if (pr[j] * i &gt;= p_max) break;\n            vis[pr[j] * i] = 1;\n            if (i % pr[j] == 0) break;\n        }\n    }\n}\n</code></pre> <ul> <li>\u7ebf\u6027\u7b5b+\u6b27\u62c9\u51fd\u6570</li> </ul> <pre><code>const LL p_max = 1E5 + 100;\nLL phi[p_max];\nvoid get_phi() {\n    phi[1] = 1;\n    static bool vis[p_max];\n    static LL prime[p_max], p_sz, d;\n    FOR (i, 2, p_max) {\n        if (!vis[i]) {\n            prime[p_sz++] = i;\n            phi[i] = i - 1;\n        }\n        for (LL j = 0; j &lt; p_sz &amp;&amp; (d = i * prime[j]) &lt; p_max; ++j) {\n            vis[d] = 1;\n            if (i % prime[j] == 0) {\n                phi[d] = phi[i] * prime[j];\n                break;\n            }\n            else phi[d] = phi[i] * (prime[j] - 1);\n        }\n    }\n}\n</code></pre> <ul> <li>\u7ebf\u6027\u7b5b+\u83ab\u6bd4\u4e4c\u65af\u51fd\u6570</li> </ul> <pre><code>const LL p_max = 1E5 + 100;\nLL mu[p_max];\nvoid get_mu() {\n    mu[1] = 1;\n    static bool vis[p_max];\n    static LL prime[p_max], p_sz, d;\n    FOR (i, 2, p_max) {\n        if (!vis[i]) {\n            prime[p_sz++] = i;\n            mu[i] = -1;\n        }\n        for (LL j = 0; j &lt; p_sz &amp;&amp; (d = i * prime[j]) &lt; p_max; ++j) {\n            vis[d] = 1;\n            if (i % prime[j] == 0) {\n                mu[d] = 0;\n                break;\n            }\n            else mu[d] = -mu[i];\n        }\n    }\n}\n</code></pre>"},{"location":"acm/template/math/math/#_4","title":"\u4e9a\u7ebf\u6027\u7b5b","text":""},{"location":"acm/template/math/math/#min_25","title":"min_25","text":"<pre><code>namespace min25 {\n    const int M = 1E6 + 100;\n    LL B, N;\n\n    // g(x)\n    inline LL pg(LL x) { return 1; }\n    inline LL ph(LL x) { return x % MOD; }\n    // Sum[g(i),{x,2,x}]\n    inline LL psg(LL x) { return x % MOD - 1; }\n    inline LL psh(LL x) {\n        static LL inv2 = (MOD + 1) / 2;\n        x %= MOD;\n        return x * (x + 1) % MOD * inv2 % MOD - 1;\n    }\n    // f(pp=p^k)\n    inline LL fpk(LL p, LL e, LL pp) { return (pp - pp / p) % MOD; }\n    // f(p) = fgh(g(p), h(p))\n    inline LL fgh(LL g, LL h) { return h - g; }\n\n    LL pr[M], pc, sg[M], sh[M];\n    void get_prime(LL n) {\n        static bool vis[M]; pc = 0;\n        FOR (i, 2, n + 1) {\n            if (!vis[i]) {\n                pr[pc++] = i;\n                sg[pc] = (sg[pc - 1] + pg(i)) % MOD;\n                sh[pc] = (sh[pc - 1] + ph(i)) % MOD;\n            }\n            FOR (j, 0, pc) {\n                if (pr[j] * i &gt; n) break;\n                vis[pr[j] * i] = 1;\n                if (i % pr[j] == 0) break;\n            }\n        }\n    }\n\n    LL w[M];\n    LL id1[M], id2[M], h[M], g[M];\n    inline LL id(LL x) { return x &lt;= B ? id1[x] : id2[N / x]; }\n\n    LL go(LL x, LL k) {\n        if (x &lt;= 1 || (k &gt;= 0 &amp;&amp; pr[k] &gt; x)) return 0;\n        LL t = id(x);\n        LL ans = fgh((g[t] - sg[k + 1]), (h[t] - sh[k + 1]));\n        FOR (i, k + 1, pc) {\n            LL p = pr[i];\n            if (p * p &gt; x) break;\n            ans -= fgh(pg(p), ph(p));\n            for (LL pp = p, e = 1; pp &lt;= x; ++e, pp = pp * p)\n                ans += fpk(p, e, pp) * (1 + go(x / pp, i)) % MOD;\n        }\n        return ans % MOD;\n    }\n\n    LL solve(LL _N) {\n        N = _N;\n        B = sqrt(N + 0.5);\n        get_prime(B);\n        int sz = 0;\n        for (LL l = 1, v, r; l &lt;= N; l = r + 1) {\n            v = N / l; r = N / v;\n            w[sz] = v; g[sz] = psg(v); h[sz] = psh(v);\n            if (v &lt;= B) id1[v] = sz; else id2[r] = sz;\n            sz++;\n        }\n        FOR (k, 0, pc) {\n            LL p = pr[k];\n            FOR (i, 0, sz) {\n                LL v = w[i]; if (p * p &gt; v) break;\n                LL t = id(v / p);\n                g[i] = (g[i] - (g[t] - sg[k]) * pg(p)) % MOD;\n                h[i] = (h[i] - (h[t] - sh[k]) * ph(p)) % MOD;\n            }\n        }\n        return (go(N, -1) % MOD + MOD + 1) % MOD;\n    }\n    pair&lt;LL, LL&gt; sump(LL l, LL r) {\n        return {h[id(r)] - h[id(l - 1)],\n                g[id(r)] - g[id(l - 1)]};\n    }\n}\n</code></pre>"},{"location":"acm/template/math/math/#_5","title":"\u675c\u6559\u7b5b","text":"<p>\u6c42 \\(S(n)=\\sum_{i=1}^n f(i)\\)\uff0c\u5176\u4e2d \\(f\\) \u662f\u4e00\u4e2a\u79ef\u6027\u51fd\u6570\u3002</p> <p>\u6784\u9020\u4e00\u4e2a\u79ef\u6027\u51fd\u6570 \\(g\\)\uff0c\u90a3\u4e48\u7531 \\((f*g)(n)=\\sum_{d|n}f(d)g(\\frac{n}{d})\\)\uff0c\u5f97\u5230 \\(f(n)=(f*g)(n)-\\sum_{d|n,d&lt;n}f(d)g(\\frac{n}{d})\\)\u3002</p> \\[\\begin{eqnarray} g(1)S(n)&amp;=&amp;\\sum_{i=1}^n (f*g)(i)-\\sum_{i= 1}^{n}\\sum_{d|i,d&lt;i}f(d)g(\\frac{n}{d}) \\\\ &amp;\\overset{t=\\frac{i}{d}}{=}&amp; \\sum_{i=1}^n (f*g)(i)-\\sum_{t=2}^{n} g(t) S(\\lfloor \\frac{n}{t} \\rfloor) \\end{eqnarray}\\] <p>\u5f53\u7136\uff0c\u8981\u80fd\u591f\u7531\u6b64\u8ba1\u7b97 \\(S(n)\\)\uff0c\u4f1a\u5bf9 \\(f,g\\) \u63d0\u51fa\u4e00\u4e9b\u8981\u6c42\uff1a</p> <ul> <li>\\(f*g\\) \u8981\u80fd\u591f\u5feb\u901f\u6c42\u524d\u7f00\u548c\u3002</li> <li>\\(g\\)  \u8981\u80fd\u591f\u5feb\u901f\u6c42\u5206\u6bb5\u548c\uff08\u524d\u7f00\u548c\uff09\u3002</li> <li>\u5bf9\u4e8e\u6b63\u5e38\u7684\u79ef\u6027\u51fd\u6570 \\(g(1)=1\\)\uff0c\u6240\u4ee5\u4e0d\u4f1a\u6709\u4ec0\u4e48\u95ee\u9898\u3002</li> </ul> <p>\u5728\u9884\u5904\u7406 \\(S(n)\\) \u524d \\(n^{\\frac{2}{3}}\\) \u9879\u7684\u60c5\u51b5\u4e0b\u590d\u6742\u5ea6\u662f \\(O(n^{\\frac{2}{3}})\\)\u3002</p> <pre><code>namespace dujiao {\n    const int M = 5E6;\n    LL f[M] = {0, 1};\n    void init() {\n        static bool vis[M];\n        static LL pr[M], p_sz, d;\n        FOR (i, 2, M) {\n            if (!vis[i]) { pr[p_sz++] = i; f[i] = -1; }\n            FOR (j, 0, p_sz) {\n                if ((d = pr[j] * i) &gt;= M) break;\n                vis[d] = 1;\n                if (i % pr[j] == 0) {\n                    f[d] = 0;\n                    break;\n                } else f[d] = -f[i];\n            }\n        }\n        FOR (i, 2, M) f[i] += f[i - 1];\n    }\n    inline LL s_fg(LL n) { return 1; }\n    inline LL s_g(LL n) { return n; }\n\n    LL N, rd[M];\n    bool vis[M];\n    LL go(LL n) {\n        if (n &lt; M) return f[n];\n        LL id = N / n;\n        if (vis[id]) return rd[id];\n        vis[id] = true;\n        LL&amp; ret = rd[id] = s_fg(n);\n        for (LL l = 2, v, r; l &lt;= n; l = r + 1) {\n            v = n / l; r = n / v;\n            ret -= (s_g(r) - s_g(l - 1)) * go(v);\n        }\n        return ret;\n    }\n    LL solve(LL n) {\n        N = n;\n        memset(vis, 0, sizeof vis);\n        return go(n);\n    }\n}\n</code></pre>"},{"location":"acm/template/math/math/#_6","title":"\u7d20\u6570\u6d4b\u8bd5","text":"<ul> <li>\u524d\u7f6e\uff1a \u5feb\u901f\u4e58\u3001\u5feb\u901f\u5e42</li> <li>int \u8303\u56f4\u5185\u53ea\u9700\u68c0\u67e5 2, 7, 61</li> <li>long long \u8303\u56f4 2, 325, 9375, 28178, 450775, 9780504, 1795265022</li> <li>3E15\u5185 2, 2570940, 880937, 610386380, 4130785767</li> <li>4E13\u5185 2, 2570940, 211991001, 3749873356</li> <li>http://miller-rabin.appspot.com/</li> </ul> <pre><code>bool checkQ(LL a, LL n) {\n    if (n == 2) return 1;\n    if (n == 1 || !(n &amp; 1)) return 0;\n    LL d = n - 1;\n    while (!(d &amp; 1)) d &gt;&gt;= 1;\n    LL t = bin(a, d, n);  // \u4e0d\u4e00\u5b9a\u9700\u8981\u5feb\u901f\u4e58\n    while (d != n - 1 &amp;&amp; t != 1 &amp;&amp; t != n - 1) {\n        t = mul(t, t, n);\n        d &lt;&lt;= 1;\n    }\n    return t == n - 1 || d &amp; 1;\n}\n\nbool primeQ(LL n) {\n    static vector&lt;LL&gt; t = {2, 325, 9375, 28178, 450775, 9780504, 1795265022};\n    if (n &lt;= 1) return false;\n    for (LL k: t) if (!checkQ(k, n)) return false;\n    return true;\n}\n</code></pre>"},{"location":"acm/template/math/math/#pollard-rho","title":"Pollard-Rho","text":"<pre><code>mt19937 mt(time(0));\nLL pollard_rho(LL n, LL c) {\n    LL x = uniform_int_distribution&lt;LL&gt;(1, n - 1)(mt), y = x;\n    auto f = [&amp;](LL v) { LL t = mul(v, v, n) + c; return t &lt; n ? t : t - n; };\n    while (1) {\n        x = f(x); y = f(f(y));\n        if (x == y) return n;\n        LL d = gcd(abs(x - y), n);\n        if (d != 1) return d;\n    }\n}\n\nLL fac[100], fcnt;\nvoid get_fac(LL n, LL cc = 19260817) {\n    if (n == 4) { fac[fcnt++] = 2; fac[fcnt++] = 2; return; }\n    if (primeQ(n)) { fac[fcnt++] = n; return; }\n    LL p = n;\n    while (p == n) p = pollard_rho(n, --cc);\n    get_fac(p); get_fac(n / p);\n}\n\nvoid go_fac(LL n) { fcnt = 0; if (n &gt; 1) get_fac(n); }\n</code></pre>"},{"location":"acm/template/math/math/#bm","title":"BM \u7ebf\u6027\u9012\u63a8","text":"<pre><code>namespace BerlekampMassey {\n    using V = vector&lt;LL&gt;;\n    inline void up(LL&amp; a, LL b) { (a += b) %= MOD; }\n    V mul(const V&amp;a, const V&amp; b, const V&amp; m, int k) {\n        V r; r.resize(2 * k - 1);\n        FOR (i, 0, k) FOR (j, 0, k) up(r[i + j], a[i] * b[j]);\n        FORD (i, k - 2, -1) {\n            FOR (j, 0, k) up(r[i + j], r[i + k] * m[j]);\n            r.pop_back();\n        }\n        return r;\n    }\n\n    V pow(LL n, const V&amp; m) {\n        int k = (int) m.size() - 1; assert (m[k] == -1 || m[k] == MOD - 1);\n        V r(k), x(k); r[0] = x[1] = 1;\n        for (; n; n &gt;&gt;= 1, x = mul(x, x, m, k))\n            if (n &amp; 1) r = mul(x, r, m, k);\n        return r;\n    }\n\n    LL go(const V&amp; a, const V&amp; x, LL n) {\n        // a: (-1, a1, a2, ..., ak).reverse\n        // x: x1, x2, ..., xk\n        // x[n] = sum[a[i]*x[n-i],{i,1,k}]\n        int k = (int) a.size() - 1;\n        if (n &lt;= k) return x[n - 1];\n        if (a.size() == 2) return x[0] * bin(a[0], n - 1, MOD) % MOD;\n        V r = pow(n - 1, a);\n        LL ans = 0;\n        FOR (i, 0, k) up(ans, r[i] * x[i]);\n        return (ans + MOD) % MOD;\n    }\n\n    V BM(const V&amp; x) {\n        V C{-1}, B{-1};\n        LL L = 0, m = 1, b = 1;\n        FOR (n, 0, x.size()) {\n            LL d = 0;\n            FOR (i, 0, L + 1) up(d, C[i] * x[n - i]);\n            if (d == 0) { ++m; continue; }\n            V T = C;\n            LL c = MOD - d * get_inv(b, MOD) % MOD;\n            FOR (_, C.size(), B.size() + m) C.push_back(0);\n            FOR (i, 0, B.size()) up(C[i + m], c * B[i]);\n            if (2 * L &gt; n) { ++m; continue; }\n            L = n + 1 - L; B.swap(T); b = d; m = 1;\n        }\n        reverse(C.begin(), C.end());\n        return C;\n    }\n}\n</code></pre>"},{"location":"acm/template/math/math/#_7","title":"\u6269\u5c55\u6b27\u51e0\u91cc\u5f97","text":"<ul> <li>\u6c42 \\(ax+by=gcd(a,b)\\) \u7684\u4e00\u7ec4\u89e3</li> <li>\u5982\u679c \\(a\\) \u548c \\(b\\) \u4e92\u7d20\uff0c\u90a3\u4e48 \\(x\\) \u662f \\(a\\) \u5728\u6a21 \\(b\\) \u4e0b\u7684\u9006\u5143</li> <li>\u6ce8\u610f \\(x\\) \u548c \\(y\\) \u53ef\u80fd\u662f\u8d1f\u6570</li> </ul> <pre><code>LL ex_gcd(LL a, LL b, LL &amp;x, LL &amp;y) {\n    if (b == 0) { x = 1; y = 0; return a; }\n    LL ret = ex_gcd(b, a % b, y, x);\n    y -= a / b * x;\n    return ret;\n}\n</code></pre> <ul> <li>\u5361\u5e38\u6b27\u51e0\u91cc\u5f97</li> </ul> <pre><code>inline int ctz(LL x) { return __builtin_ctzll(x); }\nLL gcd(LL a, LL b) {\n    if (!a) return b; if (!b) return a;\n    int t = ctz(a | b);\n    a &gt;&gt;= ctz(a);\n    do {\n        b &gt;&gt;= ctz(b);\n        if (a &gt; b) swap(a, b);\n        b -= a;\n    } while (b);\n    return a &lt;&lt; t;\n}\n</code></pre>"},{"location":"acm/template/math/math/#_8","title":"\u7c7b\u6b27\u51e0\u91cc\u5f97","text":"<ul> <li>\\(m = \\lfloor \\frac{an+b}{c} \\rfloor\\).</li> <li>\\(f(a,b,c,n)=\\sum_{i=0}^n\\lfloor\\frac{ai+b}{c}\\rfloor\\): \u5f53 \\(a \\ge c\\) or \\(b \\ge c\\) \u65f6\uff0c\\(f(a,b,c,n)=(\\frac{a}{c})n(n+1)/2+(\\frac{b}{c})(n+1)+f(a \\bmod c,b \\bmod c,c,n)\\)\uff1b\u5426\u5219 \\(f(a,b,c,n)=nm-f(c,c-b-1,a,m-1)\\)\u3002</li> <li>\\(g(a,b,c,n)=\\sum_{i=0}^n i \\lfloor\\frac{ai+b}{c}\\rfloor\\): \u5f53 \\(a \\ge c\\) or \\(b \\ge c\\) \u65f6\uff0c\\(g(a,b,c,n)=(\\frac{a}{c})n(n+1)(2n+1)/6+(\\frac{b}{c})n(n+1)/2+g(a \\bmod c,b \\bmod c,c,n)\\)\uff1b\u5426\u5219 \\(g(a,b,c,n)=\\frac{1}{2} (n(n+1)m-f(c,c-b-1,a,m-1)-h(c,c-b-1,a,m-1))\\)\u3002</li> <li>\\(h(a,b,c,n)=\\sum_{i=0}^n\\lfloor \\frac{ai+b}{c} \\rfloor^2\\): \u5f53 \\(a \\ge c\\) or \\(b \\ge c\\) \u65f6\uff0c\\(h(a,b,c,n)=(\\frac{a}{c})^2 n(n+1)(2n+1)/6 +(\\frac{b}{c})^2 (n+1)+(\\frac{a}{c})(\\frac{b}{c})n(n+1)+h(a \\bmod c, b \\bmod c,c,n)+2(\\frac{a}{c})g(a \\bmod c,b \\bmod c,c,n)+2(\\frac{b}{c})f(a \\bmod c,b \\bmod c,c,n)\\)\uff1b\u5426\u5219 \\(h(a,b,c,n)=nm(m+1)-2g(c,c-b-1,a,m-1)-2f(c,c-b-1,a,m-1)-f(a,b,c,n)\\)\u3002</li> </ul>"},{"location":"acm/template/math/math/#_9","title":"\u9006\u5143","text":"<ul> <li> <p>\u5982\u679c \\(p\\) \u4e0d\u662f\u7d20\u6570\uff0c\u4f7f\u7528\u62d3\u5c55\u6b27\u51e0\u91cc\u5f97</p> </li> <li> <p>\u524d\u7f6e\u6a21\u677f\uff1a\u5feb\u901f\u5e42 / \u6269\u5c55\u6b27\u51e0\u91cc\u5f97</p> </li> </ul> <pre><code>inline LL get_inv(LL x, LL p) { return bin(x, p - 2, p); }\nLL get_inv(LL a, LL M) {\n    static LL x, y;\n    assert(exgcd(a, M, x, y) == 1);\n    return (x % M + M) % M;\n}\n</code></pre> <ul> <li>\u9884\u5904\u7406 1~n \u7684\u9006\u5143</li> </ul> <pre><code>LL inv[N];\nvoid inv_init(LL n, LL p) {\n    inv[1] = 1;\n    FOR (i, 2, n)\n        inv[i] = (p - p / i) * inv[p % i] % p;\n}\n</code></pre> <ul> <li>\u9884\u5904\u7406\u9636\u4e58\u53ca\u5176\u9006\u5143</li> </ul> <pre><code>LL invf[M], fac[M] = {1};\nvoid fac_inv_init(LL n, LL p) {\n    FOR (i, 1, n)\n        fac[i] = i * fac[i - 1] % p;\n    invf[n - 1] = bin(fac[n - 1], p - 2, p);\n    FORD (i, n - 2, -1)\n        invf[i] = invf[i + 1] * (i + 1) % p;\n}\n</code></pre>"},{"location":"acm/template/math/math/#_10","title":"\u7ec4\u5408\u6570","text":"<ul> <li>\u5982\u679c\u6570\u8f83\u5c0f\uff0c\u6a21\u8f83\u5927\u65f6\u4f7f\u7528\u9006\u5143</li> <li>\u524d\u7f6e\u6a21\u677f\uff1a\u9006\u5143-\u9884\u5904\u7406\u9636\u4e58\u53ca\u5176\u9006\u5143</li> </ul> <pre><code>inline LL C(LL n, LL m) { // n &gt;= m &gt;= 0\n    return n &lt; m || m &lt; 0 ? 0 : fac[n] * invf[m] % MOD * invf[n - m] % MOD;\n}\n</code></pre> <ul> <li>\u5982\u679c\u6a21\u6570\u8f83\u5c0f\uff0c\u6570\u5b57\u8f83\u5927\uff0c\u4f7f\u7528 Lucas \u5b9a\u7406</li> <li>\u524d\u7f6e\u6a21\u677f\u53ef\u90091\uff1a\u6c42\u7ec4\u5408\u6570    \uff08\u5982\u679c\u4f7f\u7528\u9636\u4e58\u9006\u5143\uff0c\u9700<code>fac_inv_init(MOD, MOD);</code>\uff09</li> <li>\u524d\u7f6e\u6a21\u677f\u53ef\u90092\uff1a\u6a21\u6570\u4e0d\u56fa\u5b9a\u4e0b\u4f7f\u7528\uff0c\u65e0\u6cd5\u5355\u72ec\u4f7f\u7528\u3002</li> </ul> <pre><code>LL C(LL n, LL m) { // m &gt;= n &gt;= 0\n    if (m - n &lt; n) n = m - n;\n    if (n &lt; 0) return 0;\n    LL ret = 1;\n    FOR (i, 1, n + 1)\n        ret = ret * (m - n + i) % MOD * bin(i, MOD - 2, MOD) % MOD;\n    return ret;\n}\n</code></pre> <pre><code>LL Lucas(LL n, LL m) { // m &gt;= n &gt;= 0\n    return m ? C(n % MOD, m % MOD) * Lucas(n / MOD, m / MOD) % MOD : 1;\n}\n</code></pre> <ul> <li>\u7ec4\u5408\u6570\u9884\u5904\u7406</li> </ul> <pre><code>LL C[M][M];\nvoid init_C(int n) {\n    FOR (i, 0, n) {\n        C[i][0] = C[i][i] = 1;\n        FOR (j, 1, i)\n            C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % MOD;\n    }\n}\n</code></pre>"},{"location":"acm/template/math/math/#_11","title":"\u65af\u7279\u7075\u6570","text":""},{"location":"acm/template/math/math/#_12","title":"\u7b2c\u4e00\u7c7b\u65af\u7279\u7075\u6570","text":"<ul> <li>\u7edd\u5bf9\u503c\u662f \\(n\\) \u4e2a\u5143\u7d20\u5212\u5206\u4e3a \\(k\\) \u4e2a\u73af\u6392\u5217\u7684\u65b9\u6848\u6570\u3002</li> <li>\\(s(n,k)=s(n-1,k-1)+(n-1)s(n-1,k)\\)</li> </ul>"},{"location":"acm/template/math/math/#_13","title":"\u7b2c\u4e8c\u7c7b\u65af\u7279\u7075\u6570","text":"<ul> <li>\\(n\\)  \u4e2a\u5143\u7d20\u5212\u5206\u4e3a \\(k\\) \u4e2a\u7b49\u4ef7\u7c7b\u7684\u65b9\u6848\u6570</li> <li>\\(S(n, k)=S(n-1,k-1)+kS(n-1, k)\\)</li> </ul> <pre><code>S[0][0] = 1;\nFOR (i, 1, N)\n    FOR (j, 1, i + 1) S[i][j] = (S[i - 1][j - 1] + j * S[i - 1][j]) % MOD;\n</code></pre>"},{"location":"acm/template/math/math/#fft-ntt-fwt","title":"FFT &amp; NTT &amp; FWT","text":""},{"location":"acm/template/math/math/#ntt","title":"NTT","text":"<pre><code>LL wn[N &lt;&lt; 2], rev[N &lt;&lt; 2];\nint NTT_init(int n_) {\n    int step = 0; int n = 1;\n    for ( ; n &lt; n_; n &lt;&lt;= 1) ++step;\n    FOR (i, 1, n)\n        rev[i] = (rev[i &gt;&gt; 1] &gt;&gt; 1) | ((i &amp; 1) &lt;&lt; (step - 1));\n    int g = bin(G, (MOD - 1) / n, MOD);\n    wn[0] = 1;\n    for (int i = 1; i &lt;= n; ++i)\n        wn[i] = wn[i - 1] * g % MOD;\n    return n;\n}\n\nvoid NTT(LL a[], int n, int f) {\n    FOR (i, 0, n) if (i &lt; rev[i])\n        std::swap(a[i], a[rev[i]]);\n    for (int k = 1; k &lt; n; k &lt;&lt;= 1) {\n        for (int i = 0; i &lt; n; i += (k &lt;&lt; 1)) {\n            int t = n / (k &lt;&lt; 1);\n            FOR (j, 0, k) {\n                LL w = f == 1 ? wn[t * j] : wn[n - t * j];\n                LL x = a[i + j];\n                LL y = a[i + j + k] * w % MOD;\n                a[i + j] = (x + y) % MOD;\n                a[i + j + k] = (x - y + MOD) % MOD;\n            }\n        }\n    }\n    if (f == -1) {\n        LL ninv = get_inv(n, MOD);\n        FOR (i, 0, n)\n            a[i] = a[i] * ninv % MOD;\n    }\n}\n</code></pre>"},{"location":"acm/template/math/math/#fft","title":"FFT","text":"<ul> <li>n \u9700\u8865\u6210 2 \u7684\u5e42 \uff08n \u5fc5\u987b\u8d85\u8fc7 a \u548c b \u7684\u6700\u9ad8\u6307\u6570\u4e4b\u548c\uff09</li> </ul> <pre><code>typedef double LD;\nconst LD PI = acos(-1);\nstruct C {\n    LD r, i;\n    C(LD r = 0, LD i = 0): r(r), i(i) {}\n};\nC operator + (const C&amp; a, const C&amp; b) {\n    return C(a.r + b.r, a.i + b.i);\n}\nC operator - (const C&amp; a, const C&amp; b) {\n    return C(a.r - b.r, a.i - b.i);\n}\nC operator * (const C&amp; a, const C&amp; b) {\n    return C(a.r * b.r - a.i * b.i, a.r * b.i + a.i * b.r);\n}\n\nvoid FFT(C x[], int n, int p) {\n    for (int i = 0, t = 0; i &lt; n; ++i) {\n        if (i &gt; t) swap(x[i], x[t]);\n        for (int j = n &gt;&gt; 1; (t ^= j) &lt; j; j &gt;&gt;= 1);\n    }\n    for (int h = 2; h &lt;= n; h &lt;&lt;= 1) {\n        C wn(cos(p * 2 * PI / h), sin(p * 2 * PI / h));\n        for (int i = 0; i &lt; n; i += h) {\n            C w(1, 0), u;\n            for (int j = i, k = h &gt;&gt; 1; j &lt; i + k; ++j) {\n                u = x[j + k] * w;\n                x[j + k] = x[j] - u;\n                x[j] = x[j] + u;\n                w = w * wn;\n            }\n        }\n    }\n    if (p == -1)\n        FOR (i, 0, n)\n            x[i].r /= n;\n}\n\nvoid conv(C a[], C b[], int n) {\n    FFT(a, n, 1);\n    FFT(b, n, 1);\n    FOR (i, 0, n)\n        a[i] = a[i] * b[i];\n    FFT(a, n, -1);\n}\n</code></pre>"},{"location":"acm/template/math/math/#fwt","title":"FWT","text":"<ul> <li>\\(C_k=\\sum_{i \\oplus j=k} A_i B_j\\)</li> <li>FWT \u5b8c\u540e\u9700\u8981\u5148\u6a21\u4e00\u904d</li> </ul> <pre><code>template&lt;typename T&gt;\nvoid fwt(LL a[], int n, T f) {\n    for (int d = 1; d &lt; n; d *= 2)\n        for (int i = 0, t = d * 2; i &lt; n; i += t)\n            FOR (j, 0, d)\n                f(a[i + j], a[i + j + d]);\n}\n\nvoid AND(LL&amp; a, LL&amp; b) { a += b; }\nvoid OR(LL&amp; a, LL&amp; b) { b += a; }\nvoid XOR (LL&amp; a, LL&amp; b) {\n    LL x = a, y = b;\n    a = (x + y) % MOD;\n    b = (x - y + MOD) % MOD;\n}\nvoid rAND(LL&amp; a, LL&amp; b) { a -= b; }\nvoid rOR(LL&amp; a, LL&amp; b) { b -= a; }\nvoid rXOR(LL&amp; a, LL&amp; b) {\n    static LL INV2 = (MOD + 1) / 2;\n    LL x = a, y = b;\n    a = (x + y) * INV2 % MOD;\n    b = (x - y + MOD) * INV2 % MOD;\n}\n</code></pre> <ul> <li>FWT \u5b50\u96c6\u5377\u79ef</li> </ul> <pre><code>a[popcount(x)][x] = A[x]\nb[popcount(x)][x] = B[x]\nfwt(a[i]) fwt(b[i])\nc[i + j][x] += a[i][x] * b[j][x]\nrfwt(c[i])\nans[x] = c[popcount(x)][x]\n</code></pre>"},{"location":"acm/template/math/math/#simpson","title":"simpson \u81ea\u9002\u5e94\u79ef\u5206","text":"<pre><code>LD simpson(LD l, LD r) {\n    LD c = (l + r) / 2;\n    return (f(l) + 4 * f(c) + f(r)) * (r - l) / 6;\n}\n\nLD asr(LD l, LD r, LD eps, LD S) {\n    LD m = (l + r) / 2;\n    LD L = simpson(l, m), R = simpson(m, r);\n    if (fabs(L + R - S) &lt; 15 * eps) return L + R + (L + R - S) / 15;\n    return asr(l, m, eps / 2, L) + asr(m, r, eps / 2, R);\n}\n\nLD asr(LD l, LD r, LD eps) { return asr(l, r, eps, simpson(l, r)); }\n</code></pre> <ul> <li>FWT</li> </ul> <pre><code>template&lt;typename T&gt;\nvoid fwt(LL a[], int n, T f) {\n    for (int d = 1; d &lt; n; d *= 2)\n        for (int i = 0, t = d * 2; i &lt; n; i += t)\n            FOR (j, 0, d)\n                 f(a[i + j], a[i + j + d]);\n}\n\nauto f = [](LL&amp; a, LL&amp; b) { // xor\n        LL x = a, y = b;\n        a = (x + y) % MOD;\n        b = (x - y + MOD) % MOD;\n};\n</code></pre>"},{"location":"acm/template/math/math/#_14","title":"\u5feb\u901f\u4e58","text":"<pre><code>LL mul(LL a, LL b, LL m) {\n    LL ret = 0;\n    while (b) {\n        if (b &amp; 1) {\n            ret += a;\n            if (ret &gt;= m) ret -= m;\n        }\n        a += a;\n        if (a &gt;= m) a -= m;\n        b &gt;&gt;= 1;\n    }\n    return ret;\n}\n</code></pre> <ul> <li>O(1)</li> </ul> <pre><code>LL mul(LL u, LL v, LL p) {\n    return (u * v - LL((long double) u * v / p) * p + p) % p;\n}\nLL mul(LL u, LL v, LL p) { // \u5361\u5e38\n    LL t = u * v - LL((long double) u * v / p) * p;\n    return t &lt; 0 ? t + p : t;\n}\n</code></pre>"},{"location":"acm/template/math/math/#_15","title":"\u5feb\u901f\u5e42","text":"<ul> <li>\u5982\u679c\u6a21\u6570\u662f\u7d20\u6570\uff0c\u5219\u53ef\u5728\u51fd\u6570\u4f53\u5185\u52a0\u4e0a<code>n %= MOD - 1;</code>\uff08\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff09\u3002</li> </ul> <pre><code>LL bin(LL x, LL n, LL MOD) {\n    LL ret = MOD != 1;\n    for (x %= MOD; n; n &gt;&gt;= 1, x = x * x % MOD)\n        if (n &amp; 1) ret = ret * x % MOD;\n    return ret;\n}\n</code></pre> <ul> <li>\u9632\u7206 LL</li> <li>\u524d\u7f6e\u6a21\u677f\uff1a\u5feb\u901f\u4e58</li> </ul> <pre><code>LL bin(LL x, LL n, LL MOD) {\n    LL ret = MOD != 1;\n    for (x %= MOD; n; n &gt;&gt;= 1, x = mul(x, x, MOD))\n        if (n &amp; 1) ret = mul(ret, x, MOD);\n    return ret;\n}\n</code></pre>"},{"location":"acm/template/math/math/#_16","title":"\u9ad8\u65af\u6d88\u5143","text":"<ul> <li>n - \u65b9\u7a0b\u4e2a\u6570\uff0cm - \u53d8\u91cf\u4e2a\u6570\uff0c a \u662f n * \\(m + 1\\) \u7684\u589e\u5e7f\u77e9\u9635\uff0cfree \u662f\u5426\u4e3a\u81ea\u7531\u53d8\u91cf</li> <li> <p>\u8fd4\u56de\u81ea\u7531\u53d8\u91cf\u4e2a\u6570\uff0c-1 \u65e0\u89e3</p> </li> <li> <p>\u6d6e\u70b9\u6570\u7248\u672c</p> </li> </ul> <pre><code>typedef double LD;\nconst LD eps = 1E-10;\nconst int maxn = 2000 + 10;\n\nint n, m;\nLD a[maxn][maxn], x[maxn];\nbool free_x[maxn];\n\ninline int sgn(LD x) { return (x &gt; eps) - (x &lt; -eps); }\n\nint gauss(LD a[maxn][maxn], int n, int m) {\n    memset(free_x, 1, sizeof free_x); memset(x, 0, sizeof x);\n    int r = 0, c = 0;\n    while (r &lt; n &amp;&amp; c &lt; m) {\n        int m_r = r;\n        FOR (i, r + 1, n)\n            if (fabs(a[i][c]) &gt; fabs(a[m_r][c])) m_r = i;\n        if (m_r != r)\n            FOR (j, c, m + 1)\n                 swap(a[r][j], a[m_r][j]);\n        if (!sgn(a[r][c])) {\n            a[r][c] = 0;\n            ++c;\n            continue;\n        }\n        FOR (i, r + 1, n)\n            if (a[i][c]) {\n                LD t = a[i][c] / a[r][c];\n                FOR (j, c, m + 1) a[i][j] -= a[r][j] * t;\n            }\n        ++r; ++c;\n    }\n    FOR (i, r, n)\n        if (sgn(a[i][m])) return -1;\n    if (r &lt; m) {\n        FORD (i, r - 1, -1) {\n            int f_cnt = 0, k = -1;\n            FOR (j, 0, m)\n                if (sgn(a[i][j]) &amp;&amp; free_x[j]) {\n                    ++f_cnt;\n                    k = j;\n                }\n            if(f_cnt &gt; 0) continue;\n            LD s = a[i][m];\n            FOR (j, 0, m)\n                if (j != k) s -= a[i][j] * x[j];\n            x[k] = s / a[i][k];\n            free_x[k] = 0;\n        }\n        return m - r;\n    }\n    FORD (i, m - 1, -1) {\n        LD s = a[i][m];\n        FOR (j, i + 1, m)\n            s -= a[i][j] * x[j];\n        x[i] = s / a[i][i];\n    }\n    return 0;\n}\n</code></pre> <ul> <li>\u6570\u636e</li> </ul> <pre><code>3 4\n1 1 -2 2\n2 -3 5 1\n4 -1 1 5\n5 0 -1 7\n// many\n\n3 4\n1 1 -2 2\n2 -3 5 1\n4 -1 -1 5\n5 0 -1 0 2\n// no\n\n3 4\n1 1 -2 2\n2 -3 5 1\n4 -1 1 5\n5 0 1 0 7\n// one\n</code></pre>"},{"location":"acm/template/math/math/#_17","title":"\u8d28\u56e0\u6570\u5206\u89e3","text":"<ul> <li> <p>\u524d\u7f6e\u6a21\u677f\uff1a\u7d20\u6570\u7b5b</p> </li> <li> <p>\u5e26\u6307\u6570</p> </li> </ul> <pre><code>LL factor[30], f_sz, factor_exp[30];\nvoid get_factor(LL x) {\n    f_sz = 0;\n    LL t = sqrt(x + 0.5);\n    for (LL i = 0; pr[i] &lt;= t; ++i)\n        if (x % pr[i] == 0) {\n            factor_exp[f_sz] = 0;\n            while (x % pr[i] == 0) {\n                x /= pr[i];\n                ++factor_exp[f_sz];\n            }\n            factor[f_sz++] = pr[i];\n        }\n    if (x &gt; 1) {\n        factor_exp[f_sz] = 1;\n        factor[f_sz++] = x;\n    }\n}\n</code></pre> <ul> <li>\u4e0d\u5e26\u6307\u6570</li> </ul> <pre><code>LL factor[30], f_sz;\nvoid get_factor(LL x) {\n    f_sz = 0;\n    LL t = sqrt(x + 0.5);\n    for (LL i = 0; pr[i] &lt;= t; ++i)\n        if (x % pr[i] == 0) {\n            factor[f_sz++] = pr[i];\n            while (x % pr[i] == 0) x /= pr[i];\n        }\n    if (x &gt; 1) factor[f_sz++] = x;\n}\n</code></pre>"},{"location":"acm/template/math/math/#_18","title":"\u539f\u6839","text":"<ul> <li>\u524d\u7f6e\u6a21\u677f\uff1a\u7d20\u6570\u7b5b\uff0c\u5feb\u901f\u5e42\uff0c\u5206\u89e3\u8d28\u56e0\u6570</li> <li>\u8981\u6c42 p \u4e3a\u8d28\u6570</li> </ul> <pre><code>LL find_smallest_primitive_root(LL p) {\n    get_factor(p - 1);\n    FOR (i, 2, p) {\n        bool flag = true;\n        FOR (j, 0, f_sz)\n            if (bin(i, (p - 1) / factor[j], p) == 1) {\n                flag = false;\n                break;\n            }\n        if (flag) return i;\n    }\n    assert(0); return -1;\n}\n</code></pre>"},{"location":"acm/template/math/math/#_19","title":"\u516c\u5f0f","text":""},{"location":"acm/template/math/math/#_20","title":"\u4e00\u4e9b\u6570\u8bba\u516c\u5f0f","text":"<ul> <li>\u5f53 \\(x\\geq\\phi(p)\\) \u65f6\u6709 \\(a^x\\equiv a^{x \\; mod \\; \\phi(p) + \\phi(p)}\\pmod p\\)</li> <li>\\(\\mu^2(n)=\\sum_{d^2|n} \\mu(d)\\)</li> <li>\\(\\sum_{d|n} \\varphi(d)=n\\)</li> <li>\\(\\sum_{d|n} 2^{\\omega(d)}=\\sigma_0(n^2)\\)\uff0c\u5176\u4e2d \\(\\omega\\) \u662f\u4e0d\u540c\u7d20\u56e0\u5b50\u4e2a\u6570</li> <li>\\(\\sum_{d|n} \\mu^2(d)=2^{\\omega(d)}\\)</li> </ul>"},{"location":"acm/template/math/math/#_21","title":"\u4e00\u4e9b\u6570\u8bba\u51fd\u6570\u6c42\u548c\u7684\u4f8b\u5b50","text":"<ul> <li>\\(\\sum_{i=1}^n i[gcd(i, n)=1] = \\frac {n \\varphi(n) + [n=1]}{2}\\)</li> <li>\\(\\sum_{i=1}^n \\sum_{j=1}^m [gcd(i,j)=x]=\\sum_d \\mu(d) \\lfloor \\frac n {dx} \\rfloor  \\lfloor \\frac m {dx} \\rfloor\\)</li> <li>\\(\\sum_{i=1}^n \\sum_{j=1}^m gcd(i, j) = \\sum_{i=1}^n \\sum_{j=1}^m \\sum_{d|gcd(i,j)} \\varphi(d) = \\sum_{d} \\varphi(d) \\lfloor \\frac nd \\rfloor \\lfloor \\frac md \\rfloor\\)</li> <li>\\(S(n)=\\sum_{i=1}^n \\mu(i)=1-\\sum_{i=1}^n \\sum_{d|i,d &lt; i}\\mu(d) \\overset{t=\\frac id}{=} 1-\\sum_{t=2}^nS(\\lfloor \\frac nt \\rfloor)\\)</li> <li>\u5229\u7528 \\([n=1] = \\sum_{d|n} \\mu(d)\\)</li> <li>\\(S(n)=\\sum_{i=1}^n \\varphi(i)=\\sum_{i=1}^n i-\\sum_{i=1}^n \\sum_{d|i,d&lt;i} \\varphi(i)\\overset{t=\\frac id}{=} \\frac {i(i+1)}{2} - \\sum_{t=2}^n S(\\frac n t)\\)</li> <li>\u5229\u7528 \\(n = \\sum_{d|n} \\varphi(d)\\)</li> <li>\\(\\sum_{i=1}^n \\mu^2(i) = \\sum_{i=1}^n \\sum_{d^2|n} \\mu(d)=\\sum_{d=1}^{\\lfloor \\sqrt n \\rfloor}\\mu(d) \\lfloor \\frac n {d^2} \\rfloor\\) </li> <li>\\(\\sum_{i=1}^n \\sum_{j=1}^n gcd^2(i, j)= \\sum_{d} d^2 \\sum_{t} \\mu(t) \\lfloor \\frac n{dt} \\rfloor ^2 \\\\   \\overset{x=dt}{=} \\sum_{x} \\lfloor \\frac nx \\rfloor ^ 2 \\sum_{d|x} d^2 \\mu(\\frac xd)\\)</li> <li>\\(\\sum_{i=1}^n \\varphi(i)=\\frac 12 \\sum_{i=1}^n \\sum_{j=1}^n [i \\perp j] - 1=\\frac 12 \\sum_{i=1}^n \\mu(i) \\cdot\\lfloor \\frac n i \\rfloor ^2-1\\)</li> </ul>"},{"location":"acm/template/math/math/#_22","title":"\u6590\u6ce2\u90a3\u5951\u6570\u5217\u6027\u8d28","text":"<ul> <li>\\(F_{a+b}=F_{a-1} \\cdot F_b+F_a \\cdot F_{b+1}\\)</li> <li>\\(F_1+F_3+\\dots +F_{2n-1} = F_{2n},F_2 + F_4 + \\dots + F_{2n} = F_{2n + 1} - 1\\)</li> <li>\\(\\sum_{i=1}^n F_i = F_{n+2} - 1\\)</li> <li>\\(\\sum_{i=1}^n F_i^2 = F_n \\cdot F_{n+1}\\)</li> <li>\\(F_n^2=(-1)^{n-1} + F_{n-1} \\cdot F_{n+1}\\)</li> <li>\\(gcd(F_a, F_b)=F_{gcd(a, b)}\\)</li> <li>\u6a21 \\(n\\) \u5468\u671f\uff08\u76ae\u8428\u8bfa\u5468\u671f\uff09</li> <li>\\(\\pi(p^k) = p^{k-1} \\pi(p)\\)</li> <li>\\(\\pi(nm) = lcm(\\pi(n), \\pi(m)), \\forall n \\perp m\\)</li> <li>\\(\\pi(2)=3, \\pi(5)=20\\)</li> <li>\\(\\forall p \\equiv \\pm 1\\pmod {10}, \\pi(p)|p-1\\)</li> <li>\\(\\forall p \\equiv \\pm 2\\pmod {5}, \\pi(p)|2p+2\\)</li> </ul>"},{"location":"acm/template/math/math/#_23","title":"\u5e38\u89c1\u751f\u6210\u51fd\u6570","text":"<ul> <li>\\((1+ax)^n=\\sum_{k=0}^n \\binom {n}{k} a^kx^k\\)</li> <li>\\(\\dfrac{1-x^{r+1}}{1-x}=\\sum_{k=0}^nx^k\\)</li> <li>\\(\\dfrac1{1-ax}=\\sum_{k=0}^{\\infty}a^kx^k\\)</li> <li>\\(\\dfrac 1{(1-x)^2}=\\sum_{k=0}^{\\infty}(k+1)x^k\\)</li> <li>\\(\\dfrac1{(1-x)^n}=\\sum_{k=0}^{\\infty} \\binom{n+k-1}{k}x^k\\)</li> <li>\\(e^x=\\sum_{k=0}^{\\infty}\\dfrac{x^k}{k!}\\)</li> <li>\\(\\ln(1+x)=\\sum_{k=0}^{\\infty}\\dfrac{(-1)^{k+1}}{k}x^k\\)</li> </ul>"},{"location":"acm/template/math/math/#_24","title":"\u4f69\u5c14\u65b9\u7a0b","text":"<p>\u82e5\u4e00\u4e2a\u4e22\u756a\u56fe\u65b9\u7a0b\u5177\u6709\u4ee5\u4e0b\u7684\u5f62\u5f0f\uff1a\\(x^2 - ny^2= 1\\)\u3002\u4e14 \\(n\\) \u4e3a\u6b63\u6574\u6570\uff0c\u5219\u79f0\u6b64\u4e8c\u5143\u4e8c\u6b21\u4e0d\u5b9a\u65b9\u7a0b\u4e3a\u4f69\u5c14\u65b9\u7a0b\u3002</p> <p>\u82e5 \\(n\\) \u662f\u5b8c\u5168\u5e73\u65b9\u6570\uff0c\u5219\u8fd9\u4e2a\u65b9\u7a0b\u5f0f\u53ea\u6709\u5e73\u51e1\u89e3 \\((\\pm 1,0)\\)\uff08\u5b9e\u9645\u4e0a\u5bf9\u4efb\u610f\u7684 \\(n\\)\uff0c\\((\\pm 1,0)\\) \u90fd\u662f\u89e3\uff09\u3002\u5bf9\u4e8e\u5176\u4f59\u60c5\u51b5\uff0c\u62c9\u683c\u6717\u65e5\u8bc1\u660e\u4e86\u4f69\u5c14\u65b9\u7a0b\u603b\u6709\u975e\u5e73\u51e1\u89e3\u3002\u800c\u8fd9\u4e9b\u89e3\u53ef\u7531 \\(\\sqrt{n}\\) \u7684\u8fde\u5206\u6570\u6c42\u51fa\u3002</p> <p>\\(x = [a_0; a_1, a_2, a_3]=x = a_0 + \\cfrac{1}{a_1 + \\cfrac{1}{a_2 + \\cfrac{1}{a_3 + \\cfrac{1}{\\ddots\\,}}}}\\)</p> <p>\u8bbe \\(\\tfrac{p_i}{q_i}\\) \u662f \\(\\sqrt{n}\\) \u7684\u8fde\u5206\u6570\u8868\u793a\uff1a\\([a_{0}; a_{1}, a_{2}, a_{3}, \\,\\ldots ]\\) \u7684\u6e10\u8fd1\u5206\u6570\u5217\uff0c\u7531\u8fde\u5206\u6570\u7406\u8bba\u77e5\u5b58\u5728 \\(i\\) \u4f7f\u5f97 \\((p_i,q_i)\\) \u4e3a\u4f69\u5c14\u65b9\u7a0b\u7684\u89e3\u3002\u53d6\u5176\u4e2d\u6700\u5c0f\u7684 \\(i\\)\uff0c\u5c06\u5bf9\u5e94\u7684 \\((p_i,q_i)\\) \u79f0\u4e3a\u4f69\u5c14\u65b9\u7a0b\u7684\u57fa\u672c\u89e3\uff0c\u6216\u6700\u5c0f\u89e3\uff0c\u8bb0\u4f5c \\((x_1,y_1)\\)\uff0c\u5219\u6240\u6709\u7684\u89e3 \\((x_i,y_i)\\) \u53ef\u8868\u793a\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a\\(x_{i}+y_{i}{\\sqrt  n}=(x_{1}+y_{1}{\\sqrt  n})^{i}\\)\u3002\u6216\u8005\u7531\u4ee5\u4e0b\u7684\u9012\u56de\u5173\u7cfb\u5f0f\u5f97\u5230\uff1a</p> <p>\\(\\displaystyle x_{i+1} = x_1 x_i + n y_1 y_i\\), \\(\\displaystyle y_{{i+1}}=x_{1}y_{i}+y_{1}x_{i}\\)\u3002</p> <p>\u4f46\u662f\uff1a\u4f69\u5c14\u65b9\u7a0b\u5343\u4e07\u4e0d\u8981\u53bb\u63a8\uff08\u867d\u7136\u63a8\u8d77\u6765\u5f88\u6709\u8da3\uff0c\u4f46\u7ed3\u679c\u4e0d\u4e00\u5b9a\u597d\u770b\uff0c\u4f1a\u662f\u4e24\u4e2a\u5f0f\u5b50\uff09\u3002\u8bb0\u4f4f\u4f69\u5c14\u65b9\u7a0b\u7ed3\u679c\u7684\u5f62\u5f0f\u901a\u5e38\u662f\u00a0\\(a_n=ka_{n\u22121}\u2212a_{n\u22122}\\)\uff08\\(a_{n\u22122}\\)\u00a0\u524d\u7684\u7cfb\u6570\u901a\u5e38\u662f\u00a0\\(\u22121\\)\uff09\u3002\u66b4\u529b / \u51d1\u51fa\u4e24\u4e2a\u57fa\u7840\u89e3\u4e4b\u540e\u52a0\u4e0a\u4e00\u4e2a \\(0\\)\uff0c\u5bb9\u6613\u89e3\u51fa\u00a0\\(k\\)\u00a0\u5e76\u9a8c\u8bc1\u3002</p>"},{"location":"acm/template/math/math/#burnside-polya","title":"Burnside &amp; Polya","text":"<ul> <li>\\(|X/G|={\\frac  {1}{|G|}}\\sum _{{g\\in G}}|X^{g}|\\)</li> </ul> <p>\u6ce8\uff1a\\(X^g\\) \u662f \\(g\\) \u4e0b\u7684\u4e0d\u52a8\u70b9\u6570\u91cf\uff0c\u4e5f\u5c31\u662f\u8bf4\u6709\u591a\u5c11\u79cd\u4e1c\u897f\u7528 \\(g\\) \u4f5c\u7528\u4e4b\u540e\u53ef\u4ee5\u4fdd\u6301\u4e0d\u53d8\u3002</p> <ul> <li>\\(|Y^X/G| = \\frac{1}{|G|}\\sum_{g \\in G} m^{c(g)}\\)</li> </ul> <p>\u6ce8\uff1a\u7528 \\(m\\) \u79cd\u989c\u8272\u67d3\u8272\uff0c\u7136\u540e\u5bf9\u4e8e\u67d0\u4e00\u79cd\u7f6e\u6362 \\(g\\)\uff0c\u6709 \\(c(g)\\) \u4e2a\u7f6e\u6362\u73af\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u7f6e\u6362\u540e\u989c\u8272\u4ecd\u7136\u76f8\u540c\uff0c\u6bcf\u4e2a\u7f6e\u6362\u73af\u5fc5\u987b\u67d3\u6210\u540c\u8272\u3002</p>"},{"location":"acm/template/math/math/#_25","title":"\u76ae\u514b\u5b9a\u7406","text":"<p>\\(2S = 2a+b-2\\)</p> <ul> <li>\\(S\\) \u591a\u8fb9\u5f62\u9762\u79ef</li> <li>\\(a\\) \u591a\u8fb9\u5f62\u5185\u90e8\u70b9\u6570</li> <li>\\(b\\) \u591a\u8fb9\u5f62\u8fb9\u4e0a\u70b9\u6570</li> </ul>"},{"location":"acm/template/math/math/#_26","title":"\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14","text":"<ul> <li>\\(g(n) = \\sum_{d|n} f(d) \\Leftrightarrow f(n) = \\sum_{d|n} \\mu (d) g( \\frac{n}{d})\\)</li> <li>\\(f(n)=\\sum_{n|d}g(d) \\Leftrightarrow g(n)=\\sum_{n|d} \\mu(\\frac{d}{n}) f(d)\\)</li> </ul>"},{"location":"acm/template/math/math/#_27","title":"\u4f4e\u9636\u7b49\u5e42\u6c42\u548c","text":"<ul> <li>\\(\\sum_{i=1}^{n} i^{1} = \\frac{n(n+1)}{2} = \\frac{1}{2}n^2 +\\frac{1}{2} n\\)</li> <li>\\(\\sum_{i=1}^{n} i^{2} = \\frac{n(n+1)(2n+1)}{6} = \\frac{1}{3}n^3 + \\frac{1}{2}n^2 + \\frac{1}{6}n\\)</li> <li>\\(\\sum_{i=1}^{n} i^{3} = \\left[\\frac{n(n+1)}{2}\\right]^{2} = \\frac{1}{4}n^4 + \\frac{1}{2}n^3 + \\frac{1}{4}n^2\\)</li> <li>\\(\\sum_{i=1}^{n} i^{4} = \\frac{n(n+1)(2n+1)(3n^2+3n-1)}{30} = \\frac{1}{5}n^5 + \\frac{1}{2}n^4 + \\frac{1}{3}n^3 - \\frac{1}{30}n\\)</li> <li>\\(\\sum_{i=1}^{n} i^{5} = \\frac{n^{2}(n+1)^{2}(2n^2+2n-1)}{12} = \\frac{1}{6}n^6 + \\frac{1}{2}n^5 + \\frac{5}{12}n^4 - \\frac{1}{12}n^2\\)</li> </ul>"},{"location":"acm/template/math/math/#_28","title":"\u4e00\u4e9b\u7ec4\u5408\u516c\u5f0f","text":"<ul> <li>\u9519\u6392\u516c\u5f0f\uff1a\\(D_1=0,D_2=1,D_n=(n-1)(D_{n-1} + D_{n-2})=n!(\\frac 1{2!}-\\frac 1{3!}+\\dots + (-1)^n\\frac 1{n!})=\\lfloor \\frac{n!}e + 0.5 \\rfloor\\)</li> <li>\u5361\u5854\u5170\u6570\uff08\\(n\\) \u5bf9\u62ec\u53f7\u5408\u6cd5\u65b9\u6848\u6570\uff0c\\(n\\) \u4e2a\u7ed3\u70b9\u4e8c\u53c9\u6811\u4e2a\u6570\uff0c\\(n\\times n\\) \u65b9\u683c\u4e2d\u5bf9\u89d2\u7ebf\u4e0b\u65b9\u7684\u5355\u8c03\u8def\u5f84\u6570\uff0c\u51f8 \\(n+2\\) \u8fb9\u5f62\u7684\u4e09\u89d2\u5f62\u5212\u5206\u6570\uff0c\\(n\\) \u4e2a\u5143\u7d20\u7684\u5408\u6cd5\u51fa\u6808\u5e8f\u5217\u6570\uff09\uff1a\\(C_n=\\frac 1{n+1}\\binom {2n}n=\\frac{(2n)!}{(n+1)!n!}\\)</li> </ul>"},{"location":"acm/template/math/math/#_29","title":"\u4e8c\u6b21\u5269\u4f59","text":"<p>URAL 1132</p> <pre><code>LL q1, q2, w;\nstruct P { // x + y * sqrt(w)\n    LL x, y;\n};\n\nP pmul(const P&amp; a, const P&amp; b, LL p) {\n    P res;\n    res.x = (a.x * b.x + a.y * b.y % p * w) % p;\n    res.y = (a.x * b.y + a.y * b.x) % p;\n    return res;\n}\n\nP bin(P x, LL n, LL MOD) {\n    P ret = {1, 0};\n    for (; n; n &gt;&gt;= 1, x = pmul(x, x, MOD))\n        if (n &amp; 1) ret = pmul(ret, x, MOD);\n    return ret;\n}\nLL Legendre(LL a, LL p) { return bin(a, (p - 1) &gt;&gt; 1, p); }\n\nLL equation_solve(LL b, LL p) {\n    if (p == 2) return 1;\n    if ((Legendre(b, p) + 1) % p == 0)\n        return -1;\n    LL a;\n    while (true) {\n        a = rand() % p;\n        w = ((a * a - b) % p + p) % p;\n        if ((Legendre(w, p) + 1) % p == 0)\n            break;\n    }\n    return bin({a, 1}, (p + 1) &gt;&gt; 1, p).x;\n}\n\nint main() {\n    int T; cin &gt;&gt; T;\n    while (T--) {\n        LL a, p; cin &gt;&gt; a &gt;&gt; p;\n        a = a % p;\n        LL x = equation_solve(a, p);\n        if (x == -1) {\n            puts(\"No root\");\n        } else {\n            LL y = p - x;\n            if (x == y) cout &lt;&lt; x &lt;&lt; endl;\n            else cout &lt;&lt; min(x, y) &lt;&lt; \" \" &lt;&lt; max(x, y) &lt;&lt; endl;\n        }\n    }\n}\n</code></pre>"},{"location":"acm/template/math/math/#_30","title":"\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406","text":"<ul> <li>\u65e0\u89e3\u8fd4\u56de -1</li> <li>\u524d\u7f6e\u6a21\u677f\uff1a\u6269\u5c55\u6b27\u51e0\u91cc\u5f97</li> </ul> <pre><code>LL CRT(LL *m, LL *r, LL n) {\n    if (!n) return 0;\n    LL M = m[0], R = r[0], x, y, d;\n    FOR (i, 1, n) {\n        d = ex_gcd(M, m[i], x, y);\n        if ((r[i] - R) % d) return -1;\n        x = (r[i] - R) / d * x % (m[i] / d);\n        // \u9632\u7206 LL\n        // x = mul((r[i] - R) / d, x, m[i] / d);\n        R += x * M;\n        M = M / d * m[i];\n        R %= M;\n    }\n    return R &gt;= 0 ? R : R + M;\n}\n</code></pre>"},{"location":"acm/template/math/math/#_31","title":"\u4f2f\u52aa\u5229\u6570\u548c\u7b49\u5e42\u6c42\u548c","text":"<ul> <li>\u9884\u5904\u7406\u9006\u5143</li> <li>\u9884\u5904\u7406\u7ec4\u5408\u6570</li> <li>\\(\\sum_{i=0}^n i^k = \\frac{1}{k+1} \\sum_{i=0}^k \\binom{k+1}{i} B_{k+1-i} (n+1)^i\\).</li> <li>\u4e5f\u53ef\u4ee5 \\(\\sum_{i=0}^n i^k = \\frac{1}{k+1} \\sum_{i=0}^k \\binom{k+1}{i} B^+_{k+1-i} n^i\\)\u3002\u533a\u522b\u5728\u4e8e \\(B^+_1 =1/2\\)\u3002(\u5fc3\u6001\u5d29\u4e86)</li> </ul> <pre><code>namespace Bernoulli {\n    const int M = 100;\n    LL inv[M] = {-1, 1};\n    void inv_init(LL n, LL p) {\n        FOR (i, 2, n)\n            inv[i] = (p - p / i) * inv[p % i] % p;\n    }\n\n    LL C[M][M];\n    void init_C(int n) {\n        FOR (i, 0, n) {\n            C[i][0] = C[i][i] = 1;\n            FOR (j, 1, i)\n                C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % MOD;\n        }\n    }\n\n    LL B[M] = {1};\n    void init() {\n        inv_init(M, MOD);\n        init_C(M);\n        FOR (i, 1, M - 1) {\n            LL&amp; s = B[i] = 0;\n            FOR (j, 0, i)\n                s += C[i + 1][j] * B[j] % MOD;\n            s = (s % MOD * -inv[i + 1] % MOD + MOD) % MOD;\n        }\n    }\n\n    LL p[M] = {1};\n    LL go(LL n, LL k) {\n        n %= MOD;\n        if (k == 0) return n;\n        FOR (i, 1, k + 2)\n            p[i] = p[i - 1] * (n + 1) % MOD;\n        LL ret = 0;\n        FOR (i, 1, k + 2)\n            ret += C[k + 1][i] * B[k + 1 - i] % MOD * p[i] % MOD;\n        ret = ret % MOD * inv[k + 1] % MOD;\n        return ret;\n    }\n}\n</code></pre>"},{"location":"acm/template/math/math/#_32","title":"\u5355\u7eaf\u5f62","text":"<ul> <li>\u8981\u6c42\u6709\u57fa\u672c\u89e3\uff0c\u4e5f\u5c31\u662f x \u4e3a\u96f6\u5411\u91cf\u53ef\u884c</li> <li>v \u8981\u521d\u59cb\u5316\u4e3a 0\uff0cn \u8868\u793a\u5411\u91cf\u957f\u5ea6\uff0cm \u8868\u793a\u7ea6\u675f\u4e2a\u6570</li> </ul> <pre><code>// min{ b x } / max { c x }\n// A x &gt;= c   / A x &lt;= b\n// x &gt;= 0\nnamespace lp {\n    int n, m;\n    double a[M][N], b[M], c[N], v;\n\n    void pivot(int l, int e) {\n        b[l] /= a[l][e];\n        FOR (j, 0, n) if (j != e) a[l][j] /= a[l][e];\n        a[l][e] = 1 / a[l][e];\n\n        FOR (i, 0, m)\n            if (i != l &amp;&amp; fabs(a[i][e]) &gt; 0) {\n                b[i] -= a[i][e] * b[l];\n                FOR (j, 0, n)\n                    if (j != e) a[i][j] -= a[i][e] * a[l][j];\n                a[i][e] = -a[i][e] * a[l][e];\n            }\n        v += c[e] * b[l];\n        FOR (j, 0, n) if (j != e) c[j] -= c[e] * a[l][j];\n        c[e] = -c[e] * a[l][e];\n    }\n    double simplex() {\n        while (1) {\n            v = 0;\n            int e = -1, l = -1;\n            FOR (i, 0, n) if (c[i] &gt; eps) { e = i; break; }\n            if (e == -1) return v;\n            double t = INF;\n            FOR (i, 0, m)\n                if (a[i][e] &gt; eps &amp;&amp; t &gt; b[i] / a[i][e]) {\n                    t = b[i] / a[i][e];\n                    l = i;\n                }\n            if (l == -1) return INF;\n            pivot(l, e);\n        }\n    }\n}\n</code></pre>"},{"location":"acm/template/math/math/#_33","title":"\u79bb\u6563\u5bf9\u6570","text":""},{"location":"acm/template/math/math/#bsgs","title":"BSGS","text":"<ul> <li>\u6a21\u6570\u4e3a\u7d20\u6570</li> </ul> <pre><code>LL BSGS(LL a, LL b, LL p) { // a^x = b (mod p)\n    a %= p;\n    if (!a &amp;&amp; !b) return 1;\n    if (!a) return -1;\n    static map&lt;LL, LL&gt; mp; mp.clear();\n    LL m = sqrt(p + 1.5);\n    LL v = 1;\n    FOR (i, 1, m + 1) {\n        v = v * a % p;\n        mp[v * b % p] = i;\n    }\n    LL vv = v;\n    FOR (i, 1, m + 1) {\n        auto it = mp.find(vv);\n        if (it != mp.end()) return i * m - it-&gt;second;\n        vv = vv * v % p;\n    }\n    return -1;\n}\n</code></pre>"},{"location":"acm/template/math/math/#exbsgs","title":"exBSGS","text":"<ul> <li>\u6a21\u6570\u53ef\u4ee5\u975e\u7d20\u6570</li> </ul> <pre><code>LL exBSGS(LL a, LL b, LL p) { // a^x = b (mod p)\n    a %= p; b %= p;\n    if (a == 0) return b &gt; 1 ? -1 : b == 0 &amp;&amp; p != 1;\n    LL c = 0, q = 1;\n    while (1) {\n        LL g = __gcd(a, p);\n        if (g == 1) break;\n        if (b == 1) return c;\n        if (b % g) return -1;\n        ++c; b /= g; p /= g; q = a / g * q % p;\n    }\n    static map&lt;LL, LL&gt; mp; mp.clear();\n    LL m = sqrt(p + 1.5);\n    LL v = 1;\n    FOR (i, 1, m + 1) {\n        v = v * a % p;\n        mp[v * b % p] = i;\n    }\n    FOR (i, 1, m + 1) {\n        q = q * v % p;\n        auto it = mp.find(q);\n        if (it != mp.end()) return i * m - it-&gt;second + c;\n    }\n    return -1;\n}\n</code></pre>"},{"location":"acm/template/math/math/#_34","title":"\u6570\u8bba\u5206\u5757","text":"<p>\\(f(i) = \\lfloor \\frac{n}{i} \\rfloor=v\\) \u65f6 \\(i\\) \u7684\u53d6\u503c\u8303\u56f4\u662f \\([l,r]\\)\u3002</p> <pre><code>for (LL l = 1, v, r; l &lt;= N; l = r + 1) {\n    v = N / l; r = N / v;\n}\n</code></pre>"},{"location":"acm/template/math/math/#_35","title":"\u535a\u5f08","text":"<ul> <li>Nim \u6e38\u620f\uff1a\u6bcf\u8f6e\u4ece\u82e5\u5e72\u5806\u77f3\u5b50\u4e2d\u7684\u4e00\u5806\u53d6\u8d70\u82e5\u5e72\u9897\u3002\u5148\u624b\u5fc5\u80dc\u6761\u4ef6\u4e3a\u77f3\u5b50\u6570\u91cf\u5f02\u6216\u548c\u975e\u96f6\u3002</li> <li>\u9636\u68af Nim \u6e38\u620f\uff1a\u53ef\u4ee5\u9009\u62e9\u9636\u68af\u4e0a\u67d0\u4e00\u5806\u4e2d\u7684\u82e5\u5e72\u9897\u5411\u4e0b\u63a8\u52a8\u4e00\u7ea7\uff0c\u76f4\u5230\u5168\u90e8\u63a8\u4e0b\u53bb\u3002\u5148\u624b\u5fc5\u80dc\u6761\u4ef6\u662f\u5947\u6570\u9636\u68af\u7684\u5f02\u6216\u548c\u975e\u96f6\uff08\u5bf9\u4e8e\u5076\u6570\u9636\u68af\u7684\u64cd\u4f5c\u53ef\u4ee5\u6a21\u4eff\uff09\u3002</li> <li>Anti-SG\uff1a\u65e0\u6cd5\u64cd\u4f5c\u8005\u80dc\u3002\u5148\u624b\u5fc5\u80dc\u7684\u6761\u4ef6\u662f\uff1a</li> <li>SG \u4e0d\u4e3a 0 \u4e14\u67d0\u4e2a\u5355\u4e00\u6e38\u620f\u7684 SG \u5927\u4e8e 1 \u3002</li> <li>SG \u4e3a 0 \u4e14\u6ca1\u6709\u5355\u4e00\u6e38\u620f\u7684 SG \u5927\u4e8e 1\u3002</li> <li>Every-SG\uff1a\u5bf9\u6240\u6709\u5355\u4e00\u6e38\u620f\u90fd\u8981\u64cd\u4f5c\u3002\u5148\u624b\u5fc5\u80dc\u7684\u6761\u4ef6\u662f\u5355\u4e00\u6e38\u620f\u4e2d\u7684\u6700\u5927 step \u4e3a\u5947\u6570\u3002</li> <li>\u5bf9\u4e8e\u7ec8\u6b62\u72b6\u6001 step \u4e3a 0</li> <li>\u5bf9\u4e8e SG \u4e3a 0 \u7684\u72b6\u6001\uff0cstep \u662f\u6700\u5927\u540e\u7ee7 step +1</li> <li>\u5bf9\u4e8e SG \u975e 0 \u7684\u72b6\u6001\uff0cstep \u662f\u6700\u5c0f\u540e\u7ee7 step +1</li> <li>\u6811\u4e0a\u5220\u8fb9\uff1a\u53f6\u5b50 SG \u4e3a 0\uff0c\u975e\u53f6\u5b50\u7ed3\u70b9\u4e3a\u6240\u6709\u5b50\u7ed3\u70b9\u7684 SG \u503c\u52a0 1 \u540e\u7684\u5f02\u6216\u548c\u3002</li> </ul> <p>\u5c1d\u8bd5\uff1a</p> <ul> <li>\u6253\u8868\u627e\u89c4\u5f8b</li> <li>\u5bfb\u627e\u4e00\u7c7b\u5fc5\u80dc\u6001\uff08\u5982\u5bf9\u79f0\u5c40\u9762\uff09</li> <li>\u76f4\u63a5\u535a\u5f08 dp</li> </ul>"},{"location":"acm/template/math/game-theory/topic1/","title":"\u7b97\u6cd5\u7b14\u8bb0 | \u535a\u5f08\u8bba","text":"<p>SG \u51fd\u6570</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u535a\u5f08\u8bba"]},{"location":"acm/template/math/game-theory/topic1/#_1","title":"\u535a\u5f08\u8bba\u7b80\u4ecb","text":"<p>\u6ce8\uff1a\u4e0b\u9762\u8fd9\u6bb5\u6587\u5b57\u6458\u6284\u81ea OI-Wiki</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u535a\u5f08\u8bba"]},{"location":"acm/template/math/game-theory/topic1/#_2","title":"\u516c\u5e73\u7ec4\u5408\u6e38\u620f","text":"<p>\u516c\u5e73\u7ec4\u5408\u6e38\u620f\uff08Impartial Game\uff09\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <ul> <li>\u6e38\u620f\u6709\u4e24\u4e2a\u4eba\u53c2\u4e0e\uff0c\u4e8c\u8005\u8f6e\u6d41\u505a\u51fa\u51b3\u7b56\uff0c\u53cc\u65b9\u5747\u77e5\u9053\u6e38\u620f\u7684\u5b8c\u6574\u4fe1\u606f\uff1b</li> <li>\u4efb\u610f\u4e00\u4e2a\u6e38\u620f\u8005\u5728\u67d0\u4e00\u786e\u5b9a\u72b6\u6001\u53ef\u4ee5\u4f5c\u51fa\u7684\u51b3\u7b56\u96c6\u5408\u53ea\u4e0e\u5f53\u524d\u7684\u72b6\u6001\u6709\u5173\uff0c\u800c\u4e0e\u6e38\u620f\u8005\u65e0\u5173\uff1b</li> <li>\u6e38\u620f\u4e2d\u7684\u540c\u4e00\u4e2a\u72b6\u6001\u4e0d\u53ef\u80fd\u591a\u6b21\u62b5\u8fbe\uff0c\u6e38\u620f\u4ee5\u73a9\u5bb6\u65e0\u6cd5\u884c\u52a8\u4e3a\u7ed3\u675f\uff0c\u4e14\u6e38\u620f\u4e00\u5b9a\u4f1a\u5728\u6709\u9650\u6b65\u540e\u4ee5\u975e\u5e73\u5c40\u7ed3\u675f\u3002</li> </ul>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u535a\u5f08\u8bba"]},{"location":"acm/template/math/game-theory/topic1/#_3","title":"\u975e\u516c\u5e73\u7ec4\u5408\u6e38\u620f","text":"<p>\u975e\u516c\u5e73\u7ec4\u5408\u6e38\u620f\uff08Partizan Game\uff09\u4e0e\u516c\u5e73\u7ec4\u5408\u6e38\u620f\u7684\u533a\u522b\u5728\u4e8e\u5728\u975e\u516c\u5e73\u7ec4\u5408\u6e38\u620f\u4e2d\uff0c\u6e38\u620f\u8005\u5728\u67d0\u4e00\u786e\u5b9a\u72b6\u6001\u53ef\u4ee5\u505a\u51fa\u7684\u51b3\u7b56\u96c6\u5408\u4e0e\u6e38\u620f\u8005\u6709\u5173\u3002\u5927\u90e8\u5206\u7684\u68cb\u7c7b\u6e38\u620f\u90fd \u4e0d\u662f \u516c\u5e73\u7ec4\u5408\u6e38\u620f\uff0c\u5982\u56fd\u9645\u8c61\u68cb\u3001\u4e2d\u56fd\u8c61\u68cb\u3001\u56f4\u68cb\u3001\u4e94\u5b50\u68cb\u7b49\uff08\u56e0\u4e3a\u53cc\u65b9\u90fd\u4e0d\u80fd\u4f7f\u7528\u5bf9\u65b9\u7684\u68cb\u5b50\uff09\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u535a\u5f08\u8bba"]},{"location":"acm/template/math/game-theory/topic1/#_4","title":"\u53cd\u5e38\u6e38\u620f","text":"<p>\u53cd\u5e38\u6e38\u620f\uff08Mis\u00e8re Game\uff09\u6309\u7167\u4f20\u7edf\u7684\u6e38\u620f\u89c4\u5219\u8fdb\u884c\u6e38\u620f\uff0c\u4f46\u662f\u5176\u80dc\u8005\u4e3a\u7b2c\u4e00\u4e2a\u65e0\u6cd5\u884c\u52a8\u7684\u73a9\u5bb6\u3002\u4ee5 Nim \u6e38\u620f\u4e3a\u4f8b\uff0cNim \u6e38\u620f\u4e2d\u53d6\u8d70\u6700\u540e\u4e00\u9897\u77f3\u5b50\u7684\u4e3a\u80dc\u8005\uff0c\u800c\u53cd\u5e38 Nim \u6e38\u620f\u4e2d\u53d6\u8d70\u6700\u540e\u4e00\u523b\u77f3\u5b50\u7684\u4e3a\u8d25\u8005\u3002</p> <p>\u672c\u6587\u4e3b\u8981\u7814\u7a76\u516c\u5e73\u7ec4\u5408\u6e38\u620f\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u535a\u5f08\u8bba"]},{"location":"acm/template/math/game-theory/topic1/#sg","title":"SG \u51fd\u6570","text":"<p>\u6211\u4eec\u901a\u8fc7 Nim \u6e38\u620f\u6765\u4ecb\u7ecd SG \u51fd\u6570\uff0c\u4ec0\u4e48\u662f Nim \u6e38\u620f\u5462\uff1f</p> <p>Nim \u6e38\u620f\u662f\u4e00\u79cd\u4e24\u4e2a\u4eba\u73a9\u7684\u56de\u5408\u5236\u6570\u5b66\u6218\u7565\u6e38\u620f\u3002\u6e38\u620f\u8005\u8f6e\u6d41\u4ece\u51e0\u6392\u68cb\u5b50\uff08\u6216\u8005\u4efb\u4f55\u9053\u5177\uff09\u4e2d\u9009\u62e9\u4e00\u6392\uff0c\u518d\u7531\u8fd9\u4e00\u6392\u4e2d\u53d6\u8d70\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\uff0c\u4f9d\u89c4\u5219\u4e0d\u540c\uff0c\u62ff\u8d70\u6700\u540e\u4e00\u4e2a\u7684\u53ef\u80fd\u662f\u8f93\u5bb6\uff0c\u4e5f\u6709\u53ef\u80fd\u662f\u8d62\u5bb6\u3002\uff08\u8f6c\u81ea \u5c3c\u59c6\u6e38\u620f\uff09</p> <p>\u6211\u4eec\u63a5\u4e0b\u6765\u5b9a\u4e49\u4e00\u79cd\u51fd\u6570 \\(SG(x)\\)\uff0c\u5e76\u4e14\u4ee4 \\(SG(x):=mex\\{SG(y)|x \\to y\\}\\)\uff0c\u8fd9\u91cc \\(x\\)\uff0c\\(y\\) \u5747\u8868\u793a\u67d0\u79cd\u72b6\u6001\uff0c\\(x \\to y\\) \u8868\u793a \\(x\\) \u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21\u64cd\u4f5c\u5230\u8fbe \\(y\\)\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a \\(y\\) \u662f \\(x\\) \u7684\u540e\u7ee7\u72b6\u6001\u3002\\(mex\\) \u8868\u793a\u4e00\u4e2a\u96c6\u5408\u4e2d\u672a\u51fa\u73b0\u7684\u6700\u5c0f\u81ea\u7136\u6570\uff08\u4f8b\u5982 \\(mex\\{0, 1, 3\\} = 2\\) \uff09\u3002\u5982\u679c \\(SG(x) = n\\)\uff0c\u8bf4\u660e\u53ef\u4ee5\u4ece\u5f53\u524d\u72b6\u6001\u8f6c\u79fb\u5230 \\(0\\sim n - 1\\) \u7684\u72b6\u6001\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u72b6\u6001\uff0c\u5982\u679c\u5b83\u662f\u5fc5\u80dc\u6001\uff0c\u90a3\u4e48\u5b83\u79fb\u52a8\u4e00\u6b65\uff0c\u4e0b\u4e00\u6b65\u4e00\u5b9a\u53ef\u4ee5\u53d8\u6210\u5fc5\u8d25\u6001\u3002\u5982\u679c\u4e00\u4e2a\u72b6\u6001\u662f\u5fc5\u8d25\u6001\uff0c\u90a3\u4e48\u5b83\u65e0\u8bba\u600e\u4e48\u79fb\u52a8\uff0c\u5b83\u7684\u4e0b\u4e00\u6b65\u53ea\u80fd\u662f\u5fc5\u80dc\u6001\u3002\u6211\u4eec\u4ee4 \\(SG(x) = 0\\) \u8868\u793a\u5fc5\u8d25\uff0c\\(SG(x) \\ne 0\\) \u8868\u793a\u5fc5\u80dc\u3002\u90a3\u4e48 \\(SG(x) = 0\\) \u65f6\u8bf4\u660e\u4e0b\u4e00\u6b65\u7684\u72b6\u6001 \\(y\\) \u5168\u90fd\u662f \\(SG(y) \\ne 0\\)\uff0c\\(SG(x) \\ne 0\\) \u8bf4\u660e\u4e0b\u4e00\u6b65\u5b58\u5728\u72b6\u6001 \\(y'\\) \u6ee1\u8db3 \\(SG(y') \\ne 0\\)\u3002\u7b26\u5408\u6211\u4eec\u7684\u80dc\u8d25\u72b6\u6001\u3002</p> <p>\u5bf9\u4e8e\u5355\u5806\u7684 Nim \u6e38\u620f\uff0c\u4e0d\u96be\u8bc1\u660e \\(SG(x) = x\\)\uff0c\u4f46\u662f\u5bf9\u4e8e\u53cc\u5806\uff0c\u4e09\u5806\uff0cn \u5806\u60c5\u51b5\u5c31\u5f88\u590d\u6742\u3002\u6240\u4ee5\u6211\u4eec\u5f15\u5165 SG\u5b9a\u7406\u3002</p> <p>Sprague-Grundy\u5b9a\u7406\uff08\u4e24\u4e2a\u6e38\u620f\u7684\u60c5\u5f62\uff09\uff1a</p> <p>\u5bf9\u4e8e\u516c\u5e73\u7ec4\u5408\u6e38\u620f\u7684\u4e24\u4e2a\u72b6\u6001 \\(x\\) \u548c \\(y\\)\uff0c\u6709 \\(SG(x + y) = SG(x) \\oplus SG(y)\\)</p> <p>\u63a8\u5e7f\u7684\u60c5\u5f62\uff1a</p> <p>\u5bf9\u4e8e\u516c\u5e73\u7ec4\u5408\u6e38\u620f\u7684 \\(n\\) \u4e2a\u72b6\u6001 \\(x_1,x_2, \\dots,x_n\\)\uff0c\u6709 \\(SG(x_1 + x_2 + \\cdots + x_n) = SG(x_1) \\oplus SG(x_2) \\oplus \\cdots \\oplus SG(x_n)\\)</p> <p>\u5b9a\u7406\u5177\u4f53\u8bc1\u660e\u89c1\u8fd9\u91cc\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u535a\u5f08\u8bba"]},{"location":"acm/template/math/game-theory/topic1/#_5","title":"\u53c2\u8003\u6587\u732e","text":"<p>\u516c\u5e73\u7ec4\u5408\u6e38\u620f - OI-Wiki</p> <p>\u7b97\u6cd5\u5b66\u4e60\u7b14\u8bb0(51): SG\u51fd\u6570 - Pecco - \u77e5\u4e4e</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u535a\u5f08\u8bba"]},{"location":"acm/template/math/game-theory/images/topic1/","title":"\u7b97\u6cd5\u7b14\u8bb0 | \u6570\u8bba\uff08\u4e00\uff09","text":"<p>\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\uff0c\u9006\u5143\uff0c\u6b27\u62c9\u51fd\u6570</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/game-theory/images/topic1/#1","title":"1. \u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/game-theory/images/topic1/#11","title":"1.1 \u7b97\u6cd5\u4ecb\u7ecd","text":"<p>\u8bbe \\(a, b\\) \u4e3a\u4e0d\u5168\u4e3a \\(0\\) \u7684\u6574\u6570\uff0c\u5b58\u5728\u6574\u6570 \\(x, y\\) \u4f7f\u5f97 \\(ax + by = (a, b)\\)\u3002</p> <p>\u8fdb\u4e00\u6b65\u5730\uff0c\\(ax + by = m\\) \u6709\u89e3\u7684\u5145\u8981\u6761\u4ef6\u662f \\((a, b) | m\\) \uff08\u88f4\u8700\u5b9a\u7406\uff0c\u53c8\u53eb\u505a\u8d1d\u7956\u5b9a\u7406\uff09 \u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/game-theory/images/topic1/#12","title":"1.2 \u8bc1\u660e","text":"<p>\u82e5\u6211\u4eec\u6c42 \\(ax + by = (a, b)\\) \u7684\u89e3\uff0c\u4e0d\u5982\u5148\u6c42 \\(bx + (a \\mod b) y = (b, a \\mod b)\\) \u7684\u89e3\uff0c\u800c\u4e14\u7531\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u53ef\u77e5 \\((a, b) = (b, a \\mod b)\\)\u3002</p> <p>\u7ecf\u8fc7\u53d8\u6362 \\(bx + (a \\mod b)y = bx + (a - b \\times \\left \\lfloor \\dfrac{a}{b} \\right \\rfloor )y = ay + b(x - \\left \\lfloor \\dfrac{a}{b} \\right \\rfloor y)\\)\uff0c\u6240\u4ee5\u5f97\u51fa \\(bx + (a \\mod b) y = (b, a \\mod b)\\) \u7684\u89e3\u4e3a \\(x_0, y_0\\) \u540e\u5c31\u53ef\u4ee5\u5f97\u51fa \\(ax + by = (a, b)\\) \u7684\u89e3\u662f \\(x = y_0, y = (x_0 - \\left \\lfloor \\dfrac{a}{b} \\right \\rfloor y_0)\\) \u800c\u901a\u8fc7\u4e0d\u65ad\u8f97\u8f6c\u76f8\u9664\u6cd5\uff0c\u663e\u7136\u5230\u6700\u540e\u6211\u4eec\u5f97\u5230\u7684\u5f0f\u5b50\u4e3a \\((a, b)x + 0\\times y = (a, b)\\)\uff0c\u5f88\u5bb9\u6613\u53ef\u4ee5\u4ee4 \\(x = 1, y = 0\\) \u4e3a\u8fd9\u91cc\u7684\u4e00\u7ec4\u89e3\uff0c\u7136\u540e\u4e0d\u65ad\u8fed\u4ee3\u56de\u53bb\u6c42\u51fa\u6211\u4eec\u8981\u7684\u89e3\u3002</p> <p>\u5bf9\u4e8e\u8fdb\u4e00\u6b65\u7ed3\u8bba\u7684\u8bc1\u660e\uff0c\u82e5 \\(m\\) \u662f\u8be5\u65b9\u7a0b\u7ec4\u7684\u89e3\uff0c\u7531\u4e8e \\((a, b)\\) \u53ef\u4ee5\u6574\u9664\u5de6\u5f0f\uff0c\u90a3\u4e48 \\((a, b)\\) \u4e5f\u53ef\u4ee5\u6574\u9664\u53f3\u5f0f\uff08\u5145\u5206\u6027\uff09\u3002</p> <p>\u82e5 \\((a, b)|m\\)\uff0c\u90a3\u4e48\u6211\u4eec\u5df2\u77e5 \\(ax + by = (a, b)\\) \u7684\u4e00\u7ec4\u89e3\uff0c\u7b49\u5f0f\u4e24\u8fb9\u540c\u65f6\u4e58\u4ee5 \\(\\dfrac{m}{(a, b)}\\) \u4fbf\u53ef\u4ee5\u5f97\u5230\u539f\u65b9\u7a0b\u7ec4\u7684\u89e3\uff08\u5fc5\u8981\u6027\uff09\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/game-theory/images/topic1/#13","title":"1.3 \u5b9e\u73b0","text":"<pre><code>int exgcd(int a, int b, int &amp;x, int &amp;y) {\n    if (b == 0) {\n        x = 1;\n        y = 0;\n        return a;\n    }\n    int d = exgcd(b, a % b, y, x); \n    y -= (a / b) * x;\n    return d;\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/game-theory/images/topic1/#2","title":"2. \u9006\u5143","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/game-theory/images/topic1/#21","title":"2.1 \u5b9a\u4e49","text":"<p>\u82e5 \\(ab \\equiv 1(\\mod p)\\) \u5219\u79f0 \\(a\\)\uff0c\\(b\\) \u5728 \u6a21 \\(p\\) \u610f\u4e49\u4e0b\u4e92\u4e3a\u9006\u5143\uff0c\u8bb0\u4e3a \\(a = inv(b)\\)\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/game-theory/images/topic1/#22","title":"2.2 \u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u6c42\u9006\u5143","text":"<p>\u7531\u4e0a\u4e00\u8282\u53ef\u77e5\uff0c\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u53ef\u4ee5\u6c42\u51fa \\(ax + by = 1\\) \u7684\u4e00\u7ec4 \\(x, y\\) \u89e3\uff0c\u6545\u6211\u4eec\u8981\u6c42 \\(ax \\equiv 1(mod\\ b)\\) \u5373\u6c42 \\(ax + by = 1\\) \u7684\u4e00\u7ec4\u89e3\uff0c\u800c\u4e14\u8fd9\u91cc\u8981\u6c42\u6709\u89e3\u7684\u6761\u4ef6\u662f \\((a, b) = 1\\)\uff0c\u5229\u7528\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u5f88\u5bb9\u6613\u5f97\u51fa\u3002</p> <pre><code>ll exgcd(ll a, ll b, ll &amp;x, ll &amp;y) {\n    if (b == 0)\n    {\n        x = 1;\n        y = 0;\n        return a;\n    }\n    ll d = exgcd(b, a % b, y, x);\n    y -= (a / b) * x;\n    return d;\n}\nll inv(ll a, ll p) {\n    ll x, y;\n    if (exgcd(a, p, x, y) != 1)\n        return -1;\n    return (x % p + p) % p;\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/game-theory/images/topic1/#23","title":"2.3 \u8d39\u9a6c\u5c0f\u5b9a\u7406\u6c42\u9006\u5143","text":"<p>\u8d39\u9a6c\u5c0f\u5b9a\u7406\u7684\u5185\u5bb9\u5982\u4e0b\uff1a</p> <p>\u82e5 \\(p\\) \u4e3a\u7d20\u6570\uff0c\u4e14 \\((a, p) = 1\\)\uff0c\u5219 \\(a^{p - 1} \\equiv 1(mod \\ p)\\)\u3002</p> <p>\u8bc1\u660e\uff08\u5f85\u5b8c\u5584\uff09</p> <p>\u5229\u7528\u8be5\u5b9a\u7406\uff0c\u4e0d\u96be\u5f97\u51fa \\(inv(a) \\equiv a^{p - 2}(mod \\ p)\\)\uff0c\u6545\u53ef\u4ee5\u7528\u5feb\u901f\u5e42\u6765\u6c42\u89e3\u3002</p> <pre><code>inline ll qpow(ll a, ll b, ll p) {\n    ll ans = 1;\n    while (b) {\n        if (b &amp; 1) ans = ans % p * a % p;\n        a = a % p * a % p;\n        b &gt;&gt;= 1;\n    }\n    return ans;\n}\ninline ll inv(ll a, ll p) {\n    return qpow(a, p - 2, p);\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/game-theory/images/topic1/#24","title":"2.4 \u7ebf\u6027\u9012\u63a8\u6c42\u89e3\u9006\u5143","text":"<p>\u5982\u679c\u9898\u76ee\u8981\u6c42 \\(1 \\sim n\\) \u7684\u9006\u5143\uff0c\u90a3\u4e48\u524d\u4e24\u79cd\u65b9\u6cd5\u90fd\u5f88\u4f4e\u6548\uff0c\u8fd9\u91cc\u5f15\u5165\u7b2c\u4e09\u79cd\uff0c\u7ebf\u6027\u9012\u63a8\u6765\u6c42\u89e3\u3002</p> <p>\u4e0b\u9762\u7528 \\(O(n)\\) \u65b9\u6cd5\u6c42 \\(1 \\sim n\\) \u5173\u4e8e \\(p\\) \u7684\u9006\u5143\u3002</p> <p>\u9996\u5148\u663e\u7136 \\(1^{-1} \\equiv 1(mod \\ p)\\)\u3002</p> <p>\u5bf9\u4e8e\u6570 \\(i\\)\uff0c\u6709 \\(p = ki + j\\)\uff0c\u8fd9\u91cc \\(k = \\left \\lfloor \\dfrac{p}{i} \\right \\rfloor,j = p \\% i\\)\u3002</p> <p>\u90a3\u4e48\u5219\u6709 \\(ki + j \\equiv 0(mod \\ p)\\)\uff0c\u7b49\u5f0f\u4e24\u8fb9\u540c\u65f6\u4e58\u4ee5 \\(i^{-1}j^{-1}\\)\uff0c\u5219\u6709 \\(kj^{-1} + i^{-1} \\equiv 0(mod \\ p)\\)\u3002</p> <p>\u6545 \\(i^{-1} \\equiv -\\left \\lfloor \\dfrac{p}{i} \\right \\rfloor(p \\ mod \\ i)^{-1}(mod \\ p)\\)\uff0c\u800c\u4e14 \\(p \\ mod \\ i\\) \u80af\u5b9a\u5c0f\u4e8e \\(i\\) \uff0c\u6240\u4ee5\u53ef\u4ee5\u7531\u524d\u9012\u63a8\u540e\u3002</p> <p>\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u8fd9\u91cc\u4e3a\u9632\u6b62\u51fa\u73b0\u8d1f\u6570\uff0c\u6240\u4ee5\u5199\u7684\u662f <code>p - p / i</code> \uff0c\u800c\u4e14\u5f53 \\(i | p\\) \u65f6 <code>inv[i]</code> \u5e94\u8be5\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u6211\u4eec\u5f80\u5f80\u7528\u5927\u7d20\u6570 \\(10^9 + 7\\) \u6765\u8868\u793a\u3002</p> <pre><code>inv[1] = 1;\nfor (int i = 2; i &lt;= n; ++i) {\n  inv[i] = (long long)(p - p / i) * inv[p % i] % p;\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/game-theory/images/topic1/#25-n","title":"2.5 \u6c42\u4efb\u610f n \u4e2a\u6570\u7684\u9006\u5143","text":"<p>\u5bf9\u4e8e\u6c42\u4efb\u610f \\(n\\) \u4e2a\u6570 \\(a_i\\)\uff0c\u6211\u4eec\u7b97\u8fd9\u4e2a \\(n\\) \u4e2a\u6570\u7684\u524d\u7f00\u79ef\uff0c\u8bb0\u4e3a \\(s_i\\)\u3002</p> <p>\u7136\u540e\u6211\u4eec\u8ba1\u7b97 \\(s_n\\) \u7684\u9006\u5143\u4e3a \\(sInv_n\\)\uff0c\u90a3\u4e48 \\(s_i\\) \u7684\u9006\u5143\u4e3a \\(sInv_i =sInv_{i + 1} \\times a_{i + 1}\\)\u3002</p> <p>\u7136\u540e\u6613\u5f97 \\(a_i\\) \u7684\u9006\u5143 \\(Inv_i = sInv_i \\times s_{i - 1}\\)\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u8fd1\u4f3c \\(O(n)\\)\u3002 </p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/game-theory/images/topic1/#3","title":"3. \u6b27\u62c9\u51fd\u6570","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/game-theory/images/topic1/#4","title":"4. \u4e2d\u56fd\u5269\u4f59\u5b9a\u7406","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/game-theory/images/topic1/#41","title":"4.1 \u95ee\u9898\u7b80\u8ff0","text":"<p>\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u662f\u7528\u6765\u6c42\u89e3\u8bf8\u5982 $$ \\begin{cases} x \\equiv a_1(\\mod n_1) \\ x \\equiv a_2(\\mod n_2) \\     \\vdots \\ x \\equiv a_k(\\mod n_k) \\end{cases} $$ \u8fd9\u6837\u7684\u65b9\u7a0b\u7ec4\u95ee\u9898\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/game-theory/images/topic1/#42","title":"4.2 \u8fc7\u7a0b","text":"<ol> <li>\u7b97\u6240\u6709\u6a21\u6570\u7684\u79ef \\(n\\)\uff1b</li> <li>\u5bf9\u4e8e\u7b2c \\(i\\) \u4e2a\u65b9\u7a0b\uff1a<ul> <li>\u8ba1\u7b97 \\(m_i = \\dfrac{n}{n_i}\\)\uff1b</li> <li>\u8ba1\u7b97 \\(m_i\\) \u5728\u6a21 \\(n_i\\) \u610f\u4e49\u4e0b\u7684\u9006\u5143 \\(m_i^{-1}\\)\uff1b</li> <li>\u8ba1\u7b97 \\(c_i = m_im_i^{-1}\\)\uff08\u8fd9\u65f6\u4e0d\u8981\u5bf9 \\(n_i\\) \u53d6\u6a21\uff09</li> </ul> </li> <li>\u65b9\u7a0b\u7ec4\u5728\u6a21 \\(n\\) \u610f\u4e49\u4e0b\u7684\u552f\u4e00\u89e3\u4e3a \\(x = \\sum_{i = 1}^k a_ic_i(\\mod n)\\)</li> </ol>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/game-theory/images/topic1/#43","title":"4.3 \u5b9e\u73b0","text":"<pre><code>void CRT() {\n  ll n, M = 1, ans = 0;\n  cin &gt;&gt; n; \n  for(int i = 1; i &lt;= n; i++) {\n    cin &gt;&gt; b[i] &gt;&gt; a[i];\n    M *= b[i];\n  }\n  for(int i = 1; i &lt;= n; i++) {\n    ll m = M / b[i];\n    ll x, y;\n    exgcd(m, b[i], x, y); // \u6ce8\uff1a\u5982\u679c\u6a21\u6570\u4e0d\u4e3a\u8d28\u6570\u65f6\uff0c\u6c42\u9006\u5143\u4e0d\u80fd\u7528\u8d39\u9a6c\u5c0f\u5b9a\u7406\u6765\u7b97\uff0c\u53ea\u80fd\u7528\u6269\u6b27\u6765\u7b97\n    x = (x + b[i]) % b[i]; x %= M;\n    m *= x; m %= M;\n    ans += a[i] * m % M;\n    ans %= M;\n  }\n  cout &lt;&lt; (ans % M + M) % M &lt;&lt; endl;\n  return ;\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/game-theory/images/topic1/#44","title":"4.4 \u6269\u5c55\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406","text":"<p>\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u7684\u9002\u7528\u8303\u56f4\u662f\u6a21\u6570\u4e92\u8d28\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5f53\u65b9\u7a0b\u6a21\u6570\u4e0d\u4e92\u8d28\u65f6\u6211\u4eec\u8981\u7528\u5230\u6269\u5c55\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u3002</p> <p>\u601d\u8def\u662f\u4e0d\u65ad\u628a \\(n\\) \u4e2a\u65b9\u7a0b\u4e24\u4e24\u5408\u5e76\uff0c\u5bf9\u4e8e $$ \\begin{cases} x \\equiv b(\\mod a) \\ x \\equiv B(\\mod A)  \\end{cases} $$ \u6211\u4eec\u4ee4 \\(x = ya + b = YB + A\\) \uff0c\u90a3\u4e48\u6709 \\(B - b = ya - YA\\)\uff0c\u6211\u4eec\u5229\u7528\u6269\u6b27\u53ef\u4ee5\u6c42\u89e3\u51fa \\(x'a + y'A = (a,A)\\) \u7684\u4e00\u7ec4\u89e3\uff0c\u90a3\u4e48\u82e5 \\((a, A) \\nmid B-b\\) \u5219\u65b9\u7a0b\u65e0\u89e3\uff0c\u5bf9\u4e8e\u6709\u89e3\u7684\u60c5\u51b5 \\((x' \\times \\dfrac{B - b}{(a, A)})a + (y' \\times \\dfrac{B - b}{(a, A)})A = B - b\\)\uff0c\u4ee4 \\(X = x' \\times \\dfrac{B - b}{(a, A)}, Y = y' \\times \\dfrac{B - b}{(a, A)}\\) \u82e5\u662f\u8ba9\u89e3\u6700\u5c0f\u5373\u662f\u8ba9 \\(X\\) \u6700\u5c0f\uff0c\u6211\u4eec\u8c03\u6574 \\(X\\) \u53ef\u4ee5\u901a\u8fc7\u8ba9 \\(X + k \\times \\dfrac{A}{(a, A)}\\)\uff0c\u8fd9\u65f6 \\(Y\\) \u76f8\u5e94\u51cf\u53bb\u540c\u7b49\u7cfb\u6570\u7684 \\(\\dfrac{a}{(a, A)}\\)\u3002\u6240\u4ee5 \\(X = (X \\mod \\dfrac{A}{(a, A)} + \\dfrac{A}{(a, A)}) \\mod \\dfrac{A}{(a, A)}\\)\u3002\u6c42\u51fa\u65b0\u7684 \\(X\\) \u540e\u518d\u6839\u636e \\(x = yX + a\\) \u53ef\u4ee5\u6c42\u51fa\u65b0\u7684 \\(x\\)\uff0c\u65b0\u7684 \\(b = x \\mod \\dfrac{A \\times a}{(a, A)}\\)\uff0c\u65b0\u7684 \\(a = \\dfrac{A \\times a}{(a, A)}\\)\u3002\u90a3\u4e48\u5c31\u53ef\u4ee5\u5f97\u51fa\u65b0\u7684\u65b9\u7a0b \\(x \\equiv b(\\mod a)\\) \u4e86\u3002\u6700\u540e\u901a\u8fc7\u4e0d\u65ad\u5408\u5e76\u53d8\u4e3a\u4e00\u4e2a\u65b9\u7a0b\u5c31\u80fd\u6c42\u51fa\u7b54\u6848\u4e86\u3002  </p> <pre><code>void ExCRT() {\n  scanf(\"%d\", &amp;n);\n  for(int i = 1; i &lt;= n; i++) {\n    scanf(\"%lld%lld\", &amp;A, &amp;B);\n    if(i == 1) {\n      a = A;\n      b = B;\n    }\n    else {\n      g = exgcd(a, A, x, y);\n      if((B - b) % g) {\n        printf(\"-1\");\n        return ;\n      }\n      x = x * ((B - b) / g);\n      x = (x % (A / g) + (A / g)) % (A / g);\n      l = A / g * a;\n      b = ((a * x + b) % l + l) % l;\n      a = l;\n    }\n  }\n  printf(\"%lld\\n\", b % a);\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/game-theory/images/topic1/#5","title":"5. \u5362\u5361\u65af\u5b9a\u7406","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/game-theory/images/topic1/#51","title":"5.1 \u5b9a\u4e49","text":"<p>\u5bf9\u4e8e\u8d28\u6570 \\(p\\)\uff0c\u6709 $$ \\begin{pmatrix} n \\ m \\end{pmatrix} \\mod p = \\begin{pmatrix} \\left \\lfloor \\dfrac{n}{p} \\right \\rfloor \\ \\left \\lfloor \\dfrac{m}{p}\\right \\rfloor \\end{pmatrix} \\cdot \\begin{pmatrix} n \\mod p \\m \\mod p \\end{pmatrix} \\mod p $$ \u7531\u4e8e\\(n \\mod p\\) \u548c \\(m \\mod p\\) \u80af\u5b9a\u5c0f\u4e8e \\(p\\)\uff0c\u6240\u4ee5\u76f4\u63a5\u7b97\u5373\u53ef\uff0c\u5bf9 \\(\\left \\lfloor \\dfrac{n}{p} \\right \\rfloor\\) \u90e8\u5206\u518d\u7528\u5362\u5361\u65af\u5b9a\u7406\u8ba1\u7b97\u3002</p> <p>\u4e5f\u5373 \\(Lucas(n,m,p)=c(n\\%p,m\\%p)\u00d7Lucas(\\dfrac{n}{p},\\dfrac{m}{p},p)\\)\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/game-theory/images/topic1/#52","title":"5.2 \u8bc1\u660e","text":"<p>\u9996\u5148\u8bc1\u660e\u9996\u5148\u6211\u4eec\u9700\u8981\u8bc1\u660e \\(C_p^i \\equiv \\dfrac{p}{i}C_{p - 1}^{i - 1} \\equiv 0(\\mod p)(1 \\le i \\le p-1)\\) \u7531\u4e8e \\(p\\) \u4e3a\u8d28\u6570\uff0c\u6545 \\(\\dfrac{1}{i}C_{p - 1}^{i - 1}\\) \u4e3a\u6574\u6570\uff0c\u4e58\u4ee5 \\(p\\) \u540e\u548c \\(p\\) \u540c\u4f59\u4e3a \\(0\\)\uff0c\u6545\u5f97\u8bc1\u3002</p> <p>\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\u6709 \\((1 + x)^p \\equiv 1 + x^p(\\mod p)\\)</p> <p>\u5bf9\u4e8e \\(C_m^n \\mod p\\)\uff0c\u5176\u5b9e\u5c31\u662f\u6c42 \\((1 + x^n)\\mod p\\) \u4e2d \\(x^m\\) \u7684\u7cfb\u6570\u3002</p> <p>\u6211\u4eec\u4ee4 \\(n = ap +b\\)\uff0c\\(m = cp + d\\)\u3002\u6240\u4ee5\u63a5\u4e0b\u6765\u8bc1 \\(C_n^m \\equiv C_a^c \\times C_b^d(\\mod p)\\)\u3002</p> <p>\u6211\u4eec\u6709 $$ (1 + x)^n \\equiv (1 + x)^{pa}(1 + x)^b \\equiv (1 + x<sup>p)</sup>a(1 + x)^b(\\mod p) $$ \u89c2\u5bdf \\(x^m\\) \u7684\u7cfb\u6570\uff0c\u6545 \\(C_n^m x^m \\equiv C_a^c x^{cp}C_b^dx^d(\\mod p)\\)\uff0c\u7531\u4e8e \\(x^b\\) \u7cfb\u6570\u4e00\u81f4\uff0c\u6240\u4ee5  $$ C_n^m \\equiv C_a^c \\times C_b^d \\equiv C_{\\left \\lfloor \\frac{n}{p} \\right \\rfloor}^{\\left \\lfloor \\frac{m}{p} \\right \\rfloor} \\times C_{n \\mod p}^{m \\mod p}(\\mod p) $$ \u6545\u5f97\u8bc1\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/game-theory/images/topic1/#53","title":"5.3 \u5b9e\u73b0","text":"<pre><code>ll Lucas(ll n, ll m) {\n  return ((m == 0) ? 1 : (c(n % p, m % p) % p * Lucas(n / p, m / p) % p));\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/game-theory/images/topic1/#54","title":"5.4 \u6269\u5c55\u5362\u5361\u65af\u5b9a\u7406","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/number-theory/topic1/","title":"\u7b97\u6cd5\u7b14\u8bb0 | \u6570\u8bba\uff08\u4e00\uff09","text":"<p>\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\uff0c\u9006\u5143\uff0c\u6b27\u62c9\u51fd\u6570</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/number-theory/topic1/#1","title":"1. \u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/number-theory/topic1/#11","title":"1.1 \u7b97\u6cd5\u4ecb\u7ecd","text":"<p>\u8bbe \\(a, b\\) \u4e3a\u4e0d\u5168\u4e3a \\(0\\) \u7684\u6574\u6570\uff0c\u5b58\u5728\u6574\u6570 \\(x, y\\) \u4f7f\u5f97 \\(ax + by = (a, b)\\)\u3002</p> <p>\u8fdb\u4e00\u6b65\u5730\uff0c\\(ax + by = m\\) \u6709\u89e3\u7684\u5145\u8981\u6761\u4ef6\u662f \\((a, b) | m\\) \uff08\u88f4\u8700\u5b9a\u7406\uff0c\u53c8\u53eb\u505a\u8d1d\u7956\u5b9a\u7406\uff09 \u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/number-theory/topic1/#12","title":"1.2 \u8bc1\u660e","text":"<p>\u82e5\u6211\u4eec\u6c42 \\(ax + by = (a, b)\\) \u7684\u89e3\uff0c\u4e0d\u5982\u5148\u6c42 \\(bx + (a \\mod b) y = (b, a \\mod b)\\) \u7684\u89e3\uff0c\u800c\u4e14\u7531\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u53ef\u77e5 \\((a, b) = (b, a \\mod b)\\)\u3002</p> <p>\u7ecf\u8fc7\u53d8\u6362 \\(bx + (a \\mod b)y = bx + (a - b \\times \\left \\lfloor \\dfrac{a}{b} \\right \\rfloor )y = ay + b(x - \\left \\lfloor \\dfrac{a}{b} \\right \\rfloor y)\\)\uff0c\u6240\u4ee5\u5f97\u51fa \\(bx + (a \\mod b) y = (b, a \\mod b)\\) \u7684\u89e3\u4e3a \\(x_0, y_0\\) \u540e\u5c31\u53ef\u4ee5\u5f97\u51fa \\(ax + by = (a, b)\\) \u7684\u89e3\u662f \\(x = y_0, y = (x_0 - \\left \\lfloor \\dfrac{a}{b} \\right \\rfloor y_0)\\) \u800c\u901a\u8fc7\u4e0d\u65ad\u8f97\u8f6c\u76f8\u9664\u6cd5\uff0c\u663e\u7136\u5230\u6700\u540e\u6211\u4eec\u5f97\u5230\u7684\u5f0f\u5b50\u4e3a \\((a, b)x + 0\\times y = (a, b)\\)\uff0c\u5f88\u5bb9\u6613\u53ef\u4ee5\u4ee4 \\(x = 1, y = 0\\) \u4e3a\u8fd9\u91cc\u7684\u4e00\u7ec4\u89e3\uff0c\u7136\u540e\u4e0d\u65ad\u8fed\u4ee3\u56de\u53bb\u6c42\u51fa\u6211\u4eec\u8981\u7684\u89e3\u3002</p> <p>\u5bf9\u4e8e\u8fdb\u4e00\u6b65\u7ed3\u8bba\u7684\u8bc1\u660e\uff0c\u82e5 \\(m\\) \u662f\u8be5\u65b9\u7a0b\u7ec4\u7684\u89e3\uff0c\u7531\u4e8e \\((a, b)\\) \u53ef\u4ee5\u6574\u9664\u5de6\u5f0f\uff0c\u90a3\u4e48 \\((a, b)\\) \u4e5f\u53ef\u4ee5\u6574\u9664\u53f3\u5f0f\uff08\u5145\u5206\u6027\uff09\u3002</p> <p>\u82e5 \\((a, b)|m\\)\uff0c\u90a3\u4e48\u6211\u4eec\u5df2\u77e5 \\(ax + by = (a, b)\\) \u7684\u4e00\u7ec4\u89e3\uff0c\u7b49\u5f0f\u4e24\u8fb9\u540c\u65f6\u4e58\u4ee5 \\(\\dfrac{m}{(a, b)}\\) \u4fbf\u53ef\u4ee5\u5f97\u5230\u539f\u65b9\u7a0b\u7ec4\u7684\u89e3\uff08\u5fc5\u8981\u6027\uff09\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/number-theory/topic1/#13","title":"1.3 \u5b9e\u73b0","text":"<pre><code>int exgcd(int a, int b, int &amp;x, int &amp;y) {\n    if (b == 0) {\n        x = 1;\n        y = 0;\n        return a;\n    }\n    int d = exgcd(b, a % b, y, x); \n    y -= (a / b) * x;\n    return d;\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/number-theory/topic1/#2","title":"2. \u9006\u5143","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/number-theory/topic1/#21","title":"2.1 \u5b9a\u4e49","text":"<p>\u82e5 \\(ab \\equiv 1(\\mod p)\\) \u5219\u79f0 \\(a\\)\uff0c\\(b\\) \u5728 \u6a21 \\(p\\) \u610f\u4e49\u4e0b\u4e92\u4e3a\u9006\u5143\uff0c\u8bb0\u4e3a \\(a = inv(b)\\)\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/number-theory/topic1/#22","title":"2.2 \u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u6c42\u9006\u5143","text":"<p>\u7531\u4e0a\u4e00\u8282\u53ef\u77e5\uff0c\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u53ef\u4ee5\u6c42\u51fa \\(ax + by = 1\\) \u7684\u4e00\u7ec4 \\(x, y\\) \u89e3\uff0c\u6545\u6211\u4eec\u8981\u6c42 \\(ax \\equiv 1(mod\\ b)\\) \u5373\u6c42 \\(ax + by = 1\\) \u7684\u4e00\u7ec4\u89e3\uff0c\u800c\u4e14\u8fd9\u91cc\u8981\u6c42\u6709\u89e3\u7684\u6761\u4ef6\u662f \\((a, b) = 1\\)\uff0c\u5229\u7528\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u5f88\u5bb9\u6613\u5f97\u51fa\u3002</p> <pre><code>ll exgcd(ll a, ll b, ll &amp;x, ll &amp;y) {\n    if (b == 0)\n    {\n        x = 1;\n        y = 0;\n        return a;\n    }\n    ll d = exgcd(b, a % b, y, x);\n    y -= (a / b) * x;\n    return d;\n}\nll inv(ll a, ll p) {\n    ll x, y;\n    if (exgcd(a, p, x, y) != 1)\n        return -1;\n    return (x % p + p) % p;\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/number-theory/topic1/#23","title":"2.3 \u8d39\u9a6c\u5c0f\u5b9a\u7406\u6c42\u9006\u5143","text":"<p>\u8d39\u9a6c\u5c0f\u5b9a\u7406\u7684\u5185\u5bb9\u5982\u4e0b\uff1a</p> <p>\u82e5 \\(p\\) \u4e3a\u7d20\u6570\uff0c\u4e14 \\((a, p) = 1\\)\uff0c\u5219 \\(a^{p - 1} \\equiv 1(mod \\ p)\\)\u3002</p> <p>\u8bc1\u660e\uff08\u5f85\u5b8c\u5584\uff09</p> <p>\u5229\u7528\u8be5\u5b9a\u7406\uff0c\u4e0d\u96be\u5f97\u51fa \\(inv(a) \\equiv a^{p - 2}(mod \\ p)\\)\uff0c\u6545\u53ef\u4ee5\u7528\u5feb\u901f\u5e42\u6765\u6c42\u89e3\u3002</p> <pre><code>inline ll qpow(ll a, ll b, ll p) {\n    ll ans = 1;\n    while (b) {\n        if (b &amp; 1) ans = ans % p * a % p;\n        a = a % p * a % p;\n        b &gt;&gt;= 1;\n    }\n    return ans;\n}\ninline ll inv(ll a, ll p) {\n    return qpow(a, p - 2, p);\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/number-theory/topic1/#24","title":"2.4 \u7ebf\u6027\u9012\u63a8\u6c42\u89e3\u9006\u5143","text":"<p>\u5982\u679c\u9898\u76ee\u8981\u6c42 \\(1 \\sim n\\) \u7684\u9006\u5143\uff0c\u90a3\u4e48\u524d\u4e24\u79cd\u65b9\u6cd5\u90fd\u5f88\u4f4e\u6548\uff0c\u8fd9\u91cc\u5f15\u5165\u7b2c\u4e09\u79cd\uff0c\u7ebf\u6027\u9012\u63a8\u6765\u6c42\u89e3\u3002</p> <p>\u4e0b\u9762\u7528 \\(O(n)\\) \u65b9\u6cd5\u6c42 \\(1 \\sim n\\) \u5173\u4e8e \\(p\\) \u7684\u9006\u5143\u3002</p> <p>\u9996\u5148\u663e\u7136 \\(1^{-1} \\equiv 1(mod \\ p)\\)\u3002</p> <p>\u5bf9\u4e8e\u6570 \\(i\\)\uff0c\u6709 \\(p = ki + j\\)\uff0c\u8fd9\u91cc \\(k = \\left \\lfloor \\dfrac{p}{i} \\right \\rfloor,j = p \\% i\\)\u3002</p> <p>\u90a3\u4e48\u5219\u6709 \\(ki + j \\equiv 0(mod \\ p)\\)\uff0c\u7b49\u5f0f\u4e24\u8fb9\u540c\u65f6\u4e58\u4ee5 \\(i^{-1}j^{-1}\\)\uff0c\u5219\u6709 \\(kj^{-1} + i^{-1} \\equiv 0(mod \\ p)\\)\u3002</p> <p>\u6545 \\(i^{-1} \\equiv -\\left \\lfloor \\dfrac{p}{i} \\right \\rfloor(p \\ mod \\ i)^{-1}(mod \\ p)\\)\uff0c\u800c\u4e14 \\(p \\ mod \\ i\\) \u80af\u5b9a\u5c0f\u4e8e \\(i\\) \uff0c\u6240\u4ee5\u53ef\u4ee5\u7531\u524d\u9012\u63a8\u540e\u3002</p> <p>\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u8fd9\u91cc\u4e3a\u9632\u6b62\u51fa\u73b0\u8d1f\u6570\uff0c\u6240\u4ee5\u5199\u7684\u662f <code>p - p / i</code> \uff0c\u800c\u4e14\u5f53 \\(i | p\\) \u65f6 <code>inv[i]</code> \u5e94\u8be5\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u6211\u4eec\u5f80\u5f80\u7528\u5927\u7d20\u6570 \\(10^9 + 7\\) \u6765\u8868\u793a\u3002</p> <pre><code>inv[1] = 1;\nfor (int i = 2; i &lt;= n; ++i) {\n  inv[i] = (long long)(p - p / i) * inv[p % i] % p;\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/number-theory/topic1/#25-n","title":"2.5 \u6c42\u4efb\u610f n \u4e2a\u6570\u7684\u9006\u5143","text":"<p>\u5bf9\u4e8e\u6c42\u4efb\u610f \\(n\\) \u4e2a\u6570 \\(a_i\\)\uff0c\u6211\u4eec\u7b97\u8fd9\u4e2a \\(n\\) \u4e2a\u6570\u7684\u524d\u7f00\u79ef\uff0c\u8bb0\u4e3a \\(s_i\\)\u3002</p> <p>\u7136\u540e\u6211\u4eec\u8ba1\u7b97 \\(s_n\\) \u7684\u9006\u5143\u4e3a \\(sInv_n\\)\uff0c\u90a3\u4e48 \\(s_i\\) \u7684\u9006\u5143\u4e3a \\(sInv_i =sInv_{i + 1} \\times a_{i + 1}\\)\u3002</p> <p>\u7136\u540e\u6613\u5f97 \\(a_i\\) \u7684\u9006\u5143 \\(Inv_i = sInv_i \\times s_{i - 1}\\)\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u8fd1\u4f3c \\(O(n)\\)\u3002 </p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/number-theory/topic1/#3","title":"3. \u6b27\u62c9\u51fd\u6570","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/number-theory/topic1/#4","title":"4. \u4e2d\u56fd\u5269\u4f59\u5b9a\u7406","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/number-theory/topic1/#41","title":"4.1 \u95ee\u9898\u7b80\u8ff0","text":"<p>\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u662f\u7528\u6765\u6c42\u89e3\u8bf8\u5982 $$ \\begin{cases} x \\equiv a_1(\\mod n_1) \\ x \\equiv a_2(\\mod n_2) \\     \\vdots \\ x \\equiv a_k(\\mod n_k) \\end{cases} $$ \u8fd9\u6837\u7684\u65b9\u7a0b\u7ec4\u95ee\u9898\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/number-theory/topic1/#42","title":"4.2 \u8fc7\u7a0b","text":"<ol> <li>\u7b97\u6240\u6709\u6a21\u6570\u7684\u79ef \\(n\\)\uff1b</li> <li>\u5bf9\u4e8e\u7b2c \\(i\\) \u4e2a\u65b9\u7a0b\uff1a<ul> <li>\u8ba1\u7b97 \\(m_i = \\dfrac{n}{n_i}\\)\uff1b</li> <li>\u8ba1\u7b97 \\(m_i\\) \u5728\u6a21 \\(n_i\\) \u610f\u4e49\u4e0b\u7684\u9006\u5143 \\(m_i^{-1}\\)\uff1b</li> <li>\u8ba1\u7b97 \\(c_i = m_im_i^{-1}\\)\uff08\u8fd9\u65f6\u4e0d\u8981\u5bf9 \\(n_i\\) \u53d6\u6a21\uff09</li> </ul> </li> <li>\u65b9\u7a0b\u7ec4\u5728\u6a21 \\(n\\) \u610f\u4e49\u4e0b\u7684\u552f\u4e00\u89e3\u4e3a \\(x = \\sum_{i = 1}^k a_ic_i(\\mod n)\\)</li> </ol>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/number-theory/topic1/#43","title":"4.3 \u5b9e\u73b0","text":"<pre><code>void CRT() {\n  ll n, M = 1, ans = 0;\n  cin &gt;&gt; n; \n  for(int i = 1; i &lt;= n; i++) {\n    cin &gt;&gt; b[i] &gt;&gt; a[i];\n    M *= b[i];\n  }\n  for(int i = 1; i &lt;= n; i++) {\n    ll m = M / b[i];\n    ll x, y;\n    exgcd(m, b[i], x, y); // \u6ce8\uff1a\u5982\u679c\u6a21\u6570\u4e0d\u4e3a\u8d28\u6570\u65f6\uff0c\u6c42\u9006\u5143\u4e0d\u80fd\u7528\u8d39\u9a6c\u5c0f\u5b9a\u7406\u6765\u7b97\uff0c\u53ea\u80fd\u7528\u6269\u6b27\u6765\u7b97\n    x = (x + b[i]) % b[i]; x %= M;\n    m *= x; m %= M;\n    ans += a[i] * m % M;\n    ans %= M;\n  }\n  cout &lt;&lt; (ans % M + M) % M &lt;&lt; endl;\n  return ;\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/number-theory/topic1/#44","title":"4.4 \u6269\u5c55\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406","text":"<p>\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u7684\u9002\u7528\u8303\u56f4\u662f\u6a21\u6570\u4e92\u8d28\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5f53\u65b9\u7a0b\u6a21\u6570\u4e0d\u4e92\u8d28\u65f6\u6211\u4eec\u8981\u7528\u5230\u6269\u5c55\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u3002</p> <p>\u601d\u8def\u662f\u4e0d\u65ad\u628a \\(n\\) \u4e2a\u65b9\u7a0b\u4e24\u4e24\u5408\u5e76\uff0c\u5bf9\u4e8e $$ \\begin{cases} x \\equiv b(\\mod a) \\ x \\equiv B(\\mod A)  \\end{cases} $$ \u6211\u4eec\u4ee4 \\(x = ya + b = YB + A\\) \uff0c\u90a3\u4e48\u6709 \\(B - b = ya - YA\\)\uff0c\u6211\u4eec\u5229\u7528\u6269\u6b27\u53ef\u4ee5\u6c42\u89e3\u51fa \\(x'a + y'A = (a,A)\\) \u7684\u4e00\u7ec4\u89e3\uff0c\u90a3\u4e48\u82e5 \\((a, A) \\nmid B-b\\) \u5219\u65b9\u7a0b\u65e0\u89e3\uff0c\u5bf9\u4e8e\u6709\u89e3\u7684\u60c5\u51b5 \\((x' \\times \\dfrac{B - b}{(a, A)})a + (y' \\times \\dfrac{B - b}{(a, A)})A = B - b\\)\uff0c\u4ee4 \\(X = x' \\times \\dfrac{B - b}{(a, A)}, Y = y' \\times \\dfrac{B - b}{(a, A)}\\) \u82e5\u662f\u8ba9\u89e3\u6700\u5c0f\u5373\u662f\u8ba9 \\(X\\) \u6700\u5c0f\uff0c\u6211\u4eec\u8c03\u6574 \\(X\\) \u53ef\u4ee5\u901a\u8fc7\u8ba9 \\(X + k \\times \\dfrac{A}{(a, A)}\\)\uff0c\u8fd9\u65f6 \\(Y\\) \u76f8\u5e94\u51cf\u53bb\u540c\u7b49\u7cfb\u6570\u7684 \\(\\dfrac{a}{(a, A)}\\)\u3002\u6240\u4ee5 \\(X = (X \\mod \\dfrac{A}{(a, A)} + \\dfrac{A}{(a, A)}) \\mod \\dfrac{A}{(a, A)}\\)\u3002\u6c42\u51fa\u65b0\u7684 \\(X\\) \u540e\u518d\u6839\u636e \\(x = yX + a\\) \u53ef\u4ee5\u6c42\u51fa\u65b0\u7684 \\(x\\)\uff0c\u65b0\u7684 \\(b = x \\mod \\dfrac{A \\times a}{(a, A)}\\)\uff0c\u65b0\u7684 \\(a = \\dfrac{A \\times a}{(a, A)}\\)\u3002\u90a3\u4e48\u5c31\u53ef\u4ee5\u5f97\u51fa\u65b0\u7684\u65b9\u7a0b \\(x \\equiv b(\\mod a)\\) \u4e86\u3002\u6700\u540e\u901a\u8fc7\u4e0d\u65ad\u5408\u5e76\u53d8\u4e3a\u4e00\u4e2a\u65b9\u7a0b\u5c31\u80fd\u6c42\u51fa\u7b54\u6848\u4e86\u3002  </p> <pre><code>void ExCRT() {\n  scanf(\"%d\", &amp;n);\n  for(int i = 1; i &lt;= n; i++) {\n    scanf(\"%lld%lld\", &amp;A, &amp;B);\n    if(i == 1) {\n      a = A;\n      b = B;\n    }\n    else {\n      g = exgcd(a, A, x, y);\n      if((B - b) % g) {\n        printf(\"-1\");\n        return ;\n      }\n      x = x * ((B - b) / g);\n      x = (x % (A / g) + (A / g)) % (A / g);\n      l = A / g * a;\n      b = ((a * x + b) % l + l) % l;\n      a = l;\n    }\n  }\n  printf(\"%lld\\n\", b % a);\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/number-theory/topic1/#5","title":"5. \u5362\u5361\u65af\u5b9a\u7406","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/number-theory/topic1/#51","title":"5.1 \u5b9a\u4e49","text":"<p>\u5bf9\u4e8e\u8d28\u6570 \\(p\\)\uff0c\u6709 $$ \\begin{pmatrix} n \\ m \\end{pmatrix} \\mod p = \\begin{pmatrix} \\left \\lfloor \\dfrac{n}{p} \\right \\rfloor \\ \\left \\lfloor \\dfrac{m}{p}\\right \\rfloor \\end{pmatrix} \\cdot \\begin{pmatrix} n \\mod p \\m \\mod p \\end{pmatrix} \\mod p $$ \u7531\u4e8e\\(n \\mod p\\) \u548c \\(m \\mod p\\) \u80af\u5b9a\u5c0f\u4e8e \\(p\\)\uff0c\u6240\u4ee5\u76f4\u63a5\u7b97\u5373\u53ef\uff0c\u5bf9 \\(\\left \\lfloor \\dfrac{n}{p} \\right \\rfloor\\) \u90e8\u5206\u518d\u7528\u5362\u5361\u65af\u5b9a\u7406\u8ba1\u7b97\u3002</p> <p>\u4e5f\u5373 \\(Lucas(n,m,p)=c(n\\%p,m\\%p)\u00d7Lucas(\\dfrac{n}{p},\\dfrac{m}{p},p)\\)\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/number-theory/topic1/#52","title":"5.2 \u8bc1\u660e","text":"<p>\u9996\u5148\u8bc1\u660e\u9996\u5148\u6211\u4eec\u9700\u8981\u8bc1\u660e \\(C_p^i \\equiv \\dfrac{p}{i}C_{p - 1}^{i - 1} \\equiv 0(\\mod p)(1 \\le i \\le p-1)\\) \u7531\u4e8e \\(p\\) \u4e3a\u8d28\u6570\uff0c\u6545 \\(\\dfrac{1}{i}C_{p - 1}^{i - 1}\\) \u4e3a\u6574\u6570\uff0c\u4e58\u4ee5 \\(p\\) \u540e\u548c \\(p\\) \u540c\u4f59\u4e3a \\(0\\)\uff0c\u6545\u5f97\u8bc1\u3002</p> <p>\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\u6709 \\((1 + x)^p \\equiv 1 + x^p(\\mod p)\\)</p> <p>\u5bf9\u4e8e \\(C_m^n \\mod p\\)\uff0c\u5176\u5b9e\u5c31\u662f\u6c42 \\((1 + x^n)\\mod p\\) \u4e2d \\(x^m\\) \u7684\u7cfb\u6570\u3002</p> <p>\u6211\u4eec\u4ee4 \\(n = ap +b\\)\uff0c\\(m = cp + d\\)\u3002\u6240\u4ee5\u63a5\u4e0b\u6765\u8bc1 \\(C_n^m \\equiv C_a^c \\times C_b^d(\\mod p)\\)\u3002</p> <p>\u6211\u4eec\u6709 $$ (1 + x)^n \\equiv (1 + x)^{pa}(1 + x)^b \\equiv (1 + x<sup>p)</sup>a(1 + x)^b(\\mod p) $$ \u89c2\u5bdf \\(x^m\\) \u7684\u7cfb\u6570\uff0c\u6545 \\(C_n^m x^m \\equiv C_a^c x^{cp}C_b^dx^d(\\mod p)\\)\uff0c\u7531\u4e8e \\(x^b\\) \u7cfb\u6570\u4e00\u81f4\uff0c\u6240\u4ee5  $$ C_n^m \\equiv C_a^c \\times C_b^d \\equiv C_{\\left \\lfloor \\frac{n}{p} \\right \\rfloor}^{\\left \\lfloor \\frac{m}{p} \\right \\rfloor} \\times C_{n \\mod p}^{m \\mod p}(\\mod p) $$ \u6545\u5f97\u8bc1\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/number-theory/topic1/#53","title":"5.3 \u5b9e\u73b0","text":"<pre><code>ll Lucas(ll n, ll m) {\n  return ((m == 0) ? 1 : (c(n % p, m % p) % p * Lucas(n / p, m / p) % p));\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/number-theory/topic1/#54","title":"5.4 \u6269\u5c55\u5362\u5361\u65af\u5b9a\u7406","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/number-theory/topic2/","title":"\u6570\u8bba\u8fdb\u9636","text":""},{"location":"acm/template/math/poly/topic1/","title":"\u7b97\u6cd5\u7b14\u8bb0 | \u6570\u8bba\uff08\u4e00\uff09","text":"<p>\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\uff0c\u9006\u5143\uff0c\u6b27\u62c9\u51fd\u6570</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/poly/topic1/#1","title":"1. \u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/poly/topic1/#11","title":"1.1 \u7b97\u6cd5\u4ecb\u7ecd","text":"<p>\u8bbe \\(a, b\\) \u4e3a\u4e0d\u5168\u4e3a \\(0\\) \u7684\u6574\u6570\uff0c\u5b58\u5728\u6574\u6570 \\(x, y\\) \u4f7f\u5f97 \\(ax + by = (a, b)\\)\u3002</p> <p>\u8fdb\u4e00\u6b65\u5730\uff0c\\(ax + by = m\\) \u6709\u89e3\u7684\u5145\u8981\u6761\u4ef6\u662f \\((a, b) | m\\) \uff08\u88f4\u8700\u5b9a\u7406\uff0c\u53c8\u53eb\u505a\u8d1d\u7956\u5b9a\u7406\uff09 \u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/poly/topic1/#12","title":"1.2 \u8bc1\u660e","text":"<p>\u82e5\u6211\u4eec\u6c42 \\(ax + by = (a, b)\\) \u7684\u89e3\uff0c\u4e0d\u5982\u5148\u6c42 \\(bx + (a \\mod b) y = (b, a \\mod b)\\) \u7684\u89e3\uff0c\u800c\u4e14\u7531\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u53ef\u77e5 \\((a, b) = (b, a \\mod b)\\)\u3002</p> <p>\u7ecf\u8fc7\u53d8\u6362 \\(bx + (a \\mod b)y = bx + (a - b \\times \\left \\lfloor \\dfrac{a}{b} \\right \\rfloor )y = ay + b(x - \\left \\lfloor \\dfrac{a}{b} \\right \\rfloor y)\\)\uff0c\u6240\u4ee5\u5f97\u51fa \\(bx + (a \\mod b) y = (b, a \\mod b)\\) \u7684\u89e3\u4e3a \\(x_0, y_0\\) \u540e\u5c31\u53ef\u4ee5\u5f97\u51fa \\(ax + by = (a, b)\\) \u7684\u89e3\u662f \\(x = y_0, y = (x_0 - \\left \\lfloor \\dfrac{a}{b} \\right \\rfloor y_0)\\) \u800c\u901a\u8fc7\u4e0d\u65ad\u8f97\u8f6c\u76f8\u9664\u6cd5\uff0c\u663e\u7136\u5230\u6700\u540e\u6211\u4eec\u5f97\u5230\u7684\u5f0f\u5b50\u4e3a \\((a, b)x + 0\\times y = (a, b)\\)\uff0c\u5f88\u5bb9\u6613\u53ef\u4ee5\u4ee4 \\(x = 1, y = 0\\) \u4e3a\u8fd9\u91cc\u7684\u4e00\u7ec4\u89e3\uff0c\u7136\u540e\u4e0d\u65ad\u8fed\u4ee3\u56de\u53bb\u6c42\u51fa\u6211\u4eec\u8981\u7684\u89e3\u3002</p> <p>\u5bf9\u4e8e\u8fdb\u4e00\u6b65\u7ed3\u8bba\u7684\u8bc1\u660e\uff0c\u82e5 \\(m\\) \u662f\u8be5\u65b9\u7a0b\u7ec4\u7684\u89e3\uff0c\u7531\u4e8e \\((a, b)\\) \u53ef\u4ee5\u6574\u9664\u5de6\u5f0f\uff0c\u90a3\u4e48 \\((a, b)\\) \u4e5f\u53ef\u4ee5\u6574\u9664\u53f3\u5f0f\uff08\u5145\u5206\u6027\uff09\u3002</p> <p>\u82e5 \\((a, b)|m\\)\uff0c\u90a3\u4e48\u6211\u4eec\u5df2\u77e5 \\(ax + by = (a, b)\\) \u7684\u4e00\u7ec4\u89e3\uff0c\u7b49\u5f0f\u4e24\u8fb9\u540c\u65f6\u4e58\u4ee5 \\(\\dfrac{m}{(a, b)}\\) \u4fbf\u53ef\u4ee5\u5f97\u5230\u539f\u65b9\u7a0b\u7ec4\u7684\u89e3\uff08\u5fc5\u8981\u6027\uff09\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/poly/topic1/#13","title":"1.3 \u5b9e\u73b0","text":"<pre><code>int exgcd(int a, int b, int &amp;x, int &amp;y) {\n    if (b == 0) {\n        x = 1;\n        y = 0;\n        return a;\n    }\n    int d = exgcd(b, a % b, y, x); \n    y -= (a / b) * x;\n    return d;\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/poly/topic1/#2","title":"2. \u9006\u5143","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/poly/topic1/#21","title":"2.1 \u5b9a\u4e49","text":"<p>\u82e5 \\(ab \\equiv 1(\\mod p)\\) \u5219\u79f0 \\(a\\)\uff0c\\(b\\) \u5728 \u6a21 \\(p\\) \u610f\u4e49\u4e0b\u4e92\u4e3a\u9006\u5143\uff0c\u8bb0\u4e3a \\(a = inv(b)\\)\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/poly/topic1/#22","title":"2.2 \u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u6c42\u9006\u5143","text":"<p>\u7531\u4e0a\u4e00\u8282\u53ef\u77e5\uff0c\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u53ef\u4ee5\u6c42\u51fa \\(ax + by = 1\\) \u7684\u4e00\u7ec4 \\(x, y\\) \u89e3\uff0c\u6545\u6211\u4eec\u8981\u6c42 \\(ax \\equiv 1(mod\\ b)\\) \u5373\u6c42 \\(ax + by = 1\\) \u7684\u4e00\u7ec4\u89e3\uff0c\u800c\u4e14\u8fd9\u91cc\u8981\u6c42\u6709\u89e3\u7684\u6761\u4ef6\u662f \\((a, b) = 1\\)\uff0c\u5229\u7528\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u5f88\u5bb9\u6613\u5f97\u51fa\u3002</p> <pre><code>ll exgcd(ll a, ll b, ll &amp;x, ll &amp;y) {\n    if (b == 0)\n    {\n        x = 1;\n        y = 0;\n        return a;\n    }\n    ll d = exgcd(b, a % b, y, x);\n    y -= (a / b) * x;\n    return d;\n}\nll inv(ll a, ll p) {\n    ll x, y;\n    if (exgcd(a, p, x, y) != 1)\n        return -1;\n    return (x % p + p) % p;\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/poly/topic1/#23","title":"2.3 \u8d39\u9a6c\u5c0f\u5b9a\u7406\u6c42\u9006\u5143","text":"<p>\u8d39\u9a6c\u5c0f\u5b9a\u7406\u7684\u5185\u5bb9\u5982\u4e0b\uff1a</p> <p>\u82e5 \\(p\\) \u4e3a\u7d20\u6570\uff0c\u4e14 \\((a, p) = 1\\)\uff0c\u5219 \\(a^{p - 1} \\equiv 1(mod \\ p)\\)\u3002</p> <p>\u8bc1\u660e\uff08\u5f85\u5b8c\u5584\uff09</p> <p>\u5229\u7528\u8be5\u5b9a\u7406\uff0c\u4e0d\u96be\u5f97\u51fa \\(inv(a) \\equiv a^{p - 2}(mod \\ p)\\)\uff0c\u6545\u53ef\u4ee5\u7528\u5feb\u901f\u5e42\u6765\u6c42\u89e3\u3002</p> <pre><code>inline ll qpow(ll a, ll b, ll p) {\n    ll ans = 1;\n    while (b) {\n        if (b &amp; 1) ans = ans % p * a % p;\n        a = a % p * a % p;\n        b &gt;&gt;= 1;\n    }\n    return ans;\n}\ninline ll inv(ll a, ll p) {\n    return qpow(a, p - 2, p);\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/poly/topic1/#24","title":"2.4 \u7ebf\u6027\u9012\u63a8\u6c42\u89e3\u9006\u5143","text":"<p>\u5982\u679c\u9898\u76ee\u8981\u6c42 \\(1 \\sim n\\) \u7684\u9006\u5143\uff0c\u90a3\u4e48\u524d\u4e24\u79cd\u65b9\u6cd5\u90fd\u5f88\u4f4e\u6548\uff0c\u8fd9\u91cc\u5f15\u5165\u7b2c\u4e09\u79cd\uff0c\u7ebf\u6027\u9012\u63a8\u6765\u6c42\u89e3\u3002</p> <p>\u4e0b\u9762\u7528 \\(O(n)\\) \u65b9\u6cd5\u6c42 \\(1 \\sim n\\) \u5173\u4e8e \\(p\\) \u7684\u9006\u5143\u3002</p> <p>\u9996\u5148\u663e\u7136 \\(1^{-1} \\equiv 1(mod \\ p)\\)\u3002</p> <p>\u5bf9\u4e8e\u6570 \\(i\\)\uff0c\u6709 \\(p = ki + j\\)\uff0c\u8fd9\u91cc \\(k = \\left \\lfloor \\dfrac{p}{i} \\right \\rfloor,j = p \\% i\\)\u3002</p> <p>\u90a3\u4e48\u5219\u6709 \\(ki + j \\equiv 0(mod \\ p)\\)\uff0c\u7b49\u5f0f\u4e24\u8fb9\u540c\u65f6\u4e58\u4ee5 \\(i^{-1}j^{-1}\\)\uff0c\u5219\u6709 \\(kj^{-1} + i^{-1} \\equiv 0(mod \\ p)\\)\u3002</p> <p>\u6545 \\(i^{-1} \\equiv -\\left \\lfloor \\dfrac{p}{i} \\right \\rfloor(p \\ mod \\ i)^{-1}(mod \\ p)\\)\uff0c\u800c\u4e14 \\(p \\ mod \\ i\\) \u80af\u5b9a\u5c0f\u4e8e \\(i\\) \uff0c\u6240\u4ee5\u53ef\u4ee5\u7531\u524d\u9012\u63a8\u540e\u3002</p> <p>\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u8fd9\u91cc\u4e3a\u9632\u6b62\u51fa\u73b0\u8d1f\u6570\uff0c\u6240\u4ee5\u5199\u7684\u662f <code>p - p / i</code> \uff0c\u800c\u4e14\u5f53 \\(i | p\\) \u65f6 <code>inv[i]</code> \u5e94\u8be5\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u6211\u4eec\u5f80\u5f80\u7528\u5927\u7d20\u6570 \\(10^9 + 7\\) \u6765\u8868\u793a\u3002</p> <pre><code>inv[1] = 1;\nfor (int i = 2; i &lt;= n; ++i) {\n  inv[i] = (long long)(p - p / i) * inv[p % i] % p;\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/poly/topic1/#25-n","title":"2.5 \u6c42\u4efb\u610f n \u4e2a\u6570\u7684\u9006\u5143","text":"<p>\u5bf9\u4e8e\u6c42\u4efb\u610f \\(n\\) \u4e2a\u6570 \\(a_i\\)\uff0c\u6211\u4eec\u7b97\u8fd9\u4e2a \\(n\\) \u4e2a\u6570\u7684\u524d\u7f00\u79ef\uff0c\u8bb0\u4e3a \\(s_i\\)\u3002</p> <p>\u7136\u540e\u6211\u4eec\u8ba1\u7b97 \\(s_n\\) \u7684\u9006\u5143\u4e3a \\(sInv_n\\)\uff0c\u90a3\u4e48 \\(s_i\\) \u7684\u9006\u5143\u4e3a \\(sInv_i =sInv_{i + 1} \\times a_{i + 1}\\)\u3002</p> <p>\u7136\u540e\u6613\u5f97 \\(a_i\\) \u7684\u9006\u5143 \\(Inv_i = sInv_i \\times s_{i - 1}\\)\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u8fd1\u4f3c \\(O(n)\\)\u3002 </p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/poly/topic1/#3","title":"3. \u6b27\u62c9\u51fd\u6570","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/poly/topic1/#4","title":"4. \u4e2d\u56fd\u5269\u4f59\u5b9a\u7406","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/poly/topic1/#41","title":"4.1 \u95ee\u9898\u7b80\u8ff0","text":"<p>\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u662f\u7528\u6765\u6c42\u89e3\u8bf8\u5982 $$ \\begin{cases} x \\equiv a_1(\\mod n_1) \\ x \\equiv a_2(\\mod n_2) \\     \\vdots \\ x \\equiv a_k(\\mod n_k) \\end{cases} $$ \u8fd9\u6837\u7684\u65b9\u7a0b\u7ec4\u95ee\u9898\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/poly/topic1/#42","title":"4.2 \u8fc7\u7a0b","text":"<ol> <li>\u7b97\u6240\u6709\u6a21\u6570\u7684\u79ef \\(n\\)\uff1b</li> <li>\u5bf9\u4e8e\u7b2c \\(i\\) \u4e2a\u65b9\u7a0b\uff1a<ul> <li>\u8ba1\u7b97 \\(m_i = \\dfrac{n}{n_i}\\)\uff1b</li> <li>\u8ba1\u7b97 \\(m_i\\) \u5728\u6a21 \\(n_i\\) \u610f\u4e49\u4e0b\u7684\u9006\u5143 \\(m_i^{-1}\\)\uff1b</li> <li>\u8ba1\u7b97 \\(c_i = m_im_i^{-1}\\)\uff08\u8fd9\u65f6\u4e0d\u8981\u5bf9 \\(n_i\\) \u53d6\u6a21\uff09</li> </ul> </li> <li>\u65b9\u7a0b\u7ec4\u5728\u6a21 \\(n\\) \u610f\u4e49\u4e0b\u7684\u552f\u4e00\u89e3\u4e3a \\(x = \\sum_{i = 1}^k a_ic_i(\\mod n)\\)</li> </ol>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/poly/topic1/#43","title":"4.3 \u5b9e\u73b0","text":"<pre><code>void CRT() {\n  ll n, M = 1, ans = 0;\n  cin &gt;&gt; n; \n  for(int i = 1; i &lt;= n; i++) {\n    cin &gt;&gt; b[i] &gt;&gt; a[i];\n    M *= b[i];\n  }\n  for(int i = 1; i &lt;= n; i++) {\n    ll m = M / b[i];\n    ll x, y;\n    exgcd(m, b[i], x, y); // \u6ce8\uff1a\u5982\u679c\u6a21\u6570\u4e0d\u4e3a\u8d28\u6570\u65f6\uff0c\u6c42\u9006\u5143\u4e0d\u80fd\u7528\u8d39\u9a6c\u5c0f\u5b9a\u7406\u6765\u7b97\uff0c\u53ea\u80fd\u7528\u6269\u6b27\u6765\u7b97\n    x = (x + b[i]) % b[i]; x %= M;\n    m *= x; m %= M;\n    ans += a[i] * m % M;\n    ans %= M;\n  }\n  cout &lt;&lt; (ans % M + M) % M &lt;&lt; endl;\n  return ;\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/poly/topic1/#44","title":"4.4 \u6269\u5c55\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406","text":"<p>\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u7684\u9002\u7528\u8303\u56f4\u662f\u6a21\u6570\u4e92\u8d28\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5f53\u65b9\u7a0b\u6a21\u6570\u4e0d\u4e92\u8d28\u65f6\u6211\u4eec\u8981\u7528\u5230\u6269\u5c55\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u3002</p> <p>\u601d\u8def\u662f\u4e0d\u65ad\u628a \\(n\\) \u4e2a\u65b9\u7a0b\u4e24\u4e24\u5408\u5e76\uff0c\u5bf9\u4e8e $$ \\begin{cases} x \\equiv b(\\mod a) \\ x \\equiv B(\\mod A)  \\end{cases} $$ \u6211\u4eec\u4ee4 \\(x = ya + b = YB + A\\) \uff0c\u90a3\u4e48\u6709 \\(B - b = ya - YA\\)\uff0c\u6211\u4eec\u5229\u7528\u6269\u6b27\u53ef\u4ee5\u6c42\u89e3\u51fa \\(x'a + y'A = (a,A)\\) \u7684\u4e00\u7ec4\u89e3\uff0c\u90a3\u4e48\u82e5 \\((a, A) \\nmid B-b\\) \u5219\u65b9\u7a0b\u65e0\u89e3\uff0c\u5bf9\u4e8e\u6709\u89e3\u7684\u60c5\u51b5 \\((x' \\times \\dfrac{B - b}{(a, A)})a + (y' \\times \\dfrac{B - b}{(a, A)})A = B - b\\)\uff0c\u4ee4 \\(X = x' \\times \\dfrac{B - b}{(a, A)}, Y = y' \\times \\dfrac{B - b}{(a, A)}\\) \u82e5\u662f\u8ba9\u89e3\u6700\u5c0f\u5373\u662f\u8ba9 \\(X\\) \u6700\u5c0f\uff0c\u6211\u4eec\u8c03\u6574 \\(X\\) \u53ef\u4ee5\u901a\u8fc7\u8ba9 \\(X + k \\times \\dfrac{A}{(a, A)}\\)\uff0c\u8fd9\u65f6 \\(Y\\) \u76f8\u5e94\u51cf\u53bb\u540c\u7b49\u7cfb\u6570\u7684 \\(\\dfrac{a}{(a, A)}\\)\u3002\u6240\u4ee5 \\(X = (X \\mod \\dfrac{A}{(a, A)} + \\dfrac{A}{(a, A)}) \\mod \\dfrac{A}{(a, A)}\\)\u3002\u6c42\u51fa\u65b0\u7684 \\(X\\) \u540e\u518d\u6839\u636e \\(x = yX + a\\) \u53ef\u4ee5\u6c42\u51fa\u65b0\u7684 \\(x\\)\uff0c\u65b0\u7684 \\(b = x \\mod \\dfrac{A \\times a}{(a, A)}\\)\uff0c\u65b0\u7684 \\(a = \\dfrac{A \\times a}{(a, A)}\\)\u3002\u90a3\u4e48\u5c31\u53ef\u4ee5\u5f97\u51fa\u65b0\u7684\u65b9\u7a0b \\(x \\equiv b(\\mod a)\\) \u4e86\u3002\u6700\u540e\u901a\u8fc7\u4e0d\u65ad\u5408\u5e76\u53d8\u4e3a\u4e00\u4e2a\u65b9\u7a0b\u5c31\u80fd\u6c42\u51fa\u7b54\u6848\u4e86\u3002  </p> <pre><code>void ExCRT() {\n  scanf(\"%d\", &amp;n);\n  for(int i = 1; i &lt;= n; i++) {\n    scanf(\"%lld%lld\", &amp;A, &amp;B);\n    if(i == 1) {\n      a = A;\n      b = B;\n    }\n    else {\n      g = exgcd(a, A, x, y);\n      if((B - b) % g) {\n        printf(\"-1\");\n        return ;\n      }\n      x = x * ((B - b) / g);\n      x = (x % (A / g) + (A / g)) % (A / g);\n      l = A / g * a;\n      b = ((a * x + b) % l + l) % l;\n      a = l;\n    }\n  }\n  printf(\"%lld\\n\", b % a);\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/poly/topic1/#5","title":"5. \u5362\u5361\u65af\u5b9a\u7406","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/poly/topic1/#51","title":"5.1 \u5b9a\u4e49","text":"<p>\u5bf9\u4e8e\u8d28\u6570 \\(p\\)\uff0c\u6709 $$ \\begin{pmatrix} n \\ m \\end{pmatrix} \\mod p = \\begin{pmatrix} \\left \\lfloor \\dfrac{n}{p} \\right \\rfloor \\ \\left \\lfloor \\dfrac{m}{p}\\right \\rfloor \\end{pmatrix} \\cdot \\begin{pmatrix} n \\mod p \\m \\mod p \\end{pmatrix} \\mod p $$ \u7531\u4e8e\\(n \\mod p\\) \u548c \\(m \\mod p\\) \u80af\u5b9a\u5c0f\u4e8e \\(p\\)\uff0c\u6240\u4ee5\u76f4\u63a5\u7b97\u5373\u53ef\uff0c\u5bf9 \\(\\left \\lfloor \\dfrac{n}{p} \\right \\rfloor\\) \u90e8\u5206\u518d\u7528\u5362\u5361\u65af\u5b9a\u7406\u8ba1\u7b97\u3002</p> <p>\u4e5f\u5373 \\(Lucas(n,m,p)=c(n\\%p,m\\%p)\u00d7Lucas(\\dfrac{n}{p},\\dfrac{m}{p},p)\\)\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/poly/topic1/#52","title":"5.2 \u8bc1\u660e","text":"<p>\u9996\u5148\u8bc1\u660e\u9996\u5148\u6211\u4eec\u9700\u8981\u8bc1\u660e \\(C_p^i \\equiv \\dfrac{p}{i}C_{p - 1}^{i - 1} \\equiv 0(\\mod p)(1 \\le i \\le p-1)\\) \u7531\u4e8e \\(p\\) \u4e3a\u8d28\u6570\uff0c\u6545 \\(\\dfrac{1}{i}C_{p - 1}^{i - 1}\\) \u4e3a\u6574\u6570\uff0c\u4e58\u4ee5 \\(p\\) \u540e\u548c \\(p\\) \u540c\u4f59\u4e3a \\(0\\)\uff0c\u6545\u5f97\u8bc1\u3002</p> <p>\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\u6709 \\((1 + x)^p \\equiv 1 + x^p(\\mod p)\\)</p> <p>\u5bf9\u4e8e \\(C_m^n \\mod p\\)\uff0c\u5176\u5b9e\u5c31\u662f\u6c42 \\((1 + x^n)\\mod p\\) \u4e2d \\(x^m\\) \u7684\u7cfb\u6570\u3002</p> <p>\u6211\u4eec\u4ee4 \\(n = ap +b\\)\uff0c\\(m = cp + d\\)\u3002\u6240\u4ee5\u63a5\u4e0b\u6765\u8bc1 \\(C_n^m \\equiv C_a^c \\times C_b^d(\\mod p)\\)\u3002</p> <p>\u6211\u4eec\u6709 $$ (1 + x)^n \\equiv (1 + x)^{pa}(1 + x)^b \\equiv (1 + x<sup>p)</sup>a(1 + x)^b(\\mod p) $$ \u89c2\u5bdf \\(x^m\\) \u7684\u7cfb\u6570\uff0c\u6545 \\(C_n^m x^m \\equiv C_a^c x^{cp}C_b^dx^d(\\mod p)\\)\uff0c\u7531\u4e8e \\(x^b\\) \u7cfb\u6570\u4e00\u81f4\uff0c\u6240\u4ee5  $$ C_n^m \\equiv C_a^c \\times C_b^d \\equiv C_{\\left \\lfloor \\frac{n}{p} \\right \\rfloor}^{\\left \\lfloor \\frac{m}{p} \\right \\rfloor} \\times C_{n \\mod p}^{m \\mod p}(\\mod p) $$ \u6545\u5f97\u8bc1\u3002</p>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/poly/topic1/#53","title":"5.3 \u5b9e\u73b0","text":"<pre><code>ll Lucas(ll n, ll m) {\n  return ((m == 0) ? 1 : (c(n % p, m % p) % p * Lucas(n / p, m / p) % p));\n}\n</code></pre>","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/math/poly/topic1/#54","title":"5.4 \u6269\u5c55\u5362\u5361\u65af\u5b9a\u7406","text":"","tags":["\u7b97\u6cd5\u7ade\u8d5b","\u6570\u5b66"]},{"location":"acm/template/others/misc/","title":"Misc","text":""},{"location":"acm/template/others/misc/#rand","title":"rand","text":"<pre><code>using i64 = long long;\n\nstd::mt19937 rnd(std::chrono::duration_cast&lt;std::chrono::nanoseconds&gt;(std::chrono::system_clock::now().time_since_epoch()).count());\ni64 randi64(i64 L, i64 R) {\n    std::uniform_int_distribution&lt;i64&gt; dist(L, R);\n    return dist(rnd);\n}\n</code></pre>"},{"location":"acm/template/others/misc/#_1","title":"\u5bf9\u62cd","text":"<pre><code>#!/usr/bin/env bash\ng++ -o r main.cpp -O2 -std=c++11\ng++ -o std std.cpp -O2 -std=c++11\nwhile true; do\n    python gen.py &gt; in\n    ./std &lt; in &gt; stdout\n    ./r &lt; in &gt; out\n    if test $? -ne 0; then\n        exit 0\n    fi\n    if diff stdout out; then\n        printf \"AC\\n\"\n    else\n        printf \"GG\\n\"\n        exit 0\n    fi\ndone\n</code></pre> <ul> <li>\u5feb\u901f\u7f16\u8bd1\u8fd0\u884c \uff08\u914d\u5408\u65e0\u63d2\u4ef6 VSC\uff09</li> </ul> <pre><code>#!/bin/bash\ng++ $1.cpp -o $1 -O2 -std=c++14 -Wall -Dzerol -g\nif $? -eq 0; then\n    ./$1\nfi\n</code></pre>"},{"location":"acm/template/others/random/","title":"How to generate random numbers","text":"<p>Use <code>mt19937</code> or <code>mt19937_64</code> instead of <code>rand()</code>.</p> <p>see this blog</p>"},{"location":"acm/template/string/string/","title":"String","text":""},{"location":"acm/template/string/string/#manacher","title":"Manacher","text":"<p>\u4e0b\u6807\u4ece \\(0\\) \u5f00\u59cb\u3002</p> <pre><code>std::vector&lt;int&gt; manacher(std::vector&lt;int&gt; s) {\n  std::vector&lt;int&gt; t{0};\n  for (auto c : s) {\n    t.push_back(c);\n    t.push_back(0);\n  }\n  int n = t.size();\n  std::vector&lt;int&gt; r(n);\n  for (int i = 0, j = 0; i &lt; n; i++) {\n    if (2 * j - i &gt;= 0 &amp;&amp; j + r[j] &gt; i) {\n      r[i] = std::min(r[2 * j - i], j + r[j] - i);\n    }\n    while (i - r[i] &gt;= 0 &amp;&amp; i + r[i] &lt; n &amp;&amp; t[i - r[i]] == t[i + r[i]]) {\n      r[i] += 1;\n    }\n    if (i + r[i] &gt; j + r[j]) {\n      j = i;\n    }\n  }\n  return r;\n}\n</code></pre>"},{"location":"acm/template/string/string/#kmp","title":"KMP","text":""},{"location":"acm/template/string/string/#prefix-function","title":"Prefix Function","text":"<p>kmp \u7b97\u6cd5\uff0c\u4e0b\u6807\u4ece \\(1\\) \u5f00\u59cb\uff0c\u5176\u4e2d <code>pi[0]</code> \u7684\u503c\u4e3a \\(-1\\)\u3002\u4f46\u662f <code>std::string s</code> \u7684\u4e0b\u6807\u4ece \\(0\\) \u5f00\u59cb\u3002 </p> <pre><code>std::vector&lt;int&gt; Get_Pi(std::string s) {\n    int n = s.size();\n    std::vector&lt;int&gt; pi(n + 1); \n    pi[0] = -1;\n    for (int i = 1; i &lt;= n; i++) {\n        int j = pi[i - 1];\n        while (j != -1 &amp;&amp; s[i - 1] != s[j]) j = pi[j];\n        pi[i] = j + 1;\n    }\n    return pi;\n}\n</code></pre>"},{"location":"acm/template/string/string/#z-function","title":"Z Function","text":"<pre><code>std::vector&lt;int&gt; ZFunction(std::string s) {\n    int n = s.size();\n    std::vector&lt;int&gt; z(n + 1);\n    z[0] = n;\n    for (int i = 1, j = 1; i &lt; n; i++) {\n        z[i] = std::max(0, std::min(j + z[j] - i, z[i - j]));\n        while (i + z[i] &lt; n &amp;&amp; s[z[i]] == s[i + z[i]]) {\n            z[i]++;\n        }\n        if (i + z[i] &gt; j + z[j]) {\n            j = i;\n        }\n    }\n    return z;\n}\n</code></pre>"},{"location":"acm/template/string/string/#trie","title":"Trie","text":"<pre><code>struct trie {\n    int t[N][26], sz, ed[N];\n    void init() { sz = 2; memset(ed, 0, sizeof ed); }\n    int _new() { memset(t[sz], 0, sizeof t[sz]); return sz++; }\n    void ins(std::string s, int p) {\n        int u = 1;\n        for(int i = 0; i &lt; s.size(); i++) {\n            int c = s[i] - 'a';\n            if (!t[u][c]) t[u][c] = _new();\n            u = t[u][c];\n        }\n        ed[u] = p;\n    }\n};\n</code></pre> <p>01 trie</p> <pre><code>struct trie {\n    int t[N][2], sz, ed[N];\n    void init() { sz = 2; memset(ed, 0, sizeof ed); }\n    int _new() { memset(t[sz], 0, sizeof t[sz]); return sz++; }\n    void ins(int s) {\n        int u = 1;\n        for (int i = 30; i &gt;= 0; i--) {\n            int c = (s &gt;&gt; i) &amp; 1;\n            if (!t[u][c]) t[u][c] = _new();\n            u = t[u][c];\n        }\n    }\n    int find(int x) {\n        int u = 1, num = 0;\n        for (int i = 30; i &gt;= 0; i--) {\n            int c = (x &gt;&gt; i) &amp; 1;\n            if (t[u][c ^ 1]) {\n                u = t[u][c ^ 1], num += (1 &lt;&lt; i);\n            }\n            else u = t[u][c];\n        }\n        return num;\n    }\n} T;\n</code></pre>"},{"location":"acm/template/string/string/#ac-automaton","title":"AC-Automaton","text":"<p>Trie \u6811\u6839\u8282\u70b9\u662f \\(0\\)\u3002\u521d\u59cb\u5316 <code>ac.init()</code> \u4e00\u5b9a\u8981\u8bb0\u5f97\uff01</p> <pre><code>const int N = 2e5 + 5;\nstruct AhoCorasick {\n    static constexpr int M = 26;\n    int ch[N][M], cnt[N], fail[N];\n    int sz;\n    void init() {\n        sz = 1;\n        std::memset(ch[0], 0, sizeof ch[0]);\n        std::memset(cnt, 0, sizeof cnt);\n    }\n    void insert(const std::string &amp;s) {\n        int n = s.size(); int u = 0, c;\n        for(int i = 0; i &lt; n; i++) {\n            c = s[i] - 'a';\n            if (!ch[u][c]) {\n                memset(ch[sz], 0, sizeof ch[sz]);\n                cnt[sz] = 0; ch[u][c] = sz++;\n            }\n            u = ch[u][c];\n        }\n        cnt[u]++;\n    }\n    void build() {\n        std::queue&lt;int&gt; Q;\n        fail[0] = 0;\n        for (int c = 0, u; c &lt; M; c++) {\n            u = ch[0][c];\n            if (u) { Q.push(u); fail[u] = 0; }\n        }\n        while (!Q.empty()) {\n            int r = Q.front(); Q.pop();\n            for (int c = 0, u; c &lt; M; c++) {\n                u = ch[r][c];\n                if (!u) {\n                    ch[r][c] = ch[fail[r]][c];\n                    continue;\n                }\n                fail[u] = ch[fail[r]][c];\n                Q.push(u);\n            }\n        }\n    }\n    int query(std::string t) {\n        int u = 0, res = 0, n = t.size();\n        for (int i = 0; i &lt; n; i++) {\n            u = ch[u][t[i] - 'a'];\n            for (int j = u; j &amp;&amp; cnt[j] != -1; j = fail[j]) {\n                res += cnt[j], cnt[j] = -1;\n            }\n        }\n        return res;\n    }\n} ac;\n</code></pre>"},{"location":"acm/template/string/string/#sa","title":"SA","text":"<p>\u4e0b\u6807\u4ece \\(1\\) \u5f00\u59cb\u3002</p> <pre><code>constexpr int N = 2e5 + 5;\nint ht[N], sa[N], rk[N];\nint ork[N], buc[N], id[N];\nvoid build(std::string s) {\n    int m = N - 1, p = 0;\n    int n = s.size() - 1;\n    for (int i = 1; i &lt;= n; i++) ork[i] = 0;    \n    for (int i = 1; i &lt;= n; i++) buc[i] = 0;\n    for(int i = 1; i &lt;= n; i++) buc[rk[i] = s[i]]++;\n    for(int i = 1; i &lt;= m; i++) buc[i] += buc[i - 1];\n    for(int i = n; i; i--) sa[buc[rk[i]]--] = i;\n    for(int w = 1; ; m = p, p = 0, w &lt;&lt;= 1) { // m \u8868\u793a\u6876\u7684\u5927\u5c0f, \u7b49\u4e8e\u4e0a\u4e00\u8f6e\u7684 rk \u6700\u5927\u503c.\n        for(int i = n - w + 1; i &lt;= n; i++) id[++p] = i; // \u5faa\u73af\u987a\u5e8f\u65e0\u5173, \u987a\u5e8f\u5012\u5e8f\u90fd\u53ef\u4ee5, \u4e0d\u5f71\u54cd\u6700\u7ec8\u7ed3\u679c.\n        for(int i = 1; i &lt;= n; i++) if(sa[i] &gt; w) id[++p] = sa[i] - w;\n        memset(buc, 0, m + 1 &lt;&lt; 2); // \u6ce8\u610f\u6e05\u7a7a\u6876.\n        memcpy(ork, rk, n + 1 &lt;&lt; 2); // \u6ce8\u610f\u62f7\u8d1d rk -&gt; ork.\n        p = 0;\n        for(int i = 1; i &lt;= n; i++) buc[rk[i]]++;\n        for(int i = 1; i &lt;= m; i++) buc[i] += buc[i - 1];\n        for(int i = n; i; i--) sa[buc[rk[id[i]]]--] = id[i]; // \u6ce8\u610f, \u5012\u5e8f\u679a\u4e3e\u4fdd\u8bc1\u8ba1\u6570\u6392\u5e8f\u7684\u7a33\u5b9a\u6027. \u57fa\u6570\u6392\u5e8f\u7684\u6b63\u786e\u6027\u57fa\u4e8e\u5185\u5c42\u8ba1\u6570\u6392\u5e8f\u7684\u7a33\u5b9a\u6027.\n        for(int i = 1; i &lt;= n; i++) rk[sa[i]] = ork[sa[i - 1]] == ork[sa[i]] &amp;&amp; ork[sa[i - 1] + w] == ork[sa[i] + w] ? p : ++p; // \u539f\u6392\u540d\u4e8c\u5143\u7ec4\u76f8\u540c\u5219\u65b0\u6392\u540d\u76f8\u540c, \u5426\u5219\u6392\u540d +1.\n        if(p == n) break; // n \u4e2a\u6392\u540d\u4e92\u4e0d\u76f8\u540c, \u6392\u5e8f\u5b8c\u6210.\n    }\n    for(int i = 1, k = 0; i &lt;= n; i++) {\n        if(k) k--;\n        while(s[i + k] == s[sa[rk[i] - 1] + k]) k++; // sa[rk[i]] = i, \u9700\u8981\u4fdd\u8bc1 s[0] \u548c s[n + 1] \u4e3a\u7a7a\u5b57\u7b26 (\u591a\u6d4b\u6e05\u7a7a), \u5426\u5219\u53ef\u80fd\u51fa\u9519.\n        ht[rk[i]] = k;\n    }\n}\n</code></pre>"},{"location":"acm/template/string/string/#sam","title":"SAM","text":"<pre><code>struct SAM {\n  static constexpr int ALPHABET_SIZE = 26;\n  struct Node {\n    int len;\n    int link;\n    std::array&lt;int, ALPHABET_SIZE&gt; next;\n    Node() : len{}, link{}, next{} {}\n  };\n  std::vector&lt;Node&gt; t;\n  SAM() {\n    init();\n  }\n  void init() {\n    t.assign(2, Node());\n    t[0].next.fill(1);\n    t[0].len = -1;\n  }\n  int newNode() {\n    t.emplace_back();\n    return t.size() - 1;\n  }\n  int extend(int p, int c) {\n    if (t[p].next[c]) {\n      int q = t[p].next[c];\n      if (t[q].len == t[p].len + 1) {\n        return q;\n      }\n      int r = newNode();\n      t[r].len = t[p].len + 1;\n      t[r].link = t[q].link;\n      t[r].next = t[q].next;\n      t[q].link = r;\n      while (t[p].next[c] == q) {\n        t[p].next[c] = r;\n        p = t[p].link;\n      }\n      return r;\n    }\n    int cur = newNode();\n    t[cur].len = t[p].len + 1;\n    while (!t[p].next[c]) {\n      t[p].next[c] = cur;\n      p = t[p].link;\n    }\n    t[cur].link = extend(p, c);\n    return cur;\n  }\n  int extend(int p, char c, char offset = 'a') {\n    return extend(p, c - offset);\n  }\n\n  int next(int p, int x) {\n    return t[p].next[x];\n  }\n\n  int next(int p, char c, char offset = 'a') {\n    return next(p, c - 'a');\n  }\n\n  int link(int p) {\n    return t[p].link;\n  }\n\n  int len(int p) {\n    return t[p].len;\n  }\n\n  int size() {\n    return t.size();\n  }\n};\n</code></pre>"},{"location":"acm/template/string/string/#pam","title":"PAM","text":"<pre><code>const int N = 500005;\nstruct PAM { \n    int fail[N], ch[N][26], cnt[N], len[N];\n    int tot, last, p, q;\n    std::string s;\n    void init() {\n        tot = last = 0;\n        s[0] = -1, fail[0] = 1, last = 0;\n        len[0] = 0, len[1] = -1, tot = 1; \n        memset(ch[0], 0, sizeof(ch[0]));\n        memset(ch[1], 0, sizeof(ch[1]));\n        std::cin &gt;&gt; s;\n        s = ' ' + s;\n    }\n    int newnode(int x) {\n        len[++tot] = x;\n        memset(ch[tot], 0, sizeof(ch[tot]));\n        return tot;\n    }\n    int getfail(int x, int n) {\n        while(s[n - 1 - len[x]] != s[n]) x = fail[x];\n        return x;\n    }\n    void build() {\n        for(int i = 1; s[i]; ++i){\n            int x = s[i] - 'a';\n            p = getfail(last, i);\n            if(!ch[p][x]) {\n                // \u5982\u679c\u6709\u4e86\u8f6c\u79fb\u5c31\u4e0d\u7528\u5efa\u4e86\uff0c\u5426\u5219\u8981\u65b0\u5efa \n                // \u524d\u540e\u90fd\u52a0\u4e0a\u65b0\u5b57\u7b26\uff0c\u6240\u4ee5\u65b0\u56de\u6587\u4e32\u957f\u5ea6\u8981\u52a02 \n                q = newnode(len[p] + 2);\n                // \u56e0\u4e3afail\u6307\u5411\u7684\u5f97\u662f\u539f\u4e32\u7684\u4e25\u683c\u540e\u7f00\uff0c\u6240\u4ee5\u8981\u4ecep\u7684fail\u5f00\u59cb\u627e\u8d77 \n                fail[q] = ch[getfail(fail[p], i)][x]; \n                // \u8bb0\u5f55\u8f6c\u79fb \n                ch[p][x] = q;\n            }\n            ++cnt[last = ch[p][x]];\n        }\n    }\n} pam;\n</code></pre>"},{"location":"acm/template/string/topic1/","title":"\u7b97\u6cd5\u7b14\u8bb0 | \u5b57\u7b26\u4e32\uff08\u4e00\uff09","text":"<p>Abstract</p> <ul> <li>Manacher</li> <li>KMP</li> </ul>"},{"location":"acm/template/string/topic1/#1-manacher","title":"1. Manacher \u7b97\u6cd5","text":""},{"location":"acm/template/string/topic1/#11","title":"1.1 \u7b97\u6cd5\u4ecb\u7ecd","text":"<p>\u8be5\u7b97\u6cd5\u53ef\u4ee5\u7ebf\u6027\u6c42\u51fa\u5b57\u7b26\u4e32\u7684\u4ee5\u5404\u4e2a\u4f4d\u7f6e\u4e3a\u8f74\u7684\u56de\u6587\u5b50\u4e32\u6700\u5927\u957f\u5ea6</p>"},{"location":"acm/template/string/topic1/#12","title":"1.2 \u8fc7\u7a0b","text":"<p>\u672c\u7b97\u6cd5\u6c42\u7684\u662f\u4ee5\u5404\u4f4d\u7f6e\u4e3a\u5bf9\u79f0\u4e2d\u5fc3\u7684\u6700\u5927\u5bf9\u79f0\u534a\u5f84\u662f\u591a\u5c11\uff0c\u7531\u4e8e\u4f1a\u51fa\u73b0\u957f\u5ea6\u4e3a\u5947\u6570\u7684\u5bf9\u79f0\u533a\u95f4\uff08\u5bf9\u79f0\u4e2d\u5fc3\u5728\u4e24\u4e2a\u4f4d\u7f6e\u4e2d\u95f4\uff09\uff0c\u5076\u6570\u957f\u5ea6\u7684\u5bf9\u79f0\u533a\u95f4\uff08\u5bf9\u79f0\u4e2d\u5fc3\u5728\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u5904\uff09\u3002\u6240\u4ee5\u6211\u4eec\u5bf9\u539f\u5b57\u4e32\u8fdb\u884c\u53d8\u6362\uff0c\u6bd4\u5982 <code>abcba</code> \u53d8\u4e3a <code>##a#b#c#b#a#</code> \uff0c\u8fd9\u6837\u7684\u8bdd\u5bf9\u79f0\u4e2d\u5fc3\u5c31\u662f\u8fd9\u4e2a\u4f4d\u7f6e\u672c\u8eab\u4e86\u3002</p> <p>\u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u6570\u7ec4 \\(len\\) \uff0c\\(len\\) \u6570\u7ec4\u8868\u793a\u8fd9\u4e2a\u70b9\u80fd\u591f\u6269\u5c55\u51fa\u7684\u56de\u6587\u957f\u5ea6\u3002</p> <p>\u6211\u4eec\u4ece\u524d\u5411\u540e\u904d\u5386\u4e00\u904d\uff0c\u5faa\u73af\u53d8\u91cf\u4e3a \\(i\\)\uff0c\u5f15\u5165\u8f85\u52a9\u53d8\u91cf \\(maxr\\) \u548c \\(mid\\) \uff0c\\(maxr\\) \u8868\u793a\u89e6\u53ca\u5230\u7684\u6700\u53f3\u8fb9\u7684\u5b57\u7b26\u4f4d\u7f6e\uff0c\\(mid\\) \u8868\u793a\u5305\u542b \\(maxr\\) \u56de\u6587\u4e32\u7684\u4e2d\u5fc3\u8f74\u6240\u5728\u4f4d\u7f6e\u3002\u5bf9\u4e8e\u6bcf\u6b21\u904d\u5386\u5230\u7684\u65b0\u7684\u4f4d\u7f6e \\(i\\)\uff0c\u4e0d\u96be\u53d1\u73b0\u5982\u679c \\(i &lt; maxr\\)\uff0c\u90a3\u4e48 \\(len[i] = min\\{len[mid] \\}\\)</p> <p>\u5f53 \\(i\\) \u5728 \\(maxr\\) \u5de6\u8fb9\u4e14\u5728 \\(mid\\) \u53f3\u8fb9\u65f6\uff1a</p> <p>\u8bbe \\(i\\) \u5173\u4e8e \\(mid\\) \u7684\u5bf9\u79f0\u70b9\u4e3a \\(j\\)\uff0c\u663e\u7136 \\(len[i]\\) \u4e00\u5b9a\u4e0d\u4f1a\u5c0f\u4e8e \\(len[j]\\)\uff08\u5bf9\u79f0\uff09\u3002</p> <p>\u5176\u4e2d \\(j\\) \u4e3a \\((mid&lt;&lt;1)\u2212i\\)\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u5c31\u8bbe\u7f6e \\(len[i] = min\\{len[mid], maxr - i \\}\\) \u7136\u540e\u7ee7\u7eed\u5c1d\u8bd5\u6269\u5c55\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8f83\u5feb\u5730\u6c42\u51fa \\(len[i]\\)\uff0c\u7136\u540e\u66f4\u65b0 \\(maxr\\) \u548c \\(mid\\)</p> <p>\u5f53 \\(i\\) \u5728 \\(maxr\\) \u53f3\u8fb9\u65f6\uff0c\u6211\u4eec\u65e0\u6cd5\u5f97\u77e5\u5173\u4e8e \\(len[i]\\) \u7684\u4fe1\u606f\uff0c\u53ea\u597d\u4ece \\(1\\) \u5f00\u59cb\u904d\u5386\uff0c\u7136\u540e\u66f4\u65b0 \\(maxr\\) \u548c \\(mid\\)\u3002</p> <p>\u672c\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u5747\u4e3a\u7ebf\u6027\u7684\u3002</p>"},{"location":"acm/template/string/topic1/#13","title":"1.3 \u5b9e\u73b0","text":"<pre><code>void update() {\n  s2[0] = s2[1] = '#';\n  for(int i = 1; i &lt;= n; i++) {\n    s2[i &lt;&lt; 1] = s1[i];\n    s2[i &lt;&lt; 1 | 1] = '#';\n  }\n  n = 2 * n + 1;\n}\n\nvoid manacher() {\n  int maxr = 0, mid = 0;\n  for(int i = 1; i &lt;= n; i++) {\n    if(i &lt; maxr) len[i] = min(len[(mid &lt;&lt; 1) - i], len[mid] + mid - i);\n    else len[i] = 1;\n    while(i + len[i] &lt;= n &amp;&amp;  i - len[i] &gt; 0 &amp;&amp; s2[i + len[i]] == s2[i - len[i]]) len[i]++;\n    if(len[i] + i &gt; maxr) {\n      maxr = len[i] + i;\n      mid = i; \n    } \n  }\n}\n</code></pre>"},{"location":"acm/template/string/topic1/#2-kmp","title":"2. KMP \u7b97\u6cd5","text":""},{"location":"acm/template/string/topic1/#21","title":"2.1 \u524d\u7f00\u51fd\u6570","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u5b57\u7b26\u4e32 \\(s\\)\uff0c\u5176\u524d\u7f00\u51fd\u6570\u88ab\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u6570\u7ec4 \\(\\pi\\)\u3002 \u5176\u4e2d \\(\\pi[i]\\) \u7684\u5b9a\u4e49\u662f\uff1a\u6700\u957f\u7684\u76f8\u7b49\u7684\u771f\u540e\u7f00\u771f\u524d\u7f00\u957f\u5ea6\uff08\u81ea\u8eab\u9664\u5916\uff09\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5b57\u4e32 \\(s[0\\dots i]\\) \u6709\u4e00\u5bf9\u76f8\u7b49\u7684\u771f\u524d\u7f00 \\(s[0\\dots k - 1]\\) \u548c\u771f\u540e\u7f00 \\(s[i - (k - 1) \\dots i]\\) \u5b83\u4eec\u76f8\u7b49\u4e14\u662f\u8fd9\u4e2a\u5b57\u4e32\u4e2d\u6240\u80fd\u627e\u5230\u6700\u957f\u7684\u524d\u7f00\u540e\u7f00\uff0c\u90a3\u4e48 \\(\\pi[i] = k\\)\u3002</p>"},{"location":"acm/template/string/topic1/#22","title":"2.2 \u4f18\u5316 &amp; \u8fc7\u7a0b","text":"<p>\u76f4\u63a5\u6700\u6734\u7d20\u7684\u8ba1\u7b97\u524d\u7f00\u51fd\u6570\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n^3)\\)\uff0c\u6545\u6211\u4eec\u53ef\u4ee5\u52a0\u5165\u4f18\u5316\u3002</p> <p>\u4f18\u5316\u4e00\uff1a\u6bcf\u6b21\u65b0\u52a0\u5165\u4e00\u4e2a\u6570\u65f6\uff0c\u8d21\u732e\u6700\u591a\u52a0 \\(1\\)\uff0c\u5373 \\(\\pi[i + 1] \\le \\pi[i] + 1\\) \uff0c\u53d6\u7b49\u5f53\u4e14\u4ec5\u5f53 \\(s[\\pi[i] + 1] == s[i + 1]\\)\u3002</p> <p>\u4f18\u5316\u4e8c\uff1a\u5176\u5b9e\u4f18\u5316\u4e00\u7684\u60c5\u51b5\u4f18\u5316\u4e86\u65b0\u52a0\u5165\u7684\u6570\u4f9d\u7136\u5339\u914d\u6210\u529f\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u4f18\u5316\u4e8c\u53ef\u4ee5\u4f18\u5316\u65b0\u52a0\u5165\u7684\u6570\u5931\u914d\u7684\u60c5\u51b5\u3002\u6211\u4eec\u5047\u8bbe\u8bb0\u5f55\u4e00\u4e2a\u6570\u7ec4 \\(k\\)\uff0c\\(k[i]\\) \u8868\u793a\u7b2c \\(i + 1\\) \u4f4d\u5931\u914d\u4e4b\u540e\u5e94\u8be5\u8df3\u5230\u7b2c \\(k[i]\\) \u4f4d\u4e0a\u3002\u90a3\u4e48\u6211\u4eec\u6bcf\u6b21\u53ef\u4ee5\u4e0d\u65ad\u5411\u524d\u8df3\uff0c\u5982\u679c\u5339\u914d\u6210\u529f\u5c31\u662f\u4f18\u5316\u4e00\u7684\u60c5\u51b5\uff0c\u5339\u914d\u4e0d\u6210\u529f\u5c31\u7ee7\u7eed\u56de\u8df3\u3002</p> <p>\u6211\u4eec\u5047\u8bbe\u5411\u524d\u56de\u8df3\u4e00\u6b21\u5230\u8fbe\u7684\u4f4d\u7f6e\u4e3a \\(j\\)\u3002\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u6211\u4eec\u53d1\u73b0 \\(s[0\\dots j] = s[i - j \\dots i] = s[\\pi[i] - j \\dots \\pi[i]](j &lt; \\pi[i])\\)\uff0c\u90a3\u4e48\u5219\u6709 \\(j = \\pi[\\pi[i]]\\)\uff0c\u6545\u6bcf\u6b21\u5411\u524d\u8df3\u53ea\u9700\u8ba9 \\(j = k[j]\\)\uff0c\u7b49\u627e\u5230\u9002\u914d\u65f6\u5c31\u6309\u4f18\u5316\u4e00\u66f4\u65b0\uff0c\u4e00\u76f4\u9002\u914d\u4e0d\u6210\u529f\u5c31\u6309 \\(0\\) \u6765\u66f4\u65b0 \\(k[i]\\)\u3002\u8fd9\u6837\u7684\u8bdd\u76f8\u5f53\u4e8e\u8ba9\u8be5\u4e32\u81ea\u5df1\u5339\u914d\u81ea\u5df1\u6765\u6c42 \\(k[i]\\)\uff0c\u7136\u540e\u6c42\u8be5\u4e32\u5728\u5176\u4ed6\u4e32\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\u5c31\u8ba9\u8be5\u4e32\u4e0e\u5176\u4ed6\u4e32\u5339\u914d\uff0c\u7b49\u5230 \\(j\\) \u53d8\u4e3a\u8be5\u4e32\u7684\u957f\u5ea6\u65f6\uff0c\u8bf4\u660e\u6574\u4e2a\u4e32\u51fa\u73b0\u4e86\uff0c\u53ef\u4ee5\u8bb0\u5f55\u4e0b\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e86\u3002</p>"},{"location":"acm/template/string/topic1/#23","title":"2.3 \u5b9e\u73b0","text":"<pre><code>void kmp() {\n  int len_a = strlen(a + 1), len_b = strlen(b + 1);\n  int j = 0;\n  for(int i = 2; i &lt;= len_b; i++) { // i \u8981\u4ece 2 \u5f00\u59cb\uff0c\u4e0d\u7136\u7684\u8bdd\u8ba1\u7b97\u524d\u7f00\u51fd\u6570\u4f1a\u628a\u81ea\u8eab\u4e5f\u7b97\u4e0a\uff0c\u53d8\u4e3a k[i] = i\n    while(j &amp;&amp; b[j + 1] != b[i]) j = k[j];\n    if(b[j + 1] == b[i]) j++;\n    k[i] = j;\n  }\n  j = 0;\n  for(int i = 1; i &lt;= len_a; i++) {\n    while(j &amp;&amp; b[j + 1] != a[i]) j = k[j];\n    if(b[j + 1] == a[i]) j++;\n    if(j == len_b) cout &lt;&lt; i - j + 1 &lt;&lt; endl;\n  }\n  for(int i = 1; i &lt;= len_b; i++) cout &lt;&lt; k[i] &lt;&lt; ' ';\n  cout &lt;&lt; endl;\n}\n</code></pre>"},{"location":"acm/xcpc/2023/icpc-hk/","title":"ICPC-hongkong","text":""},{"location":"acm/xcpc/2023/icpc-hk/#the-2023-icpc-asia-hong-kong-regional-programming-contest-the-1st-universal-cup-stage-2hong-kong","title":"The 2023 ICPC Asia Hong Kong Regional Programming Contest (The 1st Universal Cup, Stage 2:Hong Kong)","text":""},{"location":"acm/xcpc/2023/icpc-hk/#b-big-picture","title":"B. Big Picture","text":""},{"location":"acm/xcpc/2023/icpc-hk/#description","title":"Description","text":"<p>\u7ed9\u4f60\u4e00\u4e2a \\((n+1) \\times (m+1)\\) \u7684\u65b9\u683c\u77e9\u9635\uff0c\u6bcf\u4e2a\u683c\u5b50\u4e00\u5f00\u59cb\u662f\u767d\u8272\u3002</p> <p>\u4f60\u4f1a\u5bf9\u6bcf\u4e00\u884c\u548c\u6bcf\u4e00\u5217\u8fdb\u884c\u67d3\u8272\u3002\u5c06\u7b2c \\(i\\) \u884c\u7684\u524d \\(j\\) \u4e2a\u683c\u5b50\u67d3\u4e3a\u9ed1\u8272\u7684\u6982\u7387\u4e3a \\(p_{i, j}\\)\uff0c\u5c06\u7b2c \\(j\\) \u5217\u7684\u524d \\(i\\) \u4e2a\u683c\u5b50\u67d3\u4e3a\u9ed1\u8272\u7684\u6982\u7387\u4e3a \\(q_{i, j}\\)\u3002\u4fdd\u8bc1\u6bcf\u4e00\u884c\u7684 \\(p_{i, j}\\)\u3001\u6bcf\u4e00\u5217\u7684 \\(q_{i, j}\\) \u7684\u548c\u4e3a 1\u3002\u884c\u4e0e\u5217\u662f\u72ec\u7acb\u7684\uff0c\u8fd9\u610f\u5473\u7740\u540c\u4e00\u4e2a\u683c\u5b50\u53ef\u80fd\u4f1a\u540c\u65f6\u88ab\u884c\u548c\u5217\u5404\u67d3\u4e00\u6b21\u3002</p> <p>\u6c42\u540c\u8272\u8fde\u901a\u5757\u7684\u671f\u671b\u4e2a\u6570\uff0c\u6a21 \\(998244353\\)\u3002</p>"},{"location":"acm/xcpc/2023/icpc-hk/#solution","title":"Solution","text":"<p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u67d3\u5217\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u53d1\u73b0\u6bcf\u5217\u7b2c\u4e00\u4e2a\uff08\u5373\u7b2c\u4e00\u884c\uff09\u4e00\u5b9a\u90fd\u4f1a\u88ab\u67d3\u8272\u3002\u6545\u6240\u6709\u7531\u67d3\u5217\u5f97\u5230\u7684\u9ed1\u683c\u5b50\u90fd\u4f1a\u7ecf\u7531\u7b2c\u4e00\u884c\u8fde\u5728\u4e00\u8d77\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u67d3\u884c\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u53d1\u73b0\u6bcf\u884c\u7b2c\u4e00\u4e2a\uff08\u5373\u7b2c\u4e00\u5217\uff09\u4e00\u5b9a\u90fd\u4f1a\u88ab\u67d3\u8272\u3002\u6545\u6240\u6709\u7531\u67d3\u884c\u5f97\u5230\u7684\u9ed1\u683c\u5b50\u90fd\u4f1a\u7ecf\u7531\u7b2c\u4e00\u5217\u8fde\u5728\u4e00\u8d77\u3002</p> <p>\u53c8\u56e0\u4e3a\u7b2c\u4e00\u884c\u7b2c\u4e00\u5217\u7684\u683c\u5b50\u4e00\u5b9a\u4f1a\u88ab\u67d3\u8272\uff0c\u6240\u4ee5\u6240\u6709\u9ed1\u683c\u5b50\u4e00\u5b9a\u90fd\u662f\u4e00\u4e2a\u5927\u8fde\u901a\u5757\u3002\u5e76\u4e14\u6700\u540e\u4e00\u884c\uff0c\u6700\u540e\u4e00\u5217\u4e00\u5b9a\u90fd\u662f\u767d\u8272\u683c\u5b50\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u7b97\u7684\u5c31\u662f\u88ab\u9ed1\u8272\u683c\u5b50\u65ad\u5f00\u6240\u5f62\u6210\u7684\u767d\u8272\u533a\u57df\u4e2a\u6570\u3002</p> <p>\u8981\u786e\u5b9a\u6bcf\u4e00\u4e2a\u533a\u57df\u7684\u4e2a\u6570\uff0c\u6211\u4eec\u53ea\u8981\u627e\u4e00\u4e2a\u533a\u57df\u4e2d\u6709\u6807\u5fd7\u7684\u683c\u5b50\uff08\u542b\u6709\u67d0\u4e2a\u72ec\u4e00\u65e0\u4e8c\u7684\u7279\u6027\uff0c\u53ea\u6709\u5176\u4e2d\u67d0\u4e2a\u683c\u5b50\u6709\uff0c\u5176\u4ed6\u683c\u5b50\u90fd\u6ca1\u6709\uff09\u3002\u6211\u4eec\u81ea\u7136\u60f3\u5230\u627e\u89d2\u843d\u7684\u683c\u5b50\u3002\u601d\u8003\u53d1\u73b0\u7531\u4e8e\u6bcf\u6b21\u67d3\u524d\u7f00\u7684\u7279\u6027\uff0c\u5de6\u4e0a\u89d2\uff0c\u53f3\u4e0a\u89d2\uff0c\u5de6\u4e0b\u89d2\u7b26\u5408\u6761\u4ef6\u7684\u683c\u5b50\u5747\u53ef\u80fd\u4e0d\u552f\u4e00\uff0c\u53ea\u6709\u53f3\u4e0b\u89d2\u7684\u683c\u5b50\u552f\u4e00\u3002\u6240\u4ee5\u627e\u533a\u57df\u4e2a\u6570\u53d8\u4e3a\u627e\u533a\u57df\u53f3\u4e0b\u89d2\u683c\u5b50\u7684\u4e2a\u6570\uff0c\u5373\u8ba1\u7b97\u6709\u591a\u5c11\u4e2a\u683c\u5b50\u53ef\u80fd\u79f0\u4e3a\u53f3\u4e0b\u89d2\u683c\u5b50\u3002\u8fd9\u4e2a\u6982\u7387\u662f\u8be5\u683c\u5b50\u6ca1\u88ab\u67d3\u8272\u5e76\u4e14\u4e0b\u9762\uff0c\u53f3\u8fb9\u5747\u88ab\u67d3\u8272\u3002</p> <p>Code</p>"},{"location":"acm/xcpc/2023/icpc-hk/#e-goose-goose-duck","title":"E. Goose, Goose, DUCK?","text":""},{"location":"acm/xcpc/2023/icpc-hk/#description_1","title":"Description","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217 \\(\\{a_i\\}\\)\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5b50\u5e8f\u5217\uff0c\u82e5\u5176\u4e0d\u5408\u6cd5\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b50\u5e8f\u5217\u4e2d\u5b58\u5728\u67d0\u4e2a\u5143\u7d20\u51fa\u73b0\u4e86\u6070\u597d \\(k\\) \u6b21\u3002\u6c42\u8fd9\u4e2a\u5e8f\u5217\u4e2d\u6709\u591a\u5c11\u4e2a\u5408\u6cd5\u5b50\u5e8f\u5217\u3002</p> <p>\\(n \\le 10^6\\)</p>"},{"location":"acm/xcpc/2023/icpc-hk/#solution_1","title":"Solution","text":"<p>\u6211\u4eec\u53ef\u4ee5\u56fa\u5b9a\u5de6\u7aef\u70b9\uff0c\u6c42\u6709\u591a\u5c11\u5408\u6cd5\u53f3\u7aef\u70b9\u3002\u4e5f\u53ef\u4ee5\u56fa\u5b9a\u53f3\u7aef\u70b9\uff0c\u6c42\u6709\u591a\u5c11\u5408\u6cd5\u5de6\u7aef\u70b9\u3002</p> <p>\u5047\u8bbe\u56fa\u5b9a\u4e00\u4e2a\u5de6\u7aef\u70b9\uff0c\u6211\u4eec\u628a\u53f3\u8fb9\u6240\u6709\u4e0d\u5408\u6cd5\u7684\u533a\u57df\u5168\u90e8\u6807\u8bb0 \\(+1\\)\uff0c\u521d\u59cb\u65f6\u53f3\u8fb9\u6240\u6709\u533a\u57df\u90fd\u662f \\(0\\)\u3002\u9898\u76ee\u5c31\u53d8\u4e3a\u4e86\u6c42\u53f3\u8fb9\u6709\u591a\u5c11\u4e2a\u6807\u8bb0\u4e3a \\(0\\) \u7684\u70b9\u3002\u7136\u540e\u6bcf\u6b21\u5de6\u7aef\u70b9\u90fd\u53ef\u4ee5\u5411\u53f3\u79fb\u52a8\u4e00\u4f4d\uff0c\u79fb\u52a8\u7684\u65f6\u5019\u5224\u65ad\u4e00\u4e0b\uff0c\u5982\u679c\u8fd9\u4e2a\u5143\u7d20\u53f3\u8fb9\u533a\u57df\u5269\u7684\u5143\u7d20\u5c11\u4e8e \\(k\\) \u4e2a\uff0c\u90a3\u4e48\u5c31\u4e0d\u7528\u6807\u8bb0 \\(-1\\)\u3002\u53cd\u4e4b\u628a\u8fd9\u4e2a\u5143\u7d20\u539f\u5148\u4e0d\u5408\u6cd5\u7684\u533a\u57df\u90fd\u53d8\u5408\u6cd5\uff08\u5373\u6807\u8bb0 \\(-1\\) \uff09\uff0c\u7136\u540e\u518d\u628a\u65b0\u7684\u533a\u57df\u6807\u8bb0\u4e0d\u5408\u6cd5\uff08\u6807\u8bb0 \\(+1\\) \uff09\u3002</p> <p>\u6574\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u89e3\u51b3\u3002\u65f6\u95f4\u590d\u6742\u5ea6 \\(\\Theta (n\\log n)\\)\u3002</p> <p>Code</p>"},{"location":"cs/","title":"Computer Science","text":"<p>Abstract</p> <p>\u8fd9\u91cc\u662f\u6709\u5173 Computer Science \u7684\u7b14\u8bb0\u3002</p> <p>\u7531\u4e8e\u82ef\u4eba\u5b9e\u5728\u592a\u61d2 (\u3063 \u00b0\u0414 \u00b0;)\u3063 \u6240\u4ee5\u8fd9\u91cc\u7684\u7b14\u8bb0\u76f8\u5bf9\u8f83\u5c11\u3002</p> <p>\u8fd8\u5728\u52aa\u529b\u5b66\u4e60\u4e2d \uff1e\ufe3f\uff1c</p>"},{"location":"cs/cnatda/lab00/","title":"CS144 Lab: Lab0","text":""},{"location":"cs/cnatda/lab00/#set-up-gnulinux-on-your-computer","title":"Set up GNU/Linux on your computer","text":""},{"location":"cs/cnatda/topic00/","title":"Computer Networks and the Internet","text":""},{"location":"cs/cs61a/topic1/","title":"Chapter 1: Building Abstractions with Functions","text":""},{"location":"cs/cs61a/topic1/#12-elements-of-programing","title":"1.2 Elements of Programing","text":""},{"location":"cs/cs61a/topic1/#123-importing-library-functions","title":"1.2.3 Importing Library Functions","text":"<p>Python defines a very large number of functions, including the operator functions mentioned in the preceding section,so we can import them into our programing.</p> <pre><code>&gt;&gt;&gt; from math import sqrt\n&gt;&gt;&gt; sqrt(256)\n16.0\n</code></pre>"},{"location":"cs/cs61a/topic1/#124-names-and-the-environment","title":"1.2.4 Names and the Environment","text":"<p>Names can be bound via <code>=</code> or <code>import</code>.</p> <pre><code>&gt;&gt;&gt; from math import pi\n&gt;&gt;&gt; pi * 71 / 223\n1.0002380197528042\n</code></pre> <p>Names can be bound to functions. For instance, the name <code>max</code> is bound to the max function we have been using. </p> <pre><code>&gt;&gt;&gt; max\n&lt;built-in function max&gt;\n</code></pre> <pre><code>&gt;&gt;&gt; f = max\n&gt;&gt;&gt; f\n&lt;built-in function max&gt;\n&gt;&gt;&gt; f(2, 3, 4)\n4\n</code></pre> <pre><code>&gt;&gt;&gt; max = 5\n&gt;&gt;&gt; max\n5\n</code></pre> <p>Interpreter must maintain some sort of memory which is called environment to keep track of the names, values and the bindings.</p> <p><code>=</code> can combine multiple values and names.</p> <pre><code>&gt;&gt;&gt; area, circumference = pi * radius * radius, 2 * pi * radius\n\n&gt;&gt;&gt; x, y = 3, 4.5\n&gt;&gt;&gt; y, x = x, y\n&gt;&gt;&gt; x\n4.5\n&gt;&gt;&gt; y\n3\n</code></pre>"},{"location":"cs/cs61a/topic1/#126-the-non-pure-print-function","title":"1.2.6  The Non-Pure Print Function","text":"<p>Pure functions. Functions have some input (their arguments) and return some output (the result of applying them). </p> <p>Non-pure functions. In addition to returning a value, applying a non-pure function can generate side effects, which make some change to the state of the interpreter or computer.</p> <p>Take <code>abs</code> and <code>print</code> as an example.</p> <pre><code>&gt;&gt;&gt; abs(-2)\n2\n\n&gt;&gt;&gt; print(1, 2, 3)\n1 2 3\n\n&gt;&gt;&gt; print(print(1), print(2))\n1\n2\nNone None\n</code></pre> <p></p> <p></p>"},{"location":"cs/cs61a/topic1/#13-defining-new-functions","title":"1.3  Defining New Functions","text":"<p>The basic fundamental of a function:</p> <pre><code>def &lt;name&gt;(&lt;formal parameters&gt;):\n    return &lt;return expression&gt;\n</code></pre> <p>The second line must be indented \u2014 most programmers use four spaces to indent.(BTW, python uses indentation to define functions)</p>"},{"location":"cs/cs61a/topic1/#131-environments","title":"1.3.1  Environments","text":"<p>An environment in which an expression is evaluated consists of a sequence of frames, depicted as boxes.</p> <p>An environment diagram shows the bindings of the current environment, along with the values to which names are bound.</p> <p>One function has the intrinsic name and a bound name.(One bound name may refer to different functions, while the intrinsic name can just refer to one only function.)</p> <p>A description of the formal parameters of a function is called the function's signature.</p>"},{"location":"cs/cs61a/topic1/#135-choosing-names-abstract-funtions","title":"1.3.5  Choosing Names &amp; Abstract funtions","text":"<p>Adapted from the style guide for Python code.</p> <pre><code>Function names are lowercase, with words separated by underscores. Descriptive names are encouraged.\nFunction names typically evoke operations applied to arguments by the interpreter (e.g., print, add, square) or the name of the quantity that results (e.g., max, abs, sum).\nParameter names are lowercase, with words separated by underscores. Single-word names are preferred.\nParameter names should evoke the role of the parameter in the function, not just the kind of argument that is allowed.\nSingle letter parameter names are acceptable when their role is obvious, but avoid \"l\" (lowercase ell), \"O\" (capital oh), or \"I\" (capital i) to avoid confusion with numerals.\n</code></pre> <p>Aspects of a functional abstraction.To master the use of a functional abstraction, it is often useful to consider its three core attributes. The domain of a function is the set of arguments it can take. The range of a function is the set of values it can return. The intent of a function is the relationship it computes between inputs and output (as well as any side effects it might generate). </p>"},{"location":"cs/cs61a/topic1/#14-designing-functions","title":"1.4  Designing Functions","text":"<p>A function definition will often include documentation describing the function, called a docstring, which must be indented along with the function body. Docstrings are conventionally triple quoted. Such as:</p> <pre><code>&gt;&gt;&gt; def pressure(v, t, n):\n        \"\"\"Compute the pressure in pascals of an ideal gas.\n\n        Applies the ideal gas law: http://en.wikipedia.org/wiki/Ideal_gas_law\n\n        v -- volume of gas, in cubic meters\n        t -- absolute temperature in degrees kelvin\n        n -- particles of gas\n        \"\"\"\n        k = 1.38e-23  # Boltzmann's constant\n        return n * k * t / v\n</code></pre> <p>You can see the documenatation using:</p> <pre><code>&gt;&gt;&gt; help(pressure)\n</code></pre>"},{"location":"cs/cs61a/topic1/#15-control","title":"1.5  Control","text":"<p>Practical Guidance. When indenting a suite, all lines must be indented the same amount and in the same way (use spaces, not tabs). Any variation in indentation will cause an error.</p>"},{"location":"cs/cs61a/topic1/#156-testing","title":"1.5.6 Testing","text":"<p>Assertions. Programmers use <code>assert</code> statements to verify expectations, such as the output of a function being tested. An <code>assert</code> statement has an expression in a boolean context, followed by a quoted line of text (single or double quotes are both fine, but be consistent) that will be displayed if the expression evaluates to a false value.</p> <pre><code>&gt;&gt;&gt; assert fib(8) == 13, 'The 8th Fibonacci number should be 13'\n</code></pre> <p>When the expression being asserted evaluates to a true value, executing an assert statement has no effect. When it is a false value, <code>assert</code> causes an error that halts execution.</p> <p>Doctests. Python provides a convenient method for placing simple tests directly in the docstring of a function. The first line of a docstring should contain a one-line description of the function, followed by a blank line. A detailed description of arguments and behavior may follow. In addition, the docstring may include a sample interactive session that calls the function:</p> <pre><code>&gt;&gt;&gt; def sum_naturals(n):\n        \"\"\"Return the sum of the first n natural numbers.\n\n        &gt;&gt;&gt; sum_naturals(10)\n        55\n        &gt;&gt;&gt; sum_naturals(100)\n        5050\n        \"\"\"\n        total, k = 0, 1\n        while k &lt;= n:\n            total, k = total + k, k + 1\n        return total\n</code></pre> <p>You can verify the interaction via the doctest module.Such as:</p> <pre><code>&gt;&gt;&gt; from doctest import testmod\n&gt;&gt;&gt; testmod()\nTestResults(failed=0, attempted=2)\n</code></pre> <p>To verify the doctest interactions for only a single function, we use a <code>doctest</code> function called <code>run_docstring_examples</code>. This function is (unfortunately) a bit complicated to call. Its first argument is the function to test. The second should always be the result of the expression <code>globals()</code>, a built-in function that returns the global environment. The third argument is <code>True</code> to indicate that we would like \"verbose\" output: a catalog of all tests run.</p> <pre><code>&gt;&gt;&gt; from doctest import run_docstring_examples\n&gt;&gt;&gt; run_docstring_examples(sum_naturals, globals(), True)\nFinding tests in NoName\nTrying:\n    sum_naturals(10)\nExpecting:\n    55\nok\nTrying:\n    sum_naturals(100)\nExpecting:\n    5050\nok\n</code></pre> <p>When the return value of a function does not match the expected result, the <code>run_docstring_examples</code> function will report this problem as a test failure.</p> <p>When writing Python in files, all doctests in a file can be run by starting Python with the doctest command line option:</p> <pre><code>python3 -m doctest &lt;python_source_file&gt;\n</code></pre>"},{"location":"cs/cs61a/topic1/#16-higher-older-functions","title":"1.6 Higher-Older Functions","text":"<p>Functions that manipulate functions are called higher-order functions. </p>"},{"location":"cs/cs61a/topic1/#166-currying","title":"1.6.6 Currying","text":"<p>We can use higher-order functions to convert a function that takes multiple arguments into a chain of functions that each take a single argument.</p> <pre><code>&gt;&gt;&gt; def curried_pow(x):\n        def h(y):\n            return pow(x, y)\n        return h\n&gt;&gt;&gt; curried_pow(2)(3)\n8\n</code></pre>"},{"location":"cs/cs61a/topic1/#167-lambda-expressions","title":"1.6.7  Lambda Expressions","text":"<p>In Python, we can create function values on the fly using <code>lambda</code> expressions, which evaluate to unnamed functions. A lambda expression evaluates to a function that has a single return expression as its body. Assignment and control statements are not allowed.</p> <pre><code>&gt;&gt;&gt; def compose1(f, g):\n        return lambda x: f(g(x))\n</code></pre> <p>We can understand the structure of a <code>lambda</code> expression by constructing a corresponding English sentence:</p> <pre><code>     lambda            x            :          f(g(x))\n\"A function that    takes x    and returns     f(g(x))\"\n</code></pre> <p>The following definition is correct, but many programmers have trouble understanding it quickly.</p> <pre><code>&gt;&gt;&gt; compose1 = lambda f,g: lambda x: f(g(x))\n</code></pre>"},{"location":"cs/cs61a/topic1/#169-function-decorators","title":"1.6.9  Function Decorators","text":"<pre><code>&gt;&gt;&gt; def trace(fn):\n        def wrapped(x):\n            print('-&gt; ', fn, '(', x, ')')\n            return fn(x)\n        return wrapped\n&gt;&gt;&gt; @trace\n    def triple(x):\n        return 3 * x\n&gt;&gt;&gt; triple(12)\n-&gt;  &lt;function triple at 0x102a39848&gt; ( 12 )\n36\n</code></pre> <p>The name <code>triple</code> is bound to the returned function value of calling <code>trace</code> on the newly defined <code>triple</code> function. In code, this decorator is equivalent to:</p> <pre><code>&gt;&gt;&gt; def triple(x):\n        return 3 * x\n&gt;&gt;&gt; triple = trace(triple)\n</code></pre>"},{"location":"cs/cs61a/topic1/#17-recursive-functions","title":"1.7  Recursive Functions","text":"<p>A function is called recursive if the body of the function calls the function itself, either directly or indirectly.</p> <p>Pretty easy to understand, same as recursive functions in c++.</p> <p>Instead of listing formal parameters for a function, you can write <code>*args</code>. To call another function using exactly those arguments, you call it again with <code>*args</code>. For example,</p> <pre><code>&gt;&gt;&gt; def printed(f):\n...     def print_and_return(*args):\n...         result = f(*args)\n...         print('Result:', result)\n...         return result\n...     return print_and_return\n&gt;&gt;&gt; printed_pow = printed(pow)\n&gt;&gt;&gt; printed_pow(2, 8)\nResult: 256\n256\n&gt;&gt;&gt; printed_abs = printed(abs)\n&gt;&gt;&gt; printed_abs(-10)\nResult: 10\n10\n</code></pre>"},{"location":"cs/cs61a/topic2/","title":"Chapter 2: Building Abstractions with Data","text":""},{"location":"cs/cs61a/images/UCB-CS61A/","title":"Study notes | CS61A","text":"<p>Start!</p>","tags":["\u8ba1\u7b97\u673a\u79d1\u5b66"]},{"location":"cs/cs61a/images/UCB-CS61A/#chapter-1-building-abstractions-with-functions","title":"Chapter 1: Building Abstractions with Functions","text":"","tags":["\u8ba1\u7b97\u673a\u79d1\u5b66"]},{"location":"cs/cs61a/images/UCB-CS61A/#12-elements-of-programing","title":"1.2 Elements of Programing","text":"","tags":["\u8ba1\u7b97\u673a\u79d1\u5b66"]},{"location":"cs/cs61a/images/UCB-CS61A/#123-importing-library-functions","title":"1.2.3 Importing Library Functions","text":"<p>Python defines a very large number of functions, including the operator functions mentioned in the preceding section,so we can import them into our programing.</p> <pre><code>&gt;&gt;&gt; from math import sqrt\n&gt;&gt;&gt; sqrt(256)\n16.0\n</code></pre>","tags":["\u8ba1\u7b97\u673a\u79d1\u5b66"]},{"location":"cs/cs61a/images/UCB-CS61A/#124-names-and-the-environment","title":"1.2.4 Names and the Environment","text":"<p>Names can be bound via <code>=</code> or <code>import</code>.</p> <pre><code>&gt;&gt;&gt; from math import pi\n&gt;&gt;&gt; pi * 71 / 223\n1.0002380197528042\n</code></pre> <p>Names can be bound to functions. For instance, the name <code>max</code> is bound to the max function we have been using. </p> <pre><code>&gt;&gt;&gt; max\n&lt;built-in function max&gt;\n</code></pre> <pre><code>&gt;&gt;&gt; f = max\n&gt;&gt;&gt; f\n&lt;built-in function max&gt;\n&gt;&gt;&gt; f(2, 3, 4)\n4\n</code></pre> <pre><code>&gt;&gt;&gt; max = 5\n&gt;&gt;&gt; max\n5\n</code></pre> <p>Interpreter must maintain some sort of memory which is called environment to keep track of the names, values and the bindings.</p> <p><code>=</code> can combine multiple values and names.</p> <pre><code>&gt;&gt;&gt; area, circumference = pi * radius * radius, 2 * pi * radius\n\n&gt;&gt;&gt; x, y = 3, 4.5\n&gt;&gt;&gt; y, x = x, y\n&gt;&gt;&gt; x\n4.5\n&gt;&gt;&gt; y\n3\n</code></pre>","tags":["\u8ba1\u7b97\u673a\u79d1\u5b66"]},{"location":"cs/cs61a/images/UCB-CS61A/#126-the-non-pure-print-function","title":"1.2.6  The Non-Pure Print Function","text":"<p>Pure functions. Functions have some input (their arguments) and return some output (the result of applying them). </p> <p>Non-pure functions. In addition to returning a value, applying a non-pure function can generate side effects, which make some change to the state of the interpreter or computer.</p> <p>Take <code>abs</code> and <code>print</code> as an example.</p> <pre><code>&gt;&gt;&gt; abs(-2)\n2\n\n&gt;&gt;&gt; print(1, 2, 3)\n1 2 3\n\n&gt;&gt;&gt; print(print(1), print(2))\n1\n2\nNone None\n</code></pre> <p></p> <p></p>","tags":["\u8ba1\u7b97\u673a\u79d1\u5b66"]},{"location":"cs/cs61a/images/UCB-CS61A/#13-defining-new-functions","title":"1.3  Defining New Functions","text":"<p>The basic fundamental of a function:</p> <pre><code>def &lt;name&gt;(&lt;formal parameters&gt;):\n    return &lt;return expression&gt;\n</code></pre> <p>The second line must be indented \u2014 most programmers use four spaces to indent.(BTW, python uses indentation to define functions)</p>","tags":["\u8ba1\u7b97\u673a\u79d1\u5b66"]},{"location":"cs/cs61a/images/UCB-CS61A/#131-environments","title":"1.3.1  Environments","text":"<p>An environment in which an expression is evaluated consists of a sequence of frames, depicted as boxes.</p> <p>An environment diagram shows the bindings of the current environment, along with the values to which names are bound.</p> <p>One function has the intrinsic name and a bound name.(One bound name may refer to different functions, while the intrinsic name can just refer to one only function.)</p> <p>A description of the formal parameters of a function is called the function's signature.</p>","tags":["\u8ba1\u7b97\u673a\u79d1\u5b66"]},{"location":"cs/cs61a/images/UCB-CS61A/#135-choosing-names-abstract-funtions","title":"1.3.5  Choosing Names &amp; Abstract funtions","text":"<p>Adapted from the style guide for Python code.</p> <pre><code>Function names are lowercase, with words separated by underscores. Descriptive names are encouraged.\nFunction names typically evoke operations applied to arguments by the interpreter (e.g., print, add, square) or the name of the quantity that results (e.g., max, abs, sum).\nParameter names are lowercase, with words separated by underscores. Single-word names are preferred.\nParameter names should evoke the role of the parameter in the function, not just the kind of argument that is allowed.\nSingle letter parameter names are acceptable when their role is obvious, but avoid \"l\" (lowercase ell), \"O\" (capital oh), or \"I\" (capital i) to avoid confusion with numerals.\n</code></pre> <p>Aspects of a functional abstraction.To master the use of a functional abstraction, it is often useful to consider its three core attributes. The domain of a function is the set of arguments it can take. The range of a function is the set of values it can return. The intent of a function is the relationship it computes between inputs and output (as well as any side effects it might generate). </p>","tags":["\u8ba1\u7b97\u673a\u79d1\u5b66"]},{"location":"cs/cs61a/images/UCB-CS61A/#14-designing-functions","title":"1.4  Designing Functions","text":"<p>A function definition will often include documentation describing the function, called a docstring, which must be indented along with the function body. Docstrings are conventionally triple quoted. Such as:</p> <pre><code>&gt;&gt;&gt; def pressure(v, t, n):\n        \"\"\"Compute the pressure in pascals of an ideal gas.\n\n        Applies the ideal gas law: http://en.wikipedia.org/wiki/Ideal_gas_law\n\n        v -- volume of gas, in cubic meters\n        t -- absolute temperature in degrees kelvin\n        n -- particles of gas\n        \"\"\"\n        k = 1.38e-23  # Boltzmann's constant\n        return n * k * t / v\n</code></pre> <p>You can see the documenatation using:</p> <pre><code>&gt;&gt;&gt; help(pressure)\n</code></pre>","tags":["\u8ba1\u7b97\u673a\u79d1\u5b66"]},{"location":"cs/cs61a/images/UCB-CS61A/#15-control","title":"1.5  Control","text":"<p>Practical Guidance. When indenting a suite, all lines must be indented the same amount and in the same way (use spaces, not tabs). Any variation in indentation will cause an error.</p>","tags":["\u8ba1\u7b97\u673a\u79d1\u5b66"]},{"location":"cs/cs61a/images/UCB-CS61A/#156-testing","title":"1.5.6 Testing","text":"<p>Assertions. Programmers use <code>assert</code> statements to verify expectations, such as the output of a function being tested. An <code>assert</code> statement has an expression in a boolean context, followed by a quoted line of text (single or double quotes are both fine, but be consistent) that will be displayed if the expression evaluates to a false value.</p> <pre><code>&gt;&gt;&gt; assert fib(8) == 13, 'The 8th Fibonacci number should be 13'\n</code></pre> <p>When the expression being asserted evaluates to a true value, executing an assert statement has no effect. When it is a false value, <code>assert</code> causes an error that halts execution.</p> <p>Doctests. Python provides a convenient method for placing simple tests directly in the docstring of a function. The first line of a docstring should contain a one-line description of the function, followed by a blank line. A detailed description of arguments and behavior may follow. In addition, the docstring may include a sample interactive session that calls the function:</p> <pre><code>&gt;&gt;&gt; def sum_naturals(n):\n        \"\"\"Return the sum of the first n natural numbers.\n\n        &gt;&gt;&gt; sum_naturals(10)\n        55\n        &gt;&gt;&gt; sum_naturals(100)\n        5050\n        \"\"\"\n        total, k = 0, 1\n        while k &lt;= n:\n            total, k = total + k, k + 1\n        return total\n</code></pre> <p>You can verify the interaction via the doctest module.Such as:</p> <pre><code>&gt;&gt;&gt; from doctest import testmod\n&gt;&gt;&gt; testmod()\nTestResults(failed=0, attempted=2)\n</code></pre> <p>To verify the doctest interactions for only a single function, we use a <code>doctest</code> function called <code>run_docstring_examples</code>. This function is (unfortunately) a bit complicated to call. Its first argument is the function to test. The second should always be the result of the expression <code>globals()</code>, a built-in function that returns the global environment. The third argument is <code>True</code> to indicate that we would like \"verbose\" output: a catalog of all tests run.</p> <pre><code>&gt;&gt;&gt; from doctest import run_docstring_examples\n&gt;&gt;&gt; run_docstring_examples(sum_naturals, globals(), True)\nFinding tests in NoName\nTrying:\n    sum_naturals(10)\nExpecting:\n    55\nok\nTrying:\n    sum_naturals(100)\nExpecting:\n    5050\nok\n</code></pre> <p>When the return value of a function does not match the expected result, the <code>run_docstring_examples</code> function will report this problem as a test failure.</p> <p>When writing Python in files, all doctests in a file can be run by starting Python with the doctest command line option:</p> <pre><code>python3 -m doctest &lt;python_source_file&gt;\n</code></pre>","tags":["\u8ba1\u7b97\u673a\u79d1\u5b66"]},{"location":"cs/cs61a/images/UCB-CS61A/#16-higher-older-functions","title":"1.6 Higher-Older Functions","text":"<p>Functions that manipulate functions are called higher-order functions. </p>","tags":["\u8ba1\u7b97\u673a\u79d1\u5b66"]},{"location":"cs/cs61a/images/UCB-CS61A/#166-currying","title":"1.6.6 Currying","text":"<p>We can use higher-order functions to convert a function that takes multiple arguments into a chain of functions that each take a single argument.</p> <pre><code>&gt;&gt;&gt; def curried_pow(x):\n        def h(y):\n            return pow(x, y)\n        return h\n&gt;&gt;&gt; curried_pow(2)(3)\n8\n</code></pre>","tags":["\u8ba1\u7b97\u673a\u79d1\u5b66"]},{"location":"cs/cs61a/images/UCB-CS61A/#167-lambda-expressions","title":"1.6.7  Lambda Expressions","text":"<p>In Python, we can create function values on the fly using <code>lambda</code> expressions, which evaluate to unnamed functions. A lambda expression evaluates to a function that has a single return expression as its body. Assignment and control statements are not allowed.</p> <pre><code>&gt;&gt;&gt; def compose1(f, g):\n        return lambda x: f(g(x))\n</code></pre> <p>We can understand the structure of a <code>lambda</code> expression by constructing a corresponding English sentence:</p> <pre><code>     lambda            x            :          f(g(x))\n\"A function that    takes x    and returns     f(g(x))\"\n</code></pre> <p>The following definition is correct, but many programmers have trouble understanding it quickly.</p> <pre><code>&gt;&gt;&gt; compose1 = lambda f,g: lambda x: f(g(x))\n</code></pre>","tags":["\u8ba1\u7b97\u673a\u79d1\u5b66"]},{"location":"cs/cs61a/images/UCB-CS61A/#169-function-decorators","title":"1.6.9  Function Decorators","text":"<pre><code>&gt;&gt;&gt; def trace(fn):\n        def wrapped(x):\n            print('-&gt; ', fn, '(', x, ')')\n            return fn(x)\n        return wrapped\n&gt;&gt;&gt; @trace\n    def triple(x):\n        return 3 * x\n&gt;&gt;&gt; triple(12)\n-&gt;  &lt;function triple at 0x102a39848&gt; ( 12 )\n36\n</code></pre> <p>The name <code>triple</code> is bound to the returned function value of calling <code>trace</code> on the newly defined <code>triple</code> function. In code, this decorator is equivalent to:</p> <pre><code>&gt;&gt;&gt; def triple(x):\n        return 3 * x\n&gt;&gt;&gt; triple = trace(triple)\n</code></pre>","tags":["\u8ba1\u7b97\u673a\u79d1\u5b66"]},{"location":"cs/cs61a/images/UCB-CS61A/#17-recursive-functions","title":"1.7  Recursive Functions","text":"<p>A function is called recursive if the body of the function calls the function itself, either directly or indirectly.</p> <p>Pretty easy to understand, same as recursive functions in c++.</p> <p>Instead of listing formal parameters for a function, you can write <code>*args</code>. To call another function using exactly those arguments, you call it again with <code>*args</code>. For example,</p> <pre><code>&gt;&gt;&gt; def printed(f):\n...     def print_and_return(*args):\n...         result = f(*args)\n...         print('Result:', result)\n...         return result\n...     return print_and_return\n&gt;&gt;&gt; printed_pow = printed(pow)\n&gt;&gt;&gt; printed_pow(2, 8)\nResult: 256\n256\n&gt;&gt;&gt; printed_abs = printed(abs)\n&gt;&gt;&gt; printed_abs(-10)\nResult: 10\n10\n</code></pre>","tags":["\u8ba1\u7b97\u673a\u79d1\u5b66"]},{"location":"cs/cs61a/images/UCB-CS61A/#chapter-2-building-abstractions-with-data","title":"Chapter 2: Building Abstractions with Data","text":"","tags":["\u8ba1\u7b97\u673a\u79d1\u5b66"]},{"location":"daily/","title":"Daily Progress","text":"<p>\u65e5\u62f1\u4e00\u5352</p> <p>\u521d\u8877\u662f\u5b8c\u6210\u4e00\u4e9b\u91cd\u8981\u4f46\u4e0d\u7d27\u8feb\u7684\u4e8b\u60c5\uff0c\u8bb0\u5f55\u4e0b\u6bcf\u5929\u7684\u6536\u83b7\u4ee5\u7763\u4fc3\u81ea\u5df1\u3002</p> <p>\u7edd\u8d5e\u8fdb\u884c\u4e2d \u03c6(\u309c\u25bd\u309c*)\u266a \uff08\u9f13\u638c\uff09</p> <p>updated on 12/1</p> <p>\u7b11\u6b7b\uff0c\u65e9\u5c31\u9e3d\u7a7f\u4e86\u90fd</p>"},{"location":"ee/information_theory/chap2/","title":"\u4fe1\u6e90\u548c\u4fe1\u6e90\u71b5","text":""},{"location":"ee/information_theory/chap2/#_2","title":"\u79bb\u6563\u5e73\u7a33\u4fe1\u6e90","text":"<p>\u82e5\u4fe1\u6e90 \\(X\\) \u8f93\u51fa\u968f\u673a\u5e8f\u5217\u7684\u5404\u7ef4\u8054\u5408\u6982\u7387\u5206\u5e03\u5747\u4e0e\u65f6\u95f4\u8d77\u70b9\u65e0\u5173\uff0c\u5219\u4fe1\u6e90\u662f\u5b8c\u5168\u5e73\u7a33\u7684\u3002</p> <p>\u5bf9\u4e8e\u79bb\u6563\u5e73\u7a33\u4fe1\u6e90\u6765\u8bf4\uff0c\u5176\u5404\u7ef4\u6761\u4ef6\u6982\u7387\u4e0e\u65f6\u95f4\u8d77\u70b9\u65e0\u5173\uff0c\u53ea\u4e0e\u5173\u8054\u957f\u5ea6\u6709\u5173\u3002</p>"},{"location":"ee/information_theory/chap2/#_3","title":"\u9a6c\u5c14\u53ef\u592b\u4fe1\u6e90","text":"<p>\u5bf9\u4e8e\u4e8c\u5143\u4e8c\u9636\u9a6c\u5c14\u53ef\u592b\u4fe1\u6e90\uff0c\u5176\u4fe1\u6e90\u7b26\u53f7\u96c6\u5171\u6709 \\(2\\) \u79cd\u7b26\u53f7\u3001\u72b6\u6001\u96c6\u5171\u6709 \\(4\\) \u79cd\u72b6\u6001\uff0c\u4fe1\u6e90\u8f93\u51fa\u7684\u7b26\u53f7\u53ea\u4e0e\u5176\u524d\u9762 \\(2\\) \u4e2a\u7b26\u53f7\u6709\u5173\uff0c\u4f9d\u8d56\u957f\u5ea6\u4e3a \\(3\\)\u3002</p> <p>\\(H_{\\infty} = H_{m + 1} = \\sum_{i = 1}^J p(E_i)H(X|E_i)\\)\u3002</p> <p>\u5176\u4e2d \\(H(X|E_i) = -\\sum_{j = 1}^q p(a_k|E_i)\\log p(a_k | E_i)\\)\u3002</p> <p>\u5bf9\u4e8e\u904d\u5386\u7684\u6709\u9650\u72b6\u6001\u9a6c\u5c14\u79d1\u592b\u94fe\uff0c\u5982\u679c\u521d\u59cb\u6982\u7387\u5206\u5e03\u4e0d\u662f\u5e73\u7a33\u5206\u5e03\uff0c\u5f53\u8f6c\u79fb\u6b65\u6570\u8db3\u591f\u5927\u65f6\uff0c\u72b6\u6001\u6982\u7387\u5206\u5e03\u4e00\u5b9a\u8d8b\u4e8e\u5e73\u7a33\u5206\u5e03\u3002</p>"},{"location":"ee/information_theory/chap2/#_4","title":"\u4fe1\u6e90\u7684\u76f8\u5173\u6027\u548c\u5269\u4f59\u5ea6","text":"<p>\u71b5\u7684\u76f8\u5bf9\u7387\uff1a\\(\\eta = \\dfrac{H_{\\infty}}{H_0}\\)\u3002</p> <p>\u4fe1\u6e90\u5269\u4f59\u5ea6\uff1a\\(r = 1 - \\eta = 1 - \\dfrac{H_{\\infty}}{H_0}\\)\u3002</p> <p>\u5176\u4e2d \\(H_0\\) \u662f\u6700\u5927\u71b5\uff0c\u4e00\u822c\u4e3a \\(\\log q\\)\u3002\\(H_{\\infty}\\) \u662f\u5b9e\u9645\u71b5\u3002</p> <p>\u8fde\u7eed\u71b5 \\(H_c(X) = \\int_R p(x)\\log p(x)dx\\)\u3002</p> <p>\u5747\u5300\u5206\u5e03</p> <p>\u5747\u5300\u5206\u5e03\u7684\u8fde\u7eed\u4fe1\u6e90\u7684\u71b5</p> <p>\u5728 \\([a, b]\\) \u533a\u95f4\u5747\u5300\u5206\u5e03\u7684\u4fe1\u606f\u71b5\u4e3a \\(\\log(b - a)\\)\u3002</p> <p>\u9ad8\u65af\u5206\u5e03</p> <p>\u9ad8\u65af\u5206\u5e03\u7684\u8fde\u7eed\u4fe1\u6e90\u7684\u71b5</p> \\[     p(x) = \\dfrac{1}{\\sqrt{2\\pi\\sigma^2}}\\exp{\\dfrac{(x - m)^2}{2\\sigma^2}} \\] <p>\u5219\u4fe1\u6e90\u71b5\u4e3a</p> \\[     H_c(x) = \\log \\sqrt{2\\pi e \\sigma^2} = \\log \\sqrt{2\\pi e P} \\] <p>\u8fd9\u91cc\u7684 \\(P\\) \u662f\u5e73\u5747\u529f\u7387\u3002</p> <p>\u6307\u6570\u5206\u5e03</p> <p>\u6307\u6570\u5206\u5e03\u7684\u8fde\u7eed\u4fe1\u6e90\u7684\u71b5</p> \\[     p(x) = \\lambda\\exp{(-\\lambda x)} \\] <p>\u5219\u4fe1\u6e90\u71b5\u4e3a</p> \\[     H_c(x) = \\log \\left (\\dfrac{e}{\\lambda}\\right) \\] <p>\u62c9\u666e\u62c9\u65af\u5206\u5e03</p> <p>\u62c9\u666e\u62c9\u65af\u5206\u5e03\u7684\u8fde\u7eed\u4fe1\u6e90\u7684\u71b5</p> \\[     p(x) = \\dfrac{1}{2}\\lambda\\exp{(-\\lambda |x|)} \\] <p>\u5219\u4fe1\u6e90\u71b5\u4e3a</p> \\[     H_c(x) = \\log \\left (\\dfrac{e}{\\lambda}\\right) + 1 \\] <p>\u82e5\u4fe1\u6e90\u8f93\u51fa\u7684\u5e45\u5ea6\u88ab\u9650\u5b9a\u5728 \\([a, b]\\) \u533a\u57df\u5185\uff0c\u5219\u5f53\u8f93\u51fa\u4fe1\u53f7\u7684\u6982\u7387\u5bc6\u5ea6\u662f\u5747\u5300\u5206\u5e03\u65f6\uff0c\u4fe1\u6e90\u5177\u6709\u6700\u5927\u71b5\u3002\u5176\u503c\u7b49\u4e8e \\(\\log (b - a)\\)\u3002</p> <p>\u82e5\u8fde\u7eed\u4fe1\u6e90\u8f93\u51fa\u4fe1\u53f7\u7684\u5e73\u5747\u529f\u7387\u88ab\u9650\u5b9a\u4e3a \\(S\\)\uff0c\u5219\u5176\u8f93\u51fa\u4fe1\u53f7\u5e45\u5ea6\u670d\u4ece\u9ad8\u65af\u5206\u5e03\u65f6\u4fe1\u6e90\u5177\u6709\u6700\u5927\u71b5\u3002\u5176\u503c\u7b49\u4e8e \\(\\log \\sqrt{2\\pi e S}\\)\u3002</p> <p>\u82e5\u8fde\u7eed\u4fe1\u6e90\u8f93\u51fa\u975e\u8d1f\u4fe1\u53f7\u7684\u5747\u503c\u88ab\u9650\u5b9a\u4e3a \\(m\\)\uff0c\u5219\u5176\u8f93\u51fa\u4fe1\u53f7\u5e45\u5ea6\u670d\u4ece\u6307\u6570\u5206\u5e03\u65f6\uff0c\u4fe1\u6e90\u5177\u6709\u6700\u5927\u71b5\u3002\u5176\u503c\u7b49\u4e8e \\(\\log (me)\\)\u3002</p>"},{"location":"ee/information_theory/chap3/","title":"\u4fe1\u9053\u548c\u4fe1\u9053\u5bb9\u91cf","text":""},{"location":"ee/information_theory/chap3/#_2","title":"\u4fe1\u9053\u7684\u6570\u5b66\u6a21\u578b\u548c\u5206\u7c7b","text":"<p>\u6839\u636e\u4fe1\u9053\u8f6c\u79fb\u6982\u7387 \\(p(y|x)\\) \u53ef\u5c06\u79bb\u6563\u4fe1\u9053\u5206\u6210\u4e09\u79cd</p> <ul> <li>\u65e0\u5e72\u6270\uff08\u65e0\u566a\uff09\u4fe1\u9053\uff1a\u65e0\u566a\u58f0\uff0c\u4e5f\u65e0\u7801\u95f4\u5e72\u6270\u3002\u4fe1\u9053\u7684\u8f93\u51fa\u7b26\u53f7 \\(Y\\) \u548c\u8f93\u5165\u7b26\u53f7 \\(X\\) \u4e4b\u95f4\u6709\u786e\u5b9a\u7684\u4e00\u4e00\u5bf9\u5e94\u5173\u7cfb\u3002</li> <li>\u6709\u5e72\u6270\u65e0\u8bb0\u5fc6\u4fe1\u9053\u7279\u70b9\uff1a\u8f93\u51fa\u7b26\u53f7 \\(Y\\) \u548c\u8f93\u5165\u7b26\u53f7 \\(X\\) \u4e4b\u95f4\u65e0\u786e\u5b9a\u7684\u5bf9\u5e94\u5173\u7cfb\u3002</li> <li>\u6709\u5e72\u6270\u6709\u8bb0\u5fc6\u4fe1\u9053\uff1a\u67d0\u4e00\u65f6\u523b\u8f93\u51fa\u7b26\u53f7\u5bf9\u5e94\u4e8e\u6b64\u65f6\u523b\u7684\u8f93\u5165\u7b26\u53f7\uff0c\u800c\u4e14\u8fd8\u4e0e\u524d\u4e9b\u65f6\u523b\u7684\u8f93\u5165\u3001\u8f93\u51fa\u7b26\u53f7\u6709\u5173\u3002</li> </ul> <p>\u79bb\u6563\u65e0\u8bb0\u5fc6\u4fe1\u9053\u7684\u5145\u8981\u6761\u4ef6</p> \\[     p(y/x) = \\prod_{i = 1}^N p(y_i/x_i) \\] <p>\u4e8c\u8fdb\u5236\u79bb\u6563\u4fe1\u9053\u6a21\u578b\u7531\u4e00\u4e2a\u5141\u8bb8\u8f93\u5165\u503c\u7684\u96c6\u5408 \\(X\uff1d{0,1}\\) \u548c\u53ef\u80fd\u8f93\u51fa\u503c\u7684\u96c6\u5408 \\(Y={0,1}\\)\uff0c\u4ee5\u53ca\u4e00\u7ec4\u8868\u793a\u8f93\u5165\u3001\u8f93\u51fa\u5173\u7cfb\u7684\u6761\u4ef6\u6982\u7387\uff08\u8f6c\u79fb\u6982\u7387\uff09\u7ec4\u6210\u3002</p> \\[\\begin{align} p(a_ib_j) = p(a_i)p(b_j/a_i) \\\\ p(b_j) = \\sum_{i = 1}^r p(a_i)p(b_j/a_i) \\end{align}\\] <p>\u5176\u4e2d \\(p(a_i)\\) \u662f\u5148\u9a8c\u6982\u7387\uff0c\\(p(b_j/a_i)\\) \u662f\u4fe1\u9053\u4f20\u9012\u6982\u7387\uff0c\\(p(a_i/b_j)\\) \u662f\u540e\u9a8c\u6982\u7387\u3002</p>"},{"location":"ee/information_theory/chap3/#_3","title":"\u4fe1\u9053\u7591\u4e49\u5ea6\u53ca\u5e73\u5747\u4e92\u4fe1\u606f","text":""},{"location":"ee/information_theory/chap3/#_4","title":"\u4fe1\u9053\u7591\u4e49\u5ea6","text":"<p>\u4fe1\u9053\u8f93\u5165\u4fe1\u6e90 \\(X\\) \u7684\u71b5\uff08\u5148\u9a8c\u71b5\uff09\uff1a\u8868\u793a\u5728\u63a5\u6536\u5230 \\(Y\\) \u4ee5\u524d\u5173\u4e8e\u8f93\u5165\u53d8\u91cf \\(X\\) \u7684\u5148\u9a8c\u4e0d\u786e\u5b9a\u6027\u7684\u5ea6\u91cf\u3002</p> \\[     H(x) = -\\sum_x p(x)\\log p(x) \\] <p>\u6536\u5230\u540e\u5173\u4e8e\u7684\u5e73\u5747\u4e0d\u786e\u5b9a\u6027\u4e3a\uff08\u540e\u9a8c\u71b5\uff09 </p> \\[     H(x / b_j) = -\\sum_x p(x / b_j)\\log p(x / b_j) \\] <p>\u6536\u5230 \\(Y\\) \u7684\u5168\u90e8\u7b26\u53f7\u540e\u5173\u4e8e \\(X\\) \u7684\u4e0d\u786e\u5b9a\u6027\uff0c\u8868\u793a\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u5931\u53bb\u7684\u71b5\u503c\uff08\u5c11\u5f97\u5230\u7684\u4fe1\u606f\u91cf\uff09\uff0c\u53c8\u79f0\u4e3a\u4fe1\u9053\u7591\u4e49\u5ea6/\u635f\u5931\u71b5\uff1a</p> \\[\\begin{align}     H(X / Y) &amp;= -\\sum_j p(b_j)H(X / b_j) \\\\              &amp;= -\\sum_{X, Y} p(xy)\\log p(x / y) \\end{align}\\] <p>\u5f53\u635f\u5931\u71b5 \\(H(X|Y)=0\\) \u65f6\uff0c\u4fe1\u9053\u4e0a\u4f20\u9001\u7684\u4fe1\u606f\u91cf\u6b63\u662f\u8f93\u5165\u4fe1\u53f7\u7684\u5168\u90e8\u4fe1\u606f\u91cf\u3002</p> <p>\u5f53 \\(X\\) \u548c \\(Y\\) \u7edf\u8ba1\u72ec\u7acb\u65f6\uff0c\u63a5\u6536\u7684 \\(Y\\) \u5b8c\u5168\u4e0e\u53d1\u9001\u7684 \\(X\\) \u65e0\u5173\uff0c\u6b64\u65f6 \\(H(X|Y)=H(X)\\)\uff0c\u8bf4\u660e\u635f\u5931\u7684\u4fe1\u606f\u8fbe\u5230\u4e0e\u8f93\u5165\u7b26\u53f7\u4fe1\u606f\u71b5\u76f8\u7b49\u7684\u7a0b\u5ea6\u3002\u5373\u4fe1\u9053\u4e0a\u6ca1\u80fd\u4f20\u9001\u4efb\u4f55\u4fe1\u606f\u3002</p>"},{"location":"ee/information_theory/chap3/#_5","title":"\u5e73\u5747\u4e92\u4fe1\u606f","text":"<p>\u7edf\u8ba1\u5e73\u5747\u5730\u770b\uff1a\u8f93\u51fa\u7aef\u6bcf\u6536\u5230\u4e00\u4e2a\u7b26\u53f7\uff0c\u5bf9\u4fe1\u6e90 \\(X\\) \u89e3\u9664\u4e86\u591a\u5c11\u4e0d\u5b9a\u5ea6\u5c31\u83b7\u5f97\u4e86\u591a\u5c11\u4fe1\u606f\u91cf\uff0c\u8fd9\u5c31\u662f\u5e73\u5747\u4e92\u4fe1\u606f \\(I(X;Y)\\) \u7684\u6982\u5ff5\u3002</p> \\[      I(X;Y) = \\sum_{X, Y}p(xy)\\log \\dfrac{p(xy)}{p(x)p(y)} = \\sum_{X, Y}p(x)p(y/x)\\log \\dfrac{p(y/x)}{p(y)} \\] <p>\u4e92\u4fe1\u606f \\(I(x;y)\\)\uff1a\u4ee3\u8868\u6536\u5230\u67d0\u6d88\u606f \\(x\\) \u540e\u83b7\u5f97\u5173\u4e8e\u67d0\u4e8b\u4ef6 \\(y\\) \u7684\u4fe1\u606f\u91cf\u3002</p> \\[      I(x;y) = \\log \\dfrac{p(xy)}{p(x)p(y)} = \\log \\dfrac{p(y/x)}{p(y)} \\] <p>\\(I(X;Y)\\) \u548c \\(I(x;y)\\) \u7684\u533a\u522b</p> <p>\\(I(X;Y) = E[I(x;y)]\\)</p> <p>\u4e92\u4fe1\u606f\u53ef\u4ee5\u4e3a\u8d1f\uff0c\u5e73\u5747\u4e92\u4fe1\u606f\u975e\u8d1f\u3002</p>"},{"location":"ee/information_theory/chap3/#_6","title":"\u5e73\u5747\u4e92\u4fe1\u606f\u7684\u7279\u5f81","text":"<ul> <li>\u975e\u8d1f\u6027\u3002\u8be5\u6027\u8d28\u8bf4\u660e\uff1a\u79bb\u6563\u4fe1\u6e90\u901a\u8fc7\u6709\u566a\u58f0\u4fe1\u9053\u4f20\u8f93\uff0c\u63a5\u6536\u7aef\u603b\u4f1a\u83b7\u53d6\u5230\u5173\u4e8e\u4fe1\u6e90\u7684\u4fe1\u606f\u91cf\uff0c\u9664\u975e\u8f93\u5165\u8f93\u51fa\u662f\u7edf\u8ba1\u72ec\u7acb\u7684\u3002</li> <li>\u6781\u503c\u6027\u3002\u5728\u6709\u566a\u58f0\u4fe1\u9053\u4e2d\uff0c\u4fe1\u9053\u7591\u4e49\u5ea6\u603b\u5927\u4e8e\u96f6\u3002</li> <li>\u5bf9\u79f0\u6027\uff08\u4ea4\u4e92\u6027\uff09\u3002</li> <li>\u51f8\u51fd\u6570\u6027     \u5bf9\u4e8e\u56fa\u5b9a\u4fe1\u9053\uff1a\\(I(X;Y)\\) \u662f\u8f93\u5165\u4fe1\u6e90\u7684\u6982\u7387 \\(p(x)\\) \u7684\u4e0a\u51f8\u51fd\u6570\u3002<ul> <li>\u610f\u4e49\uff1a\u5bf9\u4e8e\u67d0\u4e00\u4e2a\u56fa\u5b9a\u4fe1\u9053\uff0c\u4e00\u5b9a\u5b58\u5728\u4e00\u79cd\u4fe1\u6e90\u4f7f\u8f93\u51fa\u7aef\u83b7\u5f97\u7684\u5e73\u5747\u4fe1\u606f\u91cf\u6700\u5927\uff08\u5b58\u5728\u6781\u5927\u503c\uff09\uff0c\u5373\u5bf9\u4e8e\u6bcf\u79cd\u4fe1\u9053\u90fd\u5b58\u5728\u4e00\u79cd\u6700\u597d\u7684\u4fe1\u6e90\u3002 \u5bf9\u4e8e\u56fa\u5b9a\u4fe1\u6e90\uff1a\\(I(X;Y)\\) \u662f\u4fe1\u9053\u4f20\u9012\u6982\u7387\u7684\u6982\u7387 \\(p(y/x)\\) \u7684\u4e0b\u51f8\u51fd\u6570\u3002</li> <li>\u8bf4\u660e\uff1a\u5bf9\u6bcf\u4e00\u79cd\u4fe1\u6e90\u90fd\u5b58\u5728\u4e00\u79cd\u6700\u5dee\u7684\u4fe1\u9053\uff0c\u6b64\u4fe1\u9053\u7684\u5e72\u6270\uff08\u566a\u58f0\uff09\u6700\u5927\uff0c\u4f7f\u8f93\u51fa\u7aef\u83b7\u5f97\u7684\u4fe1\u606f\u91cf\u6700\u5c0f\u3002</li> </ul> </li> </ul> <p>\u4ece\u901a\u4fe1\u7cfb\u7edf\u89d2\u5ea6\u770b\u71b5\u7684\u610f\u4e49</p> <ul> <li>\\(H(X)\\)\uff1a\u8868\u793a\u4fe1\u6e90\u4fa7\u6bcf\u4e2a\u7b26\u53f7\u7684\u5e73\u5747\u4fe1\u606f\u91cf\uff08\u4fe1\u6e90\u71b5\uff09\u3002</li> <li>\\(H(Y)\\)\uff1a\u8868\u793a\u4fe1\u5bbf\u4fa7\u6bcf\u4e2a\u7b26\u53f7\u7684\u5e73\u5747\u4fe1\u606f\u91cf\uff08\u4fe1\u5bbf\u71b5\uff09\u3002</li> <li>\\(H(X|Y)\\)\uff1a\u4fe1\u9053\u7591\u4e49\u5ea6\uff08\u542b\u7cca\u5ea6\uff09\uff0c\u8868\u793a\u5728\u8f93\u51fa\u7aef\u63a5\u6536\u5230 \\(Y\\) \u540e\uff0c\u53d1\u9001\u7aef \\(X\\) \u5c1a\u5b58\u7684\u5e73\u5747\u4e0d\u786e\u5b9a\u6027\uff0c\u901a\u5e38\u79f0\u4e3a\u635f\u5931\u71b5\u3002</li> <li>\\(H(Y|X)\\)\uff1a\u4fe1\u9053\u6563\u5e03\u5ea6\uff0c\u8868\u793a\u5728\u5df2\u77e5 \\(X\\) \u540e\uff0c\u5bf9\u4e8e\u8f93\u51fa \\(Y\\) \u5c1a\u5b58\u7684\u5e73\u5747\u4e0d\u786e\u5b9a\u6027\uff0c\u901a\u5e38\u79f0\u4e3a\u566a\u58f0\u71b5\u3002</li> <li>\\(H(XY)\\)\uff1a\u8868\u793a\u6574\u4e2a\u4fe1\u606f\u4f20\u8f93\u7cfb\u7edf\u7684\u5e73\u5747\u4e0d\u786e\u5b9a\u6027\u3002</li> </ul> <p></p>"},{"location":"ee/information_theory/chap3/#_7","title":"\u79bb\u6563\u4fe1\u9053\u7684\u4fe1\u9053\u5bb9\u91cf","text":"<p>\u4fe1\u606f\u4f20\u8f93\u7387</p> \\[     R = I(X;Y) = H(X) - H(X/Y)  \\] <p>\u4fe1\u606f\u4f20\u8f93\u901f\u7387\uff1a\u5355\u4f4d\u65f6\u95f4\u5185\u5e73\u5747\u4f20\u8f93\u7684\u4fe1\u606f\u91cf\u3002\u5355\u4f4d\uff1abps\u3002</p> \\[     R_t = I(X;Y) = H(X) - H(X/Y)  \\] <p>\u4fe1\u9053\u5bb9\u91cf</p> <ul> <li>\u6700\u5927\u4fe1\u606f\u4f20\u8f93\u7387</li> </ul> \\[     C = \\max_{p(x)} [I(X;Y)]  \\] <ul> <li>\u6700\u5927\u4fe1\u606f\u4f20\u8f93\u901f\u7387</li> </ul> \\[     C_t = \\dfrac{1}{t}C = \\dfrac{1}{t}\\max_{p(x)} [I(X;Y)]   \\] <p>\u79bb\u6563\u4fe1\u9053\u8fbe\u5230\u4fe1\u9053\u5bb9\u91cf\u65f6\u7684\u8f93\u5165\u6982\u7387\u5206\u5e03\u4e0d\u662f\u552f\u4e00\u7684\u3001\u8f93\u51fa\u6982\u7387\u5206\u5e03\u662f\u552f\u4e00\u7684\u3002</p> <p>\u5bf9\u79f0\u79bb\u6563\u4fe1\u9053\u7684\u4fe1\u9053\u5bb9\u91cf</p> \\[     C = \\log S - H(p_1', p_2',..., p_s') \\] <p>\u5f53\u8f93\u5165\u7b26\u53f7\u662f\u7b49\u6982\u7684\u65f6\u5019\u624d\u80fd\u8fbe\u5230\u8be5\u6700\u5927\u503c\u3002</p> <p>\u5f3a\u5bf9\u79f0\u4fe1\u9053\u7684\u4fe1\u9053\u5bb9\u91cf</p> \\[     C = \\log r - p\\log(r - 1) - H(p, \\bar p) \\] <p>\u5f53 \\(r = 2\\) \u65f6\uff0c\\(C = 1 - H(p, \\bar p)\\)\u3002</p> <p>\u51c6\u5bf9\u79f0\u4fe1\u9053</p> \\[     C = \\log r - H(p_1', p_2',..., p_s') - \\sum_{k = 1}N_k\\log M_k \\] <p>\u5176\u4e2d \\(N_k\\) \u662f\u7b2c \\(k\\) \u4e2a\u5b50\u77e9\u9635\u4e2d\u884c\u5143\u7d20\u4e4b\u548c\uff0c\\(M_k\\) \u662f\u7b2c \\(k\\) \u4e2a\u5b50\u77e9\u9635\u4e2d\u5217\u5143\u7d20\u4e4b\u548c\u3002</p> <p>Warning</p> <p>\u6ce8\u610f\u4fe1\u9053\u516c\u5f0f\u4e2d\u4e00\u4e2a\u662f \\(\\log s\\)\uff0c\u4e00\u4e2a\u662f \\(\\log r\\)\u3002</p>"},{"location":"ee/information_theory/chap3/#_8","title":"\u79bb\u6563\u65e0\u8bb0\u5fc6\u6269\u5c55\u4fe1\u9053\u7684\u4fe1\u9053\u5bb9\u91cf","text":""},{"location":"ee/information_theory/chap3/#_9","title":"\u7ec4\u5408\u4fe1\u9053\u7684\u4fe1\u9053\u5bb9\u91cf","text":""},{"location":"ee/information_theory/chap3/#_10","title":"\u8fde\u7eed\u4fe1\u9053\u548c\u6ce2\u5f62\u4fe1\u9053\u7684\u4fe1\u9053\u5bb9\u91cf","text":"<p>\u8fde\u7eed\u4fe1\u9053\u7684\u4fe1\u9053\u5bb9\u91cf\u4e3a \\(C = \\dfrac{1}{2}\\log_2\\left(1 + \\dfrac{P_X}{P_N}\\right)\\)</p> <p>\u4fe1\u9053\u4e2d\u52a0\u6027\u9ad8\u65af\u767d\u566a\u58f0\u7684\u5747\u503c\u4e3a\u96f6\uff0c\u529f\u7387\u8c31\u5bc6\u5ea6\u4e3a \\(\\dfrac{n_0}{2}\\)\uff0c\u8bbe\u4fe1\u9053\u5e26\u5bbd\u4e3a \\(B\\)\uff0c\u5219 </p> \\[     C = BT\\log_2 \\left (1 + \\dfrac{P_X}{N} \\right ) = BT\\log_2 \\left (1 + \\dfrac{P_X}{n_0B} \\right ) \\] <p>Shannon \u516c\u5f0f</p> \\[     C_t = \\lim_{T \\to \\infty} \\dfrac{C}{T} = B\\log_2 \\left (1 + \\dfrac{P_X}{N} \\right ) \\] <p>\u91cd\u8981\u6307\u5bfc\u610f\u4e49\uff1a</p> <ul> <li>\u63d0\u9ad8\u4fe1\u566a\u529f\u7387\u6bd4\u80fd\u589e\u52a0\u4fe1\u9053\u7684\u4fe1\u9053\u5bb9\u91cf\u3002</li> <li>\u5f53\u566a\u58f0\u529f\u7387 \\(n_0 \\to 0\\) \u65f6\uff0c\\(C_t \\to \\infty\\)\uff08\u65e0\u5e72\u6270\u8fde\u7eed\u4fe1\u9053\u7684\u4fe1\u9053\u5bb9\u91cf\u4e3a\u65e0\u7a77\u5927\uff09\u3002</li> <li>\u5f53\u4fe1\u9053\u5bb9\u91cf\u4e00\u5b9a\u65f6\uff0c\u5e26\u5bbd\u3001\u65f6\u95f4\u3001\u4fe1\u566a\u6bd4\u53ef\u4ee5\u4e92\u6362\u3002</li> <li>\u5f53\u4fe1\u9053\u5e26\u5bbd \\(B \\to \\infty\\) \u65f6\uff0c\u4fe1\u9053\u5bb9\u91cf \\(C_t\\)\uff0c\u8d8b\u4e8e\u4e00\u4e2a\u5b9a\u503c\u3002\u6781\u9650\u4f20\u8f93\u901f\u7387 </li> </ul> \\[     \\lim_{B \\to \\infty} C_t \\approx 1.44 \\dfrac{P_X}{n_0} \\] <p>\u7ed3\u8bba\uff1a\u5373\u4f7f\u4f20\u8f93\u5e26\u5bbd\u65e0\u7a77\u5927\uff0c\u6b64\u65f6\u4fe1\u9053\u5bb9\u91cf\u4e5f\u662f\u6709\u9650\u7684\uff0c\u539f\u56e0\u5728\u4e8e\u5f53 \\(B \\to \\infty\\) \u65f6\uff0c\u5176\u566a\u58f0\u529f\u7387\u4e5f\u8d8b\u4e8e\u65e0\u7a77\u5927\u3002</p> <ul> <li>\u65e0\u9519\u8bef\u901a\u4fe1\u7684\u4f20\u8f93\u901f\u7387\u7684\u7406\u8bba\u6781\u9650</li> </ul> \\[     \\lim_{B \\to \\infty} C_t \\approx 1.44 \\dfrac{P_X}{n_0} \\] <ul> <li>\u9891\u5e26\u5229\u7528\u7387\u4e0e\u529f\u7387\u5229\u7528\u7387\u7684\u5173\u7cfb</li> </ul> <p>\\(\\dfrac{E_b}{n_0}\\)\uff1a\u80fd\u566a\u6bd4\uff0c\u53cd\u6620\u4e86\u7cfb\u7edf\u7684\u529f\u7387\u5229\u7528\u7387\uff0c\u5373\u7cfb\u7edf\u5229\u7528\u6240\u53d1\u9001\u4fe1\u53f7\u529f\u7387\u7684\u80fd\u529b\uff1b\u80fd\u566a\u6bd4\u8d8a\u5c0f\uff0c\u7cfb\u7edf\u7684\u529f\u7387\u5229\u7528\u7387\u8d8a\u9ad8\u3002</p> <p>\u82e5\u60f3\u5b9e\u73b0\u53ef\u9760\u901a\u4fe1\uff0c\u5219\u8981\u6ee1\u8db3 \\(R_b \\le C\\)\u3002\u53c8\u56e0\u4e3a \\(P_X = R_bE_b\\) \u4e14 \\(R_b = B\\log \\left (1 + \\dfrac{E_bR_b}{n_0B} \\right )\\)\uff0c\u5219\u6709 \\(\\dfrac{E_b}{n_0} &gt; \\dfrac{2^{\\frac{R_b}{B} - 1}}{\\frac{R_b}{B}}\\)\u3002\u8fd9\u91cc \\(R_b\\) \u662f\u4f20\u8f93\u901f\u7387\uff0c\\(B\\) \u662f\u4fe1\u9053\u5e26\u5bbd\u3002</p> <ol> <li>\u5f53\u80fd\u566a\u6bd4\u8f83\u5c0f\u65f6\uff0c\u9891\u5e26\u5229\u7528\u7387\u968f\u80fd\u566a\u6bd4\u7684\u589e\u5927\u800c\u589e\u5927\u3002</li> <li>\u5f53\u80fd\u566a\u6bd4\u8f83\u5927\u65f6\uff0c\u9891\u5e26\u5229\u7528\u7387\u8d8b\u8fd1\u4e8e \\(C/B\\) (\\(C_t = C\\))\u3002</li> </ol>"},{"location":"ee/information_theory/chap4/","title":"\u4fe1\u6e90\u7f16\u7801","text":""},{"location":"ee/information_theory/chap4/#_2","title":"\u7f16\u7801\u5668","text":"<p>Shannon \u7b2c\u4e00\u5b9a\u7406\uff08\u65e0\u5931\u771f\u4fe1\u6e90\u7f16\u7801\u5b9a\u7406\uff0c\u6709\u6548\u6027\u7f16\u7801\u5b9a\u7406\uff09\u3002</p> <p>Shannon \u7b2c\u4e8c\u5b9a\u7406\uff08\u6709\u566a\u4fe1\u9053\u7f16\u7801\u5b9a\u7406\uff0c\u6297\u5e72\u6270\u7f16\u7801\u5b9a\u7406\uff09\u3002</p> <p>\u975e\u5947\u5f02\u7801\uff1a\u4fe1\u6e90\u7b26\u53f7\u4e0e\u7801\u5b57\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\uff0c\u7801\u5b57\u96c6\u5408\u4e2d\u6240\u6709\u7801\u5b57\u90fd\u4e0d\u76f8\u540c\u3002</p> <p>\u5947\u5f02\u7801\uff1a\u4fe1\u6e90\u7b26\u53f7\u4e0e\u7801\u5b57\u4e0d\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\uff0c\u7801\u5b57\u96c6\u5408\u4e2d\u6709\u76f8\u540c\u7684\u7801\u5b57\u3002</p> <p>\u5176\u4e2d\uff0c\u975e\u5947\u5f02\u7801\u662f\u6b63\u786e\u8bd1\u7801\u7684\u5fc5\u8981\u6761\u4ef6\uff0c\u975e\u5947\u5f02\u7801\u7684\u5206\u7ec4\u7801\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u6b63\u786e\u7684\u8bd1\u51fa\uff0c\u5f53\u7801\u5b57\u6392\u5728\u4e00\u8d77\u65f6\u8fd8\u53ef\u80fd\u51fa\u73b0\u5947\u5f02\u6027\u3002</p> <p>\u4fe1\u9053\u7f16\u7801\u53ef\u4ee5\u63d0\u9ad8\u4fe1\u606f\u4f20\u8f93\u7684\u53ef\u9760\u6027\u3002</p>"},{"location":"ee/information_theory/chap4/#_3","title":"\u7b49\u957f\u7801\u548c\u7b49\u957f\u4fe1\u6e90\u7f16\u7801\u5b9a\u7406","text":"<p>\u5bf9\u65e0\u5931\u771f\u7f16\u7801\u7684\u8981\u6c42\uff1a\u4fe1\u6e90\u7b26\u53f7\u548c\u7801\u5b57\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002\u4e14\u53cd\u53d8\u6362\u4e5f\u662f\u552f\u4e00\u5bf9\u5e94\u7684\u3002</p>"},{"location":"ee/information_theory/chap4/#_4","title":"\u7b49\u957f\u4fe1\u6e90\u7f16\u7801\u5b9a\u7406","text":"<p>\u5b9a\u7406\uff1a\u4e00\u4e2a\u71b5\u4e3a H(S) \u7684\u79bb\u6563\u65e0\u8bb0\u5fc6\u4fe1\u6e90\uff0c\u82e5\u5bf9\u4fe1\u6e90\u957f\u4e3aN\u7684\u7b26\u53f7\u5e8f \u5217\u8fdb\u884c\u7b49\u957f\u7f16\u7801\uff0c\u8bbe\u7801\u5b57\u662f\u4ece r \u4e2a\u5b57\u6bcd\u7684\u7801\u7b26\u53f7\u96c6\u4e2d\u9009\u53d6 l \u4e2a\u7801\u5143\u7ec4 \u6210\uff0c\u5bf9\u4efb\u610f \u03b5&gt;0, \u53ea\u8981\u6ee1\u8db3</p> <p>\u5219\u5f53 N \u8db3\u591f\u5927\u65f6,\u51e0\u4e4e\u53ef\u4ee5\u5b9e\u73b0\u65e0\u5931\u771f\u7f16\u7801\uff0c \u5373\u8bd1\u7801\u9519\u8bef\u7684\u6982\u7387\u4e3a\u4efb\u610f\u5c0f\u3002</p> <p>1\uff09\u8be5\u5b9a\u7406\u662f\u5728\u5e73\u7a33\u65e0\u8bb0\u5fc6\u79bb\u6563\u4fe1\u6e90\u4e0b\u8bba\u8bc1\u7684 \u7f16\u7801\u4fe1\u606f\u7387R\uf0a2\uff0c\u4e5f\u9002\u7528\u4e8e\u5e73\u7a33\u6709\u8bb0\u5fc6\u4fe1\u6e90\uff0c\u4f46\u6781\u9650\u71b5 \u548c\u6781\u9650\u65b9\u5dee \u5b58\u5728\u3002\uf028 \uf029 H S\uf0a5\uf028 \uf0292S \uf073 \uf0a5 2\uff09\u5f53\u4fe1\u6e90\u957f\u5ea6N\u4e3a\u6709\u9650\u65f6\uff0c\u7528\u7b49\u957f\u7801\u6709\u5931\u771f\u3002</p>"},{"location":"ee/information_theory/chap4/#_5","title":"\u53d8\u957f\u7801","text":""},{"location":"ee/information_theory/chap4/#_6","title":"\u53d8\u957f\u4fe1\u6e90\u7f16\u7801\u5b9a\u7406","text":"<p>\u5e73\u5747\u7801\u957f \\(\\bar L\\) \u6700\u5c0f\u7684\u552f\u4e00\u53ef\u8bd1\u7801\uff08\u5373\u65f6\u7801\uff09\u3002</p> <p>\u9999\u519c\u7b2c\u4e00\u7f16\u7801\u5b9a\u7406\uff08\u53d8\u957f\u65e0\u5931\u771f\u4fe1\u6e90\u7f16\u7801\u5b9a\u7406\uff09</p> \\[     \\dfrac{H(S)}{\\log r} \\le \\dfrac{\\bar L_N}{N} &lt; \\dfrac{1}{N} + \\dfrac{H(S)}{\\log r} \\]"},{"location":"ee/information_theory/chap4/#_7","title":"\u53d8\u957f\u7801\u7f16\u7801\u65b9\u6cd5","text":"<p>\u7d27\u81f4\u7801\uff1a\u5e73\u5747\u7801\u957f \\(L\\) \u6700\u5c0f\u7684\u552f\u4e00\u53ef\u8bd1\u7801\uff08\u5373\u65f6\u7801\uff09\u3002</p> <p>\\(r\\) \u5143\u970d\u592b\u66fc\u7f16\u7801\u65b9\u6cd5 \\(q = (r - 1)\\theta + r\\)\u3002</p> <p>\u5e73\u5747\u7801\u957f \\(\\bar L = \\sum_{i}p(s_i)l_i\\)</p> <p>\u7f16\u7801\u6548\u7387 \\(\\eta = \\dfrac{H(S)}{\\bar L \\log r}\\)</p> <p>\u4fe1\u9053\u4f20\u9012\u901f\u7387 \\(R = \\dfrac{H(S)}{n}\\)</p>"},{"location":"linux/Linux-Git/","title":"Linux\u5b66\u4e60\u7b14\u8bb0\uff1agit\u4e13\u9898","text":"<p>git \u5b66\u4e60\u7b14\u8bb0\u3002</p>","tags":["Linux"]},{"location":"linux/Linux-Git/#0","title":"0. \u524d\u8a00","text":"<p>git \u662f\u4e00\u6b3e\u975e\u5e38\u5f3a\u5927\u7684\u7248\u672c\u7ba1\u7406\u8f6f\u4ef6\uff0c\u5b83\u53ef\u4ee5\u4f7f\u4f60\u7684\u6587\u5b57\u7a3f / \u4ee3\u7801 / \u56fe\u7247\u7b49\u5f88\u597d\u5730\u5b58\u50a8\u7ba1\u7406\u8d77\u6765\uff0c\u8ba9\u5176\u4e0d\u5728\u4e22\u5931\uff0c\u751a\u81f3\u80fd\u770b\u5230\u4f60\u4fee\u6539\u8fc7\u7684\u4e0d\u540c\u75d5\u8ff9\u3002\u800c github \u662f\u4e00\u4e2a\u8457\u540d\u5f00\u6e90\u5e73\u53f0\uff0c\u4f60\u53ef\u4ee5\u5c06\u4ee3\u7801\u653e\u5728\u8be5\u7f51\u7ad9\u4e0a\uff0c\u5b83\u4e0a\u9762\u7684\u4e00\u4e2a\u4e2a\u4ed3\u5e93\u65e2\u53ef\u4ee5\u8ba9\u4f60\u5b58\u653e\u4f60\u7684\u4ee3\u7801\uff0c\u8ba9\u522b\u4eba\u770b\u89c1\uff0c\u4e5f\u53ef\u4ee5\u8ba9\u4f60\u5b66\u4e60\u5230\u522b\u4eba\u7684\u4ee3\u7801\uff0c\u8d77\u5230 \u201d\u6211\u4e3a\u4eba\u4eba\uff0c\u4eba\u4eba\u4e3a\u6211\u201c \u7684\u5f00\u6e90\u4f5c\u7528\u3002</p> <p>\u672c\u6587\u53c2\u8003\u4e8e \u518d\u4e5f\u4e0d\u4e22\u6587\u4ef6\u7684\u65b9\u6cd5\uff5e Git\u4ece\u5165\u95e8\u5230\u7cbe\u901a\u3002</p>","tags":["Linux"]},{"location":"linux/Linux-Git/#1","title":"1. \u672c\u5730\u57fa\u7840\u64cd\u4f5c","text":"<p>\u628a\u5f53\u524d\u6587\u4ef6\u5939\u53d8\u4e3a\u4e00\u4e2a git \u4ed3\u5e93 \u521b\u5efa git \u4ed3\u5e93\uff1a<code>git init</code>\u3002</p> <p>\u67e5\u770b\u5f53\u524d\u4ed3\u5e93\u6587\u4ef6\u53d8\u5316\u60c5\u51b5\uff1a<code>git status</code>\u3002</p> <p>\u5982\u679c\u6587\u4ef6\u662f\u7ea2\u8272\u7684\uff0c\u8bf4\u660e\u65b0\u7684\u4fee\u6539\u8fd8\u672a\u88ab\u6dfb\u52a0\uff0c\u53ea\u6709\u88ab\u6dfb\u52a0\u7684\u4fee\u6539\u624d\u80fd\u88ab\u63d0\u4ea4\uff0c\u88ab\u4fdd\u5b58\u597d\u3002</p> <p>\u6dfb\u52a0\u4fee\u6539\uff1a<code>git add xx</code>\uff08xx \u4e3a\u60f3\u6dfb\u52a0\u7684\u6587\u4ef6\u540d\u79f0\uff09\u3002</p> <p>\u53ef\u4f7f\u7528 <code>git add .</code> \u6765\u6dfb\u52a0\u5f53\u524d\u4ed3\u5e93\u6240\u6709\u4fee\u6539\u3002</p> <p>\u672c\u6b21\u8fd8\u6ca1\u6709\u63d0\u4ea4\u7684\u66f4\u6539\uff1a<code>git diff</code>\uff08\u6bd4\u8f83\u5de5\u4f5c\u533a\u4e0e\u6682\u5b58\u533a\u7684\u533a\u522b\uff09\u3002</p> <p>\u56de\u6eda\uff0c\u64a4\u9500\u63d0\u4ea4\u64cd\u4f5c\uff1a<code>git reset</code>\u3002</p> <p>\u5411 git \u63d0\u4ea4\u81ea\u5df1\u8eab\u4efd\uff08name\uff09\uff1a<code>git config --global user.name \"xxx\"</code>\u3002</p> <p>\u5411 git \u63d0\u4ea4\u81ea\u5df1\u8eab\u4efd\uff08email\uff09\uff1a<code>git config --global user.email \"xxx@xx.com\"</code>\u3002</p> <p>\u5411 git \u63d0\u4ea4\u5185\u5bb9\uff1a<code>git commit -m \u201cxx\u201d</code> \uff08xx\u4e3a\u5bf9\u63d0\u4ea4\u7684\u5185\u5bb9\u8fdb\u884c\u63cf\u8ff0\uff09\u3002</p> <p>\u5982\u679c\u76f4\u63a5 <code>git commit</code> \u4f1a\u8fdb\u5165\u4e00\u4e2a\u7f16\u8f91\u5668\u754c\u9762\uff0c\u8981\u6c42\u4f60\u5bf9\u672c\u6b21\u7684\u4fee\u6539\u8fdb\u884c\u63cf\u8ff0\u3002</p> <p>\u4fee\u6539\u9ed8\u8ba4\u7f16\u8f91\u5668\uff1a<code>git config --global core.editor vim / vscode / emacs</code>\u3002</p> <p><code>git commit -a</code> \u53ef\u4ee5\u76f4\u63a5</p> <p>\u8ba9 git \u4e0d\u63d0\u4ea4\u67d0\u4e9b\u6587\u4ef6/\u5ffd\u7565\u67d0\u4e9b\u6587\u4ef6\uff1a\u521b\u5efa\u6587\u4ef6 <code>.gitignore</code> \u5e76\u5728\u6587\u4ef6\u4e2d\u6dfb\u52a0\u6587\u4ef6\u540d/\u6587\u4ef6\u5939\u540d \u5373\u53ef\u3002 </p> <p>\u82e5\u60f3\u8ba9 <code>.gitignore</code> \u5ffd\u7565\u67d0\u4e9b\u6587\u4ef6\uff0c\u4f46\u8fd9\u4e9b\u6587\u4ef6\u5728\u4e4b\u524d\u5df2\u7ecf\u88ab\u8ffd\u8e2a\u8fc7\u4e86\uff0c\u53ef\u4ee5\u7528\uff1a<code>git rm --cached xx \uff08xx\u4e3a\u6587\u4ef6\u540d\uff09</code> \u6765\u4f7f git \u4e0d\u518d\u8ffd\u8e2a\u8fd9\u4e9b\u6587\u4ef6\u3002</p>","tags":["Linux"]},{"location":"linux/Linux-Git/#2-git","title":"2. git \u5206\u652f","text":"<p>git \u6dfb\u52a0\u5206\u652f\uff1a<code>git branch xx</code> \uff08xx\u4e3a\u5206\u652f\u540d\uff09\u3002</p> <p>git \u5207\u6362\u5206\u652f\uff1a<code>git checkout xx</code> \uff08xx\u4e3a\u5206\u652f\u540d\uff09\u3002</p> <p>\u5408\u5e76\u5206\u652f\uff1a<code>git merge xx</code>\uff08xx\u4e3a\u5206\u652f\u540d\uff09\u3002</p> <p>\u5217\u51fa\u672c\u5730\u5206\u652f\uff1a<code>git branch</code>\u3002</p> <p>\u5220\u9664\u5206\u652f\uff1a<code>git branch -d xx</code> (xx\u4e3a\u5206\u652f\u540d\uff0c-D\u5f3a\u5236\u5220\u9664)\u3002</p> <p>\u82e5 xx \u5206\u652f\u6709\u5185\u5bb9\u672a\u88ab\u4fdd\u5b58\uff0cgit \u4f1a\u63d0\u9192\u4f60\uff0c\u4e0d\u8ba9\u4f60\u8fdb\u884c\u64cd\u4f5c\u3002</p>","tags":["Linux"]},{"location":"linux/Linux-Git/#3-github","title":"3. \u4e0e\u522b\u4eba\u5171\u4eab\u4ee3\u7801 \u2014\u2014 github \u4e0a\u7ebf","text":"<p>\u9996\u5148\u786e\u4fdd\u4f60\u5728 github \u4e0a\u65b0\u5efa\u4e86\u4e00\u4e2a\u4ed3\u5e93\uff0c\u4f7f\u4f60\u672c\u5730\u7684\u6587\u4ef6\u6709\u4ed3\u5e93\u53ef\u4ee5\u5b58\u653e\u3002</p> <p>\u6dfb\u52a0\u8fdc\u7a0b\u4ed3\u5e93\uff1a<code>git remote add origin git@server-name:path/repo-name.git</code> \u3002</p> <p>\u67e5\u770b\u8fdc\u7a0b\u4ed3\u5e93\u4fe1\u606f\u53ef\u4ee5\u7528\uff1a<code>git remote -v</code>\u3002</p> <p>\u5f53\u8fdc\u7a0b\u4ed3\u5e93\u4e0d\u5c0f\u5fc3\u6dfb\u52a0\u9519\u4e86\uff0c\u4e5f\u53ef\u4ee5\u5220\u9664\u8fd9\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\uff1a<code>git remote rm orgin</code></p> <p>\u9996\u6b21\u5c06\u672c\u5730\u5206\u652f\u63d0\u4ea4\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff1a<code>git push -u origin xx</code>\uff08<code>xx</code> \u6307\u7684\u662f origin \u4ed3\u5e93\u7684\u5206\u652f\u540d\u5b57\uff09\u3002</p> <p>\u4e4b\u540e\u4f1a\u8ba9\u4f60\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u82e5\u4f60\u60f3\u8f93\u5165\u4e00\u6b21\u4e4b\u540e\u5c31\u4e0d\u7528\u518d\u8f93\u5165\uff0c\u5219\u53ea\u7528\u5728 <code>git push</code> \u4e4b\u524d\u52a0\u4e0a\u4e00\u53e5 <code>git config credential.helper store</code>\u3002</p> <p>\u5728\u6b21\u4e4b\u540e\u518d\u63d0\u4ea4\u8fd9\u4e2a\u5206\u652f\u53ea\u7528 <code>git push</code> \u5373\u53ef\u3002</p> <p>\u6b64\u540e\uff0c\u6bcf\u6b21\u672c\u5730\u63d0\u4ea4\u540e\uff0c\u53ea\u8981\u6709\u5fc5\u8981\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 <code>git push origin master</code> \u63a8\u9001\u6700\u65b0\u4fee\u6539\u3002</p> <p>\u5f53 <code>git push</code> \u5931\u8d25\u7684\u65f6\u5019\uff0c\u5e38\u89c1\u60c5\u51b5\u662f\u8fdc\u7a0b\u4ed3\u5e93\u548c\u672c\u5730\u4e0d\u4e00\u81f4\u5bfc\u81f4\u51b2\u7a81\uff0c\u53ef\u4ee5\u5148 <code>git pull origin main --allow-unrelated-histories</code>\uff0c\u5f3a\u884c\u62c9\u53bb\u8fdc\u7a0b\u4ed3\u5e93\u4fe1\u606f\u7136\u540e\u5408\u5e76\uff0c\u4e4b\u540e\u518d <code>git push</code> \u5c31\u4e0d\u51b2\u7a81\u4e86\u3002</p> <p>\u514b\u9686\u4ed3\u5e93\uff1a<code>git clone xxx</code>\uff08xxx\u4e3a\u8fdc\u7a0b\u5730\u5740\uff09\u3002</p> <p>\u82e5\u548c\u522b\u4eba\u5408\u4f5c\u4e4b\u540e\uff0c\u518d\u6b21\u60f3\u628a\u4ee3\u7801\u62c9\u53bb\u4e0b\u6765\u53ea\u9700\u8981\uff1a<code>git pull</code> \u5373\u53ef\u3002 </p>","tags":["Linux"]},{"location":"linux/Linux/","title":"Linux \u5b66\u4e60\u7b14\u8bb0","text":"<p>Linux \u57fa\u7840\u914d\u7f6e\uff0c\u5305\u62ec pacman \u5305\u7ba1\u7406\uff0cranger \u6587\u4ef6\u7ba1\u7406\u3002</p>","tags":["Linux"]},{"location":"linux/Linux/#_1","title":"\u66f4\u6539\u5b57\u4f53\u5927\u5c0f","text":"<pre><code>nvim ~/.Xresources\n</code></pre> <p>\u8fdb\u53bb\u4e4b\u540e\u8f93\u5165</p> <pre><code>Xft.dpi: 120\n</code></pre> <p>\u5373\u53ef\u5c06\u5b57\u4f53\u8c03\u6574\u5230\u5408\u9002\u7684\u5927\u5c0f\u4e86\u3002</p>","tags":["Linux"]},{"location":"linux/Linux/#_2","title":"\u8054\u7f51","text":"<p>\u521a\u5f00\u59cb\u7684\u65f6\u5019\u9700\u8981\u8f93\u5165\u4e00\u4e0b\u547d\u4ee4:</p> <pre><code>wpa_passphrase Wifi_name Wifi_password &gt; internet.conf\n</code></pre> <p>\u4e4b\u540e\u6bcf\u6b21\u542f\u52a8\u90fd\u8981\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <pre><code>ip link set wlo1 up\nsudo wpa_supplicant -c internet.conf -i wlo1 &amp;\nsudo dhcpcd\n</code></pre>","tags":["Linux"]},{"location":"linux/Linux/#vpn","title":"\u914d\u7f6e VPN","text":"<p>xfce \u684c\u9762\u73af\u5883\u4e0b\u7684 manjaro \u6ca1\u6709\u56fe\u5f62\u5316\u754c\u9762\u53ef\u4ee5\u8bbe\u7f6e\u4ee3\u7406\uff0c\u53ea\u80fd\u7528\u7ec8\u7aef\u73af\u5883\u53bb\u7f16\u8f91\u3002</p> <p>\u66f4\u6539 proxy \u914d\u7f6e\uff0c\u9996\u5148\u6253\u5f00\u7ec8\u7aef\u5e76\u8f93\u5165:</p> <pre><code>sudo vim /etc/environment\n</code></pre> <p>\u7136\u540e\u627e\u5230\u4ee5 \u201chttp_proxy\u201d \u5f00\u5934\u7684\u8bbe\u7f6e\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u81ea\u5df1\u65b0\u5efa\u3002</p> <p>\u6dfb\u52a0\u5982\u4e0b\uff1a</p> <pre><code>http_proxy=\"http://your_proxy_server:proxy_port\"\nhttps_proxy=\"http://your_proxy_server:proxy_port\"\nsocks_proxy=\"http://your_proxy_server:proxy_port\"\n</code></pre> <p>\u53c2\u8003\uff1a xface\u5982\u4f55\u8bbe\u7f6e\u7cfb\u7edf\u4ee3\u7406?</p>","tags":["Linux"]},{"location":"linux/Linux/#pacman","title":"pacman \u6559\u7a0b","text":"<p>pacman \u4e4b\u4e8e Arch\uff0c\u5c31\u597d\u6bd4 App store \u4e4b\u4e8e IOS\u3002</p> <ul> <li> <p><code>pacman -S xx</code></p> <p>\u5b89\u88c5 xx \u8f6f\u4ef6\u3002</p> </li> <li> <p><code>pacman -Sy</code></p> <p>\u67e5\u8be2\u8f6f\u4ef6\u5e93\u662f\u5426\u662f\u6700\u65b0\u5e76\u66f4\u65b0\u3002</p> </li> <li> <p><code>pacman -Syy</code></p> <p>\u5f3a\u884c\u5237\u65b0\u5e76\u66f4\u65b0\u81f3\u6700\u65b0\u8f6f\u4ef6\u5e93\u3002</p> </li> <li> <p><code>pacman -Su</code></p> <p>\u66f4\u65b0\u8f6f\u4ef6\u3002</p> </li> <li> <p><code>pacman -Syu</code></p> <p>\u66f4\u65b0\u8f6f\u4ef6\u5e93\u5e76\u66f4\u65b0\u8f6f\u4ef6\u3002</p> </li> <li> <p><code>pacman -Syyu</code></p> <p>\u5f3a\u884c\u5237\u65b0\uff0c\u66f4\u65b0\u81f3\u6700\u65b0\u8f6f\u4ef6\u5e93\u5e76\u66f4\u65b0\u8f6f\u4ef6\u3002</p> </li> <li> <p><code>pacman -Ss xx</code></p> <p>\u67e5\u8be2\u6240\u6709\u540d\u79f0\u5e26 xx \u7684\u8f6f\u4ef6\u3002</p> </li> <li> <p><code>pacman -Sc</code></p> <p>\u5220\u9664\u4e00\u4e9b\u5b89\u88c5\u5305\u7b49\u7f13\u5b58\u3002</p> </li> <li> <p><code>pacman -R xx</code></p> <p>\u5220\u9664\u8f6f\u4ef6\u3002</p> </li> <li> <p><code>pacman -Rs xx</code></p> <p>\u5220\u9664\u8f6f\u4ef6\u53ca\u5176\u76f8\u5173\u4f9d\u8d56\u3002</p> </li> <li> <p><code>pacman -Rns xx</code>\uff08\u63a8\u8350\uff09</p> <p>\u5220\u9664\u8f6f\u4ef6\uff0c\u76f8\u5173\u4f9d\u8d56\u4ee5\u53ca\u5168\u5c40\u914d\u7f6e\u6587\u4ef6\uff08\u4f46\u4e0d\u4f1a\u5220\u9664\u4e2a\u4eba\u914d\u7f6e\u6587\u4ef6\uff0c\u5982.vimrc\uff09\u3002</p> </li> <li> <p><code>pacman -Q</code></p> <p>\u67e5\u8be2\u7535\u8111\u4e0a\u6240\u6709\u8f6f\u4ef6\u3002</p> </li> <li> <p><code>pacman -Q | wc -l</code></p> <p>\u5feb\u901f\u77e5\u9053\u6709\u591a\u5c11\u8f6f\u4ef6\u3002</p> </li> <li> <p><code>pacman -Qe</code></p> <p>\u67e5\u8be2\u81ea\u5df1\u88c5\u7684\u6240\u6709\u8f6f\u4ef6\u3002</p> </li> <li> <p><code>pacman -Qeq</code></p> <p>\u67e5\u8be2\u81ea\u5df1\u88c5\u7684\u6240\u6709\u8f6f\u4ef6\u4e14\u4e0d\u663e\u793a\u7248\u672c\u53f7\u3002</p> </li> <li> <p><code>pacman -Qs xx</code></p> <p>\u67e5\u8be2\u6240\u6709\u540d\u5b57\u5e26 xx \u7684\u8f6f\u4ef6\u3002</p> </li> <li> <p><code>pacman -Qdt</code></p> <p>\u67e5\u8be2\u6240\u6709\u4e0d\u518d\u88ab\u4f9d\u8d56\u7684\u8f6f\u4ef6\u3002</p> </li> <li> <p><code>pacman -Qdtq</code></p> <p>\u67e5\u8be2\u6240\u6709\u4e0d\u518d\u88ab\u4f9d\u8d56\u7684\u8f6f\u4ef6\u4e14\u4e0d\u663e\u793a\u7248\u672c\u53f7\u3002</p> </li> <li> <p><code>pacman -R $(pacman -Qdtq)</code></p> <p>\u5220\u9664\u6240\u6709\u4e0d\u518d\u88ab\u4f9d\u8d56\u7684\u8f6f\u4ef6\u3002</p> </li> <li> <p><code>nvim /etc/pacman.conf</code> </p> <p>\u7f16\u8f91 pacman \u7684\u914d\u7f6e\u6587\u4ef6\u3002</p> </li> </ul>","tags":["Linux"]},{"location":"linux/Linux/#ranger","title":"Ranger \u6559\u7a0b","text":"<ul> <li> <p><code>k</code> <code>j</code> \u63a7\u5236\u540c\u76ee\u5f55\u4e0b\u4e0a\u4e0b\u6587\u4ef6\u79fb\u52a8</p> </li> <li> <p><code>[</code> <code>]</code>  \u63a7\u5236\u4e0a\u7ea7\u76ee\u5f55\u7684\u4e0a\u4e0b\u6587\u4ef6\u79fb\u52a8</p> </li> <li><code>&lt;Shift&gt; + H</code> \u5728\u5386\u53f2\u8bb0\u5f55\u4e2d\u9000\u56de <code>&lt;Shift&gt; + L</code> \u5728\u5386\u53f2\u8bb0\u5f55\u4e2d\u524d\u8fdb</li> <li><code>zh</code> \u6216 <code>&lt;Ctrl&gt; + h</code> \u663e\u793a\u6216\u9690\u85cf\u7cfb\u7edf\u6587\u4ef6</li> </ul>","tags":["Linux"]},{"location":"linux/Linux/#_3","title":"\u5176\u4ed6","text":"<ul> <li>\u67e5\u770b\u684c\u9762\u73af\u5883\uff08DE\uff09</li> </ul> <p>\u6253\u5f00\u7ec8\u7aef\u5e76\u590d\u5236\u7c98\u8d34\u6b64\u547d\u4ee4\uff1a</p> <pre><code>echo $XDG_CURRENT_DESKTOP\n</code></pre> <ul> <li>\u67e5\u770b\u7cfb\u7edf\u4fe1\u606f</li> </ul> <p>\u5728\u7ec8\u7aef\u4e2d\u8f93\u5165 <code>screenfetch</code> \u5373\u53ef\uff0c\u663e\u793a\u684c\u9762\u73af\u5883\u7248\u672c\u4ee5\u53ca\u5176\u4ed6\u7cfb\u7edf\u4fe1\u606f\u3002</p>","tags":["Linux"]},{"location":"math/","title":"Math &amp; Physics","text":"<p>Abstract</p> <p>\u8fd9\u91cc\u662f\u6709\u5173 Math &amp; Physics \u7684\u7b14\u8bb0\u3002</p> <p>\u6570\u7406\u57fa\u7840\u771f\u7684\u5341\u5206\u8584\u5f31\uff0c\u8ba9\u5927\u4f19\u89c1\u7b11\u4e86 o(T\u30d8To)</p> <p>\u5e0c\u671b\u6709\u673a\u4f1a\u53ef\u4ee5\u591a\u5b66\u4e00\u4e9b QwQ</p>"},{"location":"math/analysis/","title":"Analysis","text":"<p>Note</p> <p>This note is only to construct a structure to comprehend the mathematics.</p>"},{"location":"math/analysis/chap1/","title":"The natural numbers","text":""},{"location":"math/complex_analysis/","title":"\u590d\u53d8\u51fd\u6570","text":"<p>\u5b66\u6821\u5b66\u4e60\u7b14\u8bb0</p> <p>\u57fa\u4e8e\u4e0a\u8bfe\u5185\u5bb9\u5b89\u6392, \u590d\u4e60\uff0c\u8003\u524d\u7a81\u51fb\u81ea\u7528\u3002</p>"},{"location":"math/complex_analysis/chap1/","title":"\u7b2c\u4e00\u7ae0 \u590d\u6570\u4e0e\u590d\u53d8\u51fd\u6570","text":"<p>Note</p> <p>\\(u = \\mathrm{Re}[z]\\) \u79f0\u4e3a\u5b9e\u90e8\uff0c\\(z = \\mathrm{Im}[z]\\) \u79f0\u4e3a\u865a\u90e8\u3002</p>"},{"location":"math/complex_analysis/chap1/#0","title":"0 \u603b\u7ed3","text":""},{"location":"math/complex_analysis/chap1/#1","title":"1 \u590d\u6570\u53ca\u5176\u51e0\u4f55\u8868\u793a","text":"<ul> <li>\u590d\u6570\u53ef\u4ee5\u7528\u70b9 / \u5411\u91cf / \u77e9\u9635\u8868\u793a\u3002</li> <li>\\(Argz\\) \u662f\u590d\u6570\u7684\u8f90\u89d2\uff0c\\(argz\\) \u662f\u8f90\u89d2\u5728 \\((-\\pi, \\pi]\\) \u4e2d\u7684\u503c\uff0c\u53c8\u79f0\u4e3a\u8f90\u89d2\u7684\u4e3b\u503c\uff08\\(\\left | z\\right | = 0\\) \u65f6\u8f90\u89d2\u65e0\u610f\u4e49\uff09\u3002\\(Argz = argz + 2k\\pi\\)\u3002</li> <li>\u590d\u6570 \\(z = x + iy = r(\\cos\\theta + i\\sin\\theta) = re^{i\\theta}\\)\u3002</li> <li>\u590d\u6570 \\(n\\) \u6b21\u5e42 \\(z^n = r^ne^{in\\theta} = r^n(\\cos n\\theta + i\\sin n\\theta)\\)</li> <li> <p>\u590d\u6570 \\(n\\) \u6b21\u65b9\u6839 \\(w = \\sqrt[n]{z} = \\sqrt[n]r(\\cos \\dfrac{\\theta + 2k\\pi}{n} + i\\sin \\dfrac{\\theta + 2k\\pi}{n})\\)\uff0c\\(k\\) \u4ece \\(0\\) \u53d6\u5230 \\(n - 1\\) \u65f6\uff0c\u5bf9\u5e94\u4f1a\u6709 \\(n\\) \u4e2a\u4e0d\u540c\u7684\u65b9\u6839\u3002</p> </li> <li> <p>\u8868\u793a\u590d\u6570\u7684\u5e73\u9762\u79f0\u4e3a\u590d\u5e73\u9762\uff0c\u8868\u793a\u590d\u6570\u7684\u7403\u9762\u79f0\u4e3a\u590d\u7403\u9762\u3002</p> </li> <li>\u67d0\u590d\u6570\u5bf9\u5e94\u7684\u7403\u9762\u4e0a\u7684\u70b9\uff0c\u590d\u5e73\u9762\u4e0a\u7684\u70b9\u548c\u590d\u7403\u9762\u7684 \\(N\\) \u6781\u4e09\u70b9\u5171\u7ebf\u3002\uff08\u9664 \\(N\\) \u6781\u5916\uff0c\u7403\u9762\u548c\u5e73\u9762\u4e0a\u7684\u70b9\u4e00\u4e00\u5bf9\u5e94\uff09</li> <li>\u6211\u4eec\u5728\u590d\u5e73\u9762\u4e0a\u5f15\u5165\u4e00\u4e2a \\(\\infty\\) \u70b9\u4e0e\u7403\u9762 \\(N\\) \u6781\u76f8\u5bf9\u5e94\uff0c\u5e76\u5c06\u590d\u5e73\u9762\u52a0\u4e0a\u65e0\u7a77\u8fdc\u70b9\u79f0\u4e3a\u6269\u5145\u590d\u5e73\u9762\uff0c\u4e0e\u6269\u5145\u590d\u5e73\u9762\u4e00\u4e00\u5bf9\u5e94\u7684\u5e73\u9762\u79f0\u4e3a\u590d\u7403\u9762\uff0c\u6ca1\u6709 \\(\\infty\\) \u7684\u590d\u5e73\u9762\u79f0\u4e3a \uff08\u6709\u9650\uff09\u590d\u5e73\u9762\u3002</li> <li>\u5bf9\u4e8e\u590d\u6570 \\(\\infty\\)\uff0c\u5176\u5b9e\u90e8\uff0c\u865a\u90e8\uff0c\u5e45\u89d2\u5747\u6ca1\u6709\u610f\u4e49\uff0c\u5176\u6a21\u957f\u4e3a \\(\\infty\\)\uff0c\u5e76\u4e14\u56db\u5219\u8fd0\u7b97\u4e0e\u5b9e\u6570 \\(\\infty\\) \u76f8\u540c\u3002</li> </ul>"},{"location":"math/complex_analysis/chap1/#2","title":"2 \u590d\u53d8\u51fd\u6570","text":"<ul> <li> <p>\u590d\u53d8\u51fd\u6570\u5c31\u662f\u53d8\u91cf\u4e3a\u590d\u53d8\u91cf\u7684\u51fd\u6570\uff08\u53ef\u80fd\u4e00\u5bf9\u4e00\uff0c\u53ef\u80fd\u4e00\u5bf9\u591a\uff09\u3002</p> </li> <li> <p>\u533a\u57df\u7684\u6982\u5ff5\u540c\u4e8c\u5143\u51fd\u6570\u4e2d\u7684\u6982\u5ff5\u3002</p> </li> </ul> <p>\u5f00\u96c6\u5c31\u662f\u4e00\u5757\u70b9\u96c6\u4e0d\u7b97\u4e0a\u8fb9\u754c\u3002</p> <p>\u8fde\u901a\u7684\u5f00\u96c6\u79f0\u4e3a\u533a\u57df\u3002</p> <p>\u7b97\u4e0a\u8fb9\u754c\u7684\u5f00\u96c6\u662f\u95ed\u533a\u57df\u3002</p> <p>\u81ea\u8eab\u65e0\u4ea4\u53c9\u70b9\u7684\u66f2\u7ebf\u79f0\u4e3a\u7b80\u5355\u66f2\u7ebf\u3002</p> <p>\u5355\u8fde\u901a\u57df\u5185\u90e8\u5b9e\u5fc3\uff0c\u591a\u8fde\u901a\u57df\u5185\u90e8\u4e0d\u662f\u5b9e\u5fc3\u3002</p> <ul> <li> <p>\u5bf9\u4e8e\u8fde\u7eed\u66f2\u7ebf \\(C\\) \u6709 \\(x = x(t), y = y(t)\\)\uff0c\u5219\u79f0\\(z(t) = x(t) + iy(t)\\) \u4e3a\u5e73\u9762\u66f2\u7ebf\u7684\u590d\u6570\u8868\u793a\u5f0f\u3002\u82e5 \\(x'(t), y'(t)\\) \u5747\u8fde\u7eed\u4e14\u4e0d\u540c\u65f6\u4e3a \\(0\\)\uff0c\u5219\u79f0 \\(z(t)\\) \u4e3a\u5149\u6ed1\u66f2\u7ebf\u3002\u7531\u51e0\u6bb5\u5149\u6ed1\u66f2\u7ebf\u8054\u63a5\u800c\u6210\u7684\u66f2\u7ebf\u79f0\u4e3a\u6309\u6bb5\u5149\u6ed1\u66f2\u7ebf\u3002</p> </li> <li> <p>\u81ea\u8eab\u65e0\u91cd\u70b9\u7684\u66f2\u7ebf\u79f0\u4e3a\u7b80\u5355\u66f2\u7ebf\u3002\u8d77\u70b9\u548c\u91cd\u70b9\u91cd\u5408\u7684\u7b80\u5355\u66f2\u7ebf\u79f0\u4e3a\u7b80\u5355\u95ed\u66f2\u7ebf\u3002</p> </li> <li> <p>\u82e5\u533a\u57df \\(D\\) \u5185\u4efb\u610f\u7b80\u5355\u7b80\u5355\u95ed\u66f2\u7ebf\u7684\u5185\u90e8\u90fd\u5c5e\u4e8e \\(D\\)\uff0c\u5219\u79f0 \\(D\\) \u4e3a\u5355\u8fde\u901a\u57df\uff0c\u5426\u5219\u79f0\u4e3a\u591a\u8fde\u901a\u57df\u3002</p> </li> <li> <p>\u590d\u53d8\u51fd\u6570\u53ef\u5316\u4e3a\u4e24\u4e2a\u5b9e\u53d8\u51fd\u6570\u76f8\u52a0\uff0c\u6c42\u590d\u53d8\u51fd\u6570\u7684\u6781\u9650 / \u8fde\u7eed / \u6709\u754c\u95ee\u9898\u4e5f\u53ef\u4ee5\u5316\u4e3a\u4e24\u4e2a\u5b9e\u53d8\u51fd\u6570\u7684\u6781\u9650 / \u8fde\u7eed / \u6709\u754c\u95ee\u9898\u3002</p> </li> </ul>"},{"location":"math/complex_analysis/chap1/#3","title":"3 \u4f8b\u9898","text":"<p>\u6c42\u4e0b\u5217\u6781\u9650</p> <p>\\(\\lim_{z \\to 0} \\dfrac{\\mathrm{Re}(z)}{z}\\)</p> <p>\u4ee4 \\(y = kx\\) \u540e\u53d1\u73b0\u6781\u9650\u4e0d\u5b58\u5728\u3002</p> <p>\\(\\lim_{x + iy \\to 1 + i}\\left[\\dfrac{y\\ln(2 - x)}{x - 1} + ixy \\right]\\)</p> <p>\\(\\dfrac{y\\ln(2 - x)}{x - 1}\\) \u6bd4\u8f83\u96be\u5904\u7406\uff0c\u8981\u628a \\(x\\) \u548c \\(y\\) \u5206\u5f00\u770b\u5f85\uff0c\u5bf9 \\(x\\) \u90e8\u5206\u7528\u4e00\u4e2a\u6d1b\u5fc5\u8fbe\uff0c\\(y\\) \u76f4\u63a5\u770b\u4f5c \\(1\\)\u3002</p>"},{"location":"math/complex_analysis/chap2/","title":"\u7b2c\u4e8c\u7ae0 \u89e3\u6790\u51fd\u6570","text":""},{"location":"math/complex_analysis/chap2/#0","title":"0 \u603b\u7ed3","text":"<ul> <li> <p> \u53ef\u5bfc\uff0c\u53ef\u5fae\u7684\u5224\u522b\u65b9\u6cd5\u603b\u7ed3\u3002</p> </li> <li> <p>\u6c42\u5bfc</p> </li> </ul> <p>\u5f62\u5982 \\(w = f(z)\\) \u7684\u5bfc\u6570\uff0c\u4e0e\u4e00\u5143\u51fd\u6570\u6c42\u5bfc\u65b9\u6cd5\u4e00\u6837\u3002</p> <p>\u5f62\u5982 \\(f(z) = u(x, y) + iv(x, y)\\) \u7684\u5bfc\u6570\uff0c\u6c42\u5bfc\u516c\u5f0f\u4e3a \\(f'(z) = \\dfrac{\\partial u}{\\partial x} + i\\dfrac{\\partial v}{\\partial x} = \\dfrac{\\partial v}{\\partial y} - i\\dfrac{\\partial u}{\\partial y}\\)\u3002</p> <ul> <li>\u76f8\u5173\u6982\u5ff5</li> </ul> <p>\u5728\u67d0\u70b9\u89e3\u6790\uff1a\u6307\u7684\u662f\u5728\u8be5\u70b9\u53ca\u90bb\u57df\u53ef\u5bfc\u3002</p> <p>\u5947\u70b9\uff1a\u51fd\u6570\u4e0d\u89e3\u6790\u7684\u70b9\u3002</p> <p>\u89e3\u6790\u51fd\u6570\uff1a\u51fd\u6570\u5728\u67d0\u533a\u57df\u5185\u5904\u5904\u53ef\u5bfc\u3002</p> <p>\u51fd\u6570\u53ef\u5bfc\u4e0e\u89e3\u6790\u7684\u5224\u5b9a\uff1a\u5148\u6c42\u51fa \\(f(z) = u(x, y) + iv(x, y)\\) \u7684\u504f\u5bfc\u6570\uff0c\u7136\u540e\u5224\u5b9a\u504f\u5bfc\u6570\u662f\u5426\u6ee1\u8db3 \\(C-R\\) \u65b9\u7a0b\uff1a\\(u_x = v_y, u_y = -v_x\\)\u3002</p> <p>\u5982\u679c\u5728\u67d0\u70b9\u63a8\u51fa\u6210\u7acb\uff0c\u5219\u51fd\u6570\u5728\u8be5\u70b9\u53ef\u5bfc\u3002\u5982\u679c\u67d0\u533a\u57df\u5185\u6210\u7acb\uff0c\u5219\u5728\u8be5\u533a\u57df\u5185\u89e3\u6790\u3002</p> <ul> <li>\u521d\u7b49\u51fd\u6570</li> </ul> <p>\u6307\u6570\u51fd\u6570</p> <p>\\(w = e^z = e^xe^{iy} = e^x(\\cos y + i\\sin y)\\)</p> <p>\u57fa\u672c\u4e0a\u548c\u5b9e\u6570\u60c5\u51b5\u4e00\u6837\uff0c\u53ea\u662f\u591a\u4e86\u5468\u671f\u6027\u3002</p> <p>\u5b9e\u6570\u90e8\u5206\u8868\u793a\u6a21\u957f\uff0c\u865a\u6570\u90e8\u5206\u8868\u793a\u8f90\u89d2\u3002</p> <p>\u5bf9\u6570\u51fd\u6570</p> <p>\\(Ln z = \\ln |z| + i\\arg z + 2k \\pi i\\)</p> <p>\u5bf9\u6570\u51fd\u6570\u662f\u591a\u503c\u51fd\u6570\uff0c\u5176\u4e3b\u503c\u662f \\(\\ln z = \\ln|z| + 2i\\arg z\\)\u3002</p> <p>\u5bf9\u6570\u51fd\u6570\u5728\u9664\u53bb\u539f\u70b9\u4e0e\u8d1f\u5b9e\u8f74\u7684\u590d\u5e73\u9762\u4e0a\u8fde\u7eed\u4e14\u89e3\u6790\u3002</p> <p>\u5bf9\u6570\u51fd\u6570\u7684\u79ef\u5546\u516c\u5f0f\u4f9d\u7136\u6210\u7acb\uff0c\u4f46\u662f\u5bf9\u6570\u51fd\u6570\u7684 \\(n\\) \u6b21\u65b9\u516c\u5f0f\u4ee5\u53ca\u5bf9\u6570\u51fd\u6570\u7684\u5f00 \\(n\\) \u65b9\u6839\u516c\u5f0f\u5c31\u4e0d\u6210\u7acb\u4e86\uff08\u56e0\u4e3a\u540e\u9762\u52a0\u4e0a\u7684 $2\\pi i $ \u7684\u7cfb\u6570\u4e0d\u540c\uff09\u3002</p> <p>\u5e42\u51fd\u6570</p> <p>\\(w = z^{\\alpha} = e^{\\alpha Ln z} = e^{\\alpha(\\ln |z| + i\\arg z + 2k\\pi i)} = e^{\\alpha(\\ln |z| + i\\arg z)}e^{2k\\alpha \\pi i}\\)</p> <p>\u5f53 \\(\\alpha\\) \u662f\u6574\u6570\u65f6\uff0c\u5e42\u51fd\u6570\u662f\u5355\u503c\u51fd\u6570\u3002\u800c\u5f53\u4e0d\u662f\u6574\u6570\u65f6\uff0c\u51fd\u6570\u662f\u591a\u503c\u51fd\u6570\u3002</p> <p>\u5f53 \\(\\alpha\\) \u4e0d\u662f\u6574\u6570\u65f6\uff0c\u5e42\u51fd\u6570\u5728\u9664\u53bb\u539f\u70b9\u4e0e\u8d1f\u5b9e\u8f74\u7684\u590d\u5e73\u9762\u4e0a\u8fde\u7eed\u4e14\u89e3\u6790\u3002</p> <p>\u4e09\u89d2\u51fd\u6570   $$   \\sin z = \\dfrac{e^{iz} - e^{-iz}}{2i}, \\   \\cos z = \\dfrac{e^{iz} + e^{-iz}}{2}   $$   \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u590d\u6570\u57df\u4e0a\u4e09\u89d2\u51fd\u6570\u662f\u65e0\u754c\u7684\uff01</p> <p>\u4e0d\u8fc7\u9664\u4e86\u65e0\u754c\u5916\uff0c\u5176\u4ed6\u662f\u4e00\u6837\u7684\u3002</p>"},{"location":"math/complex_analysis/chap2/#1","title":"1 \u89e3\u6790\u51fd\u6570\u7684\u6982\u5ff5","text":"<ul> <li> <p>\u53ef\u5bfc\u5fc5\u8fde\u7eed\uff0c\u8fde\u7eed\u672a\u5fc5\u53ef\u5bfc\uff08\u540c\u4e8c\u5143\u51fd\u6570\uff09</p> </li> <li> <p>\u590d\u53d8\u51fd\u6570\u6c42\u5bfc\u4e0e\u4e00\u5143\u5b9e\u53d8\u51fd\u6570\u76f8\u540c</p> </li> <li> <p>\u82e5 \\(w = f(z)\\) \u5728 \\(z_0\\) \u53ca \\(z_0\\) \u7684\u9886\u57df\u5185\u5904\u5904\u53ef\u5bfc\uff0c\u5219\u79f0 \\(f(z)\\) \u5728 \\(z_0\\) \u89e3\u6790\uff0c\\(z_0\\) \u79f0\u4e3a\u89e3\u6790\u70b9\u3002</p> <p>\u82e5 \\(f(z)\\) \u5728\u533a\u57df \\(D\\) \u5185\u6bcf\u4e00\u70b9\u90fd\u89e3\u6790\uff0c\u5219 \\(f(z)\\) \u662f \\(D\\) \u5185\u7684\u89e3\u6790\u51fd\u6570\u3002</p> <p>\u82e5 \\(f(z)\\) \u5728 \\(z_0\\)\u4e0d\u89e3\u6790\uff0c\u79f0 \\(z_0\\) \u4e3a \\(f(z)\\) \u7684\u5947\u70b9\u3002</p> <p>\u6ce8\u610f\u4ee5\u4e0b\u89e3\u6790\u548c\u6c42\u5bfc\u7684\u533a\u522b\uff0c\u53ef\u5bfc\u8981\u6c42\u67d0\u4e2a\u70b9\uff0c\u89e3\u6790\u8981\u6c42\u7684\u662f\u67d0\u70b9\u53ca\u90bb\u57df\u3002</p> <p>\u5728\u67d0\u70b9\u5904\uff0c\u89e3\u6790\u5fc5\u53ef\u5bfc\uff0c\u53ef\u5bfc\u672a\u5fc5\u89e3\u6790\u3002</p> <p>\u5728\u67d0\u533a\u57df\u5185\uff0c\u89e3\u6790\u4e0e\u53ef\u5bfc\u7b49\u4ef7\u3002</p> <p>\u5728\u67d0\u533a\u57df\u5185\uff0c\u5224\u65ad\u89e3\u6790\u6027\u5f80\u5f80\u8981\u9760\u6c42\u5bfc\u53bb\u5224\u65ad\uff08\u82e5\u662f\u770b\u4f5c\u4e00\u5143\u51fd\u6570\uff0c\u76f4\u63a5\u6c42\u5bfc\u89e3\u51b3\uff0c\u82e5\u662f\u770b\u4f5c\u4e8c\u5143\u51fd\u6570\uff0c\u5728\u8bc1\u660e\u4e0d\u53ef\u89e3\u6790\u65f6\u53ef\u4ee5\u5316\u4f5c\u4e8c\u5143\u51fd\u6570\u6781\u9650\u4e0d\u5b58\u5728\u6765\u6c42\uff09\u3002</p> </li> </ul> <p></p>"},{"location":"math/complex_analysis/chap2/#2","title":"2 \u51fd\u6570\u89e3\u6790\u7684\u91cd\u8981\u6761\u4ef6","text":"<ul> <li> <p>\u51fd\u6570 \\(f(z) = u(x, y) + iv(x, y)\\) \u5728\u70b9 \\(z = x + iy\\) \u5904\u53ef\u5bfc\u7684\u5145\u8981\u6761\u4ef6\u662f\uff1a</p> <ul> <li>\\(u(x, y)\\) \u548c \\(v(x, y)\\) \u5728 \\((x, y)\\) \u53ef\u5fae</li> <li>\u5728\u70b9 \\((x, y)\\) \u6ee1\u8db3\u67ef\u897f-\u9ece\u66fc\u65b9\u7a0b\uff1a\\(\\dfrac{\\partial u}{\\partial x} = \\dfrac{\\partial v}{\\partial y},\\dfrac{\\partial u}{\\partial y} = -\\dfrac{\\partial v}{\\partial x}\\)</li> </ul> <p>\u5173\u4e8e\u53ef\u5bfc\u548c\u53ef\u5fae\uff1a\u5728\u4e00\u5143\u51fd\u6570\u4e2d\uff0c\u5b83\u4eec\u4e92\u4e3a\u5145\u8981\u6761\u4ef6\uff0c\u5728\u591a\u5143\u4e2d\u53ef\u5fae\u662f\u53ef\u5bfc\u7684\u5fc5\u8981\u6761\u4ef6\uff0c\u53ef\u5bfc\u4e0d\u4e00\u5b9a\u53ef\u5fae\u3002</p> </li> <li> <p>\u7531\u4e8e\u5728\u67d0\u4e00\u533a\u57df\u5185\uff0c\u51fd\u6570\u89e3\u6790\u4e0e\u53ef\u5bfc\u7b49\u4ef7\uff0c\u51fd\u6570 \\(f(z) = u(x, y) + iv(x, y)\\) \u5728\u533a\u57df \\(D\\) \u5185\u89e3\u6790\u7684\u5145\u8981\u6761\u4ef6\u662f\uff1a</p> <ul> <li>\\(u(x, y)\\) \u548c \\(v(x, y)\\) \u5728 \\(D\\) \u5185\u53ef\u5fae</li> <li>\u6ee1\u8db3\u67ef\u897f-\u9ece\u66fc\u65b9\u7a0b\uff1a\\(\\dfrac{\\partial u}{\\partial x} = \\dfrac{\\partial v}{\\partial y},\\dfrac{\\partial u}{\\partial y} = -\\dfrac{\\partial v}{\\partial x}\\)</li> </ul> <p>\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u5f53\u6ee1\u8db3\u8be5\u6761\u4ef6\u65f6\uff0c\\(f'(z) = \\dfrac{\\partial u}{\\partial x} + i\\dfrac{\\partial v}{\\partial x} = \\dfrac{1}{i}\\dfrac{\\partial u}{\\partial y} + \\dfrac{\\partial v}{\\partial y}\\)</p> </li> <li> <p>\u8ba8\u8bba\u51fd\u6570\u89e3\u6790\u6027\uff0c\u9700\u8bc1\u660e\u51fd\u6570\u53ef\u5fae\uff0c\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e24\u79cd\u65b9\u6cd5\uff1a</p> <ul> <li>\u7528\u53ef\u5fae\u7684\u5b9a\u4e49\uff1a\\(\\Delta u = A_1\\Delta x + B_1\\Delta y + o(\\rho)\\)\uff08\u8f83\u96be\uff0c\u4e0d\u63a8\u8350\uff09\u3002</li> <li>\u7528\u53ef\u5fae\u7684\u5145\u5206\u6761\u4ef6\uff0c\u5224\u65ad \\(u(x, y)\\)\uff0c\\(v(x, y)\\) \u7684\u504f\u5bfc\u6570\u8fde\u7eed\u6765\u8bc1\u660e\u53ef\u5fae\u3002</li> </ul> </li> </ul> <p></p> <p></p>"},{"location":"math/complex_analysis/chap2/#3","title":"3 \u521d\u7b49\u51fd\u6570","text":"<p>\u590d\u53d8\u91cf\u7684\u521d\u7b49\u51fd\u6570\u548c\u5b9e\u53d8\u91cf\u7684\u57fa\u672c\u76f8\u540c\uff0c\u4f46\u4e2a\u522b\u533a\u522b\u8f83\u5927\u3002</p> <ul> <li> <p>\u6307\u6570\u51fd\u6570</p> <p>\\(w = e^z = e^{x + iy} = e^x(\\cos y + i\\sin y)\\)\uff0c\u4e14\u6ee1\u8db3\u539f\u6709\u7684\u6c42\u5bfc\u516c\u5f0f\u3002</p> <p>\u6ce8\u610f\u533a\u522b\u7684\u662f \\(w = e^z\\) \u662f\u4ee5 \\(2k\\pi i\\) \u4e3a\u5468\u671f\u7684\u51fd\u6570\u3002</p> <p>\u6307\u6570\u51fd\u6570\u5728\u590d\u5e73\u9762\u5185\u5904\u5904\u89e3\u6790\u3002</p> </li> <li> <p>\u5bf9\u6570\u51fd\u6570\uff08\u533a\u522b\u8f83\u5927\uff09</p> <p>\u6307\u6570\u51fd\u6570 \\(e^w = z\\) \u7684\u53cd\u51fd\u6570 \\(w = f(z)\\) \u79f0\u4e3a\u5bf9\u6570\u51fd\u6570\uff0c\u8bb0\u4f5c \\(w = Ln z\\)\u3002</p> <p>\u7531 \\(e^{u + iv} = e^ue^{iv} = e^u(\\cos v + i\\sin v)\\)\uff0c\u6211\u4eec\u6709 \\(u = \\ln|z|,v = \\theta + 2k\\pi = Arg z\\)\u3002\u6545 \\(Lnz = \\ln|z| + iArgz = \\ln|z| + i\\arg z + 2k\\pi i\\)\u3002</p> <p>\u8bb0 \\(\\ln z = \\ln|z| + i\\arg z\\) \u4e3a \\(Lnz\\) \u7684\u4e3b\u503c\u3002\u5bf9\u4e8e\u7ed9\u5b9a\u4e0d\u540c\u7684 \\(k\\) \u6240\u5f62\u6210\u7684\u4e0d\u540c \\(Lnz\\) \u79f0\u4e3a\u5176\u4e2d\u4e00\u4e2a\u5206\u652f\u3002\\(\\ln z\\) \u6ee1\u8db3\u539f\u6709\u7684\u6c42\u5bfc\u516c\u5f0f\u3002</p> <p>\u6ce8\u610f\u590d\u6570 \\(z\\) \u7684\u6a21\u957f\u53ea\u548c\u5b9e\u90e8 \\(u\\) \u6709\u5173\u3002</p> <p>\u6b64\u65f6\u5bf9\u6570\u51fd\u6570\u7684\u79ef\u5546\u516c\u5f0f\u4ecd\u7136\u6210\u7acb \\(Lnz_1z_2 = Lnz_1 + Lnz_2,Ln\\dfrac{z_1}{z_2} = Lnz_1 - Lnz_2\\)\u3002</p> <p>\u4f46\u662f \\(n\\) \u6b21\u5e42\u548c \\(n\\) \u6b21\u65b9\u6839\u7684\u5bf9\u6570\u516c\u5f0f\u4e0d\u518d\u6210\u7acb\u3002</p> <p>\u7531\u4e8e \\(Lnz^n = n\\ln|z| + in\\arg z + 2k_1\\pi i\\) \u800c \\(nLnz = n\\ln|z| + in\\arg z + n2k_2\\pi i\\) \u540e\u9762\u7684 \\(2\\pi i\\) \u7684\u7cfb\u6570\u4e0d\u540c\uff0c\u6545\u4e0d\u76f8\u7b49\u3002</p> <p>\u7531\u4e8e \\(\\ln|z|\\) \u9664\u4e86\u539f\u70b9\u5916\u5904\u5904\u89e3\u6790\uff0c\u800c \\(\\arg z\\) \u5728\u539f\u70b9\u548c\u8d1f\u5b9e\u8f74\u4e0a\u4e0d\u8fde\u7eed\uff0c\u6545\u5bf9\u6570\u51fd\u6570\u7684\u4e3b\u503c \\(\\ln z\\) \u5728\u9664\u53bb\u539f\u70b9\u548c\u8d1f\u5b9e\u8f74\u7684\u5e73\u9762\u4e0a\u8fde\u7eed\uff0c\u540c\u7406 \\(Ln z\\) \u7684\u5404\u4e2a\u5206\u652f\u5728\u9664\u539f\u70b9\u548c\u8d1f\u5b9e\u8f74\u7684\u590d\u5e73\u9762\u4e0a\u89e3\u6790\u3002</p> </li> <li> <p>\u5e42\u51fd\u6570</p> <p>\\(w = z^n\\) \u662f\u590d\u5e73\u9762\u5185\u7684\u5355\u503c\u89e3\u6790\u51fd\u6570\uff0c\\(w = z^{-n}\\) \u9664\u539f\u70b9\u5916\u662f\u5355\u503c\u89e3\u6790\u51fd\u6570\uff08\\(n \\in \\N\\)\uff09\u3002</p> <p>\\(w = z^\\alpha = e^{\\alpha Lnz} = e^{\\alpha(ln|z| + iargz)}e^{2k\\alpha \\pi i}\\)\uff0c\u4e0d\u96be\u53d1\u73b0\u5982\u679c \\(\\alpha\\) \u662f\u6574\u6570\uff0c\u5219 \\(w\\) \u5fc5\u662f\u5355\u503c\u51fd\u6570\uff0c\u4f46 \\(\\alpha\\) \u53d6\u5c0f\u6570\u65f6\uff0c\\(w\\) \u53ef\u80fd\u662f\u591a\u503c\u51fd\u6570\u3002</p> <p>\u7531\u4e8e \\(Lnz\\) \u7684\u5404\u5206\u652f\u5728\u9664\u53bb\u539f\u70b9\u548c\u8d1f\u5b9e\u8f74\u7684\u5e73\u9762\u4e0a\u662f\u89e3\u6790\u7684\uff0c\u6240\u4ee5 \\(w = z^{\\alpha}\\) \u7684\u5404\u5206\u652f\u5728\u9664\u53bb\u539f\u70b9\u548c\u8d1f\u5b9e\u8f74\u7684\u5e73\u9762\u4e0a\u662f\u89e3\u6790\u7684\uff08\u6ce8\u610f\u591a\u503c\u51fd\u6570\u662f\u4e0d\u53ef\u89e3\u6790\u7684\uff09\u3002</p> <p>\u5e42\u51fd\u6570\u7684\u5bfc\u6570\u548c\u4e4b\u524d\u76f8\u540c\u3002</p> </li> </ul> <p></p> <ul> <li> <p>\u4e09\u89d2\u51fd\u6570</p> <p>\u7531\u6b27\u62c9\u516c\u5f0f\uff0c\u6613\u5f97 \\(\\sin z = \\dfrac{e^{iz} - e^{-iz}}{2i}\\)\uff0c\\(\\cos z = \\dfrac{e^{iz} + e^{-iz}}{2}\\)\u3002</p> <p>\u4ee5\u524d\u5b66\u8fc7\u7684\u4e09\u89d2\u51fd\u6570\u516c\u5f0f\u5168\u90fd\u9002\u7528\u3002</p> <p>\u4e09\u89d2\u51fd\u6570\u5728\u590d\u6570\u57df\u662f\u65e0\u754c\u51fd\u6570\u3002</p> <p>\\(\\sin z\\) \u662f\u5947\u51fd\u6570\uff0c\\(\\cos z\\) \u662f\u5076\u51fd\u6570\uff0c\u4e14\u5b83\u4eec\u4f9d\u7136\u662f\u4ee5 \\(2\\pi\\) \u4e3a\u5468\u671f\u7684\u3002</p> <p>\u6c42\u5bfc\u548c\u4e4b\u524d\u76f8\u540c\uff0c\u4e14\u5728\u6574\u4e2a\u590d\u5e73\u9762\u4e0a\u89e3\u6790\u3002</p> </li> </ul>"},{"location":"math/complex_analysis/chap2/#4","title":"4 \u4f8b\u9898","text":""},{"location":"math/complex_analysis/chap3/","title":"\u7b2c\u4e09\u7ae0 \u590d\u53d8\u51fd\u6570\u7684\u79ef\u5206","text":""},{"location":"math/complex_analysis/chap3/#0","title":"0 \u603b\u7ed3","text":"<ul> <li>\u82e5 \\(f(z)\\) \u4e0d\u89e3\u6790\uff0c\\(\\int f(z)\\) \u6309\u8def\u5f84\u6765\u8bbe\u53d8\u91cf\uff0c\u5206\u522b\u79ef\u5206\u518d\u52a0\u8d77\u6765\u3002</li> </ul> <p>\u6b64\u65f6\u4e0d\u80fd\u76f4\u63a5\u79ef\u5206\uff01\u4e00\u5b9a\u8981\u6309\u8def\u5f84\u6765\uff01</p> <p>\u53ea\u6709\u89e3\u6790\u51fd\u6570\u79ef\u5206\u4e0e\u8def\u5f84\u65e0\u5173\uff0c\u53ef\u4ee5\u76f4\u63a5\u6c42\u89e3\u3002</p> <ul> <li> <p>\u79ef\u5206\u4e0e\u8def\u5f84\u65e0\u5173\u7684\u6761\u4ef6\u662f \\(f(z)\\) \u5728\u5355\u8fde\u901a\u57df\u5185\u89e3\u6790\u3002</p> </li> <li> <p>\u67ef\u897f\u79ef\u5206\u5b9a\u7406 \\(f(z)\\) \u5728 \\(C\\) \u5185\u5904\u5904\u8fde\u7eed\uff0c\u5904\u5904\u89e3\u6790\uff0c\u90a3\u4e48 \\(\\oint_C f(z)dz = 0\\)\u3002</p> </li> <li> <p>\u590d\u5408\u95ed\u8def\u5b9a\u7406 \u5916\u9762\u5927\u5708\u79ef\u5206\u7b49\u4e8e\u91cc\u9762\u5c0f\u5708\u79ef\u5206\u548c \\(\\int_C f(z)dz = \\sum_{k = 1}^n \\oint_{C_k}f(z)dz\\)\u3002</p> </li> <li> <p>\u67ef\u897f\u79ef\u5206\u516c\u5f0f \\(\\oint_C \\dfrac{f(z)}{z - z_0}dz = 2 \\pi i f(z_0)\\)\uff0c\\(z_0\\) \u4e3a\u4efb\u4e00\u70b9\uff0c\u8981\u4fdd\u8bc1\u95ed\u66f2\u7ebf\u5185\u53ea\u6709\u4e00\u4e2a\u5947\u70b9\u3002</p> </li> <li> <p>\u9ad8\u9636\u5bfc\u6570\u516c\u5f0f \\(f^{(n)}(z_0) = \\dfrac{n!}{2\\pi i}\\oint_C \\dfrac{f(z)}{(z - z_0)^{n + 1}}dz\\)\uff0c\\(z_0\\) \u4e3a\u4efb\u4e00\u70b9\uff0c\u8981\u4fdd\u8bc1\u95ed\u66f2\u7ebf\u5185\u53ea\u6709\u4e00\u4e2a\u5947\u70b9\u3002\u4e5f\u5373 \\(\\oint_C \\dfrac{f(z)}{(z - z_0)^{n + 1}} = \\dfrac{2\\pi i}{n!} f^{(n)}(z_0)\\)\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u591a\u4e2a\u5947\u70b9\uff0c\u4ee5\u8fd9\u4e9b\u5947\u70b9\u4e3a\u5706\u5fc3\u505a\u5706\u5468\uff0c\u7136\u540e\u7531\u590d\u5408\u95ed\u8def\u5b9a\u7406\uff1a\\(\\int_C f(z)dz = \\sum_{k = 1}^n \\oint_{C_k}f(z)dz\\)\uff0c\u5c31\u53ef\u4ee5\u5316\u4e3a \\(n\\) \u4e2a\u5355\u5947\u70b9\u7684\u79ef\u5206\u3002\u6ce8\u610f\u82e5\u6ca1\u6709\u5947\u70b9\uff0c\u8bf4\u660e\u5355\u8fde\u901a\u57df\u5185\u5904\u5904\u53ef\u89e3\u6790\uff0c\u6b64\u65f6\u7528\u67ef\u897f - \u53e4\u8428\u7279\u5b9a\u7406\u76f4\u63a5\u5f97\u51fa\u79ef\u5206\u4e3a \\(0\\)\u3002</p> </li> <li> <p>\u8c03\u548c\u51fd\u6570\uff1a\u6ee1\u8db3\u4e8c\u9636\u504f\u5bfc\u6570\u8fde\u7eed\u4e14\u6ee1\u8db3\u62c9\u666e\u62c9\u65af\u65b9\u7a0b\u3002</p> </li> <li> <p>\u5171\u8f6d\u8c03\u548c\u51fd\u6570\uff1a\u6307\u4e00\u5bf9\u8c03\u548c\u51fd\u6570 \\(u(x, y),v(x, y)\\) \u6ee1\u8db3 \\(f(z) = u(x, y) + iv(x, y)\\) \u662f\u89e3\u6790\u51fd\u6570\u3002 \u8fd9\u6837\u7684 \\(u(x, y),v(x, y)\\) \u662f\u4e00\u5bf9\u5171\u8f6d\u8c03\u548c\u51fd\u6570\u3002</p> </li> <li> <p>\u6c42\u89e3\u6790\u51fd\u6570\uff08\u5df2\u77e5\u5b9e\u90e8\u6216\u865a\u90e8\uff09\uff1a\u5168\u5fae\u5206\u6cd5\uff0c\u504f\u5fae\u5206\u6cd5\uff0c\u539f\u51fd\u6570\u6cd5\uff08\u9996\u9009\uff09\u3002</p> </li> </ul>"},{"location":"math/complex_analysis/chap3/#1","title":"1 \u590d\u53d8\u51fd\u6570\u79ef\u5206\u7684\u6982\u5ff5","text":"<p>\u590d\u53d8\u51fd\u6570\u79ef\u5206\u53ef\u5206\u89e3\u4e3a\u4e24\u4e2a\u5b9e\u53d8\u51fd\u6570\u7b2c\u4e8c\u578b\u66f2\u7ebf\u79ef\u5206</p> <ul> <li>\u82e5 \\(f(z) = u(x, y) + iv(x, y)\\) \u6cbf \\(C\\) \u53ef\u79ef\uff0c\u5219 \\(\\int_C f(z)dz = \\int_C u(x, y)dx - v(x, y)dy + i\\int_C v(x, y)dx + u(x, y)dy\\)</li> </ul> <p>\u82e5\u51fd\u6570\u4e0d\u89e3\u6790\uff0c\u5f80\u5f80\u6839\u636e\u4e0d\u540c\u7684\u8def\u5f84\u9009\u53d6\u79ef\u5206\u53d8\u6362\u3002\u6b64\u65f6\u4e0d\u80fd\u76f4\u63a5\u79ef\u5206\uff01\u4e00\u5b9a\u8981\u6309\u8def\u5f84\u6765\uff01</p> <ul> <li>\u4e14\u57fa\u672c\u4e0a\u7b2c\u4e8c\u578b\u66f2\u7ebf\u79ef\u5206\u4e2d\u7684\u6280\u5de7\u5747\u53ef\u4ee5\u8fd0\u7528\u5728\u590d\u53d8\u51fd\u6570\u79ef\u5206\u4e2d\u3002</li> </ul>"},{"location":"math/complex_analysis/chap3/#2","title":"2 \u67ef\u897f\u79ef\u5206\u5b9a\u7406","text":"<ul> <li>\u67ef\u897f\u79ef\u5206\u5b9a\u7406\uff08\u67ef\u897f - \u53e4\u8428\u7279\u57fa\u672c\u5b9a\u7406\uff09</li> </ul> <p>\u82e5 \\(f(z)\\) \u5728\u5355\u8fde\u901a\u57df \\(D\\) \u5185\u89e3\u6790\uff0c\u5219\u5bf9\u4efb\u610f\u4e00\u6761\u7b80\u5355\u95ed\u66f2\u7ebf \\(C\\)\uff0c\u6709 \\(\\oint_C f(z)dz = 0\\)\u3002</p> <p>\u51fd\u6570\u5728\u67d0\u4e00\u5904\u89e3\u6790\u7684\u5b9a\u4e49\uff1a\u51fd\u6570\u5728\u8be5\u70b9\u53ca\u8be5\u70b9\u7684\u90bb\u57df\u5185\u5904\u5904\u53ef\u5bfc\u3002</p> <ul> <li>\u79ef\u5206\u4e0e\u8def\u5f84\u65e0\u5173\u6761\u4ef6</li> </ul> <p>\u82e5 \\(f(z)\\) \u5728\u5355\u8fde\u901a\u57df \\(D\\) \u5185\u89e3\u6790\uff0c\u5219\u79ef\u5206\u4e0e\u8def\u5f84\u65e0\u5173\u3002</p> <ul> <li>\u6211\u4eec\u5c06\u5355\u8fde\u901a\u4e0a\u7684\u67ef\u897f\u5b9a\u7406\uff0c\u540c\u6837\u53ef\u4ee5\u5f15\u5165\u5230\u591a\u8fde\u901a\u57df\u4e0a\u3002\u6211\u4eec\u5b9a\u4e49\u590d\u5408\u95ed\u8def\uff1a</li> </ul> <p></p> <p>\u590d\u5408\u95ed\u8def\u662f\u957f\u8fd9\u6837\u7684</p> <p></p> <ul> <li>\u95ed\u8def\u53d8\u5f62\u539f\u7406\uff1a</li> </ul> <p></p> <p>\u8fd9\u4e2a\u5b9a\u7406\u544a\u8bc9\u6211\u4eec\uff0c\u5bf9\u4e8e\u89e3\u6790\u51fd\u6570 \\(f(z)\\) \u6cbf\u95ed\u66f2\u7ebf \\(C\\) \u7684\u79ef\u5206\uff0c\u5f53\u95ed\u66f2\u7ebf \\(C\\) \u5728\u51fd\u6570 \\(f(z)\\) \u7684\u89e3\u6790\u533a\u57df\u5185\u8fde\u7eed\u53d8\u5f62\u65f6\uff0c\u79ef\u5206\u503c\u4e0d\u53d8\u3002</p> <ul> <li>\u4e0e\u5355\u8fde\u901a\u57df\u4e0a \u79ef\u5206\u4e0e\u8def\u5f84\u65e0\u5173 \u7684\u60c5\u51b5\u7c7b\u4f3c\uff0c\u6211\u4eec\u5728\u591a\u8fde\u901a\u57df\u4e0a\u6709\u590d\u5408\u95ed\u8def\u5b9a\u7406\u3001</li> </ul> <p></p> <ul> <li>\u539f\u51fd\u6570</li> </ul> <p>\u5bf9\u4e8e\u89e3\u6790\u51fd\u6570 \\(f(z)\\) \u5728\u5355\u8fde\u901a\u57df\u5185\uff0c\u6cbf\u7b80\u5355\u66f2\u7ebf\u7684\u79ef\u5206\u4e0e\u8def\u5f84\u65e0\u5173\uff0c\u53ea\u4e0e\u8d77\u70b9\u7ec8\u70b9\u6709\u5173\u3002\u5f53\u6211\u4eec\u628a\u8d77\u70b9\u56fa\u5b9a\uff0c\u7ec8\u70b9\u53d8\u52a8\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u4ee5 \\(z\\) \u4e3a\u53d8\u91cf\u7684\u5355\u503c\u51fd\u6570\uff1a\\(F(z) = \\int_{z_0}^{z}f(t)dt\\)\u3002</p> <p>\u82e5 \\(f(z)\\) \u5728\u5355\u8fde\u901a\u57df\u5185\u89e3\u6790\uff0c\u90a3\u4e48 \\(F(z)\\) \u4e5f\u5728\u5355\u8fde\u901a\u57df\u5185\u89e3\u6790\uff0c\u4e14 \\(F'(z) = f(z)\\)\u3002</p> <p>\u5176\u5b9e\u548c\u79ef\u5206\u4e0a\u7684\u539f\u51fd\u6570\u5b9a\u4e49\u662f\u4e00\u6837\u7684\uff0c\u539f\u51fd\u6570\u7684\u5f62\u5f0f\u662f \\(F(z) = \\int_{z_0}^z f(t)dt + C\\)\u3002</p>"},{"location":"math/complex_analysis/chap3/#3","title":"3 \u67ef\u897f\u79ef\u5206\u516c\u5f0f","text":"<ul> <li>\u67ef\u897f\u79ef\u5206\u516c\u5f0f</li> </ul>"},{"location":"math/complex_analysis/chap3/#4","title":"4 \u89e3\u6790\u51fd\u6570\u7684\u9ad8\u9636\u5bfc\u6570","text":"<ul> <li>\u89e3\u6790\u51fd\u6570\u7684\u9ad8\u9636\u5bfc\u6570</li> </ul> <p>\u89e3\u6790\u51fd\u6570\u7684\u5bfc\u6570\uff0c\u8fd8\u662f\u89e3\u6790\u51fd\u6570\uff0c\u5e76\u4e14 \\(f^{(n)}(z_0) = \\dfrac{n!}{2\\pi i}\\oint_C \\dfrac{f(z)}{(z - z_0)^{n + 1}}dz\\)</p> <p>\u548c\u4e0a\u4e00\u8282\u540c\u7406\uff0c\\(z_0\\) \u4e00\u5b9a\u8981\u662f\u5947\u70b9\u4e14\u9ad8\u9636\u5bfc\u6570\u516c\u5f0f\u53ea\u9002\u7528\u4e8e \\(C\\) \u5185\u53ea\u6709\u4e00\u4e2a\u5947\u70b9\u7684\u79ef\u5206\u3002\u6240\u4ee5\u89e3\u51b3\u542b\u591a\u4e2a\u5947\u70b9\u7684\u60c5\u51b5\u8981\u4ee5\u591a\u4e2a\u5947\u70b9\u4e3a\u5706\u5fc3\u5206\u522b\u8fdb\u884c\u9ad8\u9636\u5bfc\u6570\u516c\u5f0f\u3002</p> <ul> <li>\u4f8b\u9898</li> </ul> <p>\u6c42 \\(\\oint_C \\dfrac{e^z}{(z^2 + 1)^2}dz\\)</p> <p></p>"},{"location":"math/complex_analysis/chap3/#5","title":"5 \u8c03\u548c\u51fd\u6570","text":"<ul> <li>\u89e3\u6790\u51fd\u6570\u4e0e\u8c03\u548c\u51fd\u6570\u7684\u5173\u7cfb</li> </ul> <p>\u82e5 \\(f(z) = u(x, y) + iv(x, y)\\) \u5728 \\(D\\) \u5185\u89e3\u6790\uff0c\u5219 \\(u(x, y)\\) \u548c \\((v, y)\\) \u90fd\u662f \\(D\\) \u5185\u7684\u8c03\u548c\u51fd\u6570\u3002</p> <p>\u89e3\u6790\u7684\u6761\u4ef6\u6bd4\u8c03\u548c\u66f4\u52a0\u4e25\u683c\uff0c\u5b83\u9700\u8981 \\(u(x, y)\\) \u548c \\(v(x, y)\\) \u5206\u522b\u8c03\u548c\u7684\u60c5\u51b5\u4e0b\uff0c\u4e8c\u4e2d\u4e4b\u95f4\u4e5f\u6ee1\u8db3 \\(C-R\\) \u65b9\u7a0b\u3002</p> <ul> <li> <p></p> </li> <li> <p>\u7531\u4e8e\u89e3\u6790\u51fd\u6570\u5b9e\u90e8 \\(u(x, y)\\) \u548c\u865a\u90e8 \\(v(x, y)\\) \u6ee1\u8db3 \\(C-R\\) \u65b9\u7a0b\uff08$\\dfrac{\\partial u}{\\partial x} = \\dfrac{\\partial v}{\\partial y},\\dfrac{\\partial u}{\\partial y} = -\\dfrac{\\partial v}{\\partial x} $\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u77e5\u9053\u5b9e\u90e8\u6216\u865a\u90e8\u4e2d\u4e00\u4e2a\u5c31\u80fd\u6c42\u51fa\u53e6\u5916\u4e00\u4e2a\u3002</p> </li> </ul> <p>\u5177\u4f53\u53ef\u7528\u5168\u5fae\u5206\u6cd5\u6216\u504f\u5fae\u5206\u6cd5\uff08\u5148\u5bf9 \\(x\\) \u79ef\u5206\uff0c\u518d\u5bf9 \\(y\\) \u79ef\u5206\uff09\u3002\u4e5f\u53ef\u4ee5\u7528\u539f\u51fd\u6570\u6cd5\uff08\u5982\u4e0b\uff09\u3002</p> <ul> <li></li> </ul> <p>\u516c\u5f0f \\(f'(z) = u_x - iu_y = v_y + iv_x\\) \u7531\u7b2c\u4e8c\u7ae0\u4e2d\u63a8\u51fa\u3002</p> <ul> <li>\u4f8b\u9898</li> </ul> <p></p> <p>\u539f\u51fd\u6570\u6cd5\u7684\u5e94\u7528\u3002</p>"},{"location":"math/complex_analysis/chap3/#6","title":"6 \u4e60\u9898\u8bfe","text":"<p>\u6709\u524d\u9762\u7684\u9ad8\u9636\u5bfc\u6570\u516c\u5f0f\u53ef\u77e5\uff0c\u8fd9\u91cc\u7684 \\(r\\) \u53d6\u4efb\u4e00\u4e2a\u5c0f\u4e8e \\(1\\) \u7684\u503c\u90fd\u53ef\u4ee5\u3002</p> <p></p>"},{"location":"math/complex_analysis/chap4/","title":"\u7ea7\u6570","text":""},{"location":"math/complex_analysis/chap4/#0","title":"0 \u603b\u7ed3","text":"<ul> <li> <p>\u590d\u6570\u5217\u6536\u655b\u8981\u6c42\u5b9e\u90e8\u6781\u9650\u548c\u865a\u90e8\u6781\u9650\u5747\u6536\u655b\u3002</p> </li> <li> <p>\u590d\u6570\u5217\u6536\u655b\u534a\u5f84 \\(R = \\dfrac{1}{\\lambda}\\)\uff08\u5176\u4e2d \\(\\lambda\\) \u53ef\u4ee5\u7528\u6bd4\u503c\u6cd5\u6216\u6839\u503c\u6cd5\u7b97\uff09\uff0c\u590d\u6570\u5217\u7684\u6536\u655b\u57df\u6784\u6210\u4e00\u4e2a\u6536\u655b\u5706\u3002</p> </li> <li> <p>\u590d\u6570\u5217\u53ef\u4ee5\u6cf0\u52d2\u5c55\u5f00\uff0c\u6536\u655b\u57df\u662f\u4e00\u4e2a\u6536\u655b\u5706\uff0c\u6536\u655b\u534a\u5f84\u662f\u5230\u6700\u8fd1\u5947\u70b9\u7684\u8ddd\u79bb\u3002</p> <p>\u5e38\u7528\u5e42\u7ea7\u6570\u5c55\u5f00</p> \\[\\begin{gather*}   \\frac{1}{1-x} = \\sum_{n = 0}^{\\infty}x^{n},\\ \\frac{1}{1+x} = \\sum_{n = 0}^{\\infty}(-1)^nx^{n}\\ (-1 &lt; x &lt; 1)   \\newline e^x = \\sum_{n = 0}^{\\infty}\\frac{x^n}{n!}\\ (-\\infty &lt; x &lt; \\infty)   \\newline \\sin x = \\sum_{n = 0}^{\\infty}(-1)^n\\frac{x^{2n+1}}{(2n+1)!}\\ (-\\infty &lt; x &lt; \\infty)   \\newline \\cos x = \\sum_{n = 0}^{\\infty}(-1)^n\\frac{x^{2n}}{(2n)!}\\ (-\\infty &lt; x &lt; \\infty)   \\newline \\ln(1 + x) = \\sum_{n = 0}^{\\infty} (-1)^n\\frac{x^{n + 1}}{n + 1}\\ (-1 &lt; x \\le 1)   \\newline \\arctan x = \\sum_{n = 0}^{\\infty} (-1)^n\\frac{x^{2n + 1}}{2n + 1}\\ (-1 \\le x \\le 1) \\end{gather*}\\] </li> <li> <p>\u590d\u6570\u5217\u53ef\u4ee5\u6d1b\u6717\u5c55\u5f00\uff0c\u5176\u6536\u655b\u57df\u662f\u6536\u655b\u5706\u73af\uff0c\\(\\sum_{n = 0}^{\\infty}c_n(z - z_0)^n = \\sum_{n = 1}^{\\infty}c_{-n}(z - z_0)^{-n} + \\sum_{n = 0}^{\\infty}c_n(z - z_0)^n\\)\u3002\u4e14\u7cfb\u6570 \\(c_n\\) \u6ee1\u8db3\u516c\u5f0f \\(c_n = \\dfrac{1}{2\\pi i} \\oint\\dfrac{f(\\xi)}{(\\xi - z_0)^{n + 1}}d\\xi\\)\u3002</p> </li> <li> <p>\u5229\u7528\u7cfb\u6570 \\(c_n\\) \u516c\u5f0f\u53ef\u4ee5\u63a8\u5bfc\u51fa \\(\\oint_C f(z)dz = 2\\pi ic_{-1}\\)\u3002\uff08\u8fd9\u91cc\u6536\u655b\u5706\u73af\u8981\u6ee1\u8db3\u6240\u6709\u5947\u70b9\u90fd\u5728\u5c0f\u5706\u5185\uff09</p> </li> </ul>"},{"location":"math/complex_analysis/chap4/#1","title":"1 \u590d\u7ea7\u6570","text":"<ul> <li> <p>\u590d\u6570\u5217</p> <p>\\(\\{z_n\\} = \\{x_n + iy_n\\}\\) \u662f\u590d\u6570\u5217\uff0c\u5176\u6781\u9650\u5224\u65ad\u4ee5\u53ca\u56db\u5219\u8fd0\u7b97\u4e0e\u5b9e\u6570\u5217\u76f8\u540c\u3002</p> </li> <li> <p>\u590d\u6570\u9879\u7ea7\u6570</p> <p>\u590d\u6570\u5217\u6240\u6709\u9879\u7684\u548c\u79f0\u4e3a\u590d\u6570\u9879\u7ea7\u6570\uff0c\\(\\sum_{n = 1}^{\\infty}z_n = z_1 + z_2 + \\dots\\)</p> <p>\u7ea7\u6570\u6536\u655b\u4e0e\u53d1\u6563\u7684\u5b9a\u4e49\u4e0e\u5b9e\u6570\u7ea7\u6570\u76f8\u540c\u3002</p> <p>\u590d\u6570\u9879\u7ea7\u6570\u6536\u655b\u7684\u5145\u8981\u6761\u4ef6\u662f\u5b9e\u90e8\u548c\u865a\u90e8\u90fd\u6536\u655b\u3002</p> <p>\u590d\u6570\u9879\u7ea7\u6570\u6536\u655b\u7684\u5fc5\u8981\u6761\u4ef6\u662f \\(\\lim_{n \\to \\infty} z_n = 0\\)\u3002</p> </li> <li> <p>\u7edd\u5bf9\u6536\u655b\u4e0e\u6761\u4ef6\u6536\u655b</p> <p>\u82e5 \\(\\sum_{n = 1}^{\\infty} |z_n|\\) \u6536\u655b\uff0c\u5219\u8be5\u590d\u6570\u5217\u7edd\u5bf9\u6536\u655b\u3002</p> <p>\u4e0d\u7edd\u5bf9\u6536\u655b\u7684\u6536\u655b\u7ea7\u6570\u79f0\u4e3a\u6761\u4ef6\u6536\u655b\u3002</p> </li> <li> <p>\u5224\u65ad\u590d\u6570\u9879\u7ea7\u6570\u655b\u6563\u6027\u7684\u65b9\u6cd5</p> <p>\u5b9e\u90e8\u865a\u90e8\u5206\u5f00\u8ba8\u8bba\u6216\u5728\u4e00\u8d77\u76f4\u63a5\u5224\u5b9a\u3002</p> <p>\u4e00\u4e9b\u57fa\u672c\u6280\u5de7\u53ef\u4ee5\u7528\u6b63\u9879\u7ea7\u6570\u7684\u5224\u5b9a\u6280\u5de7\u3002</p> </li> <li> <p>\u590d\u53d8\u51fd\u6570\u9879\u7ea7\u6570</p> <p>\u8bbe \\(\\{f_n(z)\\}\\) \u662f\u533a\u57df \\(D\\) \u5185\u7684\u51fd\u6570\u5217\uff0c\u79f0 \\(\\sum_{n = 1}^{\\infty} f_n(z)\\) \u4e3a\u590d\u53d8\u51fd\u6570\u9879\u7ea7\u6570\u3002</p> <p>\u82e5 \\(D\\) \u5185\u6709\u4e00\u70b9 \\(z_0\\)\uff0c\u6ee1\u8db3 \\(\\lim_{n \\to \\infty} S_n(z_0) = S(z_0)\\)\uff0c\u79f0 \\(z_0\\) \u662f\u7ea7\u6570\u7684\u6536\u655b\u70b9\u3002\u5373 \\(S(z_0) = \\sum_{n = 1}^{\\infty}f_n(z_0)\\)\u3002</p> <p>\u82e5\u7ea7\u6570\u5728 \\(D\\) \u5185\u5904\u5904\u6536\u655b\uff0c\u5219\u79f0 \\(S(z) = \\sum_{n = 1}^{\\infty}f_n(z)\\) \u4e3a\u7ea7\u6570\u7684\u548c\u51fd\u6570\u3002</p> </li> <li> <p>\u5e42\u7ea7\u6570</p> <p>\u5f62\u5982 \\(\\sum_{n = 0}^{\\infty}c_n(z - z_0)^n\\) \u7684\u7ea7\u6570\u3002</p> <p></p> <p>\u7531 \\(Abel\\) \u5b9a\u7406\u53ef\u77e5\uff0c\u5fc5\u5b58\u5728\u4e00\u4e2a\u5706\u57df\uff0c\u4f7f\u5f97\u5e42\u7ea7\u6570\u5728\u5706\u57df\u5185\u7edd\u5bf9\u6536\u655b\uff0c\u5728\u5706\u57df\u5916\u53d1\u6563\u3002\u4f46\u5bf9\u4e8e\u5706\u5468\u4e0a\u7684\u5e42\u7ea7\u6570\u7684\u655b\u6563\u6027\u8981\u5355\u72ec\u8ba8\u8bba\u3002</p> <p>\u6545\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u5706\u5468 \\(|z| = R\\) \u79f0\u4e3a\u5e42\u7ea7\u6570 \\(\\sum_{n = 0}^{\\infty}c_nz^n\\) \u7684\u6536\u655b\u5706\uff0c\\(R\\) \u79f0\u4e3a\u6536\u655b\u534a\u5f84\u3002</p> </li> <li> <p>\u6c42\u5e42\u7ea7\u6570\u6536\u655b\u534a\u5f84</p> <p>\u82e5 \\(\\lim_{n \\to \\infty}|\\dfrac{c_{n + 1}}{c_n}| = \\lambda\\) \u6216 \\(\\lim_{n \\to \\infty} \\sqrt[n]{|c_n|} = \\lambda\\)\uff0c\u5219\u53ef\u4ee5\u5f97\u51fa \\(R = \\dfrac{1}{\\lambda}\\)\u3002</p> <p>\u6ce8\u610f\u8fd9\u91cc \\(c_n\\) \u662f \\(z^n\\) \u524d\u9762\u7684\u7cfb\u6570\u3002</p> </li> <li> <p>\u4f8b\u9898</p> <p></p> </li> </ul>"},{"location":"math/complex_analysis/chap4/#2","title":"2 \u6cf0\u52d2\u7ea7\u6570","text":"<ul> <li> <p>\u6cf0\u52d2\u5c55\u5f00\u5b9a\u7406</p> <p></p> <p>\u6709\u5173\u6cf0\u52d2\u5c55\u5f00\u7684\u4e00\u4e9b\u6027\u8d28</p> <ul> <li> <p>\u82e5 \\(f(z)\\) \u6709\u5947\u70b9\uff0c\u5219\u6700\u8fd1\u7684\u5947\u70b9\u4e00\u5b9a\u5728 \\(f(z)\\) \u7684\u6536\u655b\u5706\u5468\u4e0a\uff0c\u5373\u6536\u655b\u534a\u5f84\u5c31\u662f\u5230\u6700\u8fd1\u5947\u70b9\u7684\u8ddd\u79bb\u3002</p> </li> <li> <p>\u51fd\u6570\u5728 \\(z_0\\) \u89e3\u6790\u7684\u5145\u8981\u6761\u4ef6\u662f\u51fd\u6570\u5728 \\(z_0\\) \u70b9\u7684\u9886\u57df\u5185\u53ef\u5c55\u5f00\u6210\u5e42\u7ea7\u6570\uff08\u89e3\u6790\u51fd\u6570\u7684\u672c\u8d28\u7279\u5f81\uff09\u3002</p> </li> <li> <p>\u89e3\u6790\u51fd\u6570\u7684\u5e42\u7ea7\u6570\u5c55\u5f00\u5f0f\u662f\u552f\u4e00\u7684\uff0c\u5c31\u662f\u6cf0\u52d2\u7ea7\u6570\u3002</p> </li> </ul> </li> <li> <p>\u4f8b\u9898\uff08\u6709\u6280\u5de7\u5730\u6cf0\u52d2\u5c55\u5f00\uff09</p> <p></p> <p></p> </li> </ul>"},{"location":"math/complex_analysis/chap4/#3","title":"3 \u6d1b\u6717\u7ea7\u6570","text":"<ul> <li> <p>\u6d1b\u6717\u7ea7\u6570</p> <p>\u5f62\u5982 \\(\\sum_{n = 0}^{\\infty}c_n(z - z_0)^n = \\sum_{n = 1}^{\\infty}c_{-n}(z - z_0)^{-n} + \\sum_{n = 0}^{\\infty}c_n(z - z_0)^n\\) \u7684\u7ea7\u6570\u79f0\u4e3a\u6d1b\u6717\u7ea7\u6570\u3002</p> <p>\u5f53 \\(c_{-n} = 0(n = 1, 2, \\dots)\\) \u65f6\uff0c\u6d1b\u6717\u7ea7\u6570\u5c31\u662f\u5e42\u7ea7\u6570\u3002</p> </li> <li> <p>\u6d1b\u6717\u7ea7\u6570\u7684\u6536\u655b\u5706\u73af</p> <p>\u6d1b\u6717\u7ea7\u6570\u5206\u4e3a\u6b63\u5e42\u9879\u548c\u8d1f\u5e42\u9879\uff0c\u6b63\u5e42\u9879\u79f0\u4e3a\u6d1b\u6717\u7ea7\u6570\u7684\u89e3\u6790\u90e8\u5206\uff0c\u8d1f\u5e42\u9879\u79f0\u4e3a\u6d1b\u6717\u7ea7\u6570\u7684\u4e3b\u8981\u90e8\u5206\u3002</p> <p>\u82e5\u4e24\u90e8\u5206\u5728 \\(z_0\\) \u5904\u90fd\u6536\u655b\uff0c\u5219\u79f0\u6d1b\u6717\u7ea7\u6570\u5728 \\(z_0\\) \u5904\u6536\u655b\u3002</p> <p></p> <p></p> </li> <li> <p>\u6d1b\u6717\u5b9a\u7406</p> <p></p> <p>\u540c\u4e00\u89e3\u6790\u5706\u73af\u5185\uff0c\\(f(z)\\) \u7684\u6d1b\u6717\u5c55\u5f00\u5f0f\u662f\u552f\u4e00\u7684\uff08\u5373 \\(c_n\\) \u76f8\u540c\uff09\u3002</p> <p>\u5c06\u51fd\u6570\u5c55\u5f00\u4e3a\u6d1b\u6717\u7ea7\u6570\u4e00\u822c\u6709\u76f4\u63a5\u6cd5\u548c\u95f4\u63a5\u6cd5\u3002</p> <p>\u76f4\u63a5\u6cd5\u53ef\u4ee5\u76f4\u63a5\u7528\u6d1b\u6717\u5b9a\u7406\uff08\u5957\u516c\u5f0f\uff09\uff0c\u7136\u540e\u7528\u9ad8\u9636\u51fd\u6570\u6c42\u5bfc\u516c\u5f0f\u6765\u6c42\u3002</p> <p>\u95f4\u63a5\u6cd5\uff0c\u5229\u7528\u4e00\u4e9b\u6280\u5de7\u95f4\u63a5\u8f6c\u5316\u3002\u6bd4\u5982 \\(f(z) = (z - z_0)^kg(z)\\)\uff0c\u53ef\u4ee5\u5148\u5c06 \\(g(z)\\) \u6d1b\u6717\u5c55\u5f00\uff0c\u7136\u540e\u5728\u4e58\u8d77\u6765\uff0c\u5f97\u51fa \\(f(z)\\) \u7684\u6d1b\u6717\u7ea7\u6570\u3002\u8fd8\u6709 \\(\\dfrac{1}{1 - z} = \\sum_{n = 0}^{\\infty}z^n(|z| &lt; 1)\\) \u4e5f\u662f\u4e00\u4e2a\u5e38\u7528\u8f6c\u5316\u516c\u5f0f\u3002</p> </li> <li> <p>\u4f8b\u9898</p> <p></p> <p>\u6ce8\u610f\u5b66\u4e60\u8fd9\u91cc\u7684\u6280\u5de7\uff0c\u5982\u679c \\(\\dfrac{1}{1 - z}\\) \u91cc \\(z &lt; 1\\)\uff0c\u90a3\u4e48\u76f4\u63a5\u7528\u516c\u5f0f \\(\\dfrac{1}{1 - z} = \\sum_{n = 0}^{\\infty}z^n(|z| &lt; 1)\\)\uff0c\u5982\u679c \\(z &gt; 1\\)\uff0c\u5c31\u8fdb\u884c\u8f6c\u5316 \\(\\dfrac{1}{1 - z} = \\dfrac{1}{z}\\cdot\\dfrac{1}{\\dfrac{1}{z} - 1}\\)\uff0c\u7136\u540e\u5bf9\u540e\u9762\u5957\u516c\u5f0f\u5373\u53ef\u3002</p> </li> <li> <p>\u79ef\u5206\u8ba1\u7b97\u516c\u5f0f</p> <p></p> </li> </ul>"},{"location":"math/complex_analysis/chap4/#4","title":"4 \u4f8b\u9898","text":"<ul> <li> <p>\\(\\dfrac{1}{(z - a)(z - b)}\\) \u5c55\u5f00\u6210 \\(z\\) \u7684\u5e42\u7ea7\u6570\uff0c\u5e76\u6307\u51fa\u6536\u655b\u57df\u3002</p> <p></p> <p></p> </li> <li> <p>\\(\\dfrac{1}{(1 + z^2)^2}\\) \u5c55\u5f00\u6210 \\(z\\) \u7684\u5e42\u7ea7\u6570\uff0c\u5e76\u6307\u51fa\u6536\u655b\u57df\u3002</p> <p></p> </li> <li> <p>\\(\\sin^2z\\) \u5c55\u5f00\u6210 \\(z\\) \u7684\u5e42\u7ea7\u6570\uff0c\u5e76\u6307\u51fa\u6536\u655b\u57df\u3002</p> <p></p> </li> <li> <p>\\(\\dfrac{z}{(z + 1)(z + 2)},z_0 = 2\\) \u6c42\u8be5\u51fd\u6570\u5728 \\(z_0\\) \u7684\u6cf0\u52d2\u5c55\u5f00\u3002</p> <p></p> </li> <li> <p>\\(\\dfrac{1}{z^2},z_0 = -1\\) \u6c42\u8be5\u51fd\u6570\u5728 \\(z_0\\) \u7684\u6cf0\u52d2\u5c55\u5f00\u3002</p> <p></p> </li> <li> <p>\\(\\dfrac{1}{4 - 3z},z_0 = 1 + i\\) \u6c42\u8be5\u51fd\u6570\u5728 \\(z_0\\) \u7684\u6cf0\u52d2\u5c55\u5f00\u3002</p> <p></p> </li> <li> <p>\\(\\dfrac{1}{(z - 1)(z - 2)},0 &lt; |z - 1| &lt; 1;1 &lt; |z - 2| &lt; +\\infty\\) \u6c42\u8be5\u51fd\u6570\u5728\u6307\u5b9a\u5706\u73af\u5185\u7684\u6cf0\u52d2\u5c55\u5f00\u3002</p> <p></p> </li> <li> <p>\\(\\dfrac{1}{z^2(z - i)}\\)\uff0c\u4ee5 \\(z_0\\)\u4e3a\u4e2d\u5fc3\u7684\u5706\u73af\u57df\u3002 \u6c42\u8be5\u51fd\u6570\u5728\u6307\u5b9a\u5706\u73af\u5185\u7684\u6cf0\u52d2\u5c55\u5f00\u3002</p> <p></p> <p></p> </li> <li> <p>\u5229\u7528\u79ef\u5206\u516c\u5f0f\u6765\u7b97\u4e0b\u9898</p> <p></p> </li> <li> <p>\u6839\u636e\u6d1b\u6717\u5c55\u5f00\u5012\u63a8\u6536\u655b\u5706\u73af\u4e0e\u548c\u51fd\u6570</p> <p></p> <p></p> </li> </ul>"},{"location":"math/complex_analysis/chap5/","title":"\u7b2c\u4e94\u7ae0 \u7559\u6570","text":""},{"location":"math/complex_analysis/chap5/#_2","title":"\u7b2c\u4e94\u7ae0\u603b\u7ed3","text":"<p>\u4e00\u7ea7\u6781\u70b9\u7528\u6cd5\u5219\u4e00\uff0c\u591a\u6781\u7528\u6cd5\u5219\u4e8c\uff0c\u590d\u6742\u5206\u5f0f\uff08\u4e14\u5206\u6bcd\u597d\u6c42\u5bfc\uff09\u8003\u8651\u6cd5\u5219\u4e09\uff0c\u65e0\u7a77\u7528\u6cd5\u5219\u56db\u3002\u5224\u65ad\u65e0\u7a77\u7684\u6027\u8d28\u5c31\u662f\u8f6c\u5316\u4e3a\u5224\u65ad\u96f6\u5904\u7684\u6027\u8d28\u3002</p>"},{"location":"math/complex_analysis/chap5/#1","title":"1 \u5b64\u7acb\u5947\u70b9","text":"<ul> <li> <p>\u5b64\u7acb\u5947\u70b9</p> <p>\u82e5 \\(z_0\\) \u4e3a\u5947\u70b9\uff0c\u4e14 \\(z_0\\) \u90bb\u57df\u5185\u6ca1\u6709\u5947\u70b9\uff0c\u5219 \\(z_0\\) \u662f\u5b64\u7acb\u5947\u70b9\u3002</p> <p>\u82e5 \\(z_0\\) \u662f\u5b64\u7acb\u5947\u70b9\uff0c\u5219\u5fc5\u5b58\u5728\u53bb\u5fc3\u90bb\u57df \\(0 &lt; |z - z_0| &lt; \\delta\\)\uff0c\\(\\delta\\) \u53d6\u51b3\u4e8e \\(z_0\\) \u5230\u5176\u4ed6\u5947\u70b9\u7684\u6700\u5c0f\u8ddd\u79bb\u3002</p> </li> <li> <p>\u5b64\u7acb\u5947\u70b9\u7684\u5206\u7c7b</p> <p>\u5728\u5b64\u7acb\u5947\u70b9\u7684\u89e3\u6790\u90bb\u57df\u5185\uff0c\\(f(z)\\) \u53ef\u4ee5\u8fdb\u884c\u6d1b\u6717\u5c55\u5f00\u3002\u6839\u636e\u6d1b\u6717\u5c55\u5f00\u5f0f\u4e2d\u8d1f\u5e42\u9879\u7684\u591a\u5c11\uff0c\u628a\u5b64\u7acb\u5947\u70b9\u5206\u4e3a\u4e09\u7c7b\u3002</p> <ul> <li>\u53ef\u53bb\u5947\u70b9\uff1a\u5c55\u5f00\u5f0f\u4e2d\u4e0d\u542b\u8d1f\u5e42\u9879\u3002</li> <li>\u6781\u70b9\uff1a\u5c55\u5f00\u5f0f\u4e2d\u6709\u6709\u9650\u4e2a\u8d1f\u5e42\u9879\u3002</li> <li>\u672c\u6027\u5947\u70b9\uff1a\u5c55\u5f00\u5f0f\u4e2d\u6709\u65e0\u9650\u4e2a\u8d1f\u5e42\u9879\u3002</li> </ul> </li> <li> <p>\u53ef\u53bb\u5947\u70b9\u7684\u5224\u5b9a</p> <p>\u82e5 \\(f(z)\\) \u5728 \\(z_0\\) \u7684\u53bb\u5fc3\u90bb\u57df\u5185\u89e3\u6790\uff0c\u5219 \\(z_0\\) \u662f \\(f(z)\\) \u53ef\u53bb\u5947\u70b9\u7684\u5145\u8981\u6761\u4ef6\u662f \\(\\lim_{z \\to z_0} f(z) = c_0\\)\u3002</p> </li> <li> <p>\u6781\u70b9</p> <p>\u82e5 \\(f(z)\\) \u5728 \\(z_0\\) \u7684\u53bb\u5fc3\u90bb\u57df\u5185\uff0c\u6d1b\u6717\u5c55\u5f00\u5f0f\u4e2d\u5e42\u6b21\u6700\u5c0f\u7684\u662f \\(-m\\) \u6b21\u5e42\uff0c\u5219\u79f0 \\(z_0\\) \u4e3a \\(f(z)\\) \u7684 \\(m\\) \u7ea7\u6781\u70b9\u3002</p> <p></p> <p></p> </li> <li> <p>\u4f8b\u9898</p> <p></p> </li> <li> <p>\u5b64\u7acb\u5947\u70b9\u7c7b\u578b\u7684\u5224\u65ad\u65b9\u6cd5</p> <p></p> </li> <li> <p>\u51fd\u6570\u7684\u96f6\u70b9\u4e0e\u6781\u70b9\u7684\u5173\u7cfb</p> <p>\u82e5\u4e0d\u6052\u7b49\u4e8e \\(0\\) \u7684\u89e3\u6790\u51fd\u6570 \\(f(z)\\) \u5728 \\(z_0\\) \u7684\u90bb\u57df\u5185\u53ef\u8868\u793a\u4e3a \\(f(z) = (z - z_0)^mg(z)\\)\uff0c\u5176\u4e2d \\(g(z)\\) \u5728 \\(z_0\\) \u89e3\u6790\u4e14 \\(g(z_0) \\ne 0\\)\uff0c\u5219\u79f0 \\(z_0\\) \u4e3a \\(f(z)\\) \u7684 \\(m\\) \u7ea7\u96f6\u70b9\u3002</p> <p>\u96f6\u70b9\u7ea7\u6570\u7684\u5224\u5b9a\uff1a\u82e5 \\(f(z)\\) \u5728 \\(z_0\\) \u89e3\u6790\uff0c\u5219 \\(z_0\\) \u4e3a \\(f(z)\\) \u7684 \\(m\\) \u7ea7\u96f6\u70b9\u7684\u5145\u8981\u6761\u4ef6\u662f \\(f^{(k)}(z_0) = 0(k = 0, 1, \\dots, m - 1)\\) \u4e14 \\(f^{(m)}(z_0) \\ne 0\\)\u3002</p> <p>\u96f6\u70b9\u4e0e\u6781\u70b9\u7684\u5173\u7cfb\uff1a\u82e5 \\(z_0\\) \u662f \\(f(z)\\) \u7684 \\(m\\) \u7ea7\u6781\u70b9\uff0c\u5219 \\(z_0\\) \u662f \\(\\dfrac{1}{f(z)}\\) \u7684 \\(m\\) \u7ea7\u96f6\u70b9\u3002\u540c\u6837\u7684\uff0c\u82e5 \\(z_0\\) \u662f \\(f(z)\\) \u7684 \\(m\\) \u6781\u96f6\u70b9\uff0c\u5219 \\(z_0\\) \u662f \\(\\dfrac{1}{f(z)}\\) \u7684 \\(m\\) \u7ea7\u6781\u70b9\u3002</p> <p>\u5176\u5b9e\u5c31\u662f\u770b\u5206\u6bcd\u7684\u5f0f\u5b50\u5728 \\(z_0\\) \u4e0a\u662f\u51e0\u91cd\u8ddf\u5c31\u662f\u51e0\u91cd\u96f6\u70b9\u3002</p> </li> <li> <p>\u5206\u5f0f\u7684\u96f6\u70b9\u4e0e\u6781\u70b9</p> <p></p> <p>\u867d\u7136\u51fd\u6570\u7684\u6781\u70b9\u7ea7\u6570\u96be\u4ee5\u786e\u5b9a\uff0c\u4f46\u662f\u96f6\u70b9\u7ea7\u6570\u597d\u786e\u5b9a\uff0c\u5c24\u5176\u662f\u5206\u5f0f\uff0c\u53ef\u4ee5\u62c6\u6210\u5206\u5b50\u5206\u6bcd\u6765\u8ba8\u8bba\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u96f6\u70b9\u7ea7\u6570\u6765\u6c42\u6781\u70b9\u7ea7\u6570\u3002</p> </li> <li> <p>\u51fd\u6570\u5728\u65e0\u7a77\u8fdc\u70b9\u7684\u6027\u6001</p> <p></p> <p>\u82e5\u5224\u65ad\u51fd\u6570\u5728 \\(\\infty\\) \u70b9\u5904\u7684\u6027\u6001\uff0c\u53ef\u4ee5\u4ee4 \\(\\xi = \\dfrac{1}{z}\\)\uff0c\u6545 \\(f(z)\\) \u5728 \\(\\infty\\) \u7684\u6027\u6001\u5219\u53d8\u4e3a \\(\\phi(\\xi)\\) \u5728 \\(0\\) \u5904\u7684\u6027\u6001\u3002\u7ecf\u8fc7\u4e00\u7cfb\u5217\u63a8\u5230\u4e4b\u540e\uff0c\u5f97\u5230\u5982\u4e0b\u5b9a\u7406\uff1a</p> <p></p> </li> <li> <p>\u4f8b\u9898</p> <p></p> <p>\u5982\u679c\u51fd\u6570\u53ef\u4ee5\u8fdb\u884c\u6d1b\u6717\u5c55\u5f00\uff0c\u5219\u76f4\u63a5\u7528\u6d1b\u6717\u5c55\u5f00\u7136\u540e\u5224\u65ad\u6b63\u5e42\u9879\u6b21\u6570\u3002\u4f46\u5bf9\u4e8e\u65e0\u6cd5\u6d1b\u6717\u5c55\u5f00\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u7528\u5b9a\u4e49\u6cd5\u6765\u89e3\u51b3\u3002</p> </li> </ul>"},{"location":"math/complex_analysis/chap5/#2","title":"2 \u7559\u6570","text":"<p>\u7531\u524d\u9762\u7684 \\(\\oint_C f(z)dz = 2\\pi i c_{-1}\\)\uff0c\u53ef\u77e5 \\(c_{-1}\\) \u5f88\u91cd\u8981\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u7559\u6570\u3002</p> <p></p> <ul> <li> <p>\u7559\u6570\u5b9a\u7406</p> <p>\u51fd\u6570\u6cbf\u95ed\u66f2\u7ebf\u7684\u6b63\u5411\u79ef\u5206\u7b49\u4e8e\u6240\u6709\u5947\u70b9\u7684\u7559\u6570\u548c\u4e58\u4ee5 \\(2\\pi i\\)</p> <p>\u82e5 \\(z_0\\) \u662f \\(f(z)\\) \u7684\u53ef\u53bb\u5947\u70b9\uff0c\u5219\u7559\u6570 \\(c_{-1} = 0\\)\u3002</p> <p>\u82e5 \\(z_0\\) \u662f \\(f(z)\\) \u7684\u672c\u6027\u5947\u70b9\uff0c\u5219\u53ea\u80fd\u7528\u6d1b\u6717\u5c55\u5f00\u6c42 \\(c_{-1}\\)\u3002</p> <p>\u82e5 \\(z_0\\) \u662f \\(f(z)\\) \u7684\u6781\u70b9\uff0c\u5219\u53ef\u4ee5\u7528\u4ee5\u4e0b\u56db\u4e2a\u6cd5\u5219\u6765\u76f8\u5bf9\u7b80\u4fbf\u6c42\u7559\u6570\u3002</p> <p>\u6cd5\u5219\u4e00\uff1a\u82e5 \\(z_0\\) \u662f \\(f(z)\\) \u7684\u4e00\u7ea7\u6781\u70b9\uff0c\u5219 \\(\\mathrm{Res}[f(z), z_0] = \\lim_{z \\to z_0}(z - z_0)f(z)\\)\u3002</p> <p>\u6cd5\u5219\u4e8c\uff1a\u82e5 \\(z_0\\) \u662f \\(f(z)\\) \u7684 \\(m\\) \u7ea7\u6781\u70b9\uff0c\u5219 \\(\\mathrm{Res}[f(z), z_0] = \\dfrac{1}{(m - 1)!}\\lim_{z \\to z_0}\\dfrac{d^{m - 1}}{dz^{m - 1}}[(z - z_0)^mf(z)]\\)\u3002</p> <p>\u6cd5\u5219\u4e09\uff1a\u8bbe \\(f(z) = \\dfrac{P(z)}{Q(z)}\\)\uff0c\\(P(z)\\) \u548c \\(Q(z)\\) \u5728 \\(z_0\\) \u89e3\u6790\uff0c\u82e5 \\(P(z_0) \\ne 0,Q(z_0) = 0, Q'(z_0) \\ne 0\\)\uff0c\u5219 \\(z_0\\) \u4e3a \\(f(z)\\) \u7684\u4e00\u7ea7\u6781\u70b9\u4e14 \\(\\mathrm{Res}[f(z), z_0] = \\dfrac{P(z_0)}{Q'(z_0)}\\)\u3002</p> <p>\u6cd5\u5219\u56db\uff1a\u65e0\u7a77\u8fdc\u70b9 \\(\\infty\\) \u7684\u7559\u6570 \\(\\mathrm{Res}[f(z), \\infty] = -c_{-1} = -\\mathrm{Res}[f(\\dfrac{1}{z})\\cdot \\dfrac{1}{z^2}, 0]\\)\u3002\uff08\u6211\u4eec\u5229\u7528\u8fd9\u6761\u6cd5\u5219\uff0c\u5f53\u5185\u90e8\u79ef\u5206\u4e0d\u597d\u7b97\u65f6\uff0c\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5916\u90e8\u7684\u79ef\u5206\u548c\u6765\u7b97\uff09</p> <p>\u6ce8\uff1a\\(\\infty\\) \u4e00\u5b9a\u662f\u5947\u70b9\uff0c\u4f46\u4e0d\u80fd\u5224\u65ad\u5947\u70b9\u7c7b\u578b\u3002</p> </li> <li> <p>\u65e0\u7a77\u8fdc\u70b9\u7684\u7559\u6570</p> <p></p> <p>\u6ce8\uff1a\\(\\infty\\) \u4e00\u5b9a\u662f\u5947\u70b9\uff0c\u4f46\u4e0d\u80fd\u5224\u65ad\u5947\u70b9\u7c7b\u578b\u3002</p> <p>\u63a8\u8bba\uff1a\u82e5 \\(f(z)\\) \u5728\\(R &lt; |Z| &lt; +\\infty\\) \u5185\u7684\u6d1b\u6717\u5c55\u5f00\u4e3a \\(f(z) = \\sum_{-\\infty}^{+\\infty} c_nz^n\\)\uff0c\u5219 \\(\\mathrm{Res}[f(z), +\\infty] = -c_{-1}\\)\u3002</p> <p>\u5b9a\u7406\uff1a\u82e5 \\(f(z)\\) \u5728\u6269\u5145\u590d\u5e73\u9762\u4e0a\uff0c\u5305\u62ec \\(\\infty\\) \u5728\u5185\u53ea\u6709\u6709\u9650\u4e2a\u5b64\u7acb\u5947\u70b9\uff0c\u5219 \\(f(z)\\) \u6240\u6709\u5947\u70b9\u7684\u7559\u6570\u603b\u548c\u4e3a\u96f6\u3002</p> <p>\u5224\u65ad\u65e0\u7a77\u7684\u6027\u8d28\u5c31\u662f\u8f6c\u5316\u4e3a\u5224\u65ad\u96f6\u5904\u7684\u6027\u8d28\u3002</p> </li> <li> <p>\u4f8b\u9898</p> <p></p> <p>\u6ce8\u610f\u8fd9\u91cc\u89e3\u6cd5\u4e8c\uff0c\\(m\\) \u786e\u5b9e\u53d6\u4efb\u4e00\u5927\u4e8e\u7b49\u4e8e \\(3\\) \u7684\u6570\u5373\u53ef\uff08\u6d1b\u6717\u5c55\u5f00\u4e4b\u540e\u53ef\u4ee5\u770b\u51fa\uff09\u3002</p> <p></p> <p></p> <p></p> </li> </ul>"},{"location":"math/complex_analysis/chap5/#3","title":"3 \u4e60\u9898\u8bfe","text":"<ul> <li> <p>\u6c42\u4e0b\u5217\u51fd\u6570\u5947\u70b9\uff0c\u82e5\u662f\u6781\u70b9\u5219\u786e\u5b9a\u7ea7\u6570</p> <p></p> <p></p> <p>\u786e\u5b9a\u5947\u70b9\u7684\u53d6\u503c\u4e4b\u540e\uff0c\u82e5\u662f\u5728\u5206\u6bcd\u4e0a\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0d\u65ad\u6c42\u5bfc\u5224\u65ad\u662f\u51e0\u7ea7\u96f6\u70b9\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5224\u65ad\u51fa\u662f\u51e0\u7ea7\u6781\u70b9\u3002</p> </li> <li> <p>\u5229\u7528\u7559\u6570\u8ba1\u7b97\u79ef\u5206</p> <p></p> <p></p> </li> <li> <p>\u5224\u65ad \\(\\infty\\) \u7684\u5947\u70b9\u7c7b\u578b\u5e76\u6c42\u51fa \\(\\infty\\) \u7684\u7559\u6570</p> <p></p> </li> <li> <p>\u5229\u7528\u5916\u9762\u7b97\u91cc\u9762</p> <p></p> <p></p> </li> </ul>"},{"location":"math/complex_analysis/chap6/","title":"\u7b2c\u516d\u7ae0 \u5085\u91cc\u53f6\u53d8\u6362","text":""},{"location":"math/complex_analysis/chap6/#0","title":"0 \u603b\u7ed3","text":""},{"location":"math/complex_analysis/chap6/#1","title":"1 \u5085\u91cc\u53f6\u7ea7\u6570","text":"<ul> <li> <p>\u5085\u91cc\u53f6\u7ea7\u6570</p> <p></p> <p></p> </li> <li> <p>\u590d\u6307\u6570\u5f62\u5f0f\u7684\u5085\u91cc\u53f6\u7ea7\u6570</p> <p>\u5c06\u6b27\u62c9\u516c\u5f0f\u4ee3\u5165\u5230\u4e0a\u5f0f\u5b50\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a</p> <p></p> </li> </ul>"},{"location":"math/complex_analysis/chap6/#2","title":"2 \u5085\u91cc\u53f6\u79ef\u5206\u4e0e\u5085\u91cc\u53f6\u53d8\u6362","text":"<ul> <li> <p>\u5085\u91cc\u53f6\u79ef\u5206\u5b9a\u7406</p> <p></p> </li> <li> <p>\u5085\u91cc\u53f6\u53d8\u6362</p> <p>\u5c06\u4e0a\u5f0f\u79ef\u5206\u5f0f\u5b50\u8fdb\u884c\u53d8\u6362\uff0c\u5f97\u5230\u5982\u4e0b\uff1a</p> <p></p> <p></p> </li> <li> <p>\u4f8b\u9898</p> <p></p> <p></p> </li> </ul>"},{"location":"math/complex_analysis/chap6/#3","title":"3 \u5355\u4f4d\u8109\u51b2\u51fd\u6570","text":"<ul> <li> <p>\u5355\u4f4d\u8109\u51b2\u51fd\u6570</p> <p>\u6ee1\u8db3\u4e0b\u5217\u4e24\u4e2a\u6761\u4ef6\u7684\u51fd\u6570 \\(\\delta(t)\\) </p> \\[   \\begin{align*}     &amp; \\delta(t) = \\left\\{\\begin{matrix}                     0  &amp; t = 0\\\\                     \\infty  &amp; t \\ne 0                       \\end{matrix}\\right.  \\\\     &amp; \\int_{-\\infty}^{+\\infty} \\delta(t)dt = 1   \\end{align*} \\] <p>\u79f0\u4e3a\u5355\u4f4d\u8109\u51b2\u51fd\u6570\u3002</p> </li> <li> <p>\\(\\delta\\) \u7684\u6027\u8d28</p> \\[   \\begin{align*}     &amp; \\int_{-\\infty}^{+\\infty}\\delta(t)\\varphi(t)dt = \\varphi(0)  \\\\     &amp; \\int_{-\\infty}^{+\\infty}\\delta(t - t_0)\\varphi(t)dt = \\varphi(t_0)   \\end{align*} \\] </li> <li> <p>\\(\\delta\\) \u51fd\u6570\u7684\u5085\u6c0f\u53d8\u6362</p> \\[   \\begin{align*}     &amp; \\mathscr{F}[\\delta(t)] = 1  \\\\     &amp; \\mathscr{F}[\\delta(t - t_0)] = e^{-i\\omega t_0}    \\end{align*} \\] <p>\u8fd9\u4e24\u4e2a\u5085\u6c0f\u53d8\u6362\u5bf9\u5f88\u91cd\u8981\uff0c\u5f88\u591a\u9898\u76ee\u91cd\u8981\u9700\u8981\u9760\u8fd9\u4e24\u4e2a\u4e0d\u65ad\u53d8\u6362\u3002</p> </li> <li> <p>\u4f8b\u9898</p> <p></p> <p></p> <p></p> </li> </ul>"},{"location":"math/complex_analysis/chap6/#4","title":"4 \u5085\u91cc\u53f6\u53d8\u6362\u7684\u6027\u8d28","text":"<ul> <li> <p>\u7ebf\u6027\u6027\u8d28</p> \\[ \\begin{gather*} F_1(\\omega) = \\mathscr{F}[f_1(t)],F_2(\\omega) = \\mathscr{F}[f_2(t)] \\\\ \\Rightarrow \\mathscr{F}[\\alpha f_a(t) + \\beta f_2(t)] = \\alpha F_1(\\omega) + \\beta F_2(\\omega) \\end{gather*} \\] <p>\u9006\u53d8\u6362\u540c\u7406\u6210\u7acb\u3002</p> </li> <li> <p>\u5e73\u79fb\u6027\u8d28</p> \\[ \\begin{gather*} F(\\omega) = \\mathscr{F}[f(t)] \\\\ \\Rightarrow \\mathscr{F}[f(t - t_0)] = e^{-i\\omega t_0}F(\\omega) ,\\\\ \\mathscr{F}^{-1}[F(\\omega - \\omega_0)] = e^{i\\omega t_0}f(t) \\end{gather*} \\] </li> <li> <p>\u4f38\u7f29\u6027\u8d28</p> \\[ \\begin{gather*} F(\\omega) = \\mathscr{F}[f(t)] \\\\ \\Rightarrow \\mathscr{F}[f(at)] = \\dfrac{1}{|a|}F(\\dfrac{\\omega}{a}) \\end{gather*} \\] </li> <li> <p>\u5fae\u5206\u6027\u8d28</p> \\[ \\begin{gather*} \u82e5 \\lim_{|t| \\to +\\infty}f(t) = 0, \u5219 \\mathscr{F}[f'(t)] = i\\omega \\mathscr{F}[f(t)] \\\\ \u82e5 \\lim_{|t| \\to +\\infty}f^{(k)}(t) = 0, \u5219 \\mathscr{F}[f^{(n)}(t)] = (i\\omega)^n \\mathscr{F}[f(t)] \\end{gather*} \\] </li> <li> <p>\u79ef\u5206\u6027\u8d28</p> \\[ \\begin{gather*} \u82e5\\ \\  g(t) = \\int_{-\\infty}^t f(\\tau)d\\tau,\\lim_{t \\to +\\infty} g(t) = 0,\u5219 \\\\ \\mathscr{F}[g(t)] = \\dfrac{1}{i\\omega}\\mathscr{F}[f(t)] \\end{gather*} \\] <p>\u5176\u5b9e\u5c31\u662f\u6c42\u5bfc\u5012\u8fc7\u6765\u7684\u5f0f\u5b50\u3002</p> </li> <li> <p>\u5377\u79ef\u4e0e\u5377\u79ef\u5b9a\u7406</p> <p>\\(f_1(t)\\) \u4e0e \\(f_2(t)\\) \u7684\u5377\u79ef\u8bb0\u4e3a \\(f_1(t) \\ast f_2(t) = \\int_{-\\infty}^{+\\infty}f_1(\\tau)f_2(t - \\tau)d\\tau\\)\u3002</p> <p>\u4e14\u5377\u79ef\u6ee1\u8db3\u4ea4\u6362\u5f8b\uff0c\u7ed3\u5408\u5f8b\u548c\u5206\u914d\u5f8b\u3002</p> <p>\u5377\u79ef\u5b9a\u7406</p> \\[ \\begin{gather*} F_1(\\omega) = \\mathscr{F}[f_1(t)],F_2(\\omega) = \\mathscr{F}[f_2(t)] \\\\ \\Rightarrow \\mathscr{F}[f_1(t) * f_2(t)] = F_1(\\omega) \\cdot F_2(\\omega) \\\\ \u63a8\u8bba \\Rightarrow \\mathscr{F}[f_1(t) \\cdot f_2(t)] = \\dfrac{1}{2\\pi} F_1(\\omega) * F_2(\\omega) \\end{gather*} \\] </li> </ul>"},{"location":"math/complex_analysis/chap6/#5","title":"5 \u4e60\u9898\u8bfe","text":""},{"location":"math/complex_analysis/chap7/","title":"\u7b2c\u4e03\u7ae0 \u62c9\u666e\u62c9\u65af\u53d8\u6362","text":""},{"location":"math/complex_analysis/chap7/#0","title":"0 \u603b\u7ed3","text":""},{"location":"math/complex_analysis/chap7/#1","title":"1 \u62c9\u666e\u62c9\u65af\u53d8\u6362\u7684\u6982\u5ff5","text":"<ul> <li> <p>\u62c9\u666e\u62c9\u65af\u53d8\u6362</p> <p></p> <p></p> </li> <li> <p>\u62c9\u666e\u62c9\u65af\u53d8\u6362\u5b58\u5728\u7684\u6761\u4ef6</p> <p></p> </li> <li> <p>\u91cd\u8981\u516c\u5f0f &amp; \u4f8b\u9898</p> <p></p> <p></p> <p></p> <p></p> <p></p> </li> </ul>"},{"location":"math/complex_analysis/chap7/#2","title":"2 \u62c9\u666e\u62c9\u65af\u53d8\u6362\u7684\u6027\u8d28","text":"<ul> <li> <p>\u7ebf\u6027\u6027\u8d28</p> \\[ \\begin{gather*}   F_1(\\omega) = \\mathscr{L}[f_1(t)],F_2(\\omega) = \\mathscr{L}[f_2(t)] \\\\   \\Rightarrow \\mathscr{L}[\\alpha f_a(t) + \\beta f_2(t)] = \\alpha F_1(\\omega) + \\beta F_2(\\omega) \\end{gather*} \\] <p>\u9006\u53d8\u6362\u540c\u7406</p> </li> <li> <p>\u5fae\u5206\u6027\u8d28</p> \\[ \\begin{gather*}   F(s) = \\mathscr{L}[f(t)] \\Rightarrow \\mathscr{L}[f'(t)] = sF(s) - f(0)\\\\   \u4e00\u822c\u5730\uff0c\u6709\\ \\ \\mathscr{L}[f^{(n)}(t)] = s^nF(s) - s^{n - 1}f(0) - s^{n - 2}f'(0) - \\dots - sf^{(n - 2)}(0) - f^{(n - 1)}(0) \\\\   F(s) = \\mathscr{L}[f(t)] \\Rightarrow F'(s) = -\\mathscr{L}[tf(t)] \\Rightarrow \u5219\\ f(t) = \\dfrac{1}{t}\\mathscr{L}[-F'(s)] \\\\   \u4e00\u822c\u5730\uff0c\u6709\\ \\ F^{(n)}(s) = (-1)^n\\mathscr{L}[t^nf(t)] \\end{gather*} \\] </li> <li> <p>\u79ef\u5206\u6027\u8d28</p> \\[ \\begin{gather*}   F(s) = \\mathscr{L}[f(t)] \\Rightarrow \\mathscr{L}[\\int_0^t f(t)dt] = \\dfrac{1}{s} F(s) \\\\   F(s) = \\mathscr{L}[f(t)] \\Rightarrow \\mathscr{L}[\\dfrac{f(t)}{t}] =  \\int_{0}^{+\\infty} \\dfrac{f(t)}{t} e^{-st}dt = \\int_{s}^{\\infty}F(s)ds \\\\   \u6216 f(t) = t\\mathscr{L}^{-1}[\\int_s^{+\\infty}F(s)ds] \\end{gather*} \\] </li> <li> <p>\u4f4d\u79fb\u6027\u8d28</p> \\[   \u8bbe F(s) = \\mathscr{L}[f(t)]\uff0c a \u4e3a\u590d\u5e38\u6570\uff0c\u5219 \\mathscr{L}[e^{at}f(t)] = F(s - a) \\] </li> <li> <p>\u5ef6\u8fdf\u6027\u8d28</p> \\[   \u82e5\\ t &lt; 0\\ \u65f6\\ f(t) = 0\uff0c\u4e14\\ F(s) = \\mathscr{L}[f(t)]\uff0c\u5219\u5bf9\u4efb\u610f\u975e\u8d1f\u5b9e\u6570\\ \\tau\uff0c\u6709\\ \\mathscr{L}[f(t - \\tau)] = e^{-s\\tau}F(s) \\] <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c</p> <p></p> </li> <li> <p>\u8ba1\u7b97\u53cd\u5e38\u79ef\u5206</p> <p></p> </li> <li> <p>\u5377\u79ef\u53ca\u5377\u79ef\u5b9a\u7406</p> <p></p> <p></p> </li> <li> <p>\u4f8b\u9898</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> </li> </ul>"},{"location":"math/complex_analysis/chap7/#3","title":"3 \u62c9\u666e\u62c9\u65af\u9006\u53d8\u6362","text":"\\[ \\begin{gather*}     \\mathscr{L}^{-1}[F(s)] = f(t) \\\\     \u6c42\u89e3\u62c9\u666e\u62c9\u65af\u53d8\u6362\u7684\u9006\u53d8\u6362\uff0c\u53c8\u79f0\u4e3a\u62c9\u6c0f\u53d8\u6362\u7684\u53cd\u6f14\u3002 \\end{gather*} \\] <ul> <li> <p>\u53cd\u6f14\u79ef\u5206\u516c\u5f0f</p> <p>\\(f(t) = \\dfrac{1}{2\\pi i }\\int_{\\beta - i\\infty}^{\\beta + i\\infty}F(s)e^{st}ds\\) \u8fd9\u4e2a\u516c\u5f0f\u662f\u62c9\u5f0f\u9006\u53d8\u6362\u7684\u4e00\u822c\u516c\u5f0f\uff0c\u79f0\u4e3a\u53cd\u6f14\u79ef\u5206\u516c\u5f0f\u3002</p> <p></p> </li> <li> <p>\u5229\u7528\u7559\u6570\u8ba1\u7b97\u53cd\u6f14\u516c\u5f0f     </p> <p></p> </li> <li> <p>\u4f8b\u9898</p> <p>\u6c42\u62c9\u5f0f\u9006\u53d8\u6362\u65e2\u53ef\u4ee5\u7528\u7559\u6570\u6765\u505a\uff0c\u4e5f\u53ef\u4ee5\u62c6\u5206\u6210\u719f\u6089\u7684\u51fd\u6570\u6765\u505a\u3002</p> <p></p> <p></p> </li> </ul>"},{"location":"math/complex_analysis/chap7/#4","title":"4 \u7528\u62c9\u6c0f\u53d8\u6362\u89e3\u5e38\u5fae\u5206\u65b9\u7a0b","text":"<ul> <li> <p>\u5fae\u5206\u65b9\u7a0b\u7684\u62c9\u6c0f\u53d8\u6362\u89e3\u6cd5</p> <p>\u7531\u4e8e\u76f4\u63a5\u5bf9\u5fae\u5206\u65b9\u7a0b\u8fd0\u7b97\u6bd4\u8f83\u56f0\u96be\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u5bf9\u4e24\u8fb9\u8fdb\u884c\u62c9\u666e\u62c9\u65af\u53d8\u6362\uff0c\u6c42\u51fa \\(F(s)\\) \u7684\u8868\u8fbe\u5f0f\uff0c\u7136\u540e\u518d\u53ef\u4ee5\u7528\u7559\u6570\u6cd5\u6c42\u51fa\u9006\u53d8\u6362\u3002</p> <p></p> </li> <li> <p>\u4f8b\u9898</p> <p></p> <p></p> <p></p> </li> </ul>"},{"location":"math/complex_analysis/chap7/#5","title":"5 \u4e60\u9898\u8bfe","text":""},{"location":"math/concrete_math/chap1/","title":"Recurrent Problems","text":""},{"location":"math/concrete_math/chap1/#0x00-note","title":"0x00. Note","text":"<p>\u5bf9\u4e8e n \u6761\u76f4\u7ebf\u5212\u5206\u533a\u57df\u4e2a\u6570 \\(L_n\\)\uff0c\u6ee1\u8db3 \\(L_n = L_{n - 1} + n = S_n + 1 = \\dfrac{1}{2}n(n + 1) + 1\\)\u3002 \u5176\u4e2d \\(S_n\\) \u4e5f\u88ab\u79f0\u4e3a\u4e09\u89d2\u6570\u3002</p> <p>\u5bf9\u4e8e n \u6761\u6298\u7ebf\u5212\u5206\u533a\u57df\u4e2a\u6570 \\(Z_n\\)\uff0c\u53ef\u4ee5\u770b\u4f5c\u662f\u4e24\u6761\u76f4\u7ebf\uff0c\u7136\u540e\u6bcf\u4e24\u6761\u76f4\u7ebf\uff08\u5373\u4e00\u4e2a\u6298\u7ebf\uff09\u5207\u5272\u7684\u533a\u57df\u5c11\u4e86 2 \u4e2a\uff0c\u6ee1\u8db3 \\(Z_n = L_{2n} - 2n = 2n^2 - n + 1\\)\u3002</p>"},{"location":"math/concrete_math/chap1/#0x01-exercise","title":"0x01. Exercise","text":""},{"location":"math/concrete_math/chap1/#exercise-8","title":"Exercise 8","text":"Solution <p>\\(Q_0 = \\alpha, Q_1 = \\beta, Q_2 = \\dfrac{1 + \\beta}{\\alpha}, Q_3 = \\dfrac{1 + \\alpha + \\beta}{\\alpha\\beta}, Q_4 = \\dfrac{1 + \\alpha}{\\beta}, Q_5 = \\alpha, Q_6 = \\beta\\)</p> <p>\u5448\u5468\u671f\u53d8\u6362\u3002</p>"},{"location":"math/concrete_math/chap1/#exercise-9","title":"Exercise 9","text":"Solution <p>a. \u628a \\(x_n = \\dfrac{\\sum x_{n - 1}}{n - 1}\\) \u4ee3\u5165\u516c\u5f0f\u5373\u53ef\u63a8\u51fa\u3002</p> <p>b.      \\begin{eqnarray}     (x_1x_2...x_n)(x_{n + 1}x_{n + 2}...x_{2n}) \\le \\left (\\dfrac{x_1 + x_2 + ... + x_n}{n}\\right )^n \\left (\\dfrac{x_{n + 1} + x_{n + 2} + ... + x_{2n}}{n}\\right )^n \\newline \\le \\left (\\left (\\dfrac{x_1 + x_2 + ... + x_n + x_{n + 1} + x_{n + 2} + ... + x_{2n}}{2n}\\right )^2\\right )^n     \\end{eqnarray}</p> <p>c. \u6240\u6709\u7684\u4e8c\u7684\u5e42\u6b21\u90fd\u53ef\u4ee5\u6ee1\u8db3\uff0c\u7136\u540e\u5c0f\u4e8e\u4e8c\u7684\u5e42\u6b21\u7684\u4e5f\u90fd\u80fd\u6ee1\u8db3\u3002</p>"},{"location":"math/concrete_math/chap1/#exercise-10","title":"Exercise 10","text":"Solution <p>\u8bbe\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u4e3a A\uff0cB\uff0cC\u3002\u90a3\u4e48\u5bf9\u4e8e\u4ece A -&gt; B \u79fb\u8d70 n \u4e2a\uff0c\u4e00\u5b9a\u662f A -&gt; C \u79fb\u8d70 n - 1 \u4e2a\uff0cA -&gt; B \u79fb\u8d70\u4e00\u4e2a\uff0c\u7136\u540e C -&gt; B \u79fb\u8d70 n - 1 \u4e2a\u3002\u6545 \\(Q_n = R_{n - 1} + 1 + R_{n - 1}\\)\u3002</p> <p>\u90a3\u4e48\u5bf9\u4e8e\u4ece B -&gt; A \u79fb\u8d70 n \u4e2a\uff0c\u4e00\u5b9a\u662f B -&gt; A \u79fb\u8d70 n - 1 \u4e2a\uff0cB -&gt; C \u79fb\u8d70\u4e00\u4e2a\uff0c\u7136\u540e A -&gt; B \u79fb\u8d70 n - 1 \u4e2a\uff0cC -&gt; A \u79fb\u8d70\u4e00\u4e2a\uff0c\u7136\u540e B -&gt; A \u79fb\u8d70 n - 1 \u4e2a\u3002\u6545 \\(R_n = R_{n - 1} + 1 + Q_{n - 1} + 1 + R_{n - 1}\\)\u3002\u5e26\u5165\u5148\u524d\u7684 \\(Q_n\\) \u53ef\u5f97 \\(R_n = 2R_{n - 1} + 2 + Q_{n - 1}\\)\u3002</p>"},{"location":"math/concrete_math/chap1/#exercise-11","title":"Exercise 11","text":"Solution <p>a. \\(A_n = 2A_{n - 1} + 2 = 2^{n + 1} - 2\\)</p> <p>b. \u867d\u7136\u4e0d\u592a\u4f1a\u4e25\u683c\u7684\u8bc1\u660e\uff0c\u4f46\u662f\u53ef\u4ee5\u5927\u81f4\u77e5\u9053\u662f\u5982\u4f55\u64cd\u4f5c\u7684\u3002\u7ed3\u5408 a \u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u53d1\u73b0\uff0ca \u64cd\u4f5c\u5b8c\u4e4b\u540e\u76f8\u90bb\u4e24\u4e2a\u76d8\u5b50\u90fd\u4e92\u6362\u4e86\u4f4d\u7f6e\uff0c\u90a3\u4e48\u64cd\u4f5c\u4e24\u6b21\u4e4b\u540e\u5c31\u53ef\u4ee5\u6362\u56de\u6765\u3002\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u5c3d\u53ef\u80fd\u8fdb\u884c\u9650\u5236\u5c11\u7684\u64cd\u4f5c\uff08\u5373 a \u64cd\u4f5c\uff09\uff0c\u8fd9\u6837\u6b65\u6570\u624d\u4f1a\u5c11\u3002\u6240\u4ee5\u5177\u4f53\u64cd\u4f5c\u662f\u4ece A -&gt; B \u79fb\u8d70 n - 1 \u5bf9\uff08\u53cd\uff09\uff0c\u4e00\u5b9a\u662f A -&gt; C \u79fb\u8d70 1 \u5bf9\uff08\u53cd\uff09\uff0cB -&gt; A \u79fb\u8d70 n - 1 \u5bf9\uff08\u6b63\uff09\uff0c\u7136\u540e C -&gt; B \u79fb\u8d70 1 \u5bf9\uff08\u6b63\uff09\uff0c\u6700\u540e\u8981\u4fdd\u6301\u987a\u5e8f\u4e0d\u53d8\u5730\u628a n - 1 \u5bf9\u4ece A \u79fb\u5230 B\u3002\u6545 \\(B_n = A_{n - 1} + 2 + A_{n - 1} + 2 + B_{n - 1}\\)\u3002\u5176\u5b9e\u4e5f\u53ef\u4ee5\u770b\u4f5c \\(B_n = A_{n - 1} + 1 + A_{n - 1} + 1 + A_{n - 1} + 1 + A_{n - 1}\\)\u3002\u5219\u6709 \\(B_n = 2^{n + 2} - 5\\)\uff0c\u786e\u5b9e\u65e0\u6cd5\u6784\u9020\u51fa\u66f4\u5c0f\u7684\u65b9\u6848\u3002</p>"},{"location":"math/concrete_math/chap1/#exercise-12","title":"Exercise 12","text":"Solution <p>\u9012\u63a8\u516c\u5f0f\uff1a\\(R_n = 2R_{n - 1} + m_n\\)\u3002</p> <p>\u901a\u9879\uff1a\\(R_n = 2^{n - 1}m_1 + ... + 2m_{n - 1} + m_n\\)\u3002</p>"},{"location":"math/concrete_math/chap1/#exercise-13","title":"Exercise 13","text":"Solution <p>\u5148\u7ed9\u51fa\u4e00\u4e2a\u795e\u79d8\u7ed3\u8bba\uff1a\u5982\u679c\u5bf9\u4e8e\u67d0\u79cd\u5212\u5206\uff0c\u65b0\u52a0\u5165\u7684\u7ebf\u4ea7\u751f\u4e86 k \u4e2a\u4ea4\u70b9\uff0c\u90a3\u4e48\u5219\u4f1a\u4ea7\u751f k + 1 \u4e2a\u65b0\u533a\u57df\u3002 \u8fd9\u4e2a\u7ed3\u8bba\u5bf9\u4e8e\u76f4\u7ebf\uff0c\u6298\u7ebf\u548c\u672c\u9898\u5747\u9002\u7528\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a zig-zag\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5145\u5206\u957f\u7684\u6781\u72ed\u7a84\u7684\u6298\u7ebf\u4ee3\u66ff\uff0c\u8fd9\u6837\u5bf9\u4e8e\u6bcf\u6b21\u65b0\u589e\u7684 zig-zag\uff0c\u5b83\u90fd\u4f1a\u5bf9\u4e4b\u524d\u53e6\u5916\u67d0\u4e2a zig-zag \u4ea7\u751f 9 \u4e2a\u70b9\uff0c\u90a3\u4e48\u4e00\u5171\u53ef\u4ee5\u4ea7\u751f 9(n - 1) \u4e2a\u70b9\uff0c\u6545\u53ef\u4ea7\u751f 9(n - 1) + 1 \u4e2a\u65b0\u533a\u57df\u3002\u5219\u6709 \\(ZZ_n = ZZ_{n - 1} + 9(n - 1) + 1 = 9S_n - 8n + 1 = \\dfrac{9}{2}n^2 - \\dfrac{7}{2}n + 1\\)\u3002</p> <p>Exercise 14 </p> <p></p> <p>Exercise 15 </p> <p></p>"},{"location":"math/concrete_math/chap1/#exercise-16","title":"Exercise 16","text":"Solution <p>\u8bbe \\(g(n) = A(n)\\alpha + B(n)\\gamma + C(n)\\beta_0 + D(n)\\beta_1\\)\uff0c\u6211\u4eec\u4ee4 \\(\\gamma = 0\\)\uff0c\u5219\u6709 \\(g((1b_1b_2...b_m)_2) = (\\alpha\\beta_{b_1}\\beta_{b_2}...\\beta_{b_m})_3\\)\uff0c\u90a3\u4e48\u6709 \\(A(n)\\alpha + C(n)\\beta_0 + D(n)\\beta_1 = (\\alpha\\beta_{b_1}\\beta_{b_2}...\\beta_{b_m})_3\\)\uff0c\u5206\u522b\u4ee4\u5176\u4e2d\u4e00\u4e2a\u53d8\u91cf\u4e3a \\(1\\)\uff0c\u53e6\u5916\u4e24\u4e2a\u4e3a \\(0\\) \u5373\u53ef\u6c42\u51fa \\(A(n)\\)\uff0c\\(C(n)\\)\uff0c\\(D(n)\\) \u7684\u901a\u9879\u3002</p> <p>\u7136\u540e\u518d\u4ee4 \\(g(n) = n\\)\uff0c\u53ef\u4ee5\u5f97\u51fa \\(A(n) - B(n) + D(n) = n\\)\uff0c\u6545\u4e5f\u53ef\u4ee5\u6c42\u51fa \\(B(n)\\) \u901a\u9879\u3002</p> <p>Exercise 17 </p> <p></p> <p>Exercise 18 </p> <p></p> <p>Exercise 19 </p> <p></p>"},{"location":"math/concrete_math/chap1/#exercise-20","title":"Exercise 20","text":"Solution <p>\u8bbe \\(g(n) = A(n)\\alpha + B(n)\\gamma_0 + C(n)\\gamma_1 + D(n)\\beta_0 + E(n)\\beta_1\\)\uff0c\u6211\u4eec\u4ee4 \\(\\gamma_1 = \\gamma_0 = 0\\)\uff0c\u5219\u6709 \\(g((1b_1b_2...b_m)_2) = (\\alpha\\beta_{b_1}\\beta_{b_2}...\\beta_{b_m})_4\\)\uff0c\u90a3\u4e48\u6709 \\(A(n)\\alpha + D(n)\\beta_0 + E(n)\\beta_1 = (\\alpha\\beta_{b_1}\\beta_{b_2}...\\beta_{b_m})_4\\)\uff0c\u5206\u522b\u4ee4\u5176\u4e2d\u4e00\u4e2a\u53d8\u91cf\u4e3a \\(1\\)\uff0c\u53e6\u5916\u4e24\u4e2a\u4e3a \\(0\\) \u5373\u53ef\u6c42\u51fa \\(A(n)\\)\uff0c\\(D(n)\\)\uff0c\\(E(n)\\) \u7684\u901a\u9879\u3002</p> <p>\u7136\u540e\u518d\u4ee4 \\(g(n) = n\\)\uff0c\u53ef\u4ee5\u5f97\u51fa \\(A(n) - 2B(n) - 2C(n) + E(n) = n\\)\uff1b\u4ee4 \\(g(n) = n^2\\)\uff0c\u53ef\u4ee5\u5f97\u51fa \\(A(n) + 4C(n) + E(n) = n^2\\)\uff0c\u6545\u4e5f\u53ef\u4ee5\u6c42\u51fa \\(B(n)\\) \u548c \\(C(n)\\) \u901a\u9879\u3002</p> <p>Exercise 21 </p> <p></p>"},{"location":"math/concrete_math/chap2/","title":"Sums","text":""},{"location":"math/concrete_math/chap2/#0x00-note","title":"0x00. Note","text":""},{"location":"math/concrete_math/chap2/#0x01-exercise","title":"0x01. Exercise","text":"<p>Exercise 11</p> <p></p> <p>Solution</p> <p>Exercise 12</p> <p></p> <p>Exercise 13</p> <p></p> <p>Exercise 14 </p> <p></p> <p>Exercise 15 </p> <p></p> <p>Exercise 16</p> <p></p> <p>Exercise 17 </p> <p></p> <p>Exercise 18 </p> <p></p> <p>Exercise 19 </p> <p></p> <p>Exercise 20</p> <p></p>"},{"location":"math/concrete_math/chap3/","title":"Integer Functions","text":""},{"location":"math/concrete_math/chap4/","title":"Number Theory","text":""},{"location":"math/concrete_math/chap5/","title":"Binomial Coefficients","text":""},{"location":"math/concrete_math/chap5/#5x01-basic-identities","title":"5x01. BASIC IDENTITIES","text":"\\[     \\binom{r}{k} = \\left\\{\\begin{matrix}     \\dfrac{r(r - 1)(r - 2) ... (r - k + 1)}{k(k - 1)...(1)} = \\dfrac{r^{\\underline{k}}}{k!} &amp; \\text{ integer } k \\ge 0\\\\     0 &amp; \\text{ integer } k &lt; 0     \\end{matrix}\\right. \\]"},{"location":"math/concrete_math/chap5/#5x02-basic-practice","title":"5x02. BASIC PRACTICE","text":""},{"location":"math/concrete_math/chap5/#5x03-tricks-of-the-trade","title":"5x03. TRICKS OF THE TRADE","text":""},{"location":"math/concrete_math/chap5/#trick-1-going-halves","title":"Trick 1: Going halves.","text":"<p>Duplication formula</p> \\[     r^{\\underline{k}}\\left(r - \\dfrac{1}{2}\\right)^{\\underline{k}} = (2r)^{\\underline{2k}} / 2^{2k}, \\text{ integer k} \\ge 0 \\] <p>We can divide both sides by \\(k!^2\\), and get</p> \\[     \\binom{r}{k} \\binom{r - \\dfrac{1}{2}}{k} = \\binom{2r}{2k}\\binom{2k}{k} / 2^{2k}, \\text{ integer k} \\]"},{"location":"math/concrete_math/chap5/#trick-2-high-order-differences","title":"Trick 2: High-order differences.","text":""},{"location":"math/concrete_math/chap5/#trick-3-inversion","title":"Trick 3: Inversion.","text":""},{"location":"math/concrete_math/chap5/#exercises","title":"Exercises","text":""},{"location":"math/ep/0001/","title":"1 ~ 10","text":""},{"location":"math/ep/0001/#1-multiples-of-3-or-5","title":"1. Multiples of 3 or 5","text":"<p>\u6c42 \\(1000\\) \u4ee5\u5185 \\(3\\) \u6216 \\(5\\) \u7684\u500d\u6570\u548c\u3002</p> <p>Solution</p> <p>\u679a\u4e3e\u5373\u53ef\u3002</p> <pre><code>void solve() {\n    int n = 1000;\n    int ans = 0;\n    for (int i = 1; i &lt; n; i++) {\n        if (i % 3 == 0 || i % 5 == 0) ans += i;\n    }\n    std::cout &lt;&lt; ans &lt;&lt; '\\n';\n    return ;\n}\n</code></pre>"},{"location":"math/ep/0001/#2-even-fibonacci-numbers","title":"2. Even Fibonacci Numbers","text":"<p>\u6c42 \\(4,000,000\\) \u4ee5\u5185\u6590\u6ce2\u90a3\u5951\u6570\u5217\u503c\u662f\u5076\u6570\u7684\u548c\u3002</p> <p>Solution</p> <p>\u679a\u4e3e\u5373\u53ef\u3002</p> <pre><code>void solve() {\n    std::vector&lt;int&gt; a(3);\n    a[0] = 1, a[1] = 2;\n    i64 ans = 2;\n    for (int i = 2; a[(i + 2) % 3] &lt;= 4000000; i++) {\n        a[i % 3] = a[(i + 1) % 3] + a[(i + 2) % 3]; \n        if (a[i % 3] % 2 == 0) ans += a[i % 3];\n    }   \n    std::cout &lt;&lt; ans &lt;&lt; '\\n';\n    return ;\n}\n</code></pre>"},{"location":"math/ep/0001/#3-largest-prime-factor","title":"3. Largest Prime Factor","text":"<p>Solution</p>"},{"location":"math/ep/0001/#4-largest-palindrome-product","title":"4. Largest Palindrome Product","text":"<p>Solution</p>"},{"location":"math/ep/0001/#5-smallest-multiple","title":"5. Smallest Multiple","text":"<p>Solution</p>"},{"location":"math/ep/0001/#6-sum-square-difference","title":"6. Sum Square Difference","text":"<p>Solution</p>"},{"location":"math/ep/0001/#7-10001-st-prime","title":"7. \\(10001\\) st Prime","text":"<p>Solution</p>"},{"location":"math/ep/0001/#8-largest-product-in-a-series","title":"8. Largest Product in a Series","text":"<p>Solution</p>"},{"location":"math/ep/0001/#9-special-pythagorean-triplet","title":"9. Special Pythagorean Triplet","text":"<p>Solution</p>"},{"location":"math/ep/0001/#10-summation-of-primes","title":"10. Summation of Primes","text":"<p>Solution</p>"},{"location":"math/probability/Probability/","title":"Probability","text":""},{"location":"math/probability/Probability/#_1","title":"\u7b2c\u4e94\u7ae0 \u5927\u6570\u5b9a\u5f8b\u53ca\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406","text":""},{"location":"math/probability/Probability/#s-51","title":"\\(\\S 5.1\\) \u5207\u6bd4\u96ea\u592b\u4e0d\u7b49\u5f0f","text":""},{"location":"math/probability/Probability/#s-52","title":"\\(\\S 5.2\\) \u5927\u6570\u5b9a\u5f8b","text":""},{"location":"math/probability/Probability/#s-53","title":"\\(\\S 5.3\\) \u4e2d\u5fc3\u6781\u9650\u5b9a\u7406","text":"<ul> <li>\u4f9d\u5206\u5e03\u6536\u655b</li> </ul> <ul> <li></li> </ul>"},{"location":"math/probability/chap1/","title":"\u968f\u673a\u4e8b\u4ef6\u53ca\u5176\u6982\u7387\u8bba","text":""},{"location":"math/probability/chap1/#1","title":"1 \u968f\u673a\u8bd5\u9a8c\u4e0e\u968f\u673a\u4e8b\u4ef6","text":""},{"location":"math/probability/chap1/#11","title":"1.1 \u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u6211\u4eec\u901a\u5e38\u7528\u5b57\u6bcd \\(E\\) \u8868\u793a\u4e00\u4e2a\u968f\u673a\u8bd5\u9a8c\u3002\u968f\u673a\u8bd5\u9a8c \\(E\\) \u7684\u57fa\u672c\u7ed3\u679c\u79f0\u4e3a\u6837\u672c\u70b9\uff0c\u7528 \\(\\omega\\) \u8868\u793a\u3002\u79f0\u968f\u673a\u8bd5\u9a8c \\(E\\) \u7684\u6240\u6709\u57fa\u672c\u7ed3\u679c\u7684\u96c6\u5408\u4e3a\u6837\u672c\u7a7a\u95f4\uff0c\u7528 \\(\\Omega =\\{\\omega \\}\\) \u8868\u793a\u3002</li> <li>\u6837\u672c\u7a7a\u95f4 \\(\\Omega\\) \u7684\u90e8\u5206\u5b50\u96c6\u79f0\u4e3a\u968f\u673a\u8bd5\u9a8c \\(E\\) \u7684\u968f\u673a\u4e8b\u4ef6 \\(A\\)\uff0c\u82e5\u8bd5\u9a8c\u7ed3\u679c \\(\\omega \\in A\\)\uff0c\u5219\u79f0\u4e8b\u4ef6 \\(A\\) \u53d1\u751f\u3002</li> <li>\u7531\u4e00\u4e2a\u6837\u672c\u70b9\u7ec4\u6210\u7684\u4e8b\u4ef6\u79f0\u4e3a\u57fa\u672c\u4e8b\u4ef6\u3002\u5fc5\u7136\u53d1\u751f\u7684\u4e8b\u4ef6\u79f0\u4e3a\u5fc5\u7136\u4e8b\u4ef6\uff0c\u4e0d\u53ef\u80fd\u53d1\u751f\u4e8b\u4ef6\u79f0\u4e3a\u4e0d\u53ef\u80fd\u4e8b\u4ef6\u3002</li> <li>\u6709\u9650\u7684\u6837\u672c\u70b9\u7684\u7a7a\u95f4\u79f0\u4e3a\u6709\u9650\u6837\u672c\u7a7a\u95f4\uff0c\u65e0\u9650\u7684\u6837\u672c\u70b9\u7684\u7a7a\u95f4\u79f0\u4e3a\u65e0\u9650\u6837\u672c\u7a7a\u95f4\u3002</li> </ul>"},{"location":"math/probability/chap1/#12","title":"1.2 \u4e8b\u4ef6\u5173\u7cfb","text":"<ul> <li>\u5f53 \\(A\\) \u53d1\u751f\u65f6 \\(B\\) \u4e00\u5b9a\u53d1\u751f\uff0c\u5219 \\(B\\) \u5305\u542b\u4e8b\u4ef6 \\(A\\)\uff0c\u8bb0\u4f5c \\(A \\subseteq B\\)\u3002</li> <li>\u76f8\u4e92\u5305\u542b\u7684\u4e8b\u4ef6\u79f0\u4e3a\u4e8b\u4ef6\u76f8\u7b49\uff0c\u8bb0\u4f5c \\(A=B\\)\u3002</li> <li>\\(A\\)\uff0c\\(B\\) \u4e0d\u80fd\u540c\u65f6\u53d1\u751f\u79f0\u4e3a\u4e92\u4e0d\u76f8\u5bb9\u3002</li> <li>\\(A\\)\uff0c\\(B\\) \u4e8b\u4ef6\u4e2d\u5fc5\u6709\u4e00\u4e2a\u53d1\u751f\u4e14\u4e0d\u80fd\u540c\u65f6\u53d1\u751f\u79f0\u4e3a\u4e8b\u4ef6\u7684\u4e92\u9006\uff0c\u5b83\u4eec\u662f \u4e92\u9006 / \u5bf9\u7acb \u7684\u3002\u5176\u4e2d\u4e00\u4e2a\u4e8b\u4ef6\u662f\u53e6\u4e00\u4e2a\u4e8b\u4ef6\u7684\u9006\u4e8b\u4ef6\u3002\u8bb0\u4f5c \\(\\bar A = B\\)\u3002\u663e\u7136 \\(\\bar{\\bar A} = A\\)\u3002</li> </ul>"},{"location":"math/probability/chap1/#13","title":"1.3 \u968f\u673a\u4e8b\u4ef6\u7684\u8fd0\u7b97","text":"<ul> <li> <p>\u4e8b\u4ef6\u7684\u4ea4\uff0c\u8bf4\u660e\u4e24\u4e2a\u4e8b\u4ef6\u4e2d\u81f3\u5c11\u53d1\u751f\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u53c8\u79f0\u4e3a\\(A\\)\uff0c\\(B\\) \u4e8b\u4ef6\u7684\u5e76\u4e8b\u4ef6\u6216\u548c\u4e8b\u4ef6\uff0c\u8bb0\u4f5c \\(A \\cup B\\)\u3002</p> </li> <li> <p>\u4e8b\u4ef6\u7684\u5e76\uff0c\u8bf4\u660e\u4e24\u4e2a\u4e8b\u4ef6\u4e2d\u90fd\u53d1\u751f\uff0c\u53c8\u79f0\u4e3a \\(A\\)\uff0c\\(B\\) \u4e8b\u4ef6\u7684\u4ea4\u4e8b\u4ef6\u6216\u79ef\u4e8b\u4ef6\uff0c\u8bb0\u4f5c \\(A \\cap B\\)\u3002</p> </li> <li> <p>\u4e8b\u4ef6\u7684\u5dee\uff0c\u4e8b\u4ef6 \\(A\\) \u53d1\u751f\u800c \\(B\\) \u4e0d\u53d1\u751f\uff0c\u8bb0\u4f5c \\(A-B\\)\u3002</p> \\[ A - B = A\\bar B = A - AB \\\\  (A - B) \\cup B = A \\cup B \\] </li> <li> <p>\u96c6\u5408\u7684\u8fd0\u7b97\u6ee1\u8db3\u7ed3\u5408\u5f8b\uff0c\u4ea4\u6362\u5f8b\uff0c\u5206\u914d\u5f8b\u3002\u8fd9\u91cc\u7740\u91cd\u5f3a\u8c03\u4e00\u4e0b\u5bf9\u5076\u7387\u3002\u5199\u4f5c \\(\\bar{A \\cup B} = \\bar{A}\\bar{B}\\)\uff0c\\(\\bar{AB}=\\bar A \\cup \\bar B\\)\u3002</p> </li> </ul>"},{"location":"math/probability/chap1/#14","title":"1.4 \u51e0\u4e2a\u5e38\u89c1\u7ed3\u8bba","text":"\\[   \\begin{gather*}   A - B = A - AB = A \\bar B \\\\   A \\cup B = A \\cup (B-A) = A\\cup(B - AB) \\\\   A = A\\Omega = A(B\\cup \\bar B) = AB\\cup A\\bar B   \\end{gather*} \\]"},{"location":"math/probability/chap1/#2","title":"2 \u968f\u673a\u4e8b\u4ef6\u7684\u6982\u7387","text":""},{"location":"math/probability/chap1/#21","title":"2.1 \u9891\u7387 &amp; \u6982\u7387","text":"<ul> <li> <p>\u9891\uff08\u6982\uff09\u7387\u6709\u975e\u8d1f\u6027\uff1b\u5bf9\u4e8e\u5fc5\u7136\u4e8b\u4ef6\uff0c\u5176\u9891\uff08\u6982\uff09\u7387\u662f \\(1\\)\uff1b\u5bf9\u4e8e\u4e92\u4e0d\u76f8\u5bb9\u7684\u4e8b\u4ef6\uff0c\u9891\uff08\u6982\uff09\u7387\u5177\u6709\u53ef\u52a0\u6027\u3002</p> </li> <li> <p>\u9891\u7387\u968f\u8bd5\u9a8c\u6b21\u6570\u7684\u589e\u52a0\u8d8b\u4e8e\u7a33\u5b9a\uff0c\u5176\u7a33\u5b9a\u503c\u4f5c\u4e3a\u4e8b\u4ef6\u7684\u6982\u7387\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u4efb\u4e00\u4e8b\u4ef6\uff0c\u6709 \\(P(\\bar A) = 1 - P(A)\\)\u3002</p> </li> <li> <p>\u82e5 \\(A \\subseteq B\\)\uff0c\u5219\u6709 \\(P(B - A) = P(B) - P(A)\\)\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u4efb\u610f\u4e8b\u4ef6\uff0c\u6709 \\(P(B - A) = P(B) - P(AB)\\)\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u4efb\u610f\u4e8b\u4ef6\uff0c\u6709 \\(P(A \\cup B) = P(A) + P(B) - P(AB)\\)\u3002</p> <p>\u8be5\u516c\u5f0f\u63a8\u5e7f\u5230 \\(n\\) \u7684\u60c5\u51b5\u5373\u662f\u5bb9\u65a5\u5b9a\u7406\u3002</p> </li> </ul>"},{"location":"math/probability/chap1/#22","title":"2.2 \u53e4\u5178\u6982\u578b","text":"<ul> <li>\u57fa\u672c\u7279\u70b9\uff1a\u6837\u672c\u7a7a\u95f4\u53ea\u542b\u6709\u9650\u4e2a\u70b9\u4e14\u6bcf\u4e2a\u6837\u672c\u70b9\u7684\u51fa\u73b0\u662f\u7b49\u53ef\u80fd\u7684\u3002\u79f0\u4e3a\u7b49\u53ef\u80fd\u6982\u578b\uff0c\u4e5f\u79f0\u53e4\u5178\u6982\u578b\u3002</li> </ul>"},{"location":"math/probability/chap1/#23","title":"2.3 \u51e0\u4f55\u6982\u578b","text":"<p>\\(P(A) = \\dfrac{A \u7684\u5ea6\u91cf}{\\omega \u7684\u5ea6\u91cf}\\)</p>"},{"location":"math/probability/chap1/#3","title":"3 \u6761\u4ef6\u6982\u7387","text":"<ul> <li>\u4e8b\u4ef6 A \u5728\u4e8b\u4ef6 B \u53d1\u751f\u4e0b\u53d1\u751f\u7684\u6982\u7387\u662f \\(P(B | A) = \\dfrac{P(AB)}{P(A)}\\)\u3002</li> <li>\u5bf9\u4e8e\u4e24\u4e24\u4e0d\u76f8\u5bb9\u4e8b\u4ef6\uff0c\u6709 \\(P((\\bigcup_{i = 1}^{\\infty}B_i) | A) = \\sum_{i = 1} ^ {\\infty}P(B_i | A)\\)\u3002</li> <li>\u5e38\u89c1\u516c\u5f0f\u6709      \\(P(\\Phi | A) = 0\\) \\(P(\\bar B | A) = 1 - P(B | A)\\) \\(P((B_1 \\cup B_2) | A) = P(B_1 | A) + P(B_2 | A) - P((B_1B_2) | A)\\)</li> <li>\u4e58\u6cd5\u516c\u5f0f \\(P(AB) = P(A | B)P(B) = P(B | A)P(A)\\)     \u63a8\u5e7f \\(P(ABC) = P(A)P(B | A)P(C | AB)\\) \\(P(A_1A_2 \\dots A_n) = P(A_1)P(A_2 | A_1)P(A_3 | A_1A_2) \\dots P(A_n | A_1A_2 \\dots A_n)\\)</li> <li>\u5168\u6982\u7387\u516c\u5f0f     \u82e5\u4e8b\u4ef6 \\(A_1\\)\uff0c\\(A_2\\)\uff0c\\(\\cdots\\)\uff0c\\(A_n\\) \u6ee1\u8db3\u4e24\u4e24\u4e92\u4e0d\u76f8\u5bb9\u4e14 \\(A_1 \\cup A_2 \\cup \\dots A_n = \\Omega\\)\uff0c\u90a3\u4e48\u79f0 \\(A_1\\)\uff0c\\(A_2\\)\uff0c\\(\\cdots\\)\uff0c\\(A_n\\) \u4e3a\u6837\u672c\u7a7a\u95f4\u7684\u4e00\u4e2a\u5206\u89e3\u6216\u5b8c\u5168\u4e8b\u4ef6\u7ec4\u3002\u5219\u5bf9\u4e8e\u4e8b\u4ef6 \\(B\\)\uff0c\u6709 \\(P(B) = \\sum_{i = 1}^n P(B | A_i)P(A_i)\\)\u3002</li> <li>\u8d1d\u53f6\u65af\u516c\u5f0f     \u5c06\u4e58\u6cd5\u516c\u5f0f\u5e26\u5165\u5168\u6982\u7387\u516c\u5f0f\u53ef\u5f97 \\(P(A_i | B) = \\dfrac{P(B | A_i)P(A_i)}{\\sum_{j = 1}^n P(B | A_j)P(A_j)}\\)\uff08\u5206\u5b50\u8868\u793a \\(BA_i\\) \u53d1\u751f\u7684\u6982\u7387\uff0c\u5206\u6bcd\u8868\u793a \\(B\\) \u53d1\u751f\u7684\u6982\u7387\uff09\u3002     \u8d1d\u53f6\u65af\u516c\u5f0f\u79f0\u4e3a\u540e\u9a8c\u6982\u7387\u516c\u5f0f\uff0c\u5176\u4e2d\u4e3a \\(P(A_i | B)\\) \u540e\u9a8c\u6982\u7387\uff0c\\(P(A_i)\\) \u4e3a\u5148\u9a8c\u6982\u7387\u3002</li> </ul>"},{"location":"math/probability/chap1/#4","title":"4 \u4e8b\u4ef6\u7684\u72ec\u7acb\u6027","text":"<ul> <li> <p>\u82e5\u6709\u4e8b\u4ef6 \\(A\\)\uff0c\\(B\\) \u6ee1\u8db3 \\(P(AB) = P(A)P(B)\\)\uff0c\u5219\u79f0 \\(A\\)\uff0c\\(B\\) \u76f8\u4e92\u72ec\u7acb\u3002</p> <p>\u90a3\u4e48\u6b64\u65f6\u5219\u6709 \\(P(B | A) = P(B)\\)\uff0c\\(P(A | B) = P(A)\\)\u3002</p> <p>\u7279\u6b8a\u7684\uff0c\u5fc5\u7136\u4e8b\u4ef6\u548c\u4e0d\u53ef\u80fd\u4e8b\u4ef6\u548c\u5176\u4ed6\u4efb\u4f55\u4e8b\u4ef6\u90fd\u662f\u76f8\u4e92\u72ec\u7acb\u7684\u3002</p> <p>\u82e5 \\(A\\) \u4e0e \\(B\\) \u72ec\u7acb\uff0c\u90a3\u4e48 \\(A\\) / \\(\\bar A\\) \u4e0e \\(B\\) / \\(\\bar B\\) \u4e5f\u76f8\u4e92\u72ec\u7acb\u3002</p> <p>\u6ce8\u610f\u4e8b\u4ef6\u7684\u72ec\u7acb\u4e0e\u4e92\u4e0d\u76f8\u5bb9\u4e0d\u5b58\u5728\u5fc5\u7136\u7684\u5173\u7cfb\u3002\u4f46\u5728 \\(P(A)\\)\uff0c\\(P(B)\\) \u90fd\u5927\u4e8e \\(0\\) \u7684\u60c5\u51b5\u4e0b\uff0c\u76f8\u4e92\u72ec\u7acb\u548c\u4e0d\u76f8\u5bb9\u4e0d\u80fd\u540c\u65f6\u6210\u7acb\uff0c\u56e0\u4e3a</p> \\[ P(AB) = P(A)P(B) &gt; 0 \\ne 0 \\] <p>\\(A\\)\uff0c\\(B\\) \u72ec\u7acb\u65f6\u5e38\u7528\u516c\u5f0f $$ P(AB) = P(A)P(B) \\  P(A \\cup B) = P(A) + P(B) - P(A)P(B) \\ P(A - B) = P(A) - P(A)P(B) $$</p> </li> <li> <p>\u5bf9\u4e8e\u4e09\u4e2a\u4e8b\u4ef6\u7684\u72ec\u7acb\u6027</p> <p></p> <p></p> </li> <li> <p>\u63a8\u5e7f\u5230 \\(n\\) \u4e2a\u4e8b\u4ef6</p> <p></p> <p></p> </li> </ul>"},{"location":"math/probability/chap1/#5","title":"5 \u4f2f\u52aa\u5229\u6982\u578b","text":""},{"location":"math/probability/chap1/#6","title":"6 \u4f8b\u9898","text":"<ul> <li> <p>e.g.1</p> \\[   (A \\cup B)(A \\cup \\bar B)(\\bar A \\cup B) \\] \\[     \u89e3\uff1a\u539f = (A \\cup (B\\bar B))(\\bar A \\cup B) = A(\\bar A \\cup B) = (A\\bar A) \\cup (AB) = AB \\] </li> <li> <p>e.g.2 \u7ecf\u5178\u5706\u684c\u6392\u5217\u95ee\u9898</p> <p>\\(n\\) \u4e2a\u4eba\u56f4\u4e00\u5706\u684c\u5750\uff0c\u6c42\u7532\u4e59\u4e24\u4eba\u76f8\u90bb\u800c\u5750\u7684\u6982\u7387\u3002</p> Solution <p></p> </li> <li> <p>e.g.3 \u5f88\u5de7\u5999\u7684\u8f6c\u5316</p> </li> </ul> <p>\u200b    </p> <ul> <li> <p>e.g.4 </p> <p></p> <p></p> <p>\u6ce8\u610f\u8fd9\u91cc \\(x\\) \u7684\u8303\u56f4\u662f \\([0, a]\\)\uff0c\u6240\u4ee5\u4e0d\u7528\u8003\u8651\u53e6\u5916\u4e00\u6761\u8fb9\u3002</p> </li> <li> <p>e.g.5 \u5178\u4e2d\u5178\u7684\u51e0\u4f55\u6982\u7387</p> <p>\u5c06\u957f\u5ea6\u4e3a \\(L\\) \u7684\u7ebf\u6bb5\u4efb\u610f\u6298\u6210\u4e09\u6bb5\uff0c\u6c42\u6b64\u4e09\u7ebf\u6bb5\u80fd\u591f\u4e00\u4e2a\u4e09\u89d2\u5f62\u7684\u6982\u7387\u3002</p> Solution <p>\u5206\u522b\u8bbe\u51fa\u7b2c\u4e00\u6bb5\uff0c\u7b2c\u4e8c\u6bb5\u957f\u5ea6 \\(x\\)\uff0c\\(y\\)\uff0c\u7136\u540e\u627e\u51fa \\(x\\)\uff0c\\(y\\)\uff0c\\(a\\) \u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u753b\u51fa\u56fe\u50cf\u6765\u6c42\u51e0\u4f55\u6982\u7387\uff0c\u7b54\u6848\u4e3a \\(\\dfrac{1}{4}\\)\u3002</p> </li> <li> <p>e.g.6</p> <p></p> <p>\u786e\u5b9a\u603b\u4e8b\u4ef6\u6570\u548c\u7b26\u5408\u7684\u4e8b\u4ef6\u6570\u662f\u5173\u952e\u3002</p> </li> <li> <p>e.g.7 \u5f53\u9009\u6cd5\u548c\u987a\u5e8f\u65e0\u5173\u65f6\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\u6ce8\u610f\u6392\u5217\u65b9\u6848\u6570\uff01</p> <p>\u4ece \\(5\\) \u53cc\u4e0d\u540c\u7684\u624b\u5957\u4e2d\u4efb\u53d6 \\(4\\) \u53ea\uff0c\u8fd9 \\(4\\) \u53ea\u624b\u5957\u4e2d\u81f3\u5c11\u6709 \\(2\\) \u53ea\u624b\u5957\u914d\u6210\u4e00\u53cc\u7684\u6982\u7387\u662f\u591a\u5c11\uff1f</p> Solution <p></p> <p></p> </li> <li> <p>e.g.8 kind of difficult</p> <p></p> Solution <p></p> <p></p> <p></p> <p></p> </li> <li> <p>e.g.9 \u6709\u5751\u54e6 \uff1e\ufe3f\uff1c</p> <p></p> Solution <p></p> <p>Note</p> <p>\u4e00\u5b9a\u8981\u6ce8\u610f\uff0c\u4f1a\u6709\u764c\u75c7\uff0c\u4e14\u8bd5\u9a8c\u53cd\u5e94\u4e3a\u9633\u6027\u7684\u6982\u7387 \u548c \u8bd5\u9a8c\u53cd\u5e94\u4e3a\u9633\u6027\uff0c\u786e\u5b9e\u60a3\u6709\u764c\u75c7\u7684\u6982\u7387 \u4e0d\u4e00\u6837\uff01\uff01\uff01</p> </li> <li> <p>e.g.10 \u53c8\u662f\u6761\u4ef6\u6982\u7387\u7684\u5751 QwQ</p> <p></p> Solution <p></p> <p></p> </li> <li> <p>e.g.11 \u5982\u4f55\u8bc1\u660e\u4e8b\u4ef6\u72ec\u7acb</p> <p></p> Solution <p></p> <p></p> </li> <li> <p>e.g.12 \u5230\u5e95\u662f\u4e0d\u662f\u6761\u4ef6\u6982\u7387\uff0c\u4ee5\u53ca\u5bf9\u4e8e\u6570\u5217\u5f62\u5f0f\u7684\u6982\u7387\u6c42\u6781\u503c\u95ee\u9898</p> <p></p> Solution <p></p> </li> <li> <p>e.g.13 \u9009\u62e9\u9002\u5f53\u7684\u5206\u7c7b\u624b\u6cd5</p> <p></p> Solution <p></p> <p></p> </li> </ul>"},{"location":"math/probability/chap1/#7","title":"7 \u505a\u9898\u603b\u7ed3","text":"<ul> <li> <p>\u9898\u76ee\u6240\u6c42\u7684\u5230\u5e95\u662f\u666e\u901a\u6982\u7387\u8fd8\u662f\u6761\u4ef6\u6982\u7387\u3002</p> <ul> <li>\u4e00\u79cd\u6c42\u7684\u662f\u666e\u901a\u6982\u7387\uff0c\u4f46\u662f\u901a\u8fc7\u9898\u76ee\u4fe1\u606f\u80fd\u5f97\u51fa\u8fd9\u79cd\u4e8b\u4ef6\u5728\u54ea\u51e0\u79cd\u60c5\u51b5\u4e0b\u53d1\u73b0\uff0c\u7136\u540e\u901a\u8fc7\u5168\u6982\u7387\u516c\u5f0f\u6765\u7b97\u51fa\u6211\u4eec\u60f3\u8981\u6c42\u7684\u4e8b\u4ef6\u7684\u6982\u7387\u3002</li> <li>\u8fd8\u6709\u4e00\u79cd\u8981\u6c42\u7684\u4e8b\u4ef6\u662f\u6697\u542b\u5728\u67d0\u4e2a\u5176\u4ed6\u4e8b\u4ef6\u53d1\u751f\u60c5\u51b5\u4e0b\u7684\uff0c\u4e0d\u80fd\u76f4\u63a5\u6c42\u8be5\u4e8b\u4ef6\u7684\u6982\u7387\uff0c\u5148\u8981\u6c42\u53e6\u5916\u90a3\u4e2a\u4e8b\u4ef6\u7684\u6982\u7387\uff0c\u518d\u7528\u8d1d\u53f6\u65af\u516c\u5f0f\u7b97\u51fa\u8fd9\u4ef6\u4e8b\u53d1\u751f\u7684\u6761\u4ef6\u6982\u7387\u3002</li> </ul> </li> <li> <p>\u6ce8\u610f\u9009\u62e9\u9002\u5f53\u7684\u5206\u7c7b\u8ba8\u8bba\u65b9\u6cd5\uff0c\u6b63\u96be\u5219\u53cd\u3002</p> </li> <li> <p>\u6ce8\u610f A \u5728 B \u4e0b\u53d1\u751f\u7684\u6982\u7387\u548c B \u5728 A \u4e0b\u53d1\u751f\u7684\u6982\u7387\u662f\u4e0d\u4e00\u6837\u7684\u3002</p> </li> </ul>"},{"location":"math/probability/chap2/","title":"\u7b2c\u4e8c\u7ae0 \u968f\u673a\u53d8\u91cf\u53ca\u5176\u6982\u7387\u5206\u5e03","text":""},{"location":"math/probability/chap2/#0","title":"0 \u603b\u7ed3","text":""},{"location":"math/probability/chap2/#1","title":"1 \u968f\u673a\u53d8\u91cf\u53ca\u5176\u5206\u5e03\u51fd\u6570","text":"<ul> <li> <p>\u5bf9\u4e8e\u968f\u673a\u8bd5\u9a8c\u7684\u6837\u672c\u7a7a\u95f4 \\(\\Omega\\)\uff0c\u82e5\u5176\u4e2d\u6bcf\u4e00\u4e2a\u6837\u672c\u70b9 \\(\\omega \\in \\Omega\\)\uff0c\u90fd\u6709\u4e00\u4e2a\u5b9e\u6570 \\(x\\) \u4e0e\u5176\u76f8\u5bf9\u4e8e\uff0c\u5219\u79f0 \\(X = X(\\omega)\\) \u4e3a\u968f\u673a\u53d8\u91cf\u3002</p> </li> <li> <p>\u8bbe \\(X\\) \u662f\u4e00\u968f\u673a\u53d8\u91cf\uff0c \\(x\\) \u662f\u4efb\u610f\u5b9e\u6570\uff0c\u79f0 \\(F(x) = P\\{X \\le x\\},(-\\infty &lt; x &lt; \\infty)\\) \u4e3a\u968f\u673a\u53d8\u91cf \\(X\\) \u7684\u51fd\u6570</p> <p>\\(F(x)\\) \u51fd\u6570\u503c\u5206\u5e03\u5728 \\(0 \\sim 1\\) \u4e4b\u95f4\uff0c\u662f\u5355\u8c03\u4e0d\u51cf\u7684\uff0c\u4e14\u5177\u6709\u53f3\u8fde\u7eed\u6027\uff0c\\(F(x^+) = F(x)\\)\u3002</p> <p>\\(F(-\\infty) = 0\\)\uff0c\\(F(\\infty) = 1\\)</p> <p>\\(P\\{a &lt; X \\le b\\} = F(b) - F(a)\\)</p> </li> </ul>"},{"location":"math/probability/chap2/#2","title":"2 \u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u53ca\u5176\u6982\u7387\u5206\u5e03","text":"<ul> <li> <p>\u82e5\u968f\u673a\u53d8\u91cf \\(X\\) \u53ef\u53d6\u5230\u7684\u4e0d\u540c\u503c\u662f\u6709\u9650\u4e2a\u6216\u53ef\u5217\u65e0\u9650\u591a\u4e2a\u9879\uff0c\u5e76\u4e14\u4ee5\u786e\u5b9a\u7684\u6982\u7387\u53d6\u8fd9\u4e9b\u503c\uff0c\u5219\u79f0 \\(X\\) \u4e3a\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u3002</p> <p></p> <p></p> <p></p> </li> </ul>"},{"location":"math/probability/chap2/#3","title":"3 \u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u53ca\u5176\u6982\u7387\u5bc6\u5ea6","text":"<ul> <li> <p>\u4e0e\u79bb\u6563\u76f8\u5bf9\u5e94\u7684\u4fbf\u662f\u8fde\u7eed\u578b\u3002\\(f(x)\\) \u662f\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\uff0c\u7b80\u79f0\u6982\u7387\u5bc6\u5ea6\uff0c\u6ee1\u8db3 \\(F(x) = P\\{X \\le x\\} = \\int_{-\\infty}^{x}f(t)dt\\)\u3002</p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fde\u7eed\u578b\u7684\u5206\u5e03\u51fd\u6570 \\(F(x)\\) \u5728 \\((-\\infty, +\\infty)\\) \u4f46\u6982\u7387\u5bc6\u5ea6 \\(f(x)\\) \u4e0d\u4e00\u5b9a\u8fde\u7eed\uff0c\u4e5f\u4e0d\u552f\u4e00\u3002\uff08\u6ce8\u610f\uff0c\u8fd9\u91cc\u4e0d\u552f\u4e00\u53ef\u4ee5\u4f53\u73b0\u5728\uff0c\u6539\u53d8\u6709\u9650\u4e2a \\(f(x)\\) \u70b9\u7684\u53d6\u503c\uff0c\u5e76\u4e0d\u5f71\u54cd \\(F(x)\\)\uff09</p> </li> <li> <p>\u6982\u7387\u5bc6\u5ea6 \\(f(x)\\) \u6027\u8d28</p> <ul> <li>\\(f(x) \\ge 0\\) </li> <li>\\(\\int_{-\\infty}^{+\\infty}f(x)dx = 1\\)\u3002</li> <li>\\(P\\{a &lt; X \\le b\\} = F(b) - F(a) =\\int_{a}^{b}f(x)dx\\)\u3002</li> <li>\u5728 \\(f(x)\\) \u7684\u8fde\u7eed\u70b9\u5904\u6ee1\u8db3 \\(f(x) = F'(x)\\)\u3002</li> <li>\\(P\\{X = c\\} = 0\\)\u3002\u8fd9\u8bf4\u660e\u6982\u7387\u4e3a \\(0\\) \u4e0d\u4e00\u5b9a\u662f\u4e0d\u53ef\u80fd\u4e8b\u4ef6\uff0c\u6982\u7387\u4e3a \\(1\\) \u4e0d\u4e00\u5b9a\u662f\u5fc5\u7136\u4e8b\u4ef6\u3002</li> <li>$P{a &lt; X &lt; b} = P{a \\le X &lt; b} = P{a &lt; X \\le b} = P{a \\le X \\le b} $\u3002</li> </ul> </li> </ul>"},{"location":"math/probability/chap2/#4","title":"4 \u51e0\u79cd\u5e38\u7528\u7684\u5206\u5e03","text":"<p>\u51e0\u79cd\u5e38\u7528\u7684\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf</p> <ul> <li> <p>\uff080 - 1\uff09\u5206\u5e03\uff08\u4e24\u70b9\u5206\u5e03\uff09</p> <p>\u82e5\u968f\u673a\u53d8\u91cf \\(X\\) \u7684\u5206\u5e03\u5f8b\u4e3a \\(P\\{X = 1\\} = p\\)\uff0c\\(P\\{X = 0\\} = 1 - p\\) \uff08\\(0 &lt; p &lt; 1\\)\uff09\uff0c\u5219\u6ee1\u8db3\uff080 - 1\uff09\u5206\u5e03\u3002</p> </li> <li> <p>\u4e8c\u9879\u5206\u5e03</p> <p>\u6bcf\u6b21\u5b9e\u9a8c\u53ea\u6709 \\(A\\) \u548c \\(\\bar A\\) \u7ed3\u679c\uff0c\u72ec\u7acb\u5b9e\u9a8c \\(n\\) \u6b21\uff0c\u7528 \\(X\\) \u8868\u793a \\(n\\) \u6b21\u5b9e\u9a8c\u4e2d \\(A\\) \u53d1\u751f\u7684\u6b21\u6570\uff0c\\(P\\{x = k\\} = C_{n}^{k}p^k(1 - p)^{n - k}\\)\uff0c\u5219\u79f0 \\(X\\) \u670d\u4ece\u53c2\u6570\u4e3a \\(np\\) \u7684\u4e8c\u9879\u5206\u5e03\uff0c\u8bb0\u4f5c \\(X \\sim B(n, p)\\)\u3002</p> <p>\u4e8c\u9879\u5206\u5e03\u5f62\u72b6\u7279\u70b9</p> <ul> <li>\u4e8c\u9879\u5206\u5e03\u7684\u5f62\u72b6\u53d6\u51b3\u4e8e \\(p\\) \u548c \\(n\\) \u7684\u5927\u5c0f\u3002</li> <li>\u5f53 \\(p\\) \u63a5\u8fd1 \\(0.5\\) \u65f6\uff0c\u56fe\u5f62\u662f\u5bf9\u79f0\u7684\u3002</li> <li>\\(p\\) \u79bb \\(0.5\\) \u8d8a\u8fdc\uff0c\u5bf9\u79f0\u6027\u8d8a\u5dee\uff0c\u4f46\u968f\u7740 \\(n\\) \u7684\u589e\u5927\uff0c\u5206\u5e03\u8d8b\u4e8e\u5bf9\u79f0\u3002</li> </ul> <p>\u82e5 \\((n + 1) \\cdot p\\) \u662f\u6574\u6570 \\(m\\)\uff0c\u5219 \\(P\\{X = m\\} = P\\{X = m - 1\\}\\) \u4e14\u5728\u8fd9\u4e24\u5904\u53ef\u4ee5\u53d6\u5230\u6700\u5927\u503c\u3002</p> <p>\u82e5 \\((n + 1) \\cdot p\\) \u4e0d\u662f\u6574\u6570\uff0c\u5219\u4ee4 $m = \\left \\lfloor  (n + 1) \\cdot p\\right \\rfloor $\uff0c\u5728 \\(P\\{X = m\\}\\) \u5904\u53ef\u4ee5\u53d6\u5230\u6700\u5927\u503c\u3002</p> </li> <li> <p>\u6cca\u677e\uff08Poisson\uff09\u5206\u5e03</p> <p>\u8bbe \\(X\\) \u7684\u6240\u6709\u53ef\u80fd\u53d6\u503c\u4e3a \\(0, 1, 2, \\dots\\)\uff0c\u5e76\u4e14 \\(P\\{X = k\\} = \\dfrac{\\lambda^ke^{-\\lambda}}{k!}(k = 0, 1, 2, \\dots)\\)\uff0c\u5176\u4e2d \\(\\lambda &gt; 0\\)\uff0c\u5219\u79f0 \\(x\\) \u670d\u4ece\u6cca\u677e\u5206\u5e03\uff0c\u8bb0\u4f5c \\(X \\sim P(\\lambda)\\) \u6216 \\(X \\sim \\pi(\\lambda)\\)\u3002</p> <p>\u6cca\u677e\u5b9a\u7406\uff1a\u82e5\u6ee1\u8db3 \\(np_n = \\lambda\\)\uff0c\u5219\u5bf9\u4efb\u4e00\u56fa\u5b9a\u7684\u975e\u8d1f\u6574\u6570 \\(k\\)\uff0c\u6709 \\(\\lim_{n \\to \\infty}C_{n}^{k}p_n^k(1 - p_n)^{n - k} = \\dfrac{\\lambda^ke^{-\\lambda}}{k!}(k = 0, 1, 2, \\dots)\\)\u3002\uff08\u8bf4\u660e\u4e86\u4e8c\u9879\u5206\u5e03\u4e0e\u6cca\u677e\u5206\u5e03\u7684\u5173\u7cfb\uff09</p> <p>\u6cca\u677e\u5b9a\u7406\u8bf4\u660e\uff0c\u6cca\u677e\u5206\u5e03\u662f\u4e8c\u9879\u5206\u5e03\u7684\u6781\u9650\u5206\u5e03\uff0c\u5f53 \\(n\\) \u5f88\u5927\u800c \\(p\\) \u5f88\u5c0f\u65f6\uff0c\u4e8c\u9879\u5206\u5e03\u53ef\u8fd1\u4f3c\u770b\u4f5c\u53c2\u6570 \\(\\lambda = np\\) \u7684\u6cca\u677e\u5206\u5e03\u3002</p> Proof <p></p> </li> <li> <p>\u51e0\u4f55\u5206\u5e03</p> <p>\u82e5\u67d0\u4e8b\u4ef6\u53ea\u6709 \\(A\\) \u548c \\(\\bar A\\) \u4e24\u79cd\u53ef\u80fd\uff0c\u4e14 \\(P(A) = p,P(\\bar A) = 1 - p\\)\uff0c\u5c06\u4e8b\u4ef6\u72ec\u7acb\u91cd\u590d\u53d1\u751f\u76f4\u5230\u51fa\u73b0\u7ed3\u679c \\(A\\) \u4e3a\u6b62\uff0c\\(X\\) \u8868\u793a\u6240\u9700\u8bd5\u9a8c\u7684\u6b21\u6570\uff0c\u5219 \\(P\\{X = k\\} = (1 - p)^{k - 1}p\\)\uff0c\u79f0\u968f\u673a\u53d8\u91cf \\(X\\) \u670d\u4ece\u51e0\u4f55\u5206\u5e03\uff0c\u8bb0\u4f5c \\(X \\sim G(p)\\)\u3002</p> </li> <li> <p>\u8d85\u51e0\u4f55\u5206\u5e03</p> <p>\u968f\u673a\u53d8\u91cf \\(X\\) \u7684\u5206\u5e03\u5f8b\u6ee1\u8db3 \\(P\\{X = m\\} = \\dfrac{C_M^mC_{N - M}^{n - m}}{C_N^n}\\)\uff0c\u5219\u79f0 \\(X\\) \u670d\u4ece\u8d85\u51e0\u4f55\u5206\u5e03\u3002\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u62ff\u8d70\u4e0d\u653e\u56de\u65f6\u7684\u6982\u7387\uff09</p> <p>\u8d85\u51e0\u4f55\u5206\u5e03\u7684\u6781\u9650\u5206\u5e03\u662f\u4e8c\u9879\u5206\u5e03\uff0c\u4e8c\u9879\u5206\u5e03\u7684\u6781\u9650\u5206\u5e03\u662f Poisson \u5206\u5e03\u3002</p> </li> </ul> <p>\u51e0\u79cd\u5e38\u7528\u7684\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf</p> <ul> <li> <p>\u5747\u5300\u5206\u5e03</p> <p>\u82e5\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf \\(X\\) \u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a \\(f(x) = \\begin{cases} \\dfrac{1}{b - a} \\ a &lt; x &lt; b\\\\ 0\\ \\ \\ \\ \\ \\ \\ \\ \\ \u5176\u4ed6\\end{cases}\\)\uff0c\u5219\u79f0 \\(X\\) \u5728\u533a\u95f4 \\((a, b)\\) \u4e0a\u670d\u4ece\u5747\u5300\u5206\u5e03\u3002</p> </li> <li> <p>\u6307\u6570\u5206\u5e03</p> <p>\u82e5\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf \\(X\\) \u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a \\(f(x) = \\begin{cases} \\lambda e^{-\\lambda x} \\ x &gt; 0\\\\ 0\\ \\ \\ \\ \\ \\ \\ \\ \\ x \\le 0\\end{cases}\\)\uff0c\u5176\u4e2d \\(\\lambda &gt; 0\\) \u662f\u5e38\u6570\uff0c\u5219\u79f0 \\(X\\) \u670d\u4ece\u53c2\u6570\u4e3a \\(\\lambda\\) \u7684\u6307\u6570\u5206\u5e03\uff0c\u8bb0\u4e3a \\(X \\sim E(\\lambda)\\)\u3002</p> </li> <li> <p>\u6b63\u6001\u5206\u5e03</p> <p>\u82e5\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf \\(X\\) \u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a \\(f(x) = \\dfrac{1}{\\sigma\\sqrt{2\\pi}}e^{-\\dfrac{(x - \\mu)^2}{2\\sigma^2}}\\)\uff0c\u5176\u4e2d \\(-\\infty &lt; \\mu &lt; +\\infty, \\sigma &gt; 0\\)\uff0c\u5219\u79f0 \\(X\\) \u670d\u4ece\u53c2\u6570\u4e3a \\(\\mu,\\sigma\\) \u7684\u6b63\u6001\u5206\u5e03\uff0c\u8bb0\u4f5c \\(X \\sim N(\\mu, \\sigma^2)\\)\u3002</p> <p></p> <p>\u6b63\u6001\u5206\u5e03\u4ee5 \\(\\mu\\) \u4e3a\u4e2d\u5fc3\uff0c\u4e24\u8fb9\u5bf9\u79f0\u76f8\u7b49\u3002\u5176\u4e2d \\(\\mu\\) \u662f\u4f4d\u7f6e\u53c2\u6570\uff0c\\(\\mu\\) \u53d8\u5927\uff0c\u56fe\u5f62\u53f3\u79fb\uff0c\\(\\mu\\) \u53d8\u5c0f\uff0c\u56fe\u5f62\u5de6\u79fb\uff08\\(x = \\mu\\) \u662f\u5bf9\u79f0\u4e2d\u5fc3\uff09\u3002\\(\\sigma\\) \u662f\u5f62\u72b6\u53c2\u6570\uff0c\\(\\sigma\\) \u53d8\u5927\uff0c\u56fe\u5f62\u53d8\u5e73\u5766\uff0c\\(\\sigma\\) \u53d8\u5c0f\uff0c\u56fe\u5f62\u53d8\u9661\u5ced\u3002</p> </li> <li> <p>\u6807\u51c6\u6b63\u6001\u5206\u5e03</p> <p>\u82e5 \\(X \\sim N(\\mu, \\sigma^2)\\) \u4e14 \\(\\mu = 0, \\sigma = 1\\)\uff0c\u5219\u79f0 \\(x\\) \u670d\u4ece\u6807\u51c6\u6b63\u6001\u5206\u5e03\uff0c\u8bb0\u4e3a \\(X \\sim N(0, 1)\\)\u3002\u6b64\u65f6\u6982\u7387\u5bc6\u5ea6 \\(\\varphi(x) = \\dfrac{1}{\\sqrt{2 \\pi}}e^{-\\dfrac{x^2}{2}}\\)\uff0c\u5206\u5e03\u51fd\u6570 \\(\\Phi(x) = \\int_{-\\infty}^x \\varphi(x)dx\\)\uff0c\u4e14\u6709 \\(\\Phi(x) + \\Phi(-x) = 1\\)\u3002</p> <p>\u82e5 \\(X \\sim N(\\mu, \\sigma^2)\\)\uff0c\u5219 \\(Y = \\dfrac{X - \\mu}{\\sigma} \\sim N(0, 1)\\)\uff08\u6b63\u6001\u5206\u5e03\u4e0e\u6807\u51c6\u6b63\u6001\u5206\u5e03\u7684\u5173\u7cfb\uff09\u3002\u8fd9\u4e2a\u5173\u7cfb\u53ef\u4ee5\u5c06\u6b63\u6001\u5206\u5e03\u7684\u6982\u7387\u8ba1\u7b97\u5316\u4e3a\u6807\u51c6\u6b63\u6001\u5206\u5e03\u6765\u8ba1\u7b97\u3002</p> <p></p> <p></p> <p></p> <p></p> </li> </ul>"},{"location":"math/probability/chap2/#5","title":"5 \u968f\u673a\u53d8\u91cf\u7684\u51fd\u6570\u7684\u5206\u5e03","text":"<ul> <li> <p>\u5e38\u89c4\u60c5\u51b5\u4e0b\u76f4\u63a5\u6309\u9898\u610f\u505a\u5373\u53ef\uff0c\u7528\u4e00\u9053\u4f8b\u9898\u7b80\u5355\u8bf4\u660e\u3002</p> <p></p> <p></p> </li> <li> <p>\u7279\u6b8a\u60c5\u51b5</p> <p></p> Proof <p></p> <p></p> <p></p> <p>\u7528\u4e00\u9053\u4f8b\u9898\u5177\u4f53\u8bf4\u660e\u4e00\u4e0b\u8be5\u65b9\u6cd5\u7684\u4f7f\u7528</p> <p></p> <p>\u6211\u4eec\u6839\u636e\u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e2a\u6709\u5173\u6b63\u6001\u5206\u5e03\u7684\u7ed3\u8bba\uff1a</p> <p></p> </li> <li> <p>\u968f\u673a\u53d8\u91cf\u7684\u51fd\u6570\u5206\u5e03\u7684\u4e24\u79cd\u65b9\u6cd5</p> <ul> <li>\u4e00\u822c\u65b9\u6cd5\uff1a\u5148\u6c42\u5206\u5e03\u51fd\u6570\uff0c\u518d\u6c42\u5bc6\u5ea6\u51fd\u6570\u7684\u65b9\u6cd5\u3002</li> <li>\u7279\u6b8a\u60c5\u51b5\uff1a\u5982\u679c \\(Y = g(x)\\) \u5355\u8c03\u53ef\u5bfc\uff0c\u5229\u7528\u53cd\u51fd\u6570\u4ee3\u5165\u7684\u65b9\u6cd5\u3002</li> </ul> </li> </ul>"},{"location":"math/probability/chap2/#6","title":"6 \u4e60\u9898\u8bfe","text":"<ul> <li> <p>e.g.1</p> <p></p> Solution <p></p> <p>Note</p> <p>\u8fd9\u9898\u6709\u70b9\u7c7b\u4f3c\u4e8e\u7b2c\u516b\u7ae0\u5047\u8bbe\u68c0\u9a8c\u4e2d\u7684\u53f3\u4fa7\u68c0\u9a8c\uff0c\u5047\u8bbe\u968f\u673a\u731c\u7684\u4e3a\u771f\uff0c\u6309\u968f\u5373\u731c\u6d4b\u7684\u6982\u7387\u7b97\u51fa\u7684\u6837\u672c\u4e8b\u4ef6\u662f\u5c0f\u6982\u7387\u4e8b\u4ef6\uff0c\u6545\u4e0d\u662f\u731c\u6d4b\u7684\u3002\u8fd9\u91cc\u76f8\u5f53\u4e8e\u8ba1\u7b97\u843d\u5165\u53f3\u8fb9\u533a\u95f4\u7684\u6982\u7387\u3002</p> </li> <li> <p>e.g.2</p> <p></p> Solution <p></p> <p>Note</p> <p>\u672c\u9898\u6709\u4e00\u70b9\u7ed5\uff0c\u5206\u5e03\u51fd\u6570\u4e2d\u6d89\u53ca\u5230\u4e86\u4e24\u4e2a\u53d8\u91cf\uff0c\u4e00\u5b9a\u8981\u5f04\u660e\u767d\u8fd9\u4e24\u4e2a\u53d8\u91cf\u5728\u968f\u673a\u51fd\u6570\u4e2d\u7684\u610f\u4e49\u548c\u4f5c\u7528\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u7b2c\u4e00\u5c0f\u95ee\u4e2d\uff0c\u4ee4 \\(k = 0\\)\uff0c\u7b97\u51fa\u6765\u7684\u662f \\(P\\{T &gt; t\\}\\) \u7684\u6982\u7387\u800c\u4e0d\u662f \\(P\\{T &lt; t\\}\\) \u7684\u6982\u7387\u3002</p> </li> <li> <p>e.g.3</p> <p></p> Solution <p></p> <p></p> </li> <li> <p>e.g.4 \u53c8\u662f\u6761\u4ef6\u6982\u7387\u7684\u95ee\u9898\uff0c\u548c chap 1 e.g.10 \u5f88\u50cf\uff0c\u4f46\u662f\u8fd8\u662f\u505a\u9519\u4e86 \ud83e\udd72</p> <p></p> Solution <p></p> <p></p> </li> <li> <p>e.g.5 </p> <p></p> Solution <p></p> </li> <li> <p>e.g.6 </p> <p></p> Solution <p></p> <p></p> </li> <li> <p>e.g.7 \u6ce8\u610f\u8fd9\u91cc \\(Y\\) \u8868\u793a\u7684\u662f \\(F(X)\\) \u7684\u6570\u503c\uff0c\u8fd9\u91cc \\(Y\\) \u53d6\u503c\u8303\u56f4\u662f \\(0\\) \u5230 \\(1\\)\uff0c\u76f8\u5f53\u4e8e\u6c42\u7684\u662f \\(F(X)\\) \u6240\u5bf9\u5e94\u7684\u6570\u503c\u670d\u4ece\u7684\u5206\u5e03\u3002</p> <p></p> Solution <p></p> </li> </ul>"},{"location":"math/probability/chap3/","title":"\u7b2c\u4e09\u7ae0 \u591a\u7ef4\u968f\u673a\u53d8\u91cf\u53ca\u5176\u6982\u7387\u5206\u5e03","text":""},{"location":"math/probability/chap3/#1","title":"1 \u4e8c\u7ef4\u968f\u673a\u53d8\u91cf","text":""},{"location":"math/probability/chap3/#11","title":"1.1 \u4e8c\u7ef4\u968f\u673a\u53d8\u91cf\u53ca\u5176\u5206\u5e03\u51fd\u6570","text":"<ul> <li>\u8bbe\u968f\u673a\u8bd5\u9a8c \\(E\\) \u7684\u6837\u672c\u7a7a\u95f4\u4e3a \\(\\Omega\\)\uff0c\\(X\\) \u548c \\(Y\\) \u662f\u5b9a\u4e49\u5728 \\(\\Omega\\) \u4e0a\u7684\u4e24\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u7531\u5b83\u4eec\u6784\u6210\u7684\u5411\u91cf \\((X, Y)\\) \u79f0\u4e3a\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf\u3002 <p>\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf\u53ef\u4ee5\u770b\u4f5c\u662f\u5e73\u9762\u4e0a\u7684\u70b9\uff0c\u5176\u6027\u8d28\u4e0d\u4ec5\u5206\u522b\u4e0e \\(X\\)\uff0c\\(Y\\) \u6709\u5173\uff0c\u8fd8\u4e0e\u8fd9\u4e24\u4e2a\u968f\u673a\u53d8\u91cf\u4e4b\u95f4\u5173\u7cfb\u6709\u5173\u3002</p> </li> <li>\u4e8c\u5143\u51fd\u6570 \\(F(x, y)\\) \u79f0\u4e3a\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf \\((X, Y)\\) \u7684\u5206\u5e03\u51fd\u6570\u6216 \\(X\\) \u4e0e \\(Y\\) \u7684\u8054\u5408\u5206\u5e03\u51fd\u6570\u3002 <p>\\(F(x_0, y_0)\\) \u7684\u51e0\u4f55\u610f\u4e49\u5c31\u662f\u5e73\u9762\u4e0a\u843d\u5728 \\((x_0, y_0)\\) \u5de6\u4e0b\u89d2\u7684\u6982\u7387\u3002</p> </li> </ul> \\[ F(X, Y) = P \\left \\{ \\left \\{ X \\le x \\right \\}\\cap \\left \\{ Y \\le y \\right \\} \\right \\} = P \\left \\{X \\le x, Y \\le y \\right \\} \\] <p>\\(F(X, Y)\\) \u7684\u6027\u8d28</p> <ul> <li>\\(F(x, y) \\in [0, 1]\\) \u4e14 \\(F(-\\infty, -\\infty) = F(x, -\\infty) = F(-\\infty, y) = 0\\)\uff0c\\(F(+\\infty, +\\infty) = 1\\)\u3002</li> <li>\u5f53\u5176\u4e2d\u4e00\u4e2a\u53d8\u91cf x \u6216 y \u56fa\u5b9a\u65f6\uff0c\\(F(x, y)\\) \u53ef\u4ee5\u770b\u4f5c\u662f\u5173\u4e8e\u53e6\u4e00\u4e2a\u53d8\u91cf\u7684\u4e00\u5143\u51fd\u6570\uff0c\u4e14\u5747\u6ee1\u8db3\u4e00\u5143\u5206\u5e03\u51fd\u6570\u6027\u8d28\u3002</li> <li>\\(P\\{x_1 \\le X \\le x_2, y_1\\le Y \\le y_2 \\} = F(x_2, y_2) - F(x_1, y_2) - F(x_2, y_1) + F(x_1, y_1)\\)\uff08\u4ece\u51e0\u4f55\u6027\u8d28\u4e0a\u5f88\u5bb9\u6613\u770b\u51fa\uff09</li> </ul>"},{"location":"math/probability/chap3/#12","title":"1.2 \u8fb9\u7f18\u51fd\u6570","text":"<ul> <li>\u5173\u4e8e \\(X\\) \u7684\u8fb9\u7f18\u5206\u5e03\u51fd\u6570 \\(F_x(x) = \\lim_{y \\to +\\infty} F(x, y)\\)\u3002\u5173\u4e8e \\(Y\\) \u7684\u8fb9\u7f18\u5206\u5e03\u51fd\u6570 \\(F_y(Y) = \\lim_{x \\to +\\infty} F(x, y)\\)\u3002</li> <li>\u82e5 \\(F(x, y) = F_X(x) \\cdot F_Y(y)\\)\uff0c\u5219\u8bf4\u660e \\(X\\) \u4e0e \\(Y\\) \u76f8\u4e92\u72ec\u7acb\u3002\uff08\u7c7b\u6bd4 \\(P(AB) = P(A)P(B)\\)\uff09</li> <li>\u82e5 \\(X, Y\\) \u4e0d\u76f8\u4e92\u72ec\u7acb\uff0c\u8054\u5408\u51fd\u6570 \\(F(x, y)\\) \u53ef\u4ee5\u786e\u5b9a\u4e24\u4e2a\u8fb9\u7f18\u51fd\u6570\uff0c\u4f46\u662f\u4e24\u4e2a\u8fb9\u7f18\u51fd\u6570\u4e0d\u80fd\u786e\u5b9a\u4e00\u4e2a\u8054\u5408\u51fd\u6570\u3002\u82e5 \\(X, Y\\) \u76f8\u4e92\u72ec\u7acb\uff0c\u8054\u5408\u5206\u5e03\u51fd\u6570\u80fd\u786e\u5b9a\u8fb9\u7f18\u5206\u5e03\u51fd\u6570\uff0c\u8fb9\u7f18\u51fd\u6570\u4e5f\u80fd\u786e\u5b9a\u8054\u5408\u51fd\u6570\u3002</li> </ul>"},{"location":"math/probability/chap3/#13","title":"1.3 \u968f\u673a\u53d8\u91cf\u7684\u72ec\u7acb\u6027","text":"<ul> <li>\u5bf9\u4e8e \\((X, Y)\\) \u7684\u5206\u5e03\u51fd\u6570 \\(F(x, y)\\) \u4ee5\u53ca \\(X\\) \u548c \\(Y\\) \u7684\u8fb9\u7f18\u5206\u5e03\u51fd\u6570 \\(F_X(x)\\)\uff0c\\(F_Y(y)\\)\uff0c\u82e5\u6ee1\u8db3 \\(F(x, y) = F_X(x) F_Y(y)\\)\uff0c\u5219\u79f0 \\(X\\) \u548c \\(Y\\) \u76f8\u4e92\u72ec\u7acb\u3002</li> <li>\\(X\\) \u4e0e \\(Y\\) \u76f8\u4e92\u72ec\u7acb\u662f\u6307\u4e24\u4e8b\u4ef6 \\(\\{X \\le x\\}\\) \u548c \\(\\{Y \\le y\\}\\) \u76f8\u4e92\u72ec\u7acb\u3002</li> <li>\u82e5 \\(X\\) \u4e0e \\(Y\\) \u76f8\u4e92\u72ec\u7acb\uff0c\u5219\u8054\u5408\u5206\u5e03\u51fd\u6570 \\(\\stackrel{\u786e\u5b9a}{\\longleftrightarrow }\\) \u8fb9\u7f18\u5206\u5e03\u51fd\u6570\u3002\u82e5 \\(X\\) \u4e0e \\(Y\\) \u4e0d\u76f8\u4e92\u72ec\u7acb\uff0c\u5219\u8054\u5408\u5206\u5e03\u51fd\u6570 \\(\\stackrel{\u786e\u5b9a}{\\longrightarrow}\\) \u8fb9\u7f18\u5206\u5e03\u51fd\u6570\u3002</li> <li>\u82e5 \\(X\\) \u4e0e \\(Y\\) \u76f8\u4e92\u72ec\u7acb\uff0c\u5219\u5bf9\u4efb\u610f\u8fde\u7eed\u51fd\u6570 \\(h\\)\uff0c\\(g\\)\uff0c\\(h(X)\\) \u548c \\(g(Y)\\) \u4e5f\u76f8\u4e92\u72ec\u7acb\u3002</li> </ul>"},{"location":"math/probability/chap3/#2","title":"2 \u4e8c\u7ef4\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf","text":""},{"location":"math/probability/chap3/#21","title":"2.1 \u4e8c\u7ef4\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u53ca\u5176\u6982\u7387\u5206\u5e03","text":"<ul> <li>\u82e5\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf \\((X, Y)\\) \u6240\u6709\u53ef\u80fd\u53d6\u7684\u503c\u662f\u6709\u9650\u5bf9\u6216\u53ef\u5217\u65e0\u7a77\u591a\u5bf9\uff0c\u5219\u79f0 \\((X, Y)\\) \u4e3a\u4e8c\u7ef4\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u3002</li> <li>\\(F(X = x_i, Y = y_j) = p_{ij}\\) \u79f0\u4e3a \\((X, Y)\\) \u7684\u6982\u7387\u5206\u5e03\uff08\u5206\u5e03\u5f8b\uff09\u6216 \\(X\\) \u548c \\(Y\\) \u8054\u5408\u5206\u5e03\u6982\u7387\uff08\u8054\u5408\u5206\u5e03\u5f8b\uff09\u3002</li> </ul>"},{"location":"math/probability/chap3/#22","title":"2.2 \u4e8c\u7ef4\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u8fb9\u7f18\u5206\u5e03","text":"<ul> <li>\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf \\((X, Y)\\) \u4e2d\uff0c\\(X\\) \u7684\u5206\u5e03\u5f8b\u79f0\u4e3a \\((X, Y)\\) \u5173\u4e8e \\(X\\) \u7684\u8fb9\u7f18\u5206\u5e03\u7387\uff0c\\(Y\\) \u7684\u5206\u5e03\u5f8b\u79f0\u4e3a \\((X, Y)\\) \u5173\u4e8e \\(Y\\) \u7684\u8fb9\u7f18\u5206\u5e03\u7387\u3002</li> </ul> \\[\\begin{cases} P\\{X = x_i\\} = p_{i.} = \\sum_{j = 1}^{\\infty}p_{ij} \\\\ P\\{Y = y_j\\} = p_{.j} = \\sum_{i = 1}^{\\infty}p_{ij} \\end{cases}\\] <p>Tip</p> <ul> <li>\u8054\u5408\u5206\u5e03\u5f8b\u53ef\u786e\u5b9a\u8fb9\u7f18\u5206\u5e03\u5f8b\uff0c\u53cd\u4e4b\u4e0d\u4e00\u5b9a\u3002</li> <li>\u8fb9\u7f18\u5206\u5e03\u5f8b\u90fd\u662f\u4e00\u7ef4\u968f\u673a\u53d8\u91cf\u7684\u5206\u5e03\u5f8b\u3002</li> </ul>"},{"location":"math/probability/chap3/#23","title":"2.3 \u4e8c\u7ef4\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u7684\u72ec\u7acb\u6027","text":"<ul> <li>\\(X\\) \u548c \\(Y\\) \u76f8\u4e92\u72ec\u7acb\u7684\u5145\u8981\u6761\u4ef6\u662f \\(p_{ij} = p_{i.} \\cdot p_{.j}\\)\u3002</li> <li>\u63a8\u8bba\uff1a\u5bf9\u4e8e\u79bb\u6563\u578b \\((X, Y)\\)\uff0c\u82e5 \\(X\\) \u548c \\(Y\\) \u76f8\u4e92\u72ec\u7acb\uff0c\u90a3\u4e48 \\((X, Y)\\) \u8054\u5408\u5206\u5e03\u7684\u6982\u7387\u884c\u4e0e\u884c\u4e4b\u95f4\u6210\u6bd4\u4f8b\uff0c\u5217\u4e8e\u5217\u4e4b\u95f4\u6210\u6bd4\u4f8b\u3002\u82e5 \\(p_{ij}\\) \u4e2d\u6709\u4e00\u4e2a\u4e3a \\(0\\)\uff0c\u90a3\u4e48 \\(X\\) \u548c \\(Y\\) \u4e00\u5b9a\u4e0d\u76f8\u4e92\u72ec\u7acb\u3002</li> </ul>"},{"location":"math/probability/chap3/#3","title":"3 \u4e8c\u7ef4\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf","text":""},{"location":"math/probability/chap3/#31","title":"3.1 \u4e8c\u7ef4\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u53ca\u5176\u6982\u7387\u5bc6\u5ea6","text":"<ul> <li>\u8bbe\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf \\((X, Y)\\) \u7684\u5206\u5e03\u51fd\u6570\u4e3a \\(F(x, y)\\)\uff0c\u5982\u679c\u5b58\u5728\u975e\u8d1f\u51fd\u6570 \\(f(x, y)\\)\uff0c\u4f7f\u5bf9\u4efb\u610f \\(X, Y\\) \u5747\u6709 \\(F(x, y) = \\int_{-\\infty}^{x}\\int_{-\\infty}^{y}f(u, v)dvdu\\)\uff0c\u5219\u79f0 \\((X, Y)\\) \u4e3a\u4e8c\u7ef4\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\uff0c\\(f(x, y)\\) \u79f0\u4e3a \\((X, Y)\\) \u7684\u6982\u7387\u5bc6\u5ea6\uff0c\u4e5f\u79f0\u4e3a \\(X\\) \u548c \\(Y\\) \u7684\u8054\u5408\u6982\u7387\u5bc6\u5ea6\u3002</li> <li>\u5bf9\u4e8e\u4e8c\u7ef4\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u6709 F(x,y)\u8fde\u7eed, f(x,y)\u4e0d\u4e00\u5b9a\u8fde\u7eed\uff0c\u4e14\u5e73\u9762 xoy \u4e0a\u70b9\u548c\u7ebf\u5bf9\u5e94\u7684\u6982\u7387\u5747\u4e3a \\(0\\)\u3002</li> </ul> <p>\u6982\u7387\u5bc6\u5ea6 \\(f(x, y)\\) \u7684\u6027\u8d28</p> <p></p> <p></p>"},{"location":"math/probability/chap3/#32","title":"3.2 \u4e8c\u7ef4\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u8fb9\u7f18\u5206\u5e03","text":"<ul> <li> <p>\u5173\u4e8e \\(X\\) \u7684\u8fb9\u7f18\u6982\u7387\u5bc6\u5ea6\u4e3a \\(f_X(x) = \\int_{-\\infty}^{+\\infty}f(x, y)dy (-\\infty &lt;  x &lt; +\\infty)\\)</p> <p>\u5173\u4e8e \\(Y\\) \u7684\u8fb9\u7f18\u6982\u7387\u5bc6\u5ea6\u4e3a \\(f_Y(y) = \\int_{-\\infty}^{+\\infty}f(x, y)dx (-\\infty &lt;  y &lt; +\\infty)\\)</p> </li> </ul>"},{"location":"math/probability/chap3/#33","title":"3.3 \u4e8c\u7ef4\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u7684\u72ec\u7acb\u6027","text":"<ul> <li> <p>\u82e5 \\(f(x, y) = f_X(x)f_Y(y)\\)\uff0c\u5219 \\(X\\) \u548c \\(Y\\) \u4e8b\u4ef6\u76f8\u4e92\u72ec\u7acb\uff0c\u4e14\u8fd9\u4e24\u8005\u4e92\u4e3a\u5145\u8981\u5173\u7cfb\u3002</p> <p>Tip</p> <p>\u5982\u679c\u5224\u65ad\u51fa \\(X\\) \u548c \\(Y\\) \u76f8\u4e92\u72ec\u7acb\uff0c\u76f4\u63a5\u7528\u6052\u7b49\u5f0f\u8bc1\u660e\u5373\u53ef\u3002\u5982\u679c\u5224\u65ad\u51fa\u4e0d\u76f8\u4e92\u72ec\u7acb\uff0c\u8fd8\u9700\u8981\u4ee3\u5165\u7279\u503c\u8bf4\u660e\u4e00\u4e0b\u3002</p> </li> </ul>"},{"location":"math/probability/chap3/#34","title":"3.4 \u4e8c\u7ef4\u5747\u5300\u5206\u5e03\u548c\u6b63\u6001\u5206\u5e03","text":"<ul> <li> <p>\u4e8c\u7ef4\u5747\u5300\u5206\u5e03 </p> <p>\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf\u843d\u5728\u67d0\u4e00\u533a\u57df\u6982\u7387\u5b8c\u5168\u76f8\u7b49\u79f0\u4e3a\u4e8c\u7ef4\u5747\u5300\u5206\u5e03\u3002</p> </li> <li> <p>\u4e8c\u7ef4\u6b63\u6001\u5206\u5e03  </p> <p>\u8bbe\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf \\((X\uff0cY)\\) \u7684\u6982\u7387\u5bc6\u5ea6\u4e3a </p> \\[ f(x, y) = \\dfrac{1}{2 \\pi \\sigma_1 \\sigma_2 \\sqrt{1 - \\rho^2}}e^{\\left \\{\\dfrac{-1}{2(1 - \\rho^2)}\\left [\\dfrac{(x - \\mu_1)^2}{\\sigma_1^2} - 2\\rho \\dfrac{(x - \\mu_1)(y - \\mu_2)}{\\sigma_1 \\sigma_2} + \\dfrac{(y - \\mu_2)^2}{\\sigma_2^2}\\right ]\\right \\}} \\] <p>\u5219\u79f0 \\((X, Y)\\) \u670d\u4ece\u53c2\u6570\u4e3a \\(\\mu_1\\)\uff0c\\(\\mu_2\\)\uff0c\\(\\sigma_1\\)\uff0c\\(\\sigma_2\\)\uff0c\\(\\rho\\) \u7684\u4e8c\u7ef4\u6b63\u6001\u5206\u5e03\uff0c\u8bb0\u4e3a \\((X, Y) \\sim N(\\mu_1, \\mu_2, \\sigma_1^2, \\sigma_2^2, \\rho)\\)\uff0c\u4e14\u5404\u4e2a\u53c2\u6570\u6ee1\u8db3 \\(-\\infty &lt; \\mu_1, \\mu_2 &lt; +\\infty, \\sigma_1, \\sigma_2 &gt; 0, |\\rho| &lt; 1\\)\u3002</p> <p>\u4e8c\u7ef4\u6b63\u6001\u5206\u5e03\u7684\u6027\u8d28</p> <p></p> </li> </ul>"},{"location":"math/probability/chap3/#4","title":"4 \u6761\u4ef6\u5206\u5e03","text":""},{"location":"math/probability/chap3/#41","title":"4.1 \u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u7684\u6761\u4ef6\u5206\u5e03","text":"<ul> <li>\\(P\\{X = x_i | Y = y_j\\} = \\dfrac{P\\{X = x_i, Y = y_j\\}}{P\\{Y = y_j\\}}\\)</li> </ul>"},{"location":"math/probability/chap3/#42","title":"4.2 \u8fde\u7eed\u6027\u968f\u673a\u53d8\u91cf\u7684\u6761\u4ef6\u5206\u5e03","text":"<ul> <li> <p>\\(F_{X|Y}(x|y) = P(X \\le x| Y = y)\\) \u8868\u793a\u6761\u4ef6 \\(Y = y\\) \u4e0b \\(X\\) \u7684\u6761\u4ef6\u5206\u5e03\u3002 </p> </li> <li> <p>\\(f_{X|Y}(x|y) = \\dfrac{f(x, y)}{f_Y(y)}\\) \u8868\u793a\u6761\u4ef6 \\(Y = y\\) \u4e0b \\(X\\) \u7684\u6761\u4ef6\u6982\u7387\u5bc6\u5ea6\u3002 </p> </li> <li> <p>\u6761\u4ef6\u5206\u5e03\u548c\u6761\u4ef6\u6982\u7387\u5bc6\u5ea6\u6ee1\u8db3 \\(F_{X|Y}(x|y) = \\int_{-\\infty}^{x}\\dfrac{f(u, y)}{f_Y(y)}du\\)</p> <p>Tip</p> <p></p> <p></p> <p></p> </li> </ul>"},{"location":"math/probability/chap3/#5","title":"5 \u4e8c\u7ef4\u968f\u673a\u53d8\u91cf\u7684\u51fd\u6570\u7684\u5206\u5e03","text":"<p>\u672c\u8282\u8981\u591a\u505a\u70b9\u9898\u3002\u4f1a\u7528\u516c\u5f0f\u6cd5\uff0c\u56fe\u5f62\u5b9a\u9650\u6cd5\uff0c\u5377\u79ef\u6cd5\u3002</p>"},{"location":"math/probability/chap3/#51","title":"5.1 \u79bb\u6563\u578b","text":"<p>\\(Z = g(x, y)\\)\uff0c\u901a\u8fc7\u5217\u8868\u683c\u6cd5\uff0c\u786e\u5b9a\u4e0d\u540c \\(x, y\\) \u6570\u503c\u6240\u5bf9\u5e94 \\(z\\) \u7684\u503c\uff0c\u7136\u540e\u518d\u6c42\u51fa\u6bcf\u4e2a \\(P\\{Z = z_k\\}\\) \u6982\u7387\u3002</p> <p></p> \u8bc1\u660e \\(X + Y \\sim P(\\lambda_1 + \\lambda_2)\\) <p></p>"},{"location":"math/probability/chap3/#52","title":"5.2 \u8fde\u7eed\u578b","text":"<p>Note</p> <p>\u5df2\u77e5 \\((X,Y)\\) \u6982\u7387\u5bc6\u5ea6\uff0c\u6c42 \\(Z = g(X, Y)\\) \u6982\u7387\u5bc6\u5ea6</p> <ul> <li>\u5148\u6c42\u968f\u673a\u53d8\u91cf \\(Z\\) \u7684\u5206\u5e03\u51fd\u6570 \\(F_Z(z) = \\int_{g(x, y) \\le z}f(x, y)dxdy\\)</li> <li>\u5bf9 \\(F_Z(z)\\) \u6c42\u5bfc\uff0c\u5f97 \\(Z\\) \u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570 \\(f_Z(z) = F_Z'(z)\\)</li> </ul> <p>Note</p> <p>\u56fe\u5f62\u9650\u5b9a\u6cd5\u76f8\u5f53\u4e8e\u5148\u628a y \u6d88\u53bb\uff0c\u53ea\u6c42 z \u548c x \u7684\u5173\u7cfb\u3002\u7136\u540e\u4f5c\u51fa xoz \u4e2d\u7b26\u5408\u6761\u4ef6\u7684\u533a\u57df\u3002</p> <p>\u505a\u4e00\u6761\u5e73\u884c x \u8f74\u7684\u7ebf\uff0c\u7136\u540e\u6cbf\u7740\u8fd9\u6761\u7ebf\u5bf9 x \u79ef\u5206\uff0c\u5f62\u5f0f\u662f \\(f_Z(z) = \\int_{-\\infty}^{+\\infty} f(x, z - x)dx\\)</p>"},{"location":"math/probability/chap3/#53","title":"5.3 \u4e09\u79cd\u7279\u6b8a\u7684\u8fde\u7eed\u578b\u60c5\u51b5","text":"<ul> <li> <p>\\(Z = X + Y\\)</p> <p></p> <p>Tip</p> <p>\u8fd9\u91cc\u8bf4\u660e\u82e5\u4e24\u4e2a\u968f\u673a\u53d8\u91cf\u72ec\u7acb\uff0c\u8054\u5408\u6982\u7387\u5bc6\u5ea6\u53ef\u4ee5\u62c6\u5206\u6210\u4e24\u4e2a\u8fb9\u7f18\u6982\u7387\u5bc6\u5ea6\u7684\u4e58\u79ef\u518d\u79ef\u5206\u5f62\u5f0f\u3002</p> </li> <li> <p>\u72ec\u7acb\u6b63\u6001\u968f\u673a\u53d8\u91cf\u7684\u91cd\u8981\u7ed3\u8bba</p> <p></p> </li> <li> <p>\\(\\max(x, y)\\) \u548c \\(\\min(x, y)\\) \u7684\u5206\u5e03\u51fd\u6570</p> <p></p> <p></p> <p></p> <p></p> <p></p> </li> </ul>"},{"location":"math/probability/chap3/#6-n","title":"6 n\u7ef4\u968f\u673a\u53d8\u91cf","text":"<p>\u8fd9\u8282\u771f\u6ca1\u6211\u4ec0\u4e48\u4e8bqwq\u3002</p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"math/probability/chap3/#7","title":"7 \u4f8b\u9898","text":"<ul> <li> <p>e.g.1</p> <p></p> </li> <li> <p>e.g.2</p> <p></p> </li> <li> <p>e.g.3  </p> <p></p> </li> <li> <p>e.g.4</p> <p></p> Solution <p></p> </li> <li> <p>e.g.5</p> <p></p> Solution <p></p> <p></p> <p>Note</p> <p>\u8fd9\u9898\u6700\u540e\u5316\u6210\u79ef\u5206\u7684\u65f6\u5019\u8981\u60f3\u8d77\u6765\u5229\u7528\u6b63\u6001\u5206\u5e03\u516c\u5f0f\u6765\u505a\uff01</p> </li> <li> <p>e.g.6</p> <p></p> <p></p> Solution <p></p> <p></p> </li> </ul>"},{"location":"math/probability/chap4/","title":"\u968f\u673a\u53d8\u91cf\u6570\u5b57\u7279\u5f81","text":""},{"location":"math/probability/chap4/#1","title":"1 \u6570\u5b66\u671f\u671b","text":""},{"location":"math/probability/chap4/#11","title":"1.1 \u57fa\u672c\u6982\u5ff5","text":"<ul> <li> <p>\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u7684\u671f\u671b</p> \\[   E(X) = \\sum_{k = 1}^{\\infty}x_kp_k \\] </li> <li> <p>\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u7684\u671f\u671b</p> \\[   E(X) = \\int_{-\\infty}^{+\\infty}xf(x)dx \\] <p>Tip</p> <p>\u6ce8\u610f\uff0c\u5982\u679c\u671f\u671b\u5b58\u5728\uff0c\\(E(X)\\) \u8981\u6ee1\u8db3\u7edd\u5bf9\u6536\u655b\u3002</p> </li> <li> <p>\u5e38\u89c1\u968f\u673a\u5206\u5e03\u7684\u671f\u671b</p> <p>\\(X\\) \u670d\u4ece \\((0, 1)\\) \u5206\u5e03\uff0c\\(E(X) = p\\)\u3002</p> <p>\\(X \\sim B(n, p)\\) \uff0c\\(E(X) = np\\)\u3002</p> \u8bc1\u660e <p>\\(X \\sim P(\\lambda)\\) \uff0c\\(E(X) = \\lambda\\)\u3002</p> \u8bc1\u660e <p>\\(X\\) \u670d\u4ece\u53c2\u6570\u4e3a \\(p\\) \u7684\u51e0\u4f55\u5206\u5e03\uff0c\\(E(X) = \\dfrac{1}{p}\\)\u3002</p> \u8bc1\u660e <p>\\(X\\) \u670d\u4ece \\((a, b)\\) \u4e0a\u7684\u5747\u5300\u5206\u5e03\uff0c\\(E(X) = \\dfrac{a + b}{2}\\)\u3002</p> \u8bc1\u660e <p>\\(X \\sim N(\\mu, \\sigma^2)\\) \uff0c\\(E(X) = \\mu\\)\u3002</p> \u8bc1\u660e <p>\\(X\\) \u670d\u4ece\u53c2\u6570\u4e3a \\(\\lambda\\) \u7684\u6307\u6570\u5206\u5e03\uff0c\\(E(X) = \\dfrac{1}{\\lambda}\\)\u3002</p> \u8bc1\u660e </li> </ul>"},{"location":"math/probability/chap4/#12","title":"1.2 \u968f\u673a\u53d8\u91cf\u7684\u51fd\u6570\u7684\u968f\u673a\u671f\u671b","text":"<ul> <li> <p>\u79bb\u6563\u578b\u51fd\u6570\u7684\u671f\u671b</p> \\[   E(Y) = E[g(X)] = \\sum_{k = 1}^{\\infty}g(x_k)p_k \\] </li> <li> <p>\u8fde\u7eed\u578b\u51fd\u6570\u7684\u671f\u671b</p> \\[   E(Y) = E[g(X)] = \\int_{-\\infty}^{+\\infty}g(x)f(x)dx \\] </li> <li> <p>\u4e8c\u5143\u79bb\u6563\u578b\u51fd\u6570\u7684\u671f\u671b</p> \\[   E(Z) = E[g(X, Y)] = \\sum_{j = 1}^{\\infty}\\sum_{i = 1}^{\\infty}g(x_i, y_j)p_{ij} \\] </li> <li> <p>\u4e8c\u5143\u8fde\u7eed\u578b\u51fd\u6570\u7684\u671f\u671b</p> \\[   E(Z) = E[g(X, Y)] = \\int_{-\\infty}^{+\\infty}\\int_{-\\infty}^{+\\infty}g(x, y)f(x, y)dxdy \\] </li> </ul>"},{"location":"math/probability/chap4/#13","title":"1.3 \u6570\u5b66\u671f\u671b\u6027\u8d28","text":"<ul> <li> <p>\\(E(aX + bY + c) = aE(X) + bE(Y) + c\\)\uff08\\(a, b, c\\) \u5747\u4e3a\u5e38\u6570\uff09</p> </li> <li> <p>\u8bbe \\(X\\)\uff0c\\(Y\\) \u76f8\u4e92\u72ec\u7acb\uff0c\u5219\u6709 \\(E(XY) = E(X)X(Y)\\)\u3002\uff08\u4f46\u662f\u53cd\u8fc7\u6765\u4e0d\u4e00\u5b9a\u6210\u7acb\uff0c\u89c1\u540e\u9762\u4f8b\u9898\uff09 </p> </li> <li> <p>\u8bbe\u6709\u968f\u673a\u53d8\u91cf \\(X\\) \u548c \\(Y\\)\uff0c\u82e5 \\(E(X^2)\\) \u548c \\(E(Y^2)\\) \u90fd\u5b58\u5728\uff0c\u5219 \\([E(XY)]^2 \\le E(X^2)E(Y^2)\\) \u79f0\u4e3a Cauchy-Schwarz \u4e0d\u7b49\u5f0f\u3002</p> \u8bc1\u660e <p></p> </li> <li> <p>\u989d\u5916\u8865\u5145</p> <p></p> </li> </ul>"},{"location":"math/probability/chap4/#2","title":"2 \u65b9\u5dee","text":""},{"location":"math/probability/chap4/#21","title":"2.1 \u57fa\u672c\u6982\u5ff5","text":"<ul> <li> <p>\u82e5\u968f\u673a\u53d8\u91cf\u7684 \\(E(X - E(X))^2\\) \u5b58\u5728\uff0c\u5219\u79f0\u5b83\u4e3a \\(X\\) \u7684\u65b9\u5dee\uff0c\u8bb0\u4f5c \\(D(X)\\)\uff0c\u8bb0 \\(\\sigma(X) = \\sqrt{D(X)}\\) \u4e3a\u968f\u673a\u53d8\u91cf \\(X\\) \u7684\u5747\u65b9\u5dee\uff08\u6807\u51c6\u5dee\uff09\u3002</p> <p>Tip</p> <p> </p> <p>\u8fd9\u4e2a\u516c\u5f0f\u975e\u5e38\u91cd\u8981\uff0c\u7b97 \\(E(x^2)\\) \u6216 \\(E^2(x)\\) \u65f6\uff0c\u8981\u4e48\u5229\u7528\u5b9a\u4e49\uff0c\u8981\u4e48\u7528\u8fd9\u4e2a\u516c\u5f0f\u6765\u8f6c\u5316\u3002\u540c\u7406\u5982\u679c \\(D(x)\\) \u4e0d\u597d\u7b97\u800c \\(E(x^2)\\) \u548c \\(E^2(x)\\) \u597d\u7b97\uff0c\u4e5f\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u516c\u5f0f\u3002</p> </li> <li> <p>\u5e38\u89c1\u968f\u673a\u5206\u5e03\u7684\u65b9\u5dee</p> <p>\\(X\\) \u670d\u4ece \\((0, 1)\\) \u5206\u5e03\uff0c\\(D(X) = p(1 - p)\\)\u3002</p> <p>\\(X \\sim B(n, p)\\) \uff0c\\(D(X) = np(1 - p)\\)\u3002</p> \u8bc1\u660e\uff08\u4e24\u89e3\uff09 <p>\\(X \\sim P(\\lambda)\\) \uff0c\\(D(X) = \\lambda\\)\u3002</p> \u8bc1\u660e <p>\\(X\\) \u670d\u4ece\u53c2\u6570\u4e3a \\(p\\) \u7684\u51e0\u4f55\u5206\u5e03\uff0c\\(D(X) = \\dfrac{1 - p}{p^2}\\)\u3002</p> \u8bc1\u660e <p>\\(X\\) \u670d\u4ece \\((a, b)\\) \u4e0a\u7684\u5747\u5300\u5206\u5e03\uff0c\\(D(X) = \\dfrac{(b - a)^2}{12}\\)\u3002</p> \u8bc1\u660e <p>\\(X \\sim N(\\mu, \\sigma^2)\\) \uff0c\\(D(X) = \\sigma^2\\)\u3002</p> \u8bc1\u660e <p>\\(X\\) \u670d\u4ece\u53c2\u6570\u4e3a \\(\\lambda\\) \u7684\u6307\u6570\u5206\u5e03\uff0c\\(D(X) = \\dfrac{1}{\\lambda^2}\\)\u3002</p> \u8bc1\u660e <p>\u91cd\u8981\u9644\u5f55\u8868</p> <p></p> </li> </ul>"},{"location":"math/probability/chap4/#22","title":"2.2 \u65b9\u5dee\u7684\u6027\u8d28","text":"<ul> <li> <p>\u5982\u679c \\(X\\) \u548c \\(Y\\) \u76f8\u4e92\u72ec\u7acb\uff1a\\(D(aX + bY + c) = a^2D(X) + b^2D(Y)\\)\u3002</p> </li> <li> <p>\u5982\u679c \\(X\\) \u548c \\(Y\\) \u4e0d\u76f8\u4e92\u72ec\u7acb\uff1a\\(D(X \\pm Y) = D(X) + D(Y) \\pm 2E[(X - EX)(Y - EY)]\\)\u3002 </p> </li> <li> <p>\u5982\u679c \\(D(X) = 1\\)\uff0c\u8bf4\u660e \\(P\\{X = E(X)\\} = 1\\)\u3002</p> </li> </ul> <p>Tip</p> <p></p> <p>\u6ce8\u610f\uff0c\u8fd9\u91cc\u65b9\u5dee\u4e3a \\(0\\) \u53ef\u4ee5\u8868\u793a \\(E(X)\\) \u4e3a\u5e38\u6570\u7684\u6982\u7387\u4e3a \\(1\\)\uff0c\u4f46\u662f\u671f\u671b\u4e3a\u5e38\u6570\u7684\u6982\u7387\u662f \\(1\\) \u4e5f\u4e0d\u80fd\u8bf4\u660e\u671f\u671b\u4e00\u5b9a\u662f\u5e38\u6570\uff0c\u5728 <code>\u6ce82</code> \u91cc\u4e3e\u4e86\u53cd\u4f8b\u3002\u6240\u4ee5\u4e0d\u80fd\u8bf4 \\(X\\) \u53d6\u503c\u76f8\u7b49\uff0c\u53ea\u80fd\u8bf4\u51e0\u4e4e\u5904\u5904\u76f8\u7b49\u3002</p> <p></p>"},{"location":"math/probability/chap4/#23","title":"2.3 \u968f\u673a\u53d8\u91cf\u7684\u6807\u51c6\u5316","text":"<ul> <li> <p>\u8bbe \\(X\\) \u7684\u6570\u5b66\u671f\u671b \\(E(X) = \\mu\\)\uff0c\u65b9\u5dee \\(D(X) = \\sigma^2 &gt; 0\\)\uff0c\u5219\u79f0 \\(X^* = \\dfrac{X - \\mu}{\\sigma} = \\dfrac{X - E(X)}{\\sqrt{D(X)}}\\) \u4e3a \\(X\\) \u7684\u6807\u51c6\u5316\u968f\u673a\u53d8\u91cf\u3002</p> <p>\u6807\u51c6\u5316\u968f\u673a\u53d8\u91cf\u7684\u6570\u5b66\u671f\u671b\u662f \\(0\\)\uff0c\u65b9\u5dee\u662f \\(1\\)\uff0c\u5373 \\(E(X^*) = 0, D(X^*) = 1\\)\u3002</p> </li> </ul>"},{"location":"math/probability/chap4/#3","title":"3 \u534f\u65b9\u5dee\u4e0e\u76f8\u5173\u7cfb\u6570","text":""},{"location":"math/probability/chap4/#31","title":"3.1 \u534f\u65b9\u5dee","text":"<ul> <li>\u8bbe\u968f\u673a\u53d8\u91cf \\(X\\) \u548c \\(Y\\) \u7684\u6570\u5b66\u671f\u671b \\(E(X)\\) \u548c \\(E(Y)\\) \u90fd\u5b58\u5728, \u5982\u679c \\(E[(X - EX)(Y - EY)]\\) \u5b58\u5728\uff0c\u5219\u79f0\u5b83\u4e3a\u968f\u673a\u53d8\u91cf \\(X\\) \u548c \\(Y\\) \u7684\u534f\u65b9\u5dee,\u8bb0\u4f5c \\(\\mathrm{Cov}(X, Y)\\)\u3002\u5219\u6709</li> </ul> \\[   \\mathrm{Cov}(X, Y) = E[(X - E(X))(Y - E(Y))] \\] <p>Tip</p> <p></p> <ul> <li>\u534f\u65b9\u5dee\u7684\u6027\u8d28<ul> <li>\\(\\mathrm{Cov}(X, Y) = \\mathrm{Cov}(Y, X)\\)</li> <li>\\(\\mathrm{Cov}(aX, bY) = ab\\mathrm{Cov}(X, Y)\\)</li> <li>\\(\\mathrm{Cov}(X_1 + X_2, Y) = \\mathrm{Cov}(X_1, Y) + \\mathrm{Cov}(X_2, Y)\\)</li> <li>\\(D(X \\pm Y) = D(X) + D(Y) + \\pm 2\\mathrm{Cov}(X, Y)\\)</li> <li>\\(D(aX \\pm bY) = a^2D(X) + b^2D(Y) \\pm 2ab\\mathrm{Cov}(X, Y)\\)</li> </ul> </li> </ul>"},{"location":"math/probability/chap4/#32","title":"3.2 \u76f8\u5173\u7cfb\u6570","text":"<ul> <li> <p>\u5982\u679c \\(\\mathrm{Cov(X, Y)}\\) \u5b58\u5728\u4e14 \\(D(X) \\ne 0, D(Y) \\ne 0\\)\uff0c\u90a3\u4e48\u79f0 \\(\\rho_{XY} = \\dfrac{\\mathrm{Cov}(X, Y)}{\\sqrt{D(X)}\\sqrt{D(Y)}}\\) \u4e3a \\(X\\)\uff0c\\(Y\\) \u7684\u76f8\u5173\u7cfb\u6570\u3002</p> <p>\u5f53 \\(\\rho = 0\\) \u65f6\uff0c\u79f0 \\(X, Y\\) \u662f\u4e0d\u76f8\u5173\u3002</p> <p>Tip</p> <ul> <li>\u76f8\u5173\u7cfb\u6570\u5e38\u7528\u516c\u5f0f \\(\\rho_{XY} = \\dfrac{E(X, Y) - E(X)E(Y)}{\\sqrt{D(X)}\\sqrt{D(Y)}}\\)</li> <li>\\(\\rho_{XY} = \\mathrm{Cov}(X^*, Y^*)\\)</li> <li>\u82e5 \\(X, Y\\) \u4e0d\u76f8\u5173\uff0c\u4f46 \\(X, Y\\) \u4e0d\u4e00\u5b9a\u72ec\u7acb\u3002</li> </ul> <p>\u76f8\u5173\u7cfb\u6570\u7684\u6027\u8d28</p> <ul> <li>\\(|\\rho_{XY}| \\le 1\\)</li> <li>\u82e5 \\(X\\) \u548c \\(Y\\) \u76f8\u4e92\u72ec\u7acb\uff0c\u5219 \\(\\rho_{XY} = 0\\)\u3002</li> <li>\u82e5 \\(|\\rho_{XY}| = 1\\) \\(\\Leftrightarrow\\) \u5b58\u5728\u5e38\u6570 \\(a, b\\) \u4f7f \\(P\\{Y = a + bX\\} = 1\\)\u3002</li> </ul> <p>\u4e8c\u7ef4\u6b63\u6001\u5206\u5e03\u7684\u7ed3\u8bba</p> <ul> <li>\u82e5 \\((X, Y) \\sim N(\\mu_1, \\mu_2, \\sigma_1^2, \\sigma_2^2, \\rho)\\)\uff0c\u8bc1\u660e \\(X\\) \u4e0e \\(Y\\) \u7684\u76f8\u5173\u7cfb\u6570 \\(\\rho_{XY} = \\rho\\)\u3002</li> <li>\u82e5 \\((X, Y) \\sim N(\\mu_1, \\mu_2, \\sigma_1^2, \\sigma_2^2, \\rho)\\)\uff0c\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\\(X\\) \u4e0e \\(Y\\) \u76f8\u4e92\u72ec\u7acb\u4e0e \\(X\\) \u4e0e \\(Y\\) \u4e0d\u76f8\u5173\u4e92\u4e3a\u5145\u8981\u6761\u4ef6\u3002</li> <li>\u82e5 \\((X, Y) \\sim N(\\mu_1, \\mu_2, \\sigma_1^2, \\sigma_2^2, \\rho)\\)\uff0c\u5219 \\(\\mathrm{Cov}(X, Y) = \\rho \\sigma_1 \\sigma_2\\)\u3002</li> </ul> <p>\u76f8\u5173\u7cfb\u6570\u7684\u542b\u4e49</p> <p> </p> </li> </ul>"},{"location":"math/probability/chap4/#4","title":"4 \u77e9","text":""},{"location":"math/probability/chap4/#41","title":"4.1 \u539f\u70b9\u77e9\u548c\u4e2d\u5fc3\u77e9","text":"<ul> <li>\u5bf9\u4e8e\u968f\u673a\u53d8\u91cf \\(X,Y\\)\uff0c<ul> <li>\u79f0 \\(E(X^k)\\) \u4e3a \\(k\\) \u9636\u539f\u70b9\u77e9(\\(k\\) \u9636\u77e9)\u3002</li> <li>\u79f0 \\(E[(X - E(X))^k]\\) \u4e3a \\(k\\) \u9636\u4e2d\u5fc3\u77e9\u3002  </li> <li>\u79f0 \\(E(X^kY^l)\\) \u4e3a \\(k + l\\) \u9636\u6df7\u5408\u77e9\u3002</li> <li>\u79f0 \\(E[(X - E(X)^k(Y - E(Y))^l)]\\) \u4e3a \\(k + l\\) \u9636\u6df7\u5408\u4e2d\u5fc3\u77e9\u3002</li> <li>\u7279\u6b8a\u7684\uff0c\\(E(X)\\) \u4e3a \\(1\\) \u9636\u539f\u70b9\u77e9\uff0c\\(D(X)\\) \u4e3a \\(2\\) \u9636\u4e2d\u5fc3\u77e9\uff0c\\(\\mathrm{Cov}(X, Y)\\) \u4e3a \\(2\\) \u9636\u6df7\u5408\u4e2d\u5fc3\u77e9\u3002</li> </ul> </li> </ul>"},{"location":"math/probability/chap4/#42","title":"4.2 \u534f\u65b9\u5dee\u77e9\u9635","text":"<ul> <li>\u5bf9\u4e8e\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf \\((X_1, X_2 )\\) \u8bb0<ul> <li>\\(c_{11} = E[(X_1 - E(X_1))^2] = D(X_1)\\)</li> <li>\\(c_{12} = E[(X_1 - E(X_1))(X_2 - E(X_2))] = \\mathrm{Cov}(X_1, X_2)\\)</li> <li>\\(c_{21} = E[(X_1 - E(X_2))(X_1 - E(X_1))] = \\mathrm{Cov}(X_2, X_1)\\)</li> <li>\\(c_{22} = E[(X_2 - E(X_2))^2] = D(X_2)\\)</li> </ul> </li> <li>\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf\u7684\u534f\u65b9\u5dee\u77e9\u9635</li> </ul> \\[\\begin{equation} C = \\begin{bmatrix}         D(X_1) &amp; \\mathrm{Cov}(X_1, X_2) \\\\         \\mathrm{Cov}(X_2, X_1) &amp; D(X_2)     \\end{bmatrix} \\end{equation}\\]"},{"location":"math/probability/chap4/#43-n","title":"4.3 \\(n\\) \u7ef4\u6b63\u6001\u5206\u5e03","text":"<ul> <li> <p>\u4e8c\u7ef4\u6b63\u6001\u5206\u5e03\u7684\u77e9\u9635\u8868\u793a\u5f0f   </p> </li> <li> <p>\\(n\\) \u7ef4\u6b63\u6001\u5206\u5e03\u7684\u77e9\u9635\u8868\u793a\u5f0f   </p> </li> </ul> <p>\\(n\\) \u7ef4\u6b63\u6001\u968f\u673a\u53d8\u91cf\u7684\u6027\u8d28</p> <p> </p>"},{"location":"math/probability/chap4/#5","title":"5 \u4f8b\u9898","text":"<p>\uff08\u8fd9\u4e9b\u8bc1\u660e\u90fd\u8981\u6c42\u638c\u63e1\uff09</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"math/probability/chap5/","title":"\u5927\u6570\u5b9a\u5f8b\u53ca\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406","text":""},{"location":"math/probability/chap5/#0","title":"0 \u603b\u7ed3","text":""},{"location":"math/probability/chap5/#1","title":"1 \u5207\u6bd4\u96ea\u592b\u4e0d\u7b49\u5f0f","text":"<ul> <li> <p>\u8bbe \\(X\\) \u7684\u6570\u5b66\u671f\u671b\u548c\u65b9\u5dee\u90fd\u5b58\u5728\uff0c\u5219\u5bf9\u4efb\u610f\u7ed9\u5b9a\u7684\u6b63\u6570 \\(\\varepsilon\\)\uff0c\u6709</p> \\[\\begin{equation}   P \\left \\{|X - E(X)| \\ge \\varepsilon \\right \\} \\le \\dfrac{D(X)}{\\varepsilon^2} \\end{equation}\\] <p>Note</p> <ul> <li>\u65b9\u5dee \\(D(X)\\) \u8d8a\u5c0f\uff0c\u4e8b\u4ef6 \\(|X - E(X)| &lt; \\varepsilon\\) \u7684\u6982\u7387\u8d8a\u5927\u3002\u8bf4\u660e \\(X\\) \u7684\u53d6\u503c\u8d8a\u96c6\u4e2d\u5728\u5747\u503c \\(E(X)\\) \u9644\u8fd1\uff0c \u5373 \\(X\\) \u504f\u79bb \\(E(X)\\) \u7684\u7a0b\u5ea6\u8d8a\u5c0f\uff0c\u6545\u65b9\u5dee \\(D(X)\\) \u786e\u5b9e\u662f\u53cd\u6620 \\(X\\) \u504f\u79bb \\(E(X)\\) \u7a0b\u5ea6\u7684\u91cf\u3002</li> <li>\u65e0\u9700\u77e5\u9053 \\(X\\) \u7684\u5206\u5e03,\u53ea\u8981\u77e5\u9053 \\(D(X)\\)\uff0c\u5c31\u53ef\u5bf9 \\(X\\) \u843d\u5165\u4ee5 \\(E(X)\\) \u4e3a\u4e2d\u5fc3\u7684\u5bf9\u79f0\u533a\u95f4 \\((E(X) - \\varepsilon, E(X) + \\varepsilon)\\) \u5185\uff08\u6216\u5916\uff09\u7684\u6982\u7387\u8fdb\u884c\u7c97\u7565\u4f30\u503c\u3002 </li> </ul> </li> </ul>"},{"location":"math/probability/chap5/#2","title":"2 \u5927\u6570\u5b9a\u5f8b","text":"<ul> <li> <p>\u4f9d\u6982\u7387\u6536\u655b</p> <p>\u8bbe \\(X_1, X_2, \\cdots, X_n, \\cdots\\) \u662f\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\u5e8f\u5217\uff0c\\(a\\) \u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u82e5\u5bf9\u4efb\u4f55\u6b63\u6570 \\(\\varepsilon\\)\uff0c\u6709 \\(\\lim_{n \\to \\infty}P\\{|X_n - a| &lt; \\varepsilon\\} = 1\\)\uff0c\u5219\u79f0\u5e8f\u5217 \\(X_1, X_2, \\cdots, X_n, \\cdots\\) \u4f9d\u6982\u7387\u6536\u655b\u4e8e \\(a\\)\uff0c\u8bb0\u4e3a \\(X_n \\stackrel{p}{\\longrightarrow} a\\)\u3002</p> <p>Note</p> <ul> <li>\u53e6\u4e00\u79cd\u5f62\u5f0f \\(\\lim_{n \\to \\infty}P\\{|X_n - a| \\ge \\varepsilon\\} = 0\\)</li> <li>\u4f9d\u6982\u7387\u6536\u655b\u4e0e\u9ad8\u6570\u4e2d\u7684\u6536\u655b\u610f\u4e49\u4e0d\u540c\u3002</li> <li>\u8bbe \\(X_n \\stackrel{p}{\\longrightarrow} a, Y_n \\stackrel{p}{\\longrightarrow} b\\) \u51fd\u6570 \\(g(x, y)\\) \u5728 \\((a, b)\\) \u8fde\u7eed\uff0c\u5219 \\(g(X_n, Y_n) \\stackrel{p}{\\longrightarrow} g(a, b)\\)\u3002</li> <li>\u8fd9\u53cd\u6620\u4e86\u5728 \\(n \\to \\infty\\) \u65f6\uff0c\u968f\u673a\u53d8\u91cf \\(X_n\\) \u7684\u503c\u4f1a\u6536\u655b\u4e8e\u67d0\u4e2a\u5b9a\u503c\uff08\u4e0d\u8981\u548c\u4f9d\u5206\u5e03\u6536\u655b\u6df7\u6dc6\uff09\u3002 </li> </ul> </li> <li> <p>\u5207\u6bd4\u96ea\u592b\u5927\u6570\u5b9a\u5f8b</p> <p>\u8bbe\u968f\u673a\u53d8\u91cf\u5e8f\u5217 \\(X_1, X_2, \\cdots, X_n, \\cdots\\) \u76f8\u4e92\u72ec\u7acb\uff0c\u4e14\u5747\u5b58\u5728\u6570\u5b66\u671f\u671b\u53ca\u65b9\u5dee\uff0c\u4e14\u65b9\u5dee\u6709\u754c\uff08\u5373\u5b58\u5728\u6b63\u6570 \\(M\\)\uff0c\u4f7f \\(D(X_n) \\le M, (n = 1, 2, \\cdots)\\)\uff09\uff0c\u5219\u5bf9\u4efb\u610f\u7ed9\u5b9a\u7684 \\(\\varepsilon &gt; 0\\)\uff0c\u6052\u6709</p> \\[\\begin{equation}   \\lim_{n \\to \\infty} P \\left \\{ \\left |\\dfrac{1}{n} \\sum_{k = 1}^nX_k - \\dfrac{1}{n}\\sum_{k = 1}^nE(X_k) \\right | &lt; \\varepsilon \\right \\} = 1 \\end{equation}\\] <p>\u8fd9\u8bf4\u660e\u4e86 \\(\\bar X \\stackrel{p}{\\longrightarrow} E(\\bar X)\\)</p> <p>Note</p> <p>\u82e5\u968f\u673a\u5e8f\u5217 \\(\\{X_n\\}\\)\uff0c\u5bf9\u4e8e\u6bcf\u9879\u5747\u6709 \\(E(X_k) = \\mu, D(X_k) = \\sigma^2\\)\uff0c\u5219</p> \\[\\begin{equation}   \\lim_{n \\to \\infty} P \\left \\{ \\left |\\dfrac{1}{n} \\sum_{k = 1}^nX_k - \\mu \\right | &lt; \\sigma \\right \\} = 1 \\end{equation}\\] </li> <li> <p>\u4f2f\u52aa\u5229\u5927\u6570\u5b9a\u5f8b</p> <p>\u8bbe \\(n_A\\) \u662f \\(n\\) \u6b21\u72ec\u7acb\u91cd\u590d\u8bd5\u9a8c\u4e2d\u4e8b\u4ef6 \\(A\\) \u53d1\u751f\u7684\u6b21\u6570\uff0c\\(p\\) \u662f\u4e8b\u4ef6 \\(A\\) \u5728\u4e00\u6b21\u5b9e\u9a8c\u4e2d\u53d1\u751f\u7684\u6982\u7387\uff0c\u5219\u5bf9\u4efb\u610f \\(\\varepsilon &gt; 0\\) \u6709</p> \\[\\begin{equation}   \\lim_{n \\to \\infty} P \\left \\{ \\left |\\dfrac{n_A}{n} - p \\right | &lt; \\varepsilon \\right \\} = 1 \\end{equation}\\] <p>Note</p> <ul> <li>\u5f53 \\(n \\to \\infty\\) \u65f6\uff0c\u4e8b\u4ef6\u7684\u9891\u7387\u6536\u655b\u4e8e\u6982\u7387\u3002</li> <li>\u4f2f\u52aa\u5229\u5927\u6570\u5b9a\u7406\u8868\u793a\u5f53\u8bd5\u9a8c\u6b21\u6570 \\(n\\) \u5f88\u5927\u65f6\uff0c\u53ef\u7528\u4e8b\u4ef6\u53d1\u751f\u7684\u9891\u7387\u4ee3\u66ff\u6982\u7387\u3002</li> </ul> </li> <li> <p>\u8f9b\u94a6\u5927\u6570\u5b9a\u5f8b\uff08\u72ec\u7acb\u540c\u5206\u5e03\u5927\u6570\u5b9a\u5f8b\uff09</p> <p>\u8bbe\u968f\u673a\u53d8\u91cf\u5e8f\u5217 \\(X_1, X_2, \\cdots, X_n, \\cdots\\) \u76f8\u4e92\u72ec\u7acb\uff0c\u4e14\u670d\u4ece\u540c\u4e00\u5206\u5e03\uff0c\u4e14 \\(E(X_k) = \\mu\\)\uff0c\u5219\u5bf9\u4efb\u610f\u7ed9\u5b9a\u7684 \\(\\varepsilon &gt; 0\\)\uff0c\u6052\u6709</p> \\[\\begin{equation}   \\lim_{n \\to \\infty} P \\left \\{ \\left |\\dfrac{1}{n}\\sum_{k = 1}^n X_k - \\mu \\right | &lt; \\varepsilon \\right \\} = 1 \\end{equation}\\] <p>Tip</p> <p>\u4f2f\u52aa\u5229\u662f\u8f9b\u94a6\u7684\u7279\u6b8a\u60c5\u51b5\u3002</p> </li> </ul>"},{"location":"math/probability/chap5/#3","title":"3 \u4e2d\u5fc3\u6781\u9650\u5b9a\u7406","text":"<ul> <li> <p>\u4f9d\u5206\u5e03\u6536\u655b</p> <p>\u8bbe\u968f\u673a\u53d8\u91cf \\(X_1, X_2, \\cdots, X_n, \\cdots\\) \u7684\u5206\u5e03\u51fd\u6570\u4f9d\u6b21\u662f \\(F(x), F_1(x), \\cdots, F_n(x), \\cdots\\) \u5982\u679c\u5bf9\u4e8e \\(F(X)\\) \u7684\u6bcf\u4e00\u4e2a\u8fde\u7eed\u70b9 \\(x\\)\uff0c\u90fd\u6709 \\(\\lim_{n \\to \\infty}F_n(x) = F(x)\\)\uff0c\u5219\u79f0\u968f\u673a\u53d8\u91cf\u5e8f\u5217 \\(X_1, X_2, \\cdots, X_n, \\cdots\\) \u4f9d\u5206\u5e03\u6536\u655b\u4e8e \\(X\\)\uff0c\u8bb0\u4f5c \\(X_n \\stackrel{L}{\\longrightarrow} X\\) \u7279\u522b\u5730,\u82e5 \\(X\\) \u670d\u4ece\u6807\u51c6\u6b63\u6001\u5206\u5e03\uff0c\u5219 \\(\\lim_{n \\to \\infty}F_n(x) = \\Phi(x)\\)\u3002</p> <p>Tip</p> <p>\u8fd9\u53cd\u6620\u4e86\u5728 \\(n \\to \\infty\\) \u65f6\uff0c\u968f\u673a\u53d8\u91cf \\(X_n\\) \u7684\u5206\u5e03\u5f62\u5f0f\u4f1a\u6536\u655b\u4e8e\u67d0\u4e2a\u7279\u5b9a\u7684\u5206\u5e03\u5f62\u5f0f\uff08\u4e0d\u8981\u548c\u4f9d\u6982\u7387\u6536\u655b\u6df7\u6dc6\uff09\u3002 </p> </li> <li> <p>\u83b1\u7ef4\u2014\u6797\u5fb7\u4f2f\u683c\u5b9a\u7406\uff08\u72ec\u7acb\u540c\u5206\u5e03\u7684\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\uff09</p> <p>\u8bbe\u968f\u673a\u53d8\u91cf \\(X_1, X_2, \\cdots, X_n, \\cdots\\) \u76f8\u4e92\u72ec\u7acb\uff0c\u670d\u4ece\u540c\u4e00\u5206\u5e03,\u6570\u5b66\u671f\u671b\u4e3a \\(\\mu\\) \u548c\u65b9\u5dee \\(\\sigma^2 &gt; 0\\)\uff0c\u5219\u5bf9\u4e8e\u968f\u673a\u53d8\u91cf </p> \\[\\begin{equation}   Y_n = \\dfrac{\\sum_{k = 1}^n X_k - E(\\sum_{k = 1}^n X_k)}{\\sqrt{D(\\sum_{k = 1}^n X_k)}} = \\dfrac{\\sum_{k = 1}^n X_k - n\\mu}{\\sqrt{n}\\sigma} \\end{equation}\\] <p>\u7684\u5206\u5e03\u51fd\u6570 \\(F_n(x) = P\\{Y_n \\le x\\} = P\\left \\{\\dfrac{\\sum_{k = 1}^n X_k - n\\mu}{\\sqrt{n}\\sigma} \\le x \\right \\}\\)</p> <p>\u5219\u5bf9\u4efb\u610f \\(x\\)\uff0c\u6709 \\(\\lim_{n \\to \\infty}F_n(x) = \\Phi(x) = \\int_{-\\infty}^x\\dfrac{1}{\\sqrt{2\\pi}}e^{-\\frac{t^2}{2}}dt\\)</p> </li> <li> <p>\u5fb7\u83ab\u5f17-\u62c9\u666e\u62c9\u65af\u5b9a\u7406\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406</p> <p>\u72ec\u7acb\u540c\u5206\u5e03\u5b9a\u7406\u5728\u4e8c\u9879\u5206\u5e03\u4e0b\u7684\u7279\u6b8a\u5f62\u5f0f\u3002</p> <p>\u8bbe\u968f\u673a\u53d8\u91cf \\(Y_n \\sim B(n, p)\\)\uff0c\u5219\u5bf9\u4efb\u610f \\(x\\)\uff0c\u6709 </p> \\[\\begin{equation}   \\lim_{n \\to \\infty}P \\left \\{ \\dfrac{Y_n - np}{\\sqrt{np(1 - p)}} \\le x \\right \\} = \\int_{-\\infty}^{x} \\dfrac{1}{\\sqrt{2\\pi}}e^{-\\frac{t^2}{2}}dt = \\Phi(x)  \\end{equation}\\] <p>Note</p> <p>\u8be5\u5b9a\u7406\u8bf4\u660e\uff0c\u82e5 \\(X \\sim B(n, p)\\)\uff0c\u5f53 \\(n\\) \u5145\u5206\u5927\u65f6\uff0c\\(X \\stackrel{approx}{\\sim} N(E(X), D(X))\\)\u3002</p> <p>\u8fd9\u8868\u660e\u6b63\u6001\u5206\u5e03\u662f\u4e8c\u9879\u5206\u5e03\u7684\u6781\u9650\u5206\u5e03\u3002</p> <p>Tip</p> <ul> <li>\u5f53n\u5f88\u5927\u65f6, \u4e8c\u9879\u5206\u5e03\u53ef\u7528\u6b63\u6001\u5206\u5e03\u903c\u8fd1.\u7a76\u7adfn \u591a\u5927\u624d\u662f\u5f88\u201c\u5927\u201d\u8981\u4f9d\u636e\u5b9e\u9645\u95ee\u9898\u6765\u5b9a. \u4e00\u822c\u5730, \u5982\u679cn\u226550(\u6709\u65f6\u4ea6\u53ef\u653e\u5bbd\u5230n\u226530), \u5c31\u53ef\u8ba4\u4e3a\u662f\u5f88\u5927\u7684n. </li> <li>\u7b2c\u4e8c\u7ae0\u6cca\u677e\u5b9a\u7406\u8868\u660e,\u5f53p\u5f88\u5c0f\u3001n\u8f83\u5927\u4e14np\u4e0d\u592a\u5927\u65f6, \u4e8c\u9879\u5206\u5e03\u53ef\u7528\u6cca\u677e\u5206\u5e03\u4f5c\u8fd1\u4f3c.</li> <li>\u5728\u5b9e\u9645\u95ee\u9898\u4e2d, \u5f53p\u22640.1, n \u8f83\u5927\u4e14np\u22645 \u65f6,\u5e38\u7528\u6cca\u677e\u5206\u5e03\u4f5c\u4e3a\u4e8c\u9879\u5206\u5e03\u7684\u8fd1\u4f3c\u8ba1\u7b97.</li> <li>\u5f53n\u8f83\u5927\u4e14np&gt;5\u65f6, \u5e38\u7528\u6b63\u6001\u5206\u5e03\u505a\u4e8c\u9879\u5206\u5e03\u7684\u8fd1\u4f3c\u8ba1\u7b97</li> </ul> <p>Tip</p> <p>\u5728\u6240\u7ed9\u6761\u4ef6\u4e0b\uff0c\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\u4e0d\u4ec5\u7ed9\u51fa\u4e86\u6982\u7387\u7684\u8fd1\u4f3c\u8868\u8fbe\u5f0f\uff0c\u800c\u4e14\u4e5f\u80fd\u4fdd\u8bc1\u5176\u6781\u9650\u662f \\(1\\)\uff0c\u53ef\u89c1\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\u7684\u7ed3\u8bba\u66f4\u4e3a\u7cbe\u786e\u3002</p> </li> </ul>"},{"location":"math/probability/chap5/#4","title":"4 \u4f8b\u9898","text":"<ul> <li> <p>e.g.1 \u5207\u6bd4\u96ea\u592b\u4e0d\u7b49\u5f0f</p> <p>\u8bbe\u968f\u673a\u53d8\u91cf \\(X\\) \u548c \\(Y\\) \u7684\u6570\u5b66\u671f\u671b\u662f \\(2\\)\uff0c\u65b9\u5dee\u662f \\(1\\) \u548c \\(4\\)\uff0c\u76f8\u5173\u7cfb\u6570\u662f \\(0.5\\)\u3002\u6839\u636e\u5207\u6bd4\u96ea\u592b\u4e0d\u7b49\u5f0f\u4f30\u8ba1\u6982\u7387 \\(P\\{|x - Y| \\ge 6\\}\\)\u3002</p> Solution <p></p> </li> <li> <p>e.g.2 \u72ec\u7acb\u540c\u5206\u5e03\u7684\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406</p> <p></p> Solution <p></p> <p></p> </li> <li> <p>e.g.3 \u5fb7\u83ab\u5f17-\u62c9\u666e\u62c9\u65af\u5b9a\u7406\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406</p> <p></p> Solution <p></p> </li> </ul>"},{"location":"math/probability/chap6/","title":"\u6837\u672c\u53ca\u6837\u672c\u51fd\u6570\u7684\u5206\u5e03","text":""},{"location":"math/probability/chap6/#0","title":"0 \u603b\u7ed3","text":"<p>Note</p> \\[\\begin{gather*}     u = \\dfrac{(\\bar X - \\mu)}{\\sigma / \\sqrt{n}} \\sim N(0, 1) \\\\     u = \\dfrac{(\\bar X - \\bar Y - (\\mu_1 - \\mu_2))}{\\sqrt{\\frac{\\sigma_1^2}{n_1} + \\frac{\\sigma_2^2}{n_2}}} \\sim N(0, 1) \\\\     \\dfrac{(n - 1)S^2}{\\sigma^2} = \\dfrac{1}{\\sigma^2}\\sum_{i = 1}^{n}(X_i - \\bar X)^2 \\sim \\chi^2(n - 1) \\\\     \\chi^2 = \\dfrac{1}{\\sigma^2}\\sum_{i = 1}^n (X_i - \\mu)^2 \\sim \\chi^2(n) \\\\     T = \\dfrac{\\bar X - \\mu}{S / \\sqrt{n}} \\sim t(n - 1) \\\\     S_W = \\sqrt{\\dfrac{(n_1 - 1)S_1^2 + (n_2 - 1)S_2^2}{n_1 + n_2 - 2}}, T = \\dfrac{\\bar X - \\bar Y - (\\mu_1 - \\mu_2)}{S_W\\sqrt{\\frac{1}{n_1} + \\frac{1}{n_2}}} \\sim t(n_1 + n_2 - 2) \\\\     F = \\dfrac{S_1^2/\\sigma_1^2}{S_2^2/\\sigma_2^2} = \\dfrac{S_1^2}{S_2^2} \\cdot \\dfrac{\\sigma_2^2}{\\sigma_1^2} \\sim F(n_1 - 1, n_2 - 1)\\\\     F = \\dfrac{\\sum_{i = 1}^{n_1}(X_i - \\mu_1)^2 / (n_1 \\sigma_1^2)}{\\sum_{j = 1}^{n_2}(Y_j - \\mu_2)^2 / (n_2\\sigma_2^2)} \\sim F(n_1, n_2) \\end{gather*}\\]"},{"location":"math/probability/chap6/#1","title":"1 \u603b\u4f53\u4e0e\u6837\u672c","text":"<ul> <li>\u603b\u4f53\uff1a<ul> <li>\u6240\u7814\u7a76\u5bf9\u8c61\u7684\u5168\u4f53\u79f0\u4e3a\u603b\u4f53\u3002</li> <li>\u603b\u4f53\u4e2d\u7684\u6bcf\u4e2a\u5177\u4f53\u5bf9\u8c61\u79f0\u4e3a\u4e2a\u4f53\u3002  </li> <li>\u603b\u4f53\u4e2d\u6240\u5305\u542b\u7684\u4e2a\u4f53\u603b\u6570\u53eb\u505a\u603b\u4f53\u5bb9\u91cf\u3002</li> </ul> </li> <li>\u7b80\u5355\u968f\u673a\u6837\u672c\uff1a<ul> <li>\u4ece\u603b\u4f53\u4e2d\u62bd\u53d6\u82e5\u5e72\u4e2a\u4f53\u8fdb\u884c\u89c2\u5bdf\u8bd5\u9a8c\uff0c\u4ee5\u83b7\u5f97\u6709\u5173\u603b\u4f53\u7684\u4fe1\u606f\uff0c\u8fd9\u4e00\u62bd\u53d6\u8fc7\u7a0b\u79f0\u4e3a\u62bd\u6837\uff0c\u6240\u62bd\u53d6\u7684\u90e8\u5206\u4e2a\u4f53\u79f0\u4e3a\u6837\u672c\u3002   </li> <li>\u6837\u672c\u4e2d\u6240\u5305\u542b\u7684\u4e2a\u4f53\u6570\u76ee\u79f0\u4e3a\u6837\u672c\u5bb9\u91cf\u3002</li> <li>\u7b80\u5355\u968f\u673a\u62bd\u6837\u7684\u6837\u672c\u7684\u7279\u70b9\uff1a\u968f\u673a\u6027\uff0c\u4ee3\u8868\u6027\uff0c\u72ec\u7acb\u6027\u3002</li> <li>\u6bcf\u6b21\u62bd\u6837\u5f97\u5230\u7684\u5177\u4f53\u6570\u503c\u79f0\u4e3a\u6837\u672c\u503c\u3002</li> </ul> </li> <li> <p>\u603b\u4f53\u3001\u6837\u672c\u3001\u6837\u672c\u503c\u7684\u5173\u7cfb</p> <ul> <li>\u603b\u4f53\u5206\u5e03\u51b3\u5b9a\u4e86\u6837\u672c\u53d6\u503c\u7684\u6982\u7387\u89c4\u5f8b\uff0c\u4e5f\u5c31\u662f\u6837\u672c\u53d6\u5230\u6837\u672c\u503c\u7684\u89c4\u5f8b\uff0c\u56e0\u800c\u53ef\u4ee5\u7531\u6837\u672c\u503c\u53bb\u63a8\u65ad\u603b\u4f53</li> <li>\u6837\u672c\u7684\u8054\u5408\u5206\u5e03\u51fd\u6570</li> </ul> <p>\\begin{equation}     F(x_1, x_2, \\cdots, x_n) = \\prod_{i = 1}^{n} F_X(x_i)    \\end{equation}</p> <ul> <li>\u6837\u672c\u7684\u8054\u5408\u6982\u7387\u5bc6\u5ea6</li> </ul> <p>\\begin{equation}     f(x_1, x_2, \\cdots, x_n) = \\prod_{i = 1}^{n} f_X(x_i)    \\end{equation}</p> <ul> <li>\u6837\u672c\u7684\u8054\u5408\u5206\u5e03\u5f8b</li> </ul> \\[\\begin{equation}     P \\left\\{ X_1 = x_1, X_2 = x_2, \\cdots, X_n = x_n \\right\\} = \\prod_{i=1}^{n} p_X(x_i) \\end{equation}\\] </li> </ul>"},{"location":"math/probability/chap6/#2","title":"2 \u76f4\u65b9\u56fe\u4e0e\u6837\u672c\u5206\u5e03\u51fd\u6570","text":"<ul> <li>\u76f4\u65b9\u56fe<ul> <li>\u7ec4\u8ddd\uff1a\u6a2a\u5750\u6807\u6bcf\u683c\u4ee3\u8868\u7684\u95f4\u8ddd\u3002</li> <li>\u5206\u70b9\u5e94\u6bd4\u6837\u672c\u89c2\u6d4b\u503c\u591a\u53d6\u4e00\u4f4d\u6709\u6548\u6570\u5b57\u3002</li> <li>\u4f5c\u7528\uff1a\u6837\u672c\u5bb9\u91cf\u8db3\u591f\u5927\u65f6\uff0c\u843d\u5728\u5c0f\u533a\u95f4\u7684\u9891\u7387\u8fd1\u4f3c\u4e3a\u5176\u6982\u7387\uff0c\u6240\u4ee5\u76f4\u65b9\u56fe\u53ef\u4ee5\u5927\u81f4\u53cd\u6620\u968f\u673a\u53d8\u91cf\u7684\u6982\u7387\u5206\u5e03\u3002</li> </ul> </li> <li> <p>\u6837\u672c\u5206\u5e03\u51fd\u6570</p> <ul> <li> <p>\u6837\u672c\u5206\u5e03\u51fd\u6570\u8bb0\u4e3a</p> \\[\\begin{equation}   F_n(x) =    \\begin{cases}   0 &amp; x &lt; x_{(1)}\\\\   \\sum_{j = 1}^i f_i &amp; x_{(1)} \\le x \\le x_{(k)}\\\\   1 &amp; x \\ge x_{(k)}   \\end{cases} \\end{equation}\\] </li> <li> <p>\u7531\u4f2f\u52aa\u5229\u5927\u6570\u5b9a\u5f8b\u53ef\u77e5\uff0c\\(F_n(x)\\) \u6309\u6982\u7387\u6536\u655b\u4e8e \\(F(x)\\)\u3002 </p> </li> </ul> </li> </ul>"},{"location":"math/probability/chap6/#3","title":"3 \u6837\u672c\u51fd\u6570\u53ca\u5176\u6982\u7387\u5206\u5e03","text":"<ul> <li>\u7edf\u8ba1\u91cf<ul> <li>\u7edf\u8ba1\u91cf\u662f\u6837\u672c\u51fd\u6570\uff0c\u662f\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\u3002</li> <li>\u7edf\u8ba1\u91cf\u5bf9\u5e94\u7684\u6837\u672c\u51fd\u6570 \\(g(X_1, X_2, \\cdots, X_n)\\) \u4e2d\u4e0d\u542b\u4efb\u4f55\u672a\u77e5\u53c2\u6570\u3002</li> </ul> </li> <li> <p>\u5e38\u7528\u7684\u7edf\u8ba1\u91cf</p> <ul> <li>\u6837\u672c\u5747\u503c \\(\\bar X = \\dfrac{1}{n}\\sum_{i = 1}^n X_i\\)</li> <li>\u6837\u672c\u65b9\u5dee \\(S^2 = \\dfrac{1}{n - 1}\\sum_{i = 1}^n(X_i - \\bar X)^2 = \\dfrac{1}{n - 1}(\\sum_{i = 1}^n X_i^2 - x {\\bar{X}}^2)\\)</li> <li>\u6837\u672c\u6807\u51c6\u5dee \\(S = \\sqrt{S^2}\\)</li> <li>\u6837\u672c \\(k\\) \u9636\u539f\u70b9\u77e9 \\(A_k = \\dfrac{1}{n}\\sum_{i = 1}^n X_i^k\\)</li> <li>\u6837\u672c \\(k\\) \u9636\u4e2d\u5fc3\u77e9 \\(B_k = \\dfrac{1}{n}\\sum_{i = 1}^n (X_i - \\bar X)^k\\)</li> <li>\u6837\u672c\u6700\u5c0f\u503c \\(X_{(1)} = \\max \\left\\{X_1, X_2, \\cdots, X_n\\right\\}\\)</li> <li>\u6837\u672c\u6700\u5927\u503c \\(X_{(n)} = \\max \\left\\{X_1, X_2, \\cdots, X_n\\right\\}\\)</li> </ul> <p>\u5e38\u7528\u7ed3\u8bba</p> <p>\u82e5\u603b\u4f53 \\(X\\) \u7684 \\(E(X) = \\mu, D(X) = \\sigma^2\\)\uff0c\u5219</p> <ul> <li>\\(E(\\bar X) = \\mu, D(\\bar X) = \\dfrac{\\sigma^2}{n}\\)</li> <li>\\(E(S^2) = \\sigma^2, D(S^2) = \\dfrac{2\\sigma^4}{n - 1}\\)</li> <li>\\(E(B_2) = \\dfrac{n - 1}{n}\\sigma^2, D(B_2) = \\dfrac{2(n - 1)\\sigma^4}{n^2}\\)</li> </ul> <p>\u82e5\u603b\u4f53 \\(X\\) \u7684\u5206\u5e03\u51fd\u6570\u4e3a \\(F(x)\\)\uff0c\u5219</p> <ul> <li>\\(F_{\\max}(x) = [F(x)]^n\\)</li> <li>\\(F_{\\min}(x) = 1 - [1 - F(x)]^n\\)</li> </ul> <p>\u6709\u5173 \\(E(S^2)\\) \u7684\u4e00\u70b9\u7ec6\u8282</p> \\[   \\begin{align*}     E(S^2) &amp; = E \\left [\\dfrac{1}{n - 1}\\sum_{i = 1}^n (X_i - \\bar X)^2 \\right ] \\\\           &amp; = E \\left [\\dfrac{1}{n - 1} \\left (\\sum_{i = 1}^n X_i^2 - n\\bar X^2 \\right ) \\right ] \\\\           &amp; = \\dfrac{1}{n - 1} \\left [\\sum_{i = 1}^n E(X_i^2) - nE(\\bar X^2) \\right ] \\\\           &amp; = \\dfrac{1}{n - 1} \\left \\{ \\sum_{i = 1}^n \\left \\{ D(X_i) + [E(X_i)]^2 \\right \\} - n \\left \\{ D(\\bar X) + [E(\\bar X)]^2 \\right \\} \\right \\} \\\\           &amp; = \\sigma^2   \\end{align*} \\] <p>\u8fd9\u91cc\u6ce8\u610f \\(\\bar{X}\\) \u4e0d\u80fd\u5f53\u4f5c\u5e38\u91cf\uff0c\u6545\u7b97 \\(E(\\bar{X}^2)\\) \u7684\u65f6\u5019\u4e0d\u80fd\u76f4\u63a5\u5f53\u6210 \\(\\bar{X}^2\\)\uff0c\u8981\u5f53\u4f5c\u6837\u672c\u53d8\u91cf\u6765\u5904\u7406\u3002</p> </li> <li> <p>\u6b63\u6001\u603b\u4f53\u7684\u4e24\u4e2a\u62bd\u6837\u5206\u5e03\u5b9a\u7406</p> <ul> <li>\\(X_1, X_2, \\cdots, X_n\\) \u662f\u6765\u81ea\u6b63\u6001\u603b\u4f53 \\(N(\\mu, \\sigma^2)\\) \u7684\u6837\u672c\uff0c\\(\\bar x\\) \u662f\u6837\u672c\u5747\u503c\uff0c\u5219\u968f\u673a\u53d8\u91cf</li> </ul> \\[\\begin{equation}   u = \\dfrac{(\\bar X - \\mu)}{\\sigma / \\sqrt{n}} \\sim N(0, 1) \\end{equation}\\] <ul> <li>\u8bbe \\(X \\sim N(\\mu_1, \\sigma_1^2), Y \\sim N(\\mu_2, \\sigma_2^2)\\) \u5206\u522b\u72ec\u7acb\u5730\u4ece\u603b\u4f53 \\(X\\) \u548c\u603b\u4f53 \\(Y\\) \u4e2d\u62bd\u53d6\u6837\u672c \\(X_1, X_2, \\cdots, X_n\\) \u53ca \\(Y_1, Y_2, \\cdots, Y_n\\)\uff0c\u6837\u672c\u5747\u503c\u5206\u522b\u4e3a \\(\\bar X\\) \u548c \\(\\bar Y\\)\u3002\u5219\u968f\u673a\u53d8\u91cf</li> </ul> \\[\\begin{equation}   u = \\dfrac{(\\bar X - \\bar Y - (\\mu_1 - \\mu_2))}{\\sqrt{\\frac{\\sigma_1^2}{n_1} + \\frac{\\sigma_2^2}{n_2}}} \\sim N(0, 1) \\end{equation}\\] <p>Tip</p> <p>\u7531 \\(\\bar X - \\bar Y \\sim N \\left ( \\mu_1 - \\mu_2, \\dfrac{\\sigma_1^2}{n_1} + \\dfrac{\\sigma_2^2}{n_2} \\right )\\) \u63a8\u51fa\u3002</p> </li> </ul>"},{"location":"math/probability/chap6/#4-chi2","title":"4 \\(\\chi^2\\) \u5206\u5e03","text":"<ul> <li> <p>\u8bbe \\(X_1, X_2, \\cdots, X_n\\) \u76f8\u4e92\u72ec\u7acb\u5206\u5e03\uff0c\u90fd\u670d\u4ece \\(N(0, 1)\\)\uff0c\u5219\u79f0\u968f\u673a\u53d8\u91cf \\(\\chi^2 = X_1^2 + X_2^2 + \\cdots + X_n^2\\) \u670d\u4ece\u81ea\u7531\u5ea6\u4e3a \\(n\\) \u7684 \\(\\chi^2\\) \u5206\u5e03\uff0c\u8bb0\u4e3a \\(\\chi^2 \\sim \\chi^2(n)\\)\u3002\u8fd9\u91cc\u81ea\u7531\u5ea6\u662f\u72ec\u7acb\u7684\u670d\u4ece\u6807\u51c6\u6b63\u6001\u5206\u5e03\u7684\u968f\u673a\u53d8\u91cf\u7684\u4e2a\u6570\u3002</p> <p></p> </li> <li> <p>\\(\\chi^2\\) \u7684\u6027\u8d28</p> <ul> <li>\u82e5 \\(\\chi^2 \\sim \\chi^2(n)\\)\uff0c\u5219 \\(E(\\chi^2) = n,D(\\chi^2) = 2n\\)\u3002</li> <li>\u82e5 \\(X \\sim \\chi^2(n_1), Y \\sim \\chi^2(n_2)\\)\uff0c\u4e14 \\(X, Y\\) \u76f8\u4e92\u72ec\u7acb\uff0c\u5219 \\(X + Y \\sim \\chi^2(n_1 + n_2)\\)\u3002</li> <li>\u5f53 \\(n\\) \u5145\u5206\u5927\u65f6\uff0c\\(\\chi^2\\) \u8fd1\u4f3c\u670d\u4ece \\(N(n, 2n)\\)\uff0c\\(\\dfrac{\\chi^2(n) - n}{\\sqrt{2n}}\\) \u8fd1\u4f3c\u670d\u4ece \\(N(0, 1)\\)\u3002</li> <li> <p>\u8bbe \\(\\chi^2 \\sim \\chi^2(n)\\)\uff0c\u5bf9\u7ed9\u5b9a\u6b63\u6570 \\(\\alpha(0 &lt; \\alpha &lt; 1)\\)\uff0c\u628a\u6ee1\u8db3\u6761\u4ef6 </p> \\[\\begin{equation}   P \\left\\{ \\chi^2 &gt; \\chi_{\\alpha}^2(n)\\right\\} = \\int_{\\chi_{\\alpha}^2(n)}^{+\\infty}f(x)dx = \\alpha \\end{equation}\\] <p>\u7684\u70b9 \\(\\chi_{\\alpha}^2(n)\\) \u79f0\u4e3a \\(\\chi^2(n)\\) \u5206\u5e03\u7684\u4e0a \\(\\alpha\\) \u5206\u4f4d\u70b9\u3002</p> <p>\u5e76\u4e14\u5f53 \\(n\\) \u5145\u5206\u5927\u65f6\uff0c \\(\\chi_{\\alpha}^2 \\approx n + \\sqrt{2n}u_{\\alpha}\\)\uff0c\u5176\u4e2d \\(u_{\\alpha}\\) \u662f\u6807\u51c6\u6b63\u6001\u5206\u5e03\u7684\u4e0a \\(\\alpha\\) \u5206\u4f4d\u6570\u3002</p> </li> </ul> <p></p> </li> <li> <p>\u76f8\u5173\u5b9a\u7406</p> <ul> <li> <p>\u8bbe \\(X_1, X_2, \\cdots, X_n\\) \u662f\u6765\u81ea\u603b\u4f53 \\(N(\\mu, \\sigma^2)\\) \u7684\u6837\u672c\uff0c\u5219\u968f\u673a\u53d8\u91cf</p> \\[\\begin{equation}   \\chi^2 = \\dfrac{1}{\\sigma^2}\\sum_{i = 1}^n (X_i - \\mu)^2 \\sim \\chi^2(n) \\end{equation}\\] </li> <li> <p>\u8bbe\u603b\u4f53 \\(X\\) \u670d\u4ece\u6b63\u6001\u5206\u5e03 \\(N(\\mu, \\sigma^2)\\)\uff0c\u4ece\u603b\u4f53 \\(X\\) \u4e2d\u62bd\u53d6\u6837\u672c \\(X_1, X_2, \\cdots, X_n\\)\uff0c\u6837\u672c\u5747\u503c\u548c\u6837\u672c\u65b9\u5dee\u5206\u522b\u4e3a \\(\\bar X\\) \u548c \\(S^2\\)\uff0c\u5219\u6709</p> <ul> <li>\\(\\bar X\\) \u548c \\(S^2\\) \u76f8\u4e92\u72ec\u7acb\u3002</li> <li>\\(\\dfrac{(n - 1)S^2}{\\sigma^2} = \\dfrac{1}{\\sigma^2}\\sum_{i = 1}^{n}(X_i - \\bar X)^2 \\sim \\chi^2(n - 1)\\) </li> </ul> </li> </ul> \u8bc1\u660e \\(\\dfrac{(n - 1)S^2}{\\sigma^2} \\sim \\chi^2(n - 1)\\) \\[\\begin{align*}   \\dfrac{\\sum (x_i - \\bar x)^2}{\\sigma^2} &amp; = \\dfrac{\\sum [(x_i - \\mu) + (\\mu - \\bar x)]^2}{\\sigma^2} \\\\                                         &amp; = \\dfrac{\\sum (x_i - \\mu)^2}{\\sigma^2} - \\dfrac{(\\mu - \\bar x)^2}{\\sigma^2 / n} \\\\                                         &amp; = \\chi^2(n) - \\chi^2(1) \\\\                                         &amp; = \\chi^2(n - 1) \\end{align*}\\] </li> </ul>"},{"location":"math/probability/chap6/#5-t","title":"5 t \u5206\u5e03","text":"<ul> <li> <p>\u8bbe \\(X \\sim N(0, 1), Y \\sim \\chi^2(n)\\)\uff0c\u4e14 \\(X\\) \u4e0e \\(Y\\) \u72ec\u7acb\uff0c\u5219\u79f0\u968f\u673a\u53d8\u91cf \\(T = \\dfrac{X}{\\sqrt{Y/n}}\\) \u670d\u4ece\u81ea\u7531\u5ea6\u4e3a \\(n\\) \u7684 t \u5206\u5e03\uff0c\u8bb0\u4f5c \\(T \\sim t(n)\\)\u3002\u8fd9\u91cc\u7684\u81ea\u7531\u5ea6\u6e90\u4e8e \\(\\chi^2(n)\\) \u7684\u81ea\u7531\u5ea6\u3002\u7279\u6b8a\u7684\uff0c\\(n = 1\\) \u65f6\u4e3a\u67ef\u897f\u5206\u5e03\u3002</p> <p></p> </li> <li> <p>\u8bbe \\(t \\sim t(n)\\)\uff0c\u5bf9\u7ed9\u5b9a\u6b63\u6570 \\(\\alpha(0 &lt; \\alpha &lt; 1)\\)\uff0c\u628a\u6ee1\u8db3\u6761\u4ef6 </p> \\[\\begin{equation}   P \\left\\{ t(n) &gt; t_{\\alpha}(n)\\right\\} = \\int_{t_{\\alpha}(n)}^{+\\infty}f(x)dx = \\alpha \\end{equation}\\] <p>\u7684\u70b9 \\(t_{\\alpha}(n)\\) \u79f0\u4e3a \\(t(n)\\) \u5206\u5e03\u7684\u4e0a \\(\\alpha\\) \u5206\u4f4d\u70b9\u3002</p> <p>\u7279\u6b8a\u5730\uff0c\u6709 \\(-t_{\\alpha}(n) = t_{1 - \\alpha}(n)\\)\u3002</p> <p></p> </li> <li> <p>\u76f8\u5173\u5b9a\u7406</p> <ul> <li> <p>\u8bbe \\(X_1, X_2, \\cdots, X_n\\) \u662f\u6765\u81ea\u603b\u4f53 \\(N(\\mu, \\sigma^2)\\) \u7684\u6837\u672c\uff0c\u6837\u672c\u5747\u503c\u4e3a \\(\\bar X\\)\uff0c\u6837\u672c\u65b9\u5dee\u4e3a \\(S^2\\)\uff0c\u5219\u968f\u673a\u53d8\u91cf</p> \\[\\begin{equation}   T = \\dfrac{\\bar X - \\mu}{S / \\sqrt{n}} \\sim t(n - 1) \\end{equation}\\] Proof <p></p> </li> <li> <p>\u8bbe\u4ece\u4e24\u4e2a\u6b63\u6001\u603b\u4f53 \\(N_1(\\mu_1, \\sigma^2), N_2(\\mu_2, \\sigma^2)\\) \u4e2d\u5206\u522b\u72ec\u7acb\u5730\u62bd\u53d6\u6837\u672c\uff0c\u6837\u672c\u5bb9\u91cf\u4f9d\u6b21\u4e3a \\(n_1\\) \u548c \\(n_2\\)\uff0c\u6837\u672c\u5747\u503c\u4f9d\u6b21\u4e3a \\(\\bar X\\) \u548c \\(\\bar Y\\)\uff0c\u6837\u672c\u65b9\u5dee\u4f9d\u6b21\u4e3a \\(S_1^2\\) \u548c \\(S_2^2\\)\u3002\u8bb0</p> \\[\\begin{equation}   S_W = \\sqrt{\\dfrac{(n_1 - 1)S_1^2 + (n_2 - 1)S_2^2}{n_1 + n_2 - 2}} \\end{equation}\\] <p>\u5219\u968f\u673a\u53d8\u91cf</p> \\[\\begin{equation}   T = \\dfrac{\\bar X - \\bar Y - (\\mu_1 - \\mu_2)}{S_W\\sqrt{\\frac{1}{n_1} + \\frac{1}{n_2}}} \\sim t(n_1 + n_2 - 2) \\end{equation}\\] Proof <p></p> <p></p> </li> </ul> </li> </ul>"},{"location":"math/probability/chap6/#6-f","title":"6 F \u5206\u5e03","text":"<ul> <li> <p>\u8bbe \\(X \\sim \\chi^2(n_1), Y \\sim \\chi^2(n_2)\\)\uff0c\u4e14 \\(X\\) \u548c \\(Y\\) \u76f8\u4e92\u72ec\u7acb\uff0c\u5219\u79f0\u968f\u673a\u53d8\u91cf \\(F = \\dfrac{  X / n_1}{Y / n_2}\\) \u670d\u4ece\u7b2c\u4e00\u81ea\u7531\u5ea6\u4e3a \\(n_1\\)\uff0c \u7b2c\u4e8c\u81ea\u7531\u5ea6\u4e3a \\(n_2\\) \u7684 F \u5206\u5e03\uff0c\u8bb0\u4f5c \\(F \\sim F(n_1, n_2)\\)\u3002</p> </li> <li> <p>\u8bbe \\(F \\sim F(n_1, n_2)\\)\uff0c\u5bf9\u7ed9\u5b9a\u6b63\u6570 \\(\\alpha(0 &lt; \\alpha &lt; 1)\\)\uff0c\u628a\u6ee1\u8db3\u6761\u4ef6 </p> \\[\\begin{equation}   P \\left\\{ F &gt; F_{\\alpha}(n_1, n_2)\\right\\} = \\int_{F_{\\alpha}(n_1, n_2)}^{+\\infty}f(x)dx = \\alpha \\end{equation}\\] <p>\u7684\u70b9 \\(F_{\\alpha}(n_1, n_2)\\) \u79f0\u4e3a \\(F(n_1, n_2)\\) \u5206\u5e03\u7684\u4e0a \\(\\alpha\\) \u5206\u4f4d\u70b9\u3002</p> <p></p> <p>\u4e14\u6ee1\u8db3\u6027\u8d28 \\(F_{1 - \\alpha}(n_1, n_2) = \\dfrac{1}{F_{\\alpha}(n_2, n_1)}\\)\u3002</p> Proof <p></p> </li> <li> <p>\u76f8\u5173\u5b9a\u7406</p> <ul> <li> <p>\u8bbe \\(X_1, X_2, \\cdots, X_{n_1}\\) \u662f\u6765\u81ea\u603b\u4f53 \\(N(\\mu_1, \\sigma_1^2)\\) \u7684\u6837\u672c\uff0c\\(Y_1, Y_2, \\cdots, Y_{n_2}\\) \u662f\u6765\u81ea\u603b\u4f53 \\(N(\\mu_2, \\sigma_2^2)\\) \u7684\u6837\u672c\uff0c\u4e14\u8fd9\u4e24\u4e2a\u6837\u672c\u76f8\u4e92\u72ec\u7acb\uff0c\u5219\u968f\u673a\u53d8\u91cf</p> \\[\\begin{equation}     F = \\dfrac{\\sum_{i = 1}^{n_1}(X_i - \\mu_1)^2 / (n_1 \\sigma_1^2)}{\\sum_{j = 1}^{n_2}(Y_j - \\mu_2)^2 / (n_2\\sigma_2^2)} \\sim F(n_1, n_2) \\end{equation}\\] </li> <li> <p>\u8bbe\u4ece\u4e24\u4e2a\u6b63\u6001\u603b\u4f53 \\(N(\\mu_1, \\sigma_1^2), N(\\mu_2, \\sigma_2^2)\\) \u4e2d\u5206\u522b\u72ec\u7acb\u5730\u5404\u62bd\u53d6\u4e00\u4e2a\u6837\u672c\uff0c\u5b83\u4eec\u7684\u6837\u672c\u5bb9\u91cf\u5206\u522b\u4e3a \\(n_1\\) \u548c \\(n_2\\)\uff0c\u6837\u672c\u5747\u503c\u4f9d\u6b21\u4e3a \\(\\bar X\\) \u548c \\(\\bar Y\\)\uff0c\u6837\u672c\u65b9\u5dee\u4f9d\u6b21\u4e3a \\(S_1^2\\) \u548c \\(S_2^2\\)\u3002\u5219\u968f\u673a\u53d8\u91cf</p> \\[\\begin{equation}     F = \\dfrac{S_1^2/\\sigma_1^2}{S_2^2/\\sigma_2^2} = \\dfrac{S_1^2}{S_2^2} \\cdot \\dfrac{\\sigma_2^2}{\\sigma_1^2} \\sim F(n_1 - 1, n_2 - 1) \\end{equation}\\] </li> </ul> <p>\u5229\u7528\u8fd9\u6761\u5b9a\u7406\u53ef\u4ee5\u627e\u5230 \\(\\dfrac{S_1^2}{S_2^2}\\) \u6240\u670d\u4ece\u7684\u6982\u7387\u5206\u5e03\u3002</p> <p>Tip</p> <p>\\(\\dfrac{S}{\\sigma}\\) \u662f\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u5206\u5f0f\uff0c\u5b83\u53ef\u4ee5\u7ecf\u8fc7\u5206\u5b50\u5206\u6bcd\u540c\u65f6\u4e58\u4ee5 \\((n - 1)\\)\uff0c\u7ed3\u5408\u516c\u5f0f \\(\\dfrac{(n - 1)S^2}{\\sigma^2} \\sim \\chi^2(n - 1)\\) \u53d8\u6210 F \u5206\u5e03 / t \u5206\u5e03\u7684\u7ec4\u6210\u90e8\u5206\u3002 </p> </li> </ul>"},{"location":"math/probability/chap6/#7","title":"7 \u4f8b\u9898","text":"<ul> <li> <p>e.g.1</p> <p></p> Solution <p></p> </li> <li> <p>e.g.2</p> <p></p> Solution <p></p> </li> <li> <p>e.g.3</p> <p></p> Solution <p></p> <p></p> </li> <li> <p>e.g.4</p> <p></p> Solution <p></p> <p></p> </li> <li> <p>e.g.5</p> <p></p> Solution <p></p> <p></p> </li> <li> <p>e.g.6</p> <p></p> Solution <p></p> </li> </ul>"},{"location":"math/probability/chap7/","title":"\u53c2\u6570\u4f30\u8ba1","text":""},{"location":"math/probability/chap7/#0","title":"0 \u603b\u7ed3","text":""},{"location":"math/probability/chap7/#1","title":"1 \u53c2\u6570\u7684\u70b9\u4f30\u8ba1","text":""},{"location":"math/probability/chap7/#11","title":"1.1 \u77e9\u4f30\u8ba1\u6cd5","text":"<ul> <li> <p>\u8bbe \\(\\mu_k\\) \u4e3a\u603b\u4f53\u7684 \\(k\\) \u9636\u77e9\uff0c\\(A_k\\) \u4e3a\u6837\u672c\u7684 \\(k\\) \u9636\u77e9\u3002\u7531\u8f9b\u94a6\u5927\u6570\u5b9a\u7406\u53ef\u77e5\u5f53 \\(n\\) \u8db3\u591f\u5927\u65f6\uff0c\u4e8c\u8005\u8d8b\u8fd1\u76f8\u7b49\uff0c\u6545\u53ef\u8054\u7acb\u7b49\u5f0f\u3002\u82e5\u5173\u4e8e \\(X\\) \u7684\u5206\u5e03\u4e2d\u6709 \\(r\\) \u4e2a\u672a\u77e5\u6570\uff0c\u5219\u5206\u522b\u8bbe\u51fa \\(\\mu_1, \\cdots, \\mu_k\\) \u548c \\(A_1, \\cdots, A_k\\)\uff0c\u8054\u7acb \\(r\\) \u4e2a\u7b49\u5f0f\u5373\u53ef\u3002</p> <p>Note</p> <ul> <li>\u5728\u603b\u4f53\u7684\u5747\u503c\u548c\u65b9\u5dee\u90fd\u5b58\u5728\u65f6\uff0c\u6c42\u5747\u503c \\(\\mu\\) \u548c\u65b9\u5dee \\(\\sigma^2\\) \u7684\u77e9\u4f30\u8ba1\u91cf\uff0c\u5e76\u4e0d\u4e00\u5b9a\u8981\u77e5\u9053\u603b\u4f53\u670d\u4ece\u4ec0\u4e48\u5206\u5e03\u3002\u65e0\u8bba\u603b\u4f53\u670d\u4ece\u4ec0\u4e48\u5206\u5e03\uff0c\u90fd\u6709<ul> <li>\u603b\u4f53\u5747\u503c\u7684\u77e9\u4f30\u8ba1\u91cf \\(\\hat \\mu = \\bar X\\)\u3002</li> <li>\u603b\u4f53\u65b9\u5dee\u7684\u77e9\u4f30\u8ba1\u91cf \\({\\hat \\sigma}^2 = A_2 - {\\bar X}^2 = B_2\\)\u3002</li> </ul> </li> <li>\u603b\u4f53\u672a\u77e5\u91cf\u7684\u77e9\u4f30\u8ba1\u91cf\u4e0d\u662f\u552f\u4e00\u7684\u3002</li> </ul> <p>Tip</p> <p>\u77e9\u4f30\u8ba1\u6cd5\u7684\u6838\u5fc3\u5c31\u662f\u5229\u7528\u6837\u672c\u7684 \\(1, 2, ..., r\\) \u9636\u77e9\u548c\u603b\u4f53\u7684 \\(1, 2, ..., r\\) \u9636\u77e9\u8fd1\u4f3c\u76f8\u7b49\u3002</p> </li> </ul>"},{"location":"math/probability/chap7/#12","title":"1.2 \u6700\u5927\u4f3c\u7136\u4f30\u8ba1\u6cd5","text":"<ul> <li> <p>\u79bb\u6563\u5206\u5e03\u60c5\u51b5</p> <p>\u8bbe\u5206\u5e03\u5f8b\u4e2d\u7684\u672a\u77e5\u53c2\u6570\u4e3a \\(\\theta_1, \\cdots, \\theta_r\\)\uff08\u5373 \\(P\\left\\{X = x\\right\\} = p(x, \\theta_1, \\cdots, \\theta_r)\\)\uff09\uff0c\u5bf9\u4e8e \\(n\\) \u4e2a\u4e8b\u4ef6 \\(X_1, \\cdots, X_n\\)\uff0c\u6837\u672c\u5bf9\u5e94\u7684\u7ed3\u679c\u5206\u522b\u662f \\(x_1, \\cdots, x_n\\)\u3002\u8bbe \\(L(\\theta_1, \\cdots, \\theta_r) = \\prod_{i = 1}^n f(X_i = x_i, \\theta_1, \\cdots, \\theta_r)\\)\uff0c\u5219 \\(L(\\theta_1, \\cdots, \\theta_r)\\) \u79f0\u4e3a\u4f3c\u7136\u51fd\u6570\u3002\u5176\u4e2d\u4f7f\u5f97 \\(L\\) \u51fd\u6570\u53d6\u5f97\u6700\u5927\u503c\u7684 \\(\\theta_i\\) \u4f5c\u4e3a\u672a\u77e5\u53c2\u6570\u7684\u4f30\u8ba1\u503c\uff0c\u8bb0\u4f5c \\(\\hat{\\theta_i}\\)\uff0c\u79f0\u4e3a\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\u503c\u3002</p> </li> <li> <p>\u8fde\u7eed\u5206\u5e03\u60c5\u51b5</p> <p>\u4e0e\u79bb\u6563\u60c5\u51b5\u5b8c\u5168\u540c\u7406\uff0c\u53ea\u662f\u5c06\u5206\u5e03\u5f8b\u6539\u4e3a\u6982\u7387\u5bc6\u5ea6\u3002</p> <p>Note</p> <ul> <li>\u4e00\u8a00\u4ee5\u853d\u4e4b\uff0c\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\u5c31\u662f\u6539\u53d8 \\(\\theta\\) \u7684\u503c\u4f7f\u5f97 \\(L\\) \u53d6\u503c\u6700\u5927\uff0c\u4f7f\u5f97\u6837\u672c\u7ed3\u679c\u6700\u6709\u53ef\u80fd\u51fa\u73b0\u3002</li> <li>\u5bf9\u4e8e \\(\\theta_i\\) \u7684\u6c42\u6cd5\uff0c\u5c31\u662f\u8054\u7acb \\(\\dfrac{\\partial L}{\\partial \\theta_i} = 0\\) \u6216 \\(\\dfrac{\\partial \\ln L}{\\partial \\theta_i} = 0\\)\uff08\u540e\u8005\u4f7f\u7528\u6b21\u6570\u66f4\u591a\uff09\u65b9\u7a0b\uff0c\u7136\u540e\u6c42\u89e3\u3002</li> <li>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u91cc\u7b97\u6982\u7387\u7684\u65f6\u5019\u4e0d\u7528\u8003\u8651\u6837\u672c\u6253\u4e71\u987a\u5e8f\u6392\u5217\u7684\u5168\u90e8\u6982\u7387\uff0c\u5373\u6bcf\u4e2a\u6837\u672c\u51fa\u73b0\u90fd\u662f\u6709\u5e8f\u7684\uff0c\u7b2c\u4e00\u4e2a\u6837\u672c\u5c31\u662f \\(x_1\\)\uff0c\u7b2c\u4e8c\u4e2a\u5c31\u662f \\(x_2\\)\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</li> <li>\u53c2\u6570\u7684\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\u4e0d\u662f\u552f\u4e00\u7684\uff0c\u4e5f\u53ef\u80fd\u4e0d\u5b58\u5728\u3002</li> <li> <p>\u82e5 \\(\\hat \\theta\\) \u662f\u672a\u77e5\u53c2\u6570 \\(\\theta\\) \u7684\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\uff0c\u4e14\u6ee1\u8db3 \\(g(\\theta)\\) \u662f\u5173\u4e8e \\(\\theta\\) \u7684\u4e25\u683c\u5355\u8c03\u51fd\u6570\uff0c\u5219 \\(g(\\theta)\\) \u7684\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\u8fd8\u662f\u5728 \\(\\theta = \\hat \\theta\\) \u65f6\u53d6\u5230\uff0c\u5373 \\(g(\\hat{\\theta})\\)\u3002</p> \u6709\u70b9\u62bd\u8c61\uff0c\u4e3e\u4e2a\u6817\u5b50\uff08\uff1f <ul> <li>\u6bd4\u5982\u8981\u6c42 \\(p\\) \u7684\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\uff0c\u5df2\u7ecf\u77e5\u9053\u4e86 \\(\\hat{\\lambda} = \\bar X\\)\uff0c\u7136\u540e\u901a\u8fc7\u4ee3\u5165\u7279\u503c\u53ef\u4ee5\u77e5\u9053 \\(p = e^{-\\lambda}\\)\uff0c\u90a3\u4e48\u5c31\u4e0d\u7528\u518d\u7528\u6c42\u504f\u5bfc\u6c42 \\(p\\) \u7684\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\u4e86\uff0c\u76f4\u63a5\u5c06 \\(\\hat{\\lambda}\\) \u4ee3\u5165 \\(p\\) \u7684\u8868\u8fbe\u5f0f\u5373\u53ef\uff0c\u4fbf\u662f \\(\\hat{p}\\) \u7684\u503c\u3002</li> </ul> </li> </ul> <p>\u4f30\u8ba1\u503c\u548c\u4f30\u8ba1\u91cf\u7684\u533a\u522b</p> <ul> <li>\u5bf9\u4e8e\u4f30\u8ba1\u503c\uff0c\\(\\theta = \\hat{\\theta}(x_1, \\cdots, x_r)\\)</li> <li>\u5bf9\u4e8e\u4f30\u8ba1\u91cf\uff0c\\(\\theta = \\hat{\\theta}(X_1, \\cdots, X_r)\\) </li> </ul> </li> </ul> <p></p>"},{"location":"math/probability/chap7/#2","title":"2 \u4f30\u8ba1\u91cf\u7684\u8bc4\u9009\u6807\u51c6","text":""},{"location":"math/probability/chap7/#21","title":"2.1 \u65e0\u504f\u6027","text":"<ul> <li> <p>\u8bbe \\(\\hat{\\theta} = \\hat{\\theta}(X_1, X_2, \\dots, X_n)\\) \u662f\u672a\u77e5\u53c2\u6570 \\(\\theta\\) \u7684\u4f30\u8ba1\u91cf\uff0c\u82e5 \\(E(\\hat{\\theta})\\) \u5b58\u5728\u4e14 \\(E(\\hat{\\theta}) = \\theta\\)\uff0c\u90a3\u4e48 \\(\\hat{\\theta}\\) \u4e3a \\(\\theta\\) \u7684\u65e0\u504f\u4f30\u8ba1\u91cf\uff0c\u5426\u5219\u79f0\u4e3a\u6709\u504f\u4f30\u8ba1\u91cf\u3002</p> <p>Note</p> <ul> <li>\u8bbe\u603b\u4f53 \\(X\\) \u7684\u5747\u503c\u548c\u65b9\u5dee\u90fd\u5b58\u5728\uff0c\\(X_1, X_2, \\dots, X_n\\) \u662f\u6765\u81ea\u603b\u4f53 \\(X\\) \u7684\u6837\u672c\uff0c\u8bc1\u660e\u65e0\u8bba\u603b\u4f53 \\(X\\) \u670d\u4ece\u4ec0\u4e48\u5206\u5e03\uff0c\u5747\u6709</li> <li>\u6837\u672c\u5747\u503c \\(\\bar X\\) \u662f\u603b\u4f53\u5747\u503c \\(E(X)\\) \u7684\u65e0\u504f\u4f30\u8ba1\u91cf\u3002</li> <li>\u6837\u672c\u65b9\u5dee \\(S^2\\) \u662f\u603b\u4f53\u65b9\u5dee \\(D(X)\\) \u7684\u65e0\u504f\u4f30\u8ba1\u91cf\u3002</li> <li>\u6837\u672c \\(k\\) \u9636\u77e9 \\(A_k\\) \u662f\u603b\u4f53 \\(k\\) \u9636\u77e9 \\(E(X^k)\\) \u7684\u65e0\u504f\u4f30\u8ba1\u91cf\u3002</li> </ul> </li> </ul>"},{"location":"math/probability/chap7/#22","title":"2.2 \u6709\u6548\u6027","text":"<ul> <li>\u8bbe \\(\\hat{\\theta_1} = \\hat{\\theta_1}(X_1, X_2, \\dots, X_n)\\) \u548c \\(\\hat{\\theta_2} = \\hat{\\theta_2}(X_1, X_2, \\dots, X_n)\\) \u90fd\u662f\u603b\u4f53\u53c2\u6570 \\(\\theta\\) \u7684\u65e0\u504f\u4f30\u8ba1\u91cf\uff0c\u82e5 \\(D(\\hat{\\theta_1}) &lt; D(\\hat{\\theta_2})\\)\uff0c\u5219\u79f0 \\(\\hat{\\theta_1}\\) \u6bd4 \\(\\hat{\\theta_2}\\) \u66f4\u6709\u6548\u3002</li> </ul>"},{"location":"math/probability/chap7/#23","title":"2.3 \u4e00\u81f4\u6027","text":"<ul> <li> <p>\u8bbe \\(\\hat{\\theta_n} = \\hat{\\theta_n}(X_1, X_2, \\dots, X_n)\\) \u662f\u672a\u77e5\u53c2\u6570 \\(\\theta\\) \u7684\u4f30\u8ba1\u91cf\u5e8f\u5217\uff0c\u5f53 \\(n \\to \\infty\\) \u65f6\uff0c\\(\\hat{\\theta_n}\\) \u4f9d\u6982\u7387\u6536\u655b\u4e8e \\(\\theta\\)\uff0c\u5373 \\(\\forall \\theta &gt; 1\\)\uff0c\u6709</p> \\[\\begin{equation}   \\lim_{n \\to \\infty} P\\left\\{|\\theta_n - \\theta| &lt; \\varepsilon\\right\\} = 1 \\end{equation}\\] <p>\u5219\u79f0 \\(\\hat{\\theta_n}\\) \u662f\u672a\u77e5\u53c2\u6570 \\(\\theta\\) \u7684\u4e00\u81f4\u4f30\u8ba1\u91cf\u3002</p> <p>Note</p> <ul> <li>\u6837\u672c \\(k\\) \u9636\u77e9\u662f\u603b\u4f53 \\(k\\) \u9636\u77e9\u7684\u4e00\u81f4\u6027\u4f30\u8ba1\u91cf\u3002</li> <li>\u77e9\u4f30\u8ba1\u6cd5\u5f97\u5230\u7684\u4f30\u8ba1\u91cf\u4e00\u822c\u4e3a\u4e00\u81f4\u4f30\u8ba1\u91cf\u3002\u5728\u4e00\u5b9a\u6761\u4ef6\u4e0b\uff0c\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\u91cf\u5177\u6709\u4e00\u81f4\u6027\u3002</li> </ul> <p>Note</p> <ul> <li>\u65e0\u504f\u6027\u7684\u7edf\u8ba1\u542b\u4e49\uff1a\u5728\u5927\u91cf\u91cd\u590d\u5b9e\u9a8c\u4e0b\uff0c\u6709\u6240\u5f97 \\(\\hat{\\theta}\\) \u7684\u4f30\u8ba1\u503c\u7684\u5e73\u5747\u503c\u6070\u662f\u771f\u503c \\(\\theta\\)\uff0c\u4ece\u800c\u4fdd\u8bc1\u6ca1\u6709\u7cfb\u7edf\u8bef\u5dee\u3002</li> <li>\u4e00\u81f4\u6027\u662f\u9488\u5bf9\u6837\u672c\u5bb9\u91cf \\(n \\to \\infty\\) \u800c\u8a00\u7684\uff0c\u5bf9\u4e8e\u56fa\u5b9a\u6837\u672c\u5bb9\u91cf\u7684\u6837\u672c\uff0c\u4e00\u81f4\u6027\u65e0\u610f\u4e49\uff1b\u800c\u65e0\u504f\u6027\u548c\u6709\u6548\u6027\u5219\u662f\u5bf9\u4e8e\u56fa\u5b9a\u6837\u672c\u5bb9\u91cf\u7684\u6837\u672c\u800c\u8a00\u7684\u3002</li> </ul> </li> </ul>"},{"location":"math/probability/chap7/#3","title":"3 \u53c2\u6570\u7684\u533a\u95f4\u4f30\u8ba1","text":"<ul> <li> <p>\u8bbe\u603b\u4f53 \\(X\\) \u7684\u5206\u5e03\u4e2d\u542b\u6709\u4e00\u4e2a\u672a\u77e5\u53c2\u6570 \\(\\theta\\)\uff0c\\(X_1,X_2,\u2026,X_n\\) \u662f\u6765\u81ea\u603b\u4f53\u7684\u6837\u672c\uff0c\u5982\u679c\u5bf9\u4e8e\u7ed9\u5b9a\u503c \\(1-\\alpha(0&lt;\\alpha&lt;1)\\)\uff0c\u5b58\u5728\u4e24\u4e2a\u7edf\u8ba1\u91cf</p> \\[\\begin{equation}   \\theta_1 = \\theta_1(X_1, X_2, ..., X_n), \\theta_2 = \\theta_2(X_1, X_2, ..., X_n) (\\theta_1 &lt; \\theta_2) \\end{equation}\\] <p>\u4f7f\u5f97 \\(P\\{\\theta_1 &lt; \\theta &lt; \\theta_2\\} = 1 - \\alpha\\)\uff0c</p> <p>\u5219\u79f0 \\(1-\\alpha\\) \u4e3a\u7f6e\u4fe1\u5ea6\uff08\u7f6e\u4fe1\u6c34\u5e73\uff09\uff0c\u79f0\u968f\u673a\u533a\u95f4\u4e3a\u53c2\u6570 \\(\\theta\\) \u7684\u7f6e\u4fe1\u6c34\u5e73\u4e3a\u7684\u7f6e\u4fe1\u533a\u95f4\uff0c\\(\\theta_1, \\theta_2\\) \u5206\u522b\u79f0\u4e3a\u7f6e\u4fe1\u4e0b\u9650\u548c\u7f6e\u4fe1\u4e0a\u9650\u3002</p> <p>\u8fd9\u79cd\u901a\u8fc7\u6784\u9020\u4e00\u4e2a\u7f6e\u4fe1\u533a\u95f4\u5bf9\u672a\u77e5\u53c2\u6570\u8fdb\u884c\u4f30\u8ba1\u7684\u65b9\u6cd5\u79f0\u4e3a\u533a\u95f4\u4f30\u8ba1.</p> <p>Note</p> <ul> <li>\u7f6e\u4fe1\u5ea6\u8868\u793a\u4e86\u5728\u7f6e\u4fe1\u533a\u95f4 \\((\\theta_1, \\theta_2)\\) \u4e2d\uff0c\u5305\u542b\u53c2\u6570 \\(\\theta\\) \u771f\u503c\u7684\u53ef\u80fd\u6027\u4e3a \\((1 - \\alpha)\\)\u3002</li> <li>\\(1 - \\alpha\\) \u8d8a\u5927\uff0c\u53ef\u9760\u6027\u8d8a\u9ad8\u3002</li> <li>\u7f6e\u4fe1\u533a\u95f4\u957f\u5ea6 \\(\\theta_2 - \\theta_1\\) \u8868\u793a\u4f30\u8ba1\u7cbe\u5ea6\uff0c\u7f6e\u4fe1\u533a\u95f4\u8d8a\u5c0f\uff0c\u4f30\u8ba1\u8d8a\u7cbe\u786e\uff0c\u4f46\u7f6e\u4fe1\u6c34\u5e73\u4f1a\u964d\u4f4e\u3002\u8f83\u957f\u7684\u7f6e\u4fe1\u533a\u95f4\u7cbe\u5ea6\u964d\u4f4e\uff0c\u4f46\u662f\u66f4\u53ef\u9760\u3002\u5bf9\u4e8e\u56fa\u5b9a\u7684\u6837\u672c\u5bb9\u91cf\uff0c\u7f6e\u4fe1\u533a\u95f4\u548c\u7cbe\u5ea6\u6210\u53cd\u6bd4\u3002</li> <li>\u4f18\u5148\u786e\u4fdd\u53ef\u9760\u6027\u518d\u63d0\u9ad8\u7cbe\u5ea6\u3002</li> <li>\u5f53 \\(\\alpha\\) \u786e\u5b9a\u540e\uff0c\u5e38\u9009\u62e9\u6700\u5c0f\u7684\u90a3\u4e2a\u7f6e\u4fe1\u533a\u95f4\u3002</li> </ul> </li> </ul>"},{"location":"math/probability/chap7/#4","title":"4 \u6b63\u6001\u603b\u4f53\u53c2\u6570\u7684\u533a\u95f4\u4f30\u8ba1","text":""},{"location":"math/probability/chap7/#41","title":"4.1 \u5355\u4e2a\u6b63\u6001\u603b\u4f53\u7684\u533a\u95f4\u4f30\u8ba1","text":"<ul> <li> <p>\\(\\sigma^2\\) \u5df2\u77e5\uff0c\\(\\mu\\) \u7684\u7f6e\u4fe1\u6c34\u5e73\u4e3a \\(1 - \\alpha\\) \u7684\u7f6e\u4fe1\u533a\u95f4\u3002</p> <p>\u5229\u7528 \\(u = \\dfrac{\\bar X - \\mu}{\\sigma / \\sqrt{n}} \\sim N(0, 1)\\)\uff0c\u7136\u540e\u4ece \\(u\\) \u7684\u7f6e\u4fe1\u533a\u95f4\u53ef\u4ee5\u63a8\u51fa \\(\\mu\\) \u7684\u7f6e\u4fe1\u533a\u95f4\u4e3a \\((\\bar X - u_{\\alpha / 2}\\dfrac{\\sigma}{\\sqrt{n}}, \\bar X + u_{\\alpha / 2}\\dfrac{\\sigma}{\\sqrt{n}})\\)\u3002</p> </li> <li> <p>\\(\\sigma^2\\) \u672a\u77e5\uff0c\\(\\mu\\) \u7684\u7f6e\u4fe1\u6c34\u5e73\u4e3a \\(1 - \\alpha\\) \u7684\u7f6e\u4fe1\u533a\u95f4\u3002</p> <p>\u5229\u7528 \\(t = \\dfrac{\\bar X - \\mu}{\\sigma / \\sqrt{n}} \\sim t(n - 1)\\)\uff0c\u7136\u540e\u4ece \\(t\\) \u7684\u7f6e\u4fe1\u533a\u95f4\u53ef\u4ee5\u63a8\u51fa \\(\\mu\\) \u7684\u7f6e\u4fe1\u533a\u95f4\u4e3a \\(\\left(\\bar X - t_{\\alpha / 2}(n - 1)\\dfrac{S}{\\sqrt{n}}, \\bar X + t_{\\alpha / 2}(n - 1)\\dfrac{S}{\\sqrt{n}}\\right)\\)\u3002</p> </li> <li> <p>\\(\\mu\\) \u5df2\u77e5\uff0c\\(\\sigma^2\\) \u7684\u7f6e\u4fe1\u6c34\u5e73\u4e3a \\(1 - \\alpha\\) \u7684\u7f6e\u4fe1\u533a\u95f4\u3002</p> <p>\u5229\u7528 \\(\\chi^2 = \\sum_{i = 1}^n(\\dfrac{X_i - \\mu}{\\sigma})^2 \\sim \\chi^2(n)\\)\uff0c\u7136\u540e\u4ece \\(\\chi^2\\) \u7684\u7f6e\u4fe1\u533a\u95f4\u53ef\u4ee5\u63a8\u51fa \\(\\sigma^2\\) \u7684\u7f6e\u4fe1\u533a\u95f4\u4e3a \\((\\dfrac{\\sum_{i = 1}^n(X_i - \\mu)^2}{\\chi_{\\frac{\\alpha}{2}}^2(n)}, \\dfrac{\\sum_{i = 1}^n(X_i - \\mu)^2}{\\chi_{\\frac{1 - \\alpha}{2}}^2(n)})\\)\u3002</p> </li> <li> <p>\\(\\mu\\) \u672a\u77e5\uff0c\\(\\sigma^2\\) \u7684\u7f6e\u4fe1\u6c34\u5e73\u4e3a \\(1 - \\alpha\\) \u7684\u7f6e\u4fe1\u533a\u95f4\u3002</p> <p>\u5229\u7528 \\(\\chi^2 = \\dfrac{(n - 1)S^2}{\\sigma^2} \\sim \\chi^2(n - 1)\\)\uff0c\u7136\u540e\u4ece \\(\\chi^2\\) \u7684\u7f6e\u4fe1\u533a\u95f4\u53ef\u4ee5\u63a8\u51fa \\(\\sigma^2\\) \u7684\u7f6e\u4fe1\u533a\u95f4\u4e3a \\((\\dfrac{(n - 1)S^2}{\\chi_{\\frac{\\alpha}{2}}^2(n - 1)}, \\dfrac{(n - 1)S^2}{\\chi_{\\frac{1 - \\alpha}{2}}^2(n - 1)})\\)\u3002</p> <p>Tip</p> <ul> <li>\\(l\\) \u548c \\(\\alpha, n\\) \u5747\u6709\u5173\u7cfb\uff0c\u53ef\u4ee5\u901a\u8fc7\u6539\u53d8\u8fd9\u4e24\u4e2a\u503c\u6765\u6539\u53d8\u533a\u95f4\u957f\u5ea6\u3002  </li> </ul> </li> </ul>"},{"location":"math/probability/chap7/#42","title":"4.2 \u4e24\u4e2a\u6b63\u6001\u603b\u4f53\u7684\u533a\u95f4\u4f30\u8ba1","text":"<ul> <li> <p>\\(\\sigma_1^2, \\sigma_2^2\\) \u5df2\u77e5\uff0c\\(\\mu_1 - \\mu_2\\) \u7684\u7f6e\u4fe1\u6c34\u5e73\u4e3a \\(1 - \\alpha\\) \u7684\u7f6e\u4fe1\u533a\u95f4\u3002</p> <p>\u5229\u7528 \\(u = \\dfrac{(\\bar X - \\bar Y) - (\\mu_1 - \\mu_2)}{\\sqrt{\\frac{\\sigma_1^2}{n_1} + \\frac{\\sigma_2^2}{n_2}}} \\sim N(0, 1)\\)\uff0c\u7136\u540e\u4ece \\(u\\) \u7684\u7f6e\u4fe1\u533a\u95f4\u53ef\u4ee5\u63a8\u51fa \\(\\mu_1 - \\mu_2\\) \u7684\u7f6e\u4fe1\u533a\u95f4\u4e3a \\(((\\bar X - \\bar Y) - u_{\\alpha / 2}\\sqrt{\\frac{\\sigma_1^2}{n_1} + \\frac{\\sigma_2^2}{n_2}}, (\\bar X - \\bar Y) + u_{\\alpha / 2}\\sqrt{\\frac{\\sigma_1^2}{n_1} + \\frac{\\sigma_2^2}{n_2}})\\)\u3002</p> </li> <li> <p>\\(\\sigma_1^2 = \\sigma_2^2 = \\sigma^2\\) \u4f46\u672a\u77e5\uff0c\\(\\mu_1 - \\mu_2\\) \u7684\u7f6e\u4fe1\u6c34\u5e73\u4e3a \\(1 - \\alpha\\) \u7684\u7f6e\u4fe1\u533a\u95f4\u3002</p> <p>\u5229\u7528 \\(t = \\dfrac{(\\bar X - \\bar Y) - (\\mu_1 - \\mu_2)}{S_w\\sqrt{\\frac{1}{n_1} + \\frac{1}{n_2}}} \\sim t(n_1 + n_2 - 2)\\)\uff0c\u7136\u540e\u4ece \\(t\\) \u7684\u7f6e\u4fe1\u533a\u95f4\u53ef\u4ee5\u63a8\u51fa \\(\\mu_1 - \\mu_2\\) \u7684\u7f6e\u4fe1\u533a\u95f4\u4e3a \\(\\left((\\bar X - \\bar Y) - t_{\\alpha / 2}(n_1 + n_2 - 2)S_w\\sqrt{\\frac{1}{n_1} + \\frac{1}{n_2}, (\\bar X - \\bar Y) + t_{\\alpha / 2}(n_1 + n_2 - 2)S_w\\sqrt{\\frac{1}{n_1} + \\frac{1}{n_2}\\right)\\)\u3002</p> <p>\u5176\u4e2d \\(S_w = \\sqrt{\\dfrac{(n_1 - 1)S_1^2 + (n_2 - 1)S_2^2}{n_1 + n_2 - 2}}\\)\u3002</p> </li> <li> <p>\\(\\mu_1, \\mu_2\\) \u5df2\u77e5\uff0c\u65b9\u5dee\u6bd4 \\(\\dfrac{\\sigma_1^2}{\\sigma_2^2}\\) \u7684\u7f6e\u4fe1\u6c34\u5e73\u4e3a \\(1 - \\alpha\\) \u7684\u7f6e\u4fe1\u533a\u95f4\u3002</p> <p>\u5229\u7528 \\(F = \\dfrac{n_2\\sigma_2^2\\sum_{i = 1}^{n_1} (X_i - \\mu_1)^2}{n_1\\sigma_1^2\\sum_{j = 1}^{n_2} (Y_j - \\mu_2)^2} \\sim F(n_1, n_2)\\)\uff0c\u7136\u540e\u4ece \\(F\\) \u7684\u7f6e\u4fe1\u533a\u95f4\u53ef\u4ee5\u63a8\u51fa \\(\\dfrac{\\sigma_1^2}{\\sigma_2^2}\\) \u7684\u7f6e\u4fe1\u533a\u95f4\u4e3a \\(\\left(\\dfrac{n_2\\sum_{i = 1}^{n_1} (X_i - \\mu_1)^2}{n_1\\sum_{j = 1}^{n_2} (Y_j - \\mu_2)^2 F_{\\frac{\\alpha}{2}}(n_1, n_2)}, \\dfrac{n_2\\sum_{i = 1}^{n_1} (X_i - \\mu_1)^2 F_{\\frac{\\alpha}{2}}(n_2, n_1)}{n_1\\sum_{j = 1}^{n_2} (Y_j - \\mu_2)^2}\\right)\\) </p> </li> <li> <p>\\(\\mu_1, \\mu_2\\) \u672a\u77e5\uff0c\u65b9\u5dee\u6bd4 \\(\\dfrac{\\sigma_1^2}{\\sigma_2^2}\\) \u7684\u7f6e\u4fe1\u6c34\u5e73\u4e3a \\(1 - \\alpha\\) \u7684\u7f6e\u4fe1\u533a\u95f4\u3002</p> <p>\u5229\u7528 \\(F = \\dfrac{S_1^2 / S_2^2}{\\sigma_1^2 / \\sigma_2^2} \\sim F(n_1 - 1, n_2 - 1)\\)\uff0c\u7136\u540e\u4ece \\(F\\) \u7684\u7f6e\u4fe1\u533a\u95f4\u53ef\u4ee5\u63a8\u51fa \\(\\sigma^2\\) \u7684\u7f6e\u4fe1\u533a\u95f4\u4e3a \\(\\left(\\dfrac{S_1^2}{S_2^2 F_{\\frac{\\alpha}{2}(n_1 - 1, n_2 - 1)}}, \\dfrac{S_1^2}{S_2^2} F_{\\frac{\\alpha}{2}(n_2 - 1, n_1 - 1)}\\right)\\)\u3002</p> <p>Note</p> <p>\u53cc\u53d8\u91cf\u548c\u5355\u53d8\u91cf\u5904\u7406\u65b9\u6cd5\u5f88\u7c7b\u4f3c\uff0c\u4e3b\u8981\u662f\u8981\u8bb0\u4f4f 6 \u4e2a\u6982\u7387\u5206\u5e03\u516c\u5f0f\uff08\u53cc\u53d8\u91cf\u548c\u5355\u53d8\u91cf\u6709\u4e24\u4e2a\u662f\u91cd\u590d\u7684\uff09\u3002</p> </li> </ul>"},{"location":"math/probability/chap7/#5","title":"5 \u5355\u4fa7\u7f6e\u4fe1\u533a\u95f4","text":"<ul> <li> <p>\u82e5\u6709 \\(P \\left\\{\\theta &gt; \\theta_1 \\right\\} = 1 - \\alpha\\)\uff08\u6216 \\(P \\left\\{ \\theta &lt; \\theta_2 \\right\\} = 1 - \\alpha\\)\uff09\uff0c\u5219\u79f0 \\((\\theta_1, +\\infty)\\)\uff08\u6216 \\((-\\infty, \\theta_2)\\)\uff09\u4e3a\u7f6e\u4fe1\u6c34\u5e73\u4e3a \\(1 - \\alpha\\) \u7684\u5355\u4fa7\u7f6e\u4fe1\u533a\u95f4\u3002</p> <p>\\(\\theta_1\\) \u4e3a\u7f6e\u4fe1\u6c34\u5e73\u4e3a \\(1 - \\alpha\\) \u7684\u5355\u4fa7\u7f6e\u4fe1\u4e0b\u9650\u3002</p> <p>\\(\\theta_2\\) \u4e3a\u7f6e\u4fe1\u6c34\u5e73\u4e3a \\(1 - \\alpha\\) \u7684\u5355\u4fa7\u7f6e\u4fe1\u4e0a\u9650\u3002</p> </li> <li> <p>\\(\\sigma^2\\) \u5df2\u77e5\uff0c\\(\\mu\\) \u7684\u7f6e\u4fe1\u6c34\u5e73\u4e3a \\(1 - \\alpha\\) \u7684\u5355\u4fa7\u7f6e\u4fe1\u533a\u95f4\u3002</p> <p>\u5229\u7528 \\(u = \\dfrac{\\bar X - \\mu}{\\sigma / \\sqrt{n}} \\sim N(0, 1)\\)\uff0c</p> <p>\u5bf9\u4e8e \\(P\\left\\{ \\dfrac{\\bar X - \\mu}{\\sigma / \\sqrt{n}} &lt; u_{\\alpha}\\right\\} = 1 - \\alpha\\) \u53ef\u4ee5\u5f97\u51fa\u5355\u4fa7\u7f6e\u4fe1\u533a\u95f4\u4e3a \\((\\bar X - u_{\\alpha}\\dfrac{\\sigma}{\\sqrt{n}}, +\\infty)\\)\uff0c\u5176\u4e0b\u9650\u4e3a \\(\\bar X - u_{\\alpha}\\dfrac{\\sigma}{\\sqrt{n}}\\)\u3002</p> <p>\u5bf9\u4e8e \\(P\\left\\{ \\dfrac{\\bar X - \\mu}{\\sigma / \\sqrt{n}} &gt; u_{\\alpha}\\right\\} = 1 - \\alpha\\) \u53ef\u4ee5\u5f97\u51fa\u5355\u4fa7\u7f6e\u4fe1\u533a\u95f4\u4e3a \\((-\\infty, \\bar X + u_{\\alpha}\\dfrac{\\sigma}{\\sqrt{n}})\\)\uff0c\u5176\u4e0a\u9650\u4e3a \\(\\bar X + u_{\\alpha}\\dfrac{\\sigma}{\\sqrt{n}}\\)\u3002</p> </li> <li> <p>\\(\\sigma^2\\) \u672a\u77e5\uff0c\\(\\mu\\) \u7684\u7f6e\u4fe1\u6c34\u5e73\u4e3a \\(1 - \\alpha\\) \u7684\u5355\u4fa7\u7f6e\u4fe1\u533a\u95f4\u3002</p> <p>\u5229\u7528 \\(t = \\dfrac{\\bar X - \\mu}{S / \\sqrt{n}} \\sim t(n - 1)\\)\uff0c</p> <p>\u5bf9\u4e8e \\(P\\left\\{ \\dfrac{\\bar X - \\mu}{\\sigma / \\sqrt{n}} &lt; t_{\\alpha}(n - 1)\\right\\} = 1 - \\alpha\\) \u53ef\u4ee5\u5f97\u51fa\u5355\u4fa7\u7f6e\u4fe1\u533a\u95f4\u4e3a \\((\\bar X - t_{\\alpha}(n - 1)\\dfrac{S}{\\sqrt{n}}, +\\infty)\\)\uff0c\u5176\u4e0b\u9650\u4e3a \\(\\bar X - t_{\\alpha}(n - 1)\\dfrac{S}{\\sqrt{n}}\\)\u3002</p> <p>\u5bf9\u4e8e \\(P\\left\\{ \\dfrac{\\bar X - \\mu}{\\sigma / \\sqrt{n}} &gt; t_{\\alpha}(n - 1)\\right\\} = 1 - \\alpha\\) \u53ef\u4ee5\u5f97\u51fa\u5355\u4fa7\u7f6e\u4fe1\u533a\u95f4\u4e3a \\((-\\infty, \\bar X + t_{\\alpha}(n - 1)\\dfrac{S}{\\sqrt{n}})\\)\uff0c\u5176\u4e0a\u9650\u4e3a \\(\\bar X + t_{\\alpha}(n - 1)\\dfrac{S}{\\sqrt{n}}\\)\u3002</p> </li> <li> <p>\\(\\mu\\) \u672a\u77e5\uff0c\\(\\sigma^2\\) \u7684\u7f6e\u4fe1\u6c34\u5e73\u4e3a \\(1 - \\alpha\\) \u7684\u5355\u4fa7\u7f6e\u4fe1\u533a\u95f4\u4e0a\u9650\u3002</p> <p>\u5229\u7528 \\(\\chi^2 = \\dfrac{(n - 1)S^2}{\\sigma^2} \\sim \\chi^2(n - 1)\\)\uff0c</p> <p>\u5bf9\u4e8e \\(P\\left\\{ \\dfrac{(n - 1)S^2}{\\sigma^2} &gt; \\chi^2_{1 - \\alpha}(n - 1)\\right\\} = 1 - \\alpha\\) \u53ef\u4ee5\u5f97\u51fa\u5355\u4fa7\u7f6e\u4fe1\u533a\u95f4\u4e3a \\((0, \\dfrac{(n - 1)S^2}{\\chi^2_{1 - \\alpha}(n - 1)})\\)\uff0c\u5176\u4e0a\u9650\u4e3a \\(\\dfrac{(n - 1)S^2}{\\chi^2_{1 - \\alpha}(n - 1)}\\)\u3002</p> </li> </ul>"},{"location":"math/probability/chap7/#6","title":"6 \u4f8b\u9898","text":"<ul> <li> <p>e.g.1</p> <p></p> Solution <p></p> <p></p> </li> <li> <p>e.g.2</p> <p></p> Solution <p> </p> <p>Note</p> <p>\u672c\u9898\u4e0d\u80fd\u76f4\u63a5\u6c42\u504f\u5bfc\u6c42\u51fa\u7b54\u6848\uff0c\u89c2\u5bdf\u5f97 \\(a, b\\) \u5747\u5b58\u5728\u8303\u56f4\uff0c\u7ed3\u5408\u5355\u8c03\u6027\u53ef\u4ee5\u6c42\u51fa \\(a, b\\) \u5728\u4f55\u5904\u53d6\u5f97\u6781\u503c\u3002</p> </li> <li> <p>e.g.3</p> <p></p> Solution <p></p> </li> <li> <p>e.g.4</p> <p></p> Solution <p></p> <p></p> </li> <li> <p>e.g.5 \u6709\u7ec6\u8282\u9700\u8981\u6ce8\u610f</p> <p></p> Solution <p></p> <p></p> <p>Note</p> <p>\u5728\u672c\u9898\u4e2d\u4e66\u4e0a\u7684\u505a\u6cd5\u662f\u76f8\u5f53\u4e8e\u770b\u4f5c\u662f \\(n\\) \u6b21\u6837\u672c\u53d6\u6837\uff0c\u7531\u4e8e \\(L(\\theta) = \\prod p(x_i)\\)\uff0c\u6240\u4ee5\u524d\u9762\u4e0d\u7528\u4e58\u4ee5 \\(C_{n}^k\\)\uff0c\u4f46\u662f\u5982\u679c\u5f53\u4f5c\u662f\u4e00\u6b21\u6837\u672c\u53d6\u6837\uff0c\u6837\u672c\u670d\u4ece\u4e8c\u9879\u5206\u5e03\uff0c\u90a3\u4e48\u7b97\u6982\u7387\u7684\u65f6\u5019\u5c31\u8981\u4e58\u4ee5 \\(C_{n}^{k}\\)\uff0c\u4e0d\u8fc7\u7531\u4e8e\u5728\u6c42\u5bfc\u7684\u65f6\u5019 \\(C_{n}^{k}\\) \u4e0d\u542b\u6709 \\(p\\)\uff0c\u6240\u4ee5\u5bf9\u6c42\u5bfc\u7ed3\u679c\u4e0d\u4ea7\u751f\u5f71\u54cd\u3002\u4f46\u662f\u6211\u4eec\u4e00\u822c\u5728\u9009\u53d6\u6837\u672c\u7684\u65f6\u5019\uff0c\u90fd\u4f1a\u9009\u62e9\u591a\u4e2a\u6837\u672c\u6765\u4f30\u8ba1\u53c2\u6570\uff0c\u800c\u4e0d\u662f\u53ea\u9009\u4e00\u4e2a\u6837\u672c\u6765\u4f30\u8ba1\uff0c\u6240\u4ee5\u6700\u597d\u6309\u7167\u4e66\u4e0a\u7684\u5f53\u4f5c\u662f \\(n\\) \u6b21\u670d\u4ece \\((0 - 1)\\) \u5206\u5e03\u7684\u6837\u672c\u6765\u505a\u3002</p> </li> <li> <p>e.g.6 \u591a\u53d8\u91cf\u7684\u6700\u5927\u4f3c\u7136\u4f30\u8ba1</p> <p></p> Solution <p></p> <p>Tip</p> <p>\u5982\u679c\u8981\u6c42\u7684\u662f \\(\\sigma\\) \u7684\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\uff0c\u5c31\u8981\u5bf9 \\(\\sigma\\) \u6c42\u504f\u5bfc\u3002</p> </li> <li> <p>e.g.7 </p> <p></p> Solution <p></p> <p></p> <p>Note</p> <p>\u8fd9\u91cc\u6c42 \\(\\hat{\\theta}\\) \u7684\u5206\u5e03\u51fd\u6570\u7684\u65f6\u5019\u7528\u5230\u7684\u662f\u7b97 \\(\\max\\{X_1, X_2, ..., X_n\\}\\) \u7684\u6027\u8d28\u516c\u5f0f\u3002  </p> </li> <li> <p>e.g.8</p> <p></p> Solution <p></p> <p></p> </li> <li> <p>e.g.9</p> <p></p> Solution <p></p> </li> <li> <p>e.g.10</p> <p></p> Solution <p></p> <p></p> </li> <li> <p>e.g.11</p> <p></p> Solution <p></p> </li> </ul>"},{"location":"math/probability/chap8/","title":"\u5047\u8bbe\u68c0\u9a8c","text":""},{"location":"math/probability/chap8/#0","title":"0 \u603b\u7ed3","text":""},{"location":"math/probability/chap8/#1","title":"1 \u5047\u8bbe\u68c0\u9a8c\u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u5bf9\u603b\u4f53\u5206\u5e03\u5f62\u5f0f\u6216\u5bf9\u603b\u4f53\u5206\u5e03\u4e2d\u7684\u67d0\u4e9b\u53c2\u6570\u4f5c\u51fa\u7684\u67d0\u79cd\u5047\u8bbe\uff0c\u79f0\u4e3a\u7edf\u8ba1\u5047\u8bbe\u3002</li> <li> <p>\u539f\u5047\u8bbe\u548c\u5907\u62e9\u5047\u8bbe</p> <p>\u5982\u679c\u5173\u4e8e\u603b\u4f53\u6709\u4e24\u4e2a\u4e8c\u8005\u5fc5\u5c45\u5176\u4e00\u7684\u5047\u8bbe,\u4e60\u60ef\u4e0a\u628a\u5176\u4e2d\u7684\u4e00\u4e2a\u79f0\u4f5c\u539f\u5047\u8bbe(\u57fa\u672c\u5047\u8bbe\u3001\u96f6\u5047\u8bbe)\uff0c\u7528 H0 \u8868\u793a,\u800c\u628a\u53e6\u4e00\u4e2a\u5047\u8bbe\u79f0\u4f5c\u5907\u62e9\u5047\u8bbe(\u5bf9\u7acb\u5047\u8bbe)\u7528 H1 \u8868\u793a\u3002</p> <p>\u539f\u5047\u8bbe\u4e0e\u5907\u62e9\u5047\u8bbe\u76f8\u4e92\u5bf9\u7acb\uff0c\u4e24\u8005\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u6b63\u786e. \u4e00\u65e6\u5426\u5b9a\u4e86\u539f\u5047\u8bbe H0\uff0c\u4e5f\u5c31\u63a5\u53d7\u4e86\u5907\u62e9\u5047\u8bbe H1\u3002</p> <p>\u5728\u6ca1\u6709\u5145\u5206\u7684\u8bc1\u636e\u65f6\uff0c\u603b\u8ba4\u4e3a\u6b63\u786e\uff0c\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u63a5\u53d7\u5e76\u4e0d\u80fd\u8bf4\u4e00\u5b9a\u6b63\u786e\uff0c\u53ea\u80fd\u8bf4\u6ca1\u6709\u8db3\u591f\u7684\u8bc1\u636e\u8bf4\u660e\u4e0d\u5bf9\uff0c\u6240\u4ee5\u63a5\u53d7\u3002</p> </li> <li> <p>\u5047\u8bbe\u68c0\u9a8c\u7684\u57fa\u672c\u601d\u60f3\u4e0e\u65b9\u6cd5</p> <p>\u5047\u5b9a\u539f\u5047\u8bbe H0 \u662f\u6b63\u786e\u7684\uff0c\u7136\u540e\u770b\u6837\u672c\u53d1\u751f\u7684\u6982\u7387\u662f\u4e0d\u662f\u5c0f\u6982\u7387\u4e8b\u4ef6\uff0c\u5982\u679c\u662f\u5c0f\u6982\u7387\u4e8b\u4ef6\u5c31\u8bf4\u660e\u4e0d\u5408\u7406\uff0c\u53cd\u4e4b\u8bf4\u660e\u662f\u5408\u7406\u7684\u3002</p> </li> <li> <p>\u5047\u8bbe\u68c0\u9a8c\u7684\u4e24\u7c7b\u9519\u8bef</p> <p>\u7b2c I \u7c7b\u9519\u8bef\uff1aH0 \u771f\uff0c\u4f46\u62d2\u7edd\u4e86 H0\u3002</p> <p>\u7b2c II \u7c7b\u9519\u8bef\uff1aH0 \u5047\uff0c\u4f46\u63a5\u53d7\u4e86 H0\u3002</p> </li> <li> <p>\u663e\u8457\u6c34\u5e73\u4e3a \\(\\alpha\\) \u7684\u68c0\u9a8c</p> <p>\u63a7\u5236\u72af\u7b2c\u4e00\u7c7b\u9519\u8bef\u7684\u6982\u7387 \\(\\le\\) \u7ed9\u5b9a\u7684 \\(\\alpha\\) \u7684\u68c0\u9a8c\u6cd5\uff0c\u79f0\u4e3a\u663e\u8457\u6c34\u5e73\u4e3a \\(\\alpha\\) \u7684\u68c0\u9a8c\u3002\u5e76\u79f0 \\(\\alpha\\) \u4e3a\u663e\u8457\u6c34\u5e73\u3002</p> \\[   u = \\dfrac{\\bar X - \\mu}{\\sigma / \\sqrt{n}} \\sim N(0, 1) \\] <p>\u82e5\u8ba9\u72af\u7b2c\u4e00\u7c7b\u9519\u8bef\u7684\u6982\u7387 \\(\\le\\) \u7ed9\u5b9a\u7684 \\(\\alpha\\)\uff0c\u5219 \\(P\\left \\{ |u| \\ge u_{\\alpha / 2} \\right \\} = \\alpha\\)\uff0c\u8fd9\u91cc u \u7684\u8303\u56f4 \\(|u| \\ge u_{\\alpha / 2}\\) \u79f0\u4e3a\u8be5\u5047\u8bbe\u68c0\u9a8c\u7684\u62d2\u7edd\uff08\u5426\u5b9a\uff09\u57df\u3002</p> <p>Note</p> <p>\u4e00\u822c\u8bf4\u6765\uff0c\\(\\alpha\\) \u8d8a\u5c0f\uff0c\u62d2\u7edd\u57df\u4e5f\u8d8a\u5c0f\uff0c\u63a5\u53d7\u57df\u8d8a\u5927\uff0c\u8fd9\u65f6\u539f\u5047\u8bbe\u5c31\u8d8a\u96be\u5426\u5b9a\uff0c\u4e8e\u662f\u72af\u7b2c\u4e00\u7c7b\u9519\u8bef\u7684\u53ef\u80fd\u6027\u4e5f\u5c31\u5c0f\u3002</p> </li> <li> <p>\u53cc\u4fa7\u5047\u8bbe\u68c0\u9a8c\u4e0e\u5355\u4fa7\u5047\u8bbe\u68c0\u9a8c</p> <p>\u539f\u5047\u8bbe\u4e3a H0\uff1a\\(\\theta = \\theta_0\\)\uff0c\u5907\u62e9\u5047\u8bbe\u4e3a H1\uff1a\\(\\theta \\ne \\theta_0\\) \u7684\u68c0\u9a8c\u4e3a\u53cc\u4fa7\u68c0\u9a8c\u3002</p> <p>\u539f\u5047\u8bbe\u4e3a H0\uff1a\\(\\theta = \\theta_0\\)\uff0c\u5907\u62e9\u5047\u8bbe\u4e3a H1\uff1a\\(\\theta \\le \\theta_0\\) \u7684\u68c0\u9a8c\u4e3a\u5de6\u4fa7\u68c0\u9a8c\u3002</p> <p>\u539f\u5047\u8bbe\u4e3a H0\uff1a\\(\\theta = \\theta_0\\)\uff0c\u5907\u62e9\u5047\u8bbe\u4e3a H1\uff1a\\(\\theta \\ge \\theta_0\\) \u7684\u68c0\u9a8c\u4e3a\u53f3\u4fa7\u68c0\u9a8c\u3002</p> <p></p> <p>Note</p> <ul> <li> <p>\u5982\u679c\u4f60\u5e0c\u671b\u6240\u5f97\u7ed3\u679c\u8d8a\u5927\u8d8a\u597d\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u4e0d\u5e0c\u671b\u7ed3\u679c\u5c0f\uff0c\u6240\u4ee5\u62d2\u7edd\u57df\u5728\u5de6\u8fb9\uff0c\u7528\u5de6\u4fa7\u68c0\u9a8c\uff0c\u68c0\u9a8c\u5de6\u8fb9\u4f1a\u4e0d\u4f1a\u843d\u5165\u3002</p> </li> <li> <p>\u5982\u679c\u4f60\u5e0c\u671b\u6240\u5f97\u7ed3\u679c\u8d8a\u5c0f\u8d8a\u597d\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u4e0d\u5e0c\u671b\u7ed3\u679c\u5927\uff0c\u6240\u4ee5\u62d2\u7edd\u57df\u5728\u53f3\u8fb9\uff0c\u7528\u53f3\u4fa7\u68c0\u9a8c\uff0c\u68c0\u9a8c\u53f3\u8fb9\u4f1a\u4e0d\u4f1a\u843d\u5165\u3002</p> </li> <li> <p>\u5982\u679c\u4f60\u5e0c\u671b\u6240\u5f97\u7ed3\u679c\u8d8a\u9760\u8fd1\u4e2d\u95f4\u8d8a\u597d\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u4e0d\u5e0c\u671b\u7ed3\u679c\u504f\u5927 / \u504f\u5c0f\uff0c\u6240\u4ee5\u62d2\u7edd\u57df\u5728\u4e24\u8fb9\uff0c\u7528\u4e24\u4fa7\u68c0\u9a8c\uff0c\u68c0\u9a8c\u4e24\u8fb9\u4f1a\u4e0d\u4f1a\u843d\u5165\u3002</p> </li> </ul> </li> </ul>"},{"location":"math/probability/chap8/#2","title":"2 \u6b63\u6001\u603b\u4f53\u53c2\u6570\u7684\u5047\u8bbe\u68c0\u9a8c","text":""},{"location":"math/probability/chap8/#3","title":"3 \u4f8b\u9898","text":""},{"location":"others/cpp/topic1/","title":"The Basics","text":""},{"location":"others/cpp/topic2/","title":"The C++ Library","text":""},{"location":"others/cpp/topic3/","title":"Tools for Class Authors","text":""},{"location":"others/cpp/topic4/","title":"Advanced Topics","text":""},{"location":"robotics/RDnC/topic1/","title":"Kinematics","text":""},{"location":"robotics/RDnC/topic1/#0x01-rotation","title":"0x01. Rotation","text":""},{"location":"robotics/RDnC/topic1/#0x02-rigid-motion","title":"0x02. Rigid Motion","text":""},{"location":"robotics/RDnC/topic1/#0x03-composition-of-rigid-motion","title":"0x03. Composition of Rigid Motion","text":""},{"location":"robotics/RDnC/topic2/","title":"Dynamics","text":""},{"location":"robotics/RDnC/topic2/#0x01-euler-lagrange-equation","title":"0x01. Euler-Lagrange Equation","text":"\\[     \\dfrac{d(\\dfrac{\\partial L}{\\partial q})}{dt} \\]"},{"location":"robotics/RDnC/topic2/#0x02-system-dynamics","title":"0x02. System Dynamics","text":""},{"location":"robotics/RDnC/topic3/","title":"Linear Control","text":""},{"location":"robotics/RDnC/topic3/#0x01-linearization","title":"0x01. Linearization","text":"<p>Linear System: \\(x = Ax + Bu\\)</p> <p>Nonlinear System: \\(\\ddot{x} = f(x, u)\\)</p> \\[ \\begin{align*}     \\dot{x} &amp;= f(x_d, u_d) + \\dfrac{\\partial f}{\\partial x}(x_d, u_d)(x - x_d)+ \\dfrac{\\partial f}{\\partial u}(x_d, u_d)(u - u_d) \\\\     \\dot{x} - \\dot{x_d} &amp;= A(x - x_d) + B(u - u_d) \\\\     \\delta \\dot{x} &amp;= A\\delta x + Bu \\end{align*} \\] <p>Linear Control:</p> \\[ \\begin{align*} \\delta u &amp;= -k\\delta x\\\\ \\to \\delta x &amp;= (A - Bk) \\delta x \\\\          &amp;= A_{CL} x \\end{align*} \\] <p>CL: Closed Loop</p> <p>Methods of judging the stability of the system: </p> <ol> <li>All eigenvalues of \\(A_{CL}\\) is negative.</li> <li> <p>Lyapunov Analysis</p> <p>Lyapunov function: \\(V(x) = x^TPx\\)</p> <p>Lyapunov equation: \\(A_{CL}^T \\dot P + P \\dot A_{CL} = -Q\\)</p> <p>Theorem: If a system satisfies the conditions below,</p> <ol> <li>\\(V(x)\\) is positive-definite matrix.</li> <li>\\(\\dot V(x)\\) is positive-definite matrix.</li> <li>\\(x \\to \\infty, V(x) \\to \\infty\\)</li> </ol> <p>the system is stable.</p> </li> </ol> <p>Generalization of Lyapunov theorem</p> <ol> <li>For a given positive-definite matrix \\(P\\), there exits a positive-definite matrix \\(Q\\) which satisfies \\(A_{CL}^T \\dot P + P \\dot A_{CL} = -Q\\), then the system is stable.</li> <li>In the linear system, for all positive-definite system \\(P\\), there is only one positive-definite matrix \\(Q\\), which satisfies \\(A_{CL}^T \\dot P + P \\dot A_{CL} = -Q\\), then the system is stable.</li> </ol>"},{"location":"robotics/RDnC/topic3/#0x02-pd-control","title":"0x02. PD Control","text":"\\[     u = k_p(x_d - x) + k_d(\\dot{x_d} - \\dot{x}) \\]"},{"location":"robotics/RDnC/topic3/#0x03-lqr-control","title":"0x03. LQR Control","text":"<p>Linear Quadratic Regulator Control</p> <p>We can't minimize the energy consumption and don't know when to reach optimality. So we have the optimal control, by using it we can:</p> <ul> <li>Minimize the energy consumption. \\(J = U^TRU\\)</li> <li>Follow a path with minimum error. \\(J = X^TQX\\)</li> </ul> <p>LQR is both linear control and optimal control. So it both satisfies \\(\\dot{x} = Ax + Bu\\) and has a cost function.</p> \\[ \\begin{align*}    J &amp;= \\int_0^{\\infty}(X^TQX + U^TRU)dt  \\newline    U &amp;= -K_{LQR}X \\end{align*} \\] <p>Linear Control: \\(U = -K_{LQR}X\\)</p> <p>\\(k_{LQR} = R^{-1}B^TP\\) (LQR gain)</p> <p>These coefficients satisfy that \\(A^TP + PA - PBR^{-1}B^TP + Q = 0\\)</p> <p>A, B: coefficient matrix of state-space model </p> <p>Q, R: coefficient matrix of cost-function</p> <p>Difference between PD and LQR</p> <ul> <li>PD: \\(x \\to x_d\\), \\(u \\to u_d\\) while   LQR: \\(x \\to 0\\), \\(u \\to 0\\)</li> <li>Whether it has a cost function.</li> </ul>"},{"location":"robotics/RDnC/topic3/#0x04-qp-control","title":"0x04. QP Control","text":"<p>Quadratic Program Control</p> <p>Linear Control: \\(u = -kx\\) without constraints</p> \\[     U^* = \\text{argmin}_U ( \\dfrac{1}{2}U^THY + f^TU ) \\]"},{"location":"robotics/RDnC/topic3/#0x05-mpc-control","title":"0x05. MPC Control","text":"<p>Modern Predictive Control</p> <p>Discrete-time dynamics:</p> \\[ \\begin{align*}      \\delta x[k + 1] &amp;= Adt \\delta x[k + 1] + Bdt \\delta u[k] + \\delta x[k] \\\\     \\to \\delta x[k + 1] &amp;= (Adt + I) \\delta x[k + 1] + Bdt \\delta u[k] \\\\     \\to \\delta x[k + 1] &amp;= A_k \\delta x[k + 1] + B_k \\delta u[k]  \\end{align*} \\] <p>Procedures:</p> <ul> <li>measure current state \\(x[k]\\)</li> <li>optimal control based on \\(u_k, u_{k + 1}, ... u_{k + n - 1}\\)</li> <li>get the optimal \\(x^*\\)</li> <li>only get \\(u[k]\\) as the next input</li> </ul>"},{"location":"robotics/RDnC/topic3/#0x05-stability-judgment","title":"0x05. Stability Judgment","text":""},{"location":"robotics/RDnC/topic4/","title":"Nonlinear Control","text":""},{"location":"robotics/RDnC/topic4/#0x01-input-output-linearization","title":"0x01. Input-Output Linearization","text":"<p>For a nonlinear system:</p> \\[     \\dot{x} = f(x, u) \\] <p>we can translate it into</p> \\[     \\dot{x} = f(x) + g(x) u  \\] <p>Note: nonlinear affine system</p> <p>and we have an output function:</p> \\[     y = h(x) \\] <p>Note</p> <p>$x \\in $</p> <p>Lie Derivative:</p> \\[ \\left.\\begin{matrix}  y = h(x) \\\\ \\dot x = f(x) + g(x)u \\end{matrix}\\eight\\} \\to \\dot y = \\dfrac{\\partial h}{\\partial x}(f(x) + g(x)u) \\] <p>Linearized dynamics: $$     \\dot{\\eta} = F\\eta + G\\mu $$</p>"},{"location":"robotics/RDnC/topic4/#0x02-clf-qp-controller","title":"0x02. CLF-QP controller","text":""},{"location":"robotics/RDnC/topic4/#0x03-clf-qp-input-saturation","title":"0x03. CLF-QP + input saturation","text":""},{"location":"ysyx/","title":"YSYX","text":""},{"location":"ysyx/timeline/","title":"Timeline","text":"\u65e5\u671f \u8ba1\u5212\u4efb\u52a1 \u603b\u65f6\u957f \u4efb\u52a1\u5b8c\u6210\u60c5\u51b5 \u5361\u4e86\u4e00\u6bb5\u65f6\u95f4\u7684bug \u5907\u6ce8 \u8bb0\u5f55\u6545\u4e8b/\u5fc3\u60c5 Week 1 May 7 Title Here's this May 8 Text And more"}]}